<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="978c55231458e82b1e53c4c727649e66ecc3f64b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39735190" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <TypeSignature Language="F#" Value="type SoapMessage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa os dados em uma solicitação SOAP ou resposta SOAP em um determinado <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O principal uso da <xref:System.Web.Services.Protocols.SoapMessage> classe é para as extensões SOAP, que representa os dados em uma solicitação SOAP ou resposta SOAP. Quando o <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método é chamado, uma <xref:System.Web.Services.Protocols.SoapExtension> recebe um <xref:System.Web.Services.Protocols.SoapMessage> em cada <xref:System.Web.Services.Protocols.SoapMessageStage>. Cabe a extensão SOAP específica para escolher como processar o <xref:System.Web.Services.Protocols.SoapMessage>. Extensões SOAP comuns incluem a compactação e criptografia.  
  
 Extensões SOAP podem ser aplicadas a qualquer uma ou ambas as um método de serviço Web XML criados usando ASP.NET ou um cliente de serviço Web XML. Quando uma extensão SOAP é aplicada a um método de serviço Web XML, o <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> método recebe uma instância do <xref:System.Web.Services.Protocols.SoapServerMessage>, que é derivada de <xref:System.Web.Services.Protocols.SoapMessage>. Da mesma forma, quando uma extensão SOAP é aplicada a um cliente de serviço Web XML, <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> recebe uma instância de <xref:System.Web.Services.Protocols.SoapClientMessage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : string" Usage="System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o campo de cabeçalho de solicitação HTTP SOAPAction para a solicitação SOAP ou a resposta SOAP.</summary>
        <value>O campo de cabeçalho de solicitação HTTP SOAPAction para a solicitação SOAP ou resposta SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapMessage.Action%2A> propriedade pode ser acessado durante um <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o conteúdo do cabeçalho HTTP <see langword="Content-Encoding" />.</summary>
        <value>O conteúdo do cabeçalho HTTP <see langword="Content-Encoding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma extensão SOAP pode definir as <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> propriedade para fornecer informações complementares sobre a codificação de uma mensagem SOAP sem alterar o tipo de mídia, conforme expresso no `Content-Type` cabeçalho HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> atual é os estágios <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> ou <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see langword="Content-Type" /> HTTP da solicitação SOAP ou da resposta SOAP.</summary>
        <value>O <see langword="Content-Type" /> HTTP da solicitação SOAP ou da resposta SOAP. O padrão é "text/xml".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> propriedade só pode ser acessada em de <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> e <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> prepara; caso contrário, um <xref:System.InvalidOperationException> é gerada.  
  
 Use o <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> propriedade, em vez do <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> propriedade para fornecer informações complementares sobre a codificação de uma mensagem SOAP.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> é acessado nos estágios <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> ou <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureInStage : unit -&gt; unit" Usage="soapMessage.EnsureInStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, declara que o <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> atual é um estágio no qual os parâmetros estão disponíveis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O estágio declarado é diferente para clientes de serviço Web XML e os métodos de serviço Web XML. Um método XML Web service nos parâmetros está disponível depois que a solicitação SOAP é desserializada no <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> estágio. Para um cliente de serviço Web XML, os parâmetros de entrada estão disponíveis antes do processo de serialização de solicitação SOAP no <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> estágio.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> pode ser chamado durante qualquer <xref:System.Web.Services.Protocols.SoapMessageStage>, no entanto uma <xref:System.InvalidOperationException> é lançada quando parâmetros não estão disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Os parâmetros de entrada não estão disponíveis.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureOutStage : unit -&gt; unit" Usage="soapMessage.EnsureOutStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, declara que o estágio <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> atual é um estágio em que os parâmetros de saída estão disponíveis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O estágio declarado é diferente para clientes de serviço Web XML e os métodos de serviço Web XML. Um método XML Web service parâmetros de saída está disponível antes do processo de serialização de resposta SOAP no <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> estágio. Em um cliente de serviço Web XML, os parâmetros de saída estão disponíveis após o processo de desserialização de resposta SOAP no <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> estágio.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> pode ser chamado durante qualquer <xref:System.Web.Services.Protocols.SoapMessageStage>, no entanto uma <xref:System.InvalidOperationException> são descartados quando parâmetros não estão disponíveis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Os parâmetros de saída não estão disponíveis.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberSignature Language="F#" Value="member this.EnsureStage : System.Web.Services.Protocols.SoapMessageStage -&gt; unit" Usage="soapMessage.EnsureStage stage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">O <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> declarado.</param>
        <summary>Garante que o <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> da chamada para o método de serviço Web XML seja o estágio ou os estágios passados. Se o estágio de processamento atual não for um dos estágios passados, uma exceção será gerada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vários estágios podem ser declarados executando uma operação OR bit a bit em várias instâncias do <xref:System.Web.Services.Protocols.SoapMessageStage> classe.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> pode ser chamado durante qualquer <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 O exemplo a seguir declara que atual <xref:System.Web.Services.Protocols.SoapMessageStage> seja <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> ou <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>; se não estiver, uma exceção será lançada.  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> atual não é o estágio ou os estágios declarados.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.Services.Protocols.SoapException with get, set" Usage="System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.Services.Protocols.SoapException" /> da chamada para o método de serviço Web XML.</summary>
        <value>O <see cref="T:System.Web.Services.Protocols.SoapException" /> que ocorreu na chamada para o método de serviço Web XML. <see langword="null" /> Se nenhum <see cref="T:System.Web.Services.Protocols.SoapException" /> ocorreu durante a chamada para o método de serviço Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A> propriedade pode ser acessado durante um <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetInParameterValue : int -&gt; obj" Usage="soapMessage.GetInParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero do parâmetro na matriz de parâmetros.</param>
        <summary>Obtém o parâmetro passado para o método de serviço Web XML no índice especificado.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa o parâmetro no índice especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> propriedade é somente acessível quando nos parâmetros estão disponíveis. ASP.NET gera <xref:System.InvalidOperationException> ao acessar o <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> propriedade em caso de parâmetros não estão disponíveis.  
  
 Em um <xref:System.Web.Services.Protocols.SoapClientMessage> os parâmetros de entrada estão disponíveis na <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. Em um <xref:System.Web.Services.Protocols.SoapServerMessage> os parâmetros de entrada estão disponíveis na <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">O parâmetro <paramref name="index" /> é menor que 0 ou maior que o comprimento da matriz de parâmetros.</exception>
        <exception cref="T:System.InvalidOperationException">Acesso a essa propriedade quando os parâmetros de entrada não estão disponíveis.</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetOutParameterValue : int -&gt; obj" Usage="soapMessage.GetOutParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice de base zero do parâmetro na matriz de parâmetros.</param>
        <summary>Obtém o parâmetro de saída passado para o método de serviço Web XML no índice especificado.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa o parâmetro no índice especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se-out parâmetros não estiver disponíveis, o ASP.NET gera uma <xref:System.InvalidOperationException> ao acessar o <xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A> propriedade.  
  
 Em um <xref:System.Web.Services.Protocols.SoapClientMessage> os parâmetros de saída estão disponíveis na <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. Em um <xref:System.Web.Services.Protocols.SoapServerMessage> os parâmetros de saída estão disponíveis na <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> da <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">O parâmetro <paramref name="index" /> é maior que o comprimento da matriz de parâmetros.</exception>
        <exception cref="T:System.InvalidOperationException">Acesso a essa propriedade quando os parâmetros de saída não estão disponíveis.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberSignature Language="F#" Value="member this.GetReturnValue : unit -&gt; obj" Usage="soapMessage.GetReturnValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o valor retornado de um método de serviço Web XML.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa o valor retornado do método de serviço Web XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um valor de retorno não estiver disponível, o ASP.NET gera <xref:System.InvalidOperationException> ao acessar o <xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A> propriedade.  
  
 Em um <xref:System.Web.Services.Protocols.SoapClientMessage> o valor retornado está disponível quando o <xref:System.Web.Services.Protocols.SoapMessageStage> valor é <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>. Em um <xref:System.Web.Services.Protocols.SoapServerMessage> o valor retornado está disponível quando <xref:System.Web.Services.Protocols.SoapMessageStage> valor é <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O método de serviço Web XML não tem um valor retornado.  
  
OU 
O valor retornado não está disponível.</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Web.Services.Protocols.SoapHeaderCollection" Usage="System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uma coleção dos cabeçalhos SOAP aplicados à solicitação ou resposta SOAP atual.</summary>
        <value>Um <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> dos cabeçalhos SOAP aplicados à solicitação ou resposta SOAP atual. <see langword="null" /> se não houver nenhum cabeçalho SOAP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cabeçalhos SOAP são uma parte opcional de uma solicitação SOAP ou resposta SOAP. Para obter mais detalhes sobre como usar cabeçalhos SOAP em serviços Web XML criados usando ASP.NET e seus clientes, consulte o <xref:System.Web.Services.Protocols.SoapHeader> classe.  
  
 Embora o <xref:System.Web.Services.Protocols.SoapMessage.Headers%2A> propriedade pode ser acessado em qualquer estágio, ele só é preenchido com as informações de cabeçalho SOAP em de <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> e <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> estágios.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Web.Services.Protocols.LogicalMethodInfo" Usage="System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém uma representação do protótipo do método para o método de serviço Web XML para o qual a solicitação SOAP é direcionada.</summary>
        <value>Um <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que representa o método de serviço Web XML para o qual a solicitação SOAP é direcionada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Embora <xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A> podem ser acessados durante alguma <xref:System.Web.Services.Protocols.SoapMessageStage>, ele tem apenas dados durante <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> e <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool" Usage="System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica a propriedade <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> do atributo <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> ou <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> aplicado ao método de serviço Web XML.</summary>
        <value>
          <see langword="true" /> Se o <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> propriedade do <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> ou <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> aplicado ao método de serviço é o XML Web <see langword="true" />; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte a <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType> propriedade de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> para obter detalhes sobre os métodos de serviço Web XML unidirecionais.  
  
 O <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A> propriedade é acessível em todos os estágios do <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a versão do protocolo SOAP usada para comunicar-se com o serviço Web XML.</summary>
        <value>Um dos valores de <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. O padrão é <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para um <xref:System.Web.Services.Protocols.SoapServerMessage>, o <xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A> propriedade é garantida para ser válido após o <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> estágio. No <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> estágio, a propriedade está disponível, no entanto, a mensagem SOAP não foi processada completamente e extensões SOAP que podem alterar o conteúdo da mensagem SOAP não foram executados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberSignature Language="F#" Value="member this.Stage : System.Web.Services.Protocols.SoapMessageStage" Usage="System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> do <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
        <value>O <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> do <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A> propriedade pode ser acessado em qualquer <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como determinar a <xref:System.Web.Services.Protocols.SoapMessageStage> dentro de <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType> método.  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream" Usage="System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os dados que representa a solicitação SOAP ou a resposta SOAP na forma de um <see cref="T:System.IO.Stream" />.</summary>
        <value>Uma instância somente leitura da classe <see cref="T:System.IO.Stream" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Extensões SOAP que Inspecione os dados que representa uma solicitação SOAP ou resposta SOAP, como uma extensão SOAP, de registro em log podem usar o `Stream` propriedade para exibir os dados em cada <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 Extensões SOAP que modificam os dados que representa uma solicitação SOAP ou resposta SOAP, como extensões SOAP compactação ou criptografia, devem fazer isso com o <xref:System.IO.Stream> passado para o <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> método <xref:System.Web.Services.Protocols.SoapExtension>. O <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> propriedade de <xref:System.Web.Services.Protocols.SoapMessage> passado para <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> é somente leitura.  
  
 Para obter mais informações sobre como modificar os dados que representa uma solicitação SOAP ou resposta SOAP, consulte <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : string" Usage="System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém a URL base do serviço Web XML.</summary>
        <value>A URL base do serviço Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapMessage.Url%2A> propriedade pode ser acessado durante um <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>