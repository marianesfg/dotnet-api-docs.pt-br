<Type Name="SoapRpcMethodAttribute" FullName="System.Web.Services.Protocols.SoapRpcMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe1beaf6ae6bd2d0567c79b149d2e73235e61bbe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36395093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapRpcMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapRpcMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapRpcMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapRpcMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapRpcMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que as mensagens SOAP enviadas de/para o método usam a formatação <see langword="RPC" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WSDL Web Services Description Language () define dois estilos para como um método de serviço da Web em XML, ou a operação pode ser formatada em uma mensagem SOAP: `RPC` e `Document`. `RPC` formatação refere-se à formatação a operação de acordo com a especificação de SOAP para usar o SOAP para RPC. também conhecido como seção 7 da especificação de SOAP. `RPC` formatação de estados que todos os parâmetros são encapsulados em um único elemento XML chamado após o método de serviço da Web em XML e que cada elemento XML dentro do elemento XML representa um parâmetro nomeado de acordo com o parâmetro que está representando.  
  
 As mensagens SOAP formatadas em ambos o `RPC` e `Document` estilos podem ser usados para se comunicar com um serviço Web XML de uma maneira de chamada de procedimento remoto (RPC); no entanto, a `Document` estilo facilmente pode ser usado para comunicar-se em um acoplamento maneira. Portanto, `Document` os XML Web services estilo é recomendado. Para obter mais detalhes, consulte o `Customizing SOAP Messages` tópico.  
  
 Para obter mais detalhes, consulte [ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952).  
  
 Esse atributo pode ser aplicado a um método de serviço Web XML no servidor e uma classe de proxy no cliente. Métodos de serviço da Web em XML que têm o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> propriedade definida como `true` não têm acesso a seus <xref:System.Web.HttpContext>. Assim, acessar qualquer uma das propriedades do <xref:System.Web.Services.WebService> classe retorno `null`.  
  
   
  
## Examples  
 O exemplo de código a seguir define o estilo da mensagem `Rpc` para o `GetUserName` método de serviço Web XML.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> definindo todas as propriedades para seus valores padrão.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute(System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapRpcMethodAttribute : string -&gt; System.Web.Services.Protocols.SoapRpcMethodAttribute" Usage="new System.Web.Services.Protocols.SoapRpcMethodAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">A intenção da solicitação SOAP. Define a propriedade <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />, configurando a propriedade <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> como o valor do parâmetro <paramref name="action" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o campo de cabeçalho HTTP <see langword="SOAPAction" /> da solicitação SOAP.</summary>
        <value>O campo de cabeçalho HTTP <see langword="SOAPAction" /> da solicitação SOAP. O padrão é http://tempuri.org/MethodName onde MethodName é o nome do método de serviço da Web em XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> propriedade é um URI que indica a intenção da solicitação SOAP. No entanto, a especificação de SOAP coloca nenhuma restrição sobre o formato e se o URI se refere a um documento existente. A presença e o conteúdo do <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> propriedade pode ser usada por servidores Web, como firewalls, para filtrar adequadamente SOAP solicitar mensagens no HTTP.  
  
 Por padrão, o .NET Framework versão 1.1 publica o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> propriedade o `soapAction` atributo do `soap:operation` elemento para cada suporte para a associação de SOAP em documentos WSDL gerados para um serviço Web XML. A associação de SOAP com suporte é SOAP 1.1.  
  
 Para obter mais informações sobre a especificação de SOAP, consulte o site do W3C (http://www.w3.org/TR/SOAP).  
  
   
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A> propriedade `http://www.contoso.com/Sample`.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public string Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Binding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Binding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a associação para a qual um método de serviço Web XML implementa uma operação.</summary>
        <value>A associação de que um método de serviço Web XML implementa uma operação. O padrão é o nome do serviço da Web em XML com "Soap" acrescentada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma associação, conforme definido pelo WSDL Web Services Description Language (), é semelhante a uma interface que define um conjunto concreto de operações. Com relação ao ASP.NET, cada método de serviço Web XML é uma operação em uma associação. Métodos de serviço da Web em XML são membros da associação padrão para um serviço Web XML ou uma associação especificada dentro de uma <xref:System.Web.Services.WebServiceBindingAttribute> aplicada a um serviço Web XML. Um serviço Web XML pode implementar várias associações, se vários <xref:System.Web.Services.WebServiceBindingAttribute> atributos são aplicados a um serviço Web XML.  
  
 Uma vez um ou mais <xref:System.Web.Services.WebServiceBindingAttribute> atributos são aplicados a um serviço Web XML, um <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> pode ser aplicado a métodos do serviço Web XML individuais para indicar a operação de associação implementada por um método de serviço Web XML específico. Definir o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A> propriedade de <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> para especificar a associação de um método de serviço Web XML implementa uma operação. Apenas uma <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> pode ser aplicado a um método de serviço da Web em XML. Portanto, um método de serviço Web XML somente pode implementar uma operação para uma associação.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como implementar várias associações de dentro de um serviço Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public bool OneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define se um cliente de serviço Web XML aguarda até que o servidor Web conclua o processamento de um método de serviço Web XML.</summary>
        <value>
          <see langword="true" /> Se o cliente do serviço Web XML não espera para o servidor Web processar completamente um método de serviço Web XML; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um método de serviço Web XML tem o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> propriedade definida como `true`, o cliente do serviço Web XML não precisa esperar o servidor Web concluir o processamento do método de serviço da Web em XML. Assim que o servidor Web tem desserializado a <xref:System.Web.Services.Protocols.SoapServerMessage>, mas antes de invocar o método de serviço da Web em XML, o servidor retornará um código de status HTTP 202. Um código de status HTTP 202 indica ao cliente que o servidor Web foi iniciada de processamento da mensagem. Portanto, um cliente de serviço Web XML não recebe nenhuma confirmação de que o servidor da Web processou a mensagem.  
  
 Métodos unidirecionais não podem ter um valor de retorno ou qualquer `out` parâmetros.  
  
 Se você estiver usando métodos do .NET Framework versão 1.0 XML Web Services que tenham o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ou <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> atributo aplicado a eles com o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> propriedade definida como `true`, não permitir o acesso a seus <xref:System.Web.HttpContext> usando o estático <xref:System.Web.HttpContext.Current%2A> propriedade. Para acessar o <xref:System.Web.HttpContext>, derive a classe que implementa o método de serviço da Web em XML de <xref:System.Web.Services.WebService> e acessar o <xref:System.Web.Services.WebService.Context%2A> propriedade.  
  
   
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> propriedade `true`.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestElementName">
      <MemberSignature Language="C#" Value="public string RequestElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o elemento XML associado à solicitação SOAP para um método de serviço Web XML.</summary>
        <value>O elemento XML associado à solicitação SOAP para um método de serviço da Web em XML. O valor padrão é o nome do método de serviço da Web em XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade está obsoleta. Ele não afeta qualquer comportamento.  
  
   
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName%2A> propriedade `MyCustomRequestElement`.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestNamespace">
      <MemberSignature Language="C#" Value="public string RequestNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o namespace de XML associado à solicitação SOAP para um método de serviço Web XML.</summary>
        <value>O namespace de XML associado com a solicitação SOAP de um método de serviço Web XML. O padrão é http://tempuri.org/.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace%2A> propriedade `http://www.contoso.com`.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseElementName">
      <MemberSignature Language="C#" Value="public string ResponseElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o elemento XML associado à resposta SOAP para um método de serviço Web XML.</summary>
        <value>O elemento XML associado à solicitação SOAP para um método de serviço da Web em XML. O valor padrão é <c>WebServiceNameResult</c>, onde <c>WebServiceName</c> é o nome do método de serviço da Web em XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A> propriedade define o elemento XML usado para encapsular os parâmetros dentro de `Body` elemento da resposta SOAP.  
  
   
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A> propriedade `MyCustomResponseElement`.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseNamespace">
      <MemberSignature Language="C#" Value="public string ResponseNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o namespace de XML associado à resposta SOAP para um método de serviço Web XML.</summary>
        <value>O namespace XML associado à resposta SOAP para um método de serviço da Web em XML. O padrão é http://tempuri.org/.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A> propriedade é usada no esquema XSD para o método de serviço da Web em XML em sua descrição de serviço.  
  
   
  
## Examples  
 O seguinte exemplo de código define o <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A> propriedade `http://www.contoso.com`.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBindingUse Use { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.SoapBindingUse Use" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberSignature Language="VB.NET" Value="Public Property Use As SoapBindingUse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBindingUse Use { System::Web::Services::Description::SoapBindingUse get(); void set(System::Web::Services::Description::SoapBindingUse value); };" />
      <MemberSignature Language="F#" Value="member this.Use : System.Web.Services.Description.SoapBindingUse with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBindingUse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a associação usada ao invocar o método.</summary>
        <value>Membro de <see cref="T:System.Web.Services.Description.SoapBindingUse" /> enumeração que especifica a associação usada ao chamar o método.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão dessa propriedade é <xref:System.Web.Services.Description.SoapBindingUse.Default>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>