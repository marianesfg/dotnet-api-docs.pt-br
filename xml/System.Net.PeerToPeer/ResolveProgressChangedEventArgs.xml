<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47679a8bd112b7155c50da9c8e00affc093817fc" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37477280" /></Metadata><TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveProgressChangedEventArgs = class&#xA;    inherit ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5dfa5-101">Usado em conjunto com a sinalização do evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-101">Used in conjunction with signaling the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span>  <span data-ttu-id="5dfa5-102">É sinalizado sempre que um objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> é localizado em resposta a uma operação <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> em um <see cref="T:System.Net.PeerToPeer.PeerName" /> específico.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-102">It is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dfa5-103">Se vários objetos pares de registro de nome existirem no cloud(s) que está sendo consultada, esse evento é sinalizado uma vez para cada objeto de registro encontrado.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-103">If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found.</span></span> <span data-ttu-id="5dfa5-104">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> é gerado apenas uma vez quando todos os pontos de extremidade foram encontrados.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-104">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="5dfa5-105">Conclusão do processo normal implica que o objeto resolvedor alcançou o final do cloud(s) para consultar nomes de par ou atingiu o número máximo de entradas de registro para o par de coleção de registros de nome que ele está construindo.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-105">Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.</span></span>  
  
 <span data-ttu-id="5dfa5-106">Todas as referências a essa instância do resolvedor são coordenadas com o token userState <xref:System.Object>, que é um identificador exclusivo para esta solicitação de resolução assíncrona.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-106">All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs : System.Net.PeerToPeer.PeerNameRecord * obj -&gt; System.Net.PeerToPeer.ResolveProgressChangedEventArgs" Usage="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs (peerNameRecord, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord"><span data-ttu-id="5dfa5-107">O objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-107">The <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to be found.</span></span></param>
        <param name="userToken"><span data-ttu-id="5dfa5-108">O objeto de estado de usuário único fornecido quando uma operação <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> foi iniciada.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-108">The unique user state object supplied when a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started.</span></span></param>
        <summary><span data-ttu-id="5dfa5-109">Inicializa uma nova instância da classe <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-109">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dfa5-110">O nome do par resolvido é acessível por meio de <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-110">The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.</span></span>  
  
 <span data-ttu-id="5dfa5-111">O estado do usuário é herdado do <xref:System.ComponentModel.AsyncCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-111">The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecord : System.Net.PeerToPeer.PeerNameRecord" Usage="System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5dfa5-112">Obtém o objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> a ser resolvido.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-112">Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to resolve.</span></span></summary>
        <value><span data-ttu-id="5dfa5-113">O objeto de registro de nome de par localizado em resposta a um <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operação em um determinado <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-113">The peer name record object found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</span></span>  
  
<span data-ttu-id="5dfa5-114">A menos que explicitamente especificado, o valor padrão para todas as propriedades é <see langword="null" /> para tipos de referência e zero (0) para as propriedades do tipo <see langword="int" />.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-114">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dfa5-115">Nomes de par não seguro não podem ser registrados simultaneamente por diferentes usuários no mesmo <xref:System.Net.PeerToPeer.Cloud>e associados a diferentes pontos de extremidade.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-115">Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="5dfa5-116">Consequentemente, o <xref:System.Net.PeerToPeer.PeerNameResolver> classe é usada para resolver nomes de par para nuvens ou nomes para os registros de nome de par de mesmo nível.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-116">Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records.</span></span> <span data-ttu-id="5dfa5-117">O evento para relatar o progresso é gerado sempre que um nome de par é encontrado, enquanto o resolvedor estiver consultando nuvens para o <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="5dfa5-117">The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>