<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa800ff1deb4f0174a3bd9adba3f0d6d9db0f90d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="31595-101">Especifica os valores usados nas permissões de objeto <see cref="N:System.Net.PeerToPeer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31595-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-102">As permissões padrão permitem que todos os locais e aplicativos da zona da Intranet para acessar serviços PNRP.</span><span class="sxs-lookup"><span data-stu-id="31595-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="31595-103">Se as permissões padrão não são alteradas, todos os aplicativos locais e o site local têm acesso aos serviços de ponto a ponto, mas aplicativos globais de (internet) não tem acesso.</span><span class="sxs-lookup"><span data-stu-id="31595-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="31595-104">As instâncias desse tipo têm dois estados de permissão: eles tem nenhum acesso para os recursos protegidos pela permissão, ou eles têm total acesso irrestrito aos recursos.</span><span class="sxs-lookup"><span data-stu-id="31595-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="31595-105">Um dos valores na enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-105">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31595-106">Inicializa uma nova instância da classe <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> com o estado da permissão inicial fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-107">As instâncias desse tipo têm dois estados de permissão: eles tem nenhum acesso para os recursos protegidos pela permissão, ou eles têm total acesso irrestrito aos recursos.</span><span class="sxs-lookup"><span data-stu-id="31595-107">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="31595-108">Se `state` é irrestrito, a instância PnrpPermission passa todas as demandas.</span><span class="sxs-lookup"><span data-stu-id="31595-108">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="31595-109">Se `state` contém qualquer outro valor, a instância de PnrpPermission falhar todas as demandas.</span><span class="sxs-lookup"><span data-stu-id="31595-109">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31595-110">Cria e retorna uma cópia idêntica da <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-110">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31595-111">Um objeto com uma interface IPermission, cuja instância contém uma cópia da instância atual do <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-111">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-112">Uma cópia de uma permissão representa o mesmo acesso a recursos como a permissão original.</span><span class="sxs-lookup"><span data-stu-id="31595-112">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="31595-113">As instâncias desse tipo têm dois estados de permissão: eles tem nenhum acesso para os recursos protegidos pela permissão, ou eles têm total acesso irrestrito aos recursos.</span><span class="sxs-lookup"><span data-stu-id="31595-113">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <span data-ttu-id="31595-114">O parâmetro não é um elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.</span><span class="sxs-lookup"><span data-stu-id="31595-114">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
-   <span data-ttu-id="31595-115">O número de versão do parâmetro não é compatível.</span><span class="sxs-lookup"><span data-stu-id="31595-115">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31595-116">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-116">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="31595-117">A codificação de XML a usar para reconstruir a permissão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-117">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31595-118">Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-118">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-119">Representa o modelo de objeto XML para codificação de objetos de segurança.</span><span class="sxs-lookup"><span data-stu-id="31595-119">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="31595-120">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="31595-120">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="31595-121">Essa classe é destinada para ser uma simples implementação de um modelo de objeto XML simples para uso dentro do sistema de segurança e não para uso como um modelo de objeto XML geral.</span><span class="sxs-lookup"><span data-stu-id="31595-121">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <span data-ttu-id="31595-122">O parâmetro não é um elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.</span><span class="sxs-lookup"><span data-stu-id="31595-122">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
-   <span data-ttu-id="31595-123">O número de versão do parâmetro não é compatível.</span><span class="sxs-lookup"><span data-stu-id="31595-123">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31595-124">O parâmetro é uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-124">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="31595-125">Uma permissão para <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> com a permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-125">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span>
          </span>
          <span data-ttu-id="31595-126">Ele deve ser do mesmo tipo da permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-126">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31595-127">Cria e retorna uma permissão que é a interseção do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e da permissão especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-127">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31595-128">Uma nova permissão que representa a interseção do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e da permissão especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-128">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
          <span data-ttu-id="31595-129">Esta nova permissão será uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) se a interseção estiver vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-129">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-130">A interseção de duas permissões é uma permissão que descreve o conjunto de operações que ambas descrevem em comum.</span><span class="sxs-lookup"><span data-stu-id="31595-130">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="31595-131">Somente uma demanda que passa as permissões originais passará a interseção.</span><span class="sxs-lookup"><span data-stu-id="31595-131">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="31595-132">As instruções a seguir são necessárias para ser `true` para todas as implementações do método Intersect.</span><span class="sxs-lookup"><span data-stu-id="31595-132">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="31595-133">X e Y representam <xref:System.Security.IPermission> referências de objeto que não são um `null` referência (Nothing no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="31595-133">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="31595-134">X.Intersect(X) retorna um valor igual a X.</span><span class="sxs-lookup"><span data-stu-id="31595-134">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="31595-135">X.Intersect(Y) retorna o mesmo valor como Y.Intersect(X).</span><span class="sxs-lookup"><span data-stu-id="31595-135">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="31595-136">X.Intersect (um `null` referência (`Nothing` no Visual Basic)) retorna um `null` referência (`Nothing` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="31595-136">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31595-137">O parâmetro de destino não for uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) e não for uma instância da mesma classe que a permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-137">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="31595-138">Uma permissão que deve ser testada quanto à relação de subconjunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-138">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="31595-139">Essa permissão deve ser do mesmo tipo da permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-139">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31595-140">Determina se a <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual é um subconjunto da permissão especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-140">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31595-141">
            <see langword="True" /> se a <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-141">
              <see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-142">Atual <xref:System.Net.PeerToPeer.PnrpPermission> é um subconjunto da permissão especificada se a permissão atual especifica um conjunto de operações é totalmente contido pelo conjunto de permissões especificado.</span><span class="sxs-lookup"><span data-stu-id="31595-142">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="31595-143">Por exemplo, uma permissão que representa acesso a "*C:\example.txt*"é um subconjunto de uma permissão que representa acesso a"*c:\\*".</span><span class="sxs-lookup"><span data-stu-id="31595-143">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="31595-144">Se esse método retornar `true`, a permissão atual não representa nenhum mais acesso ao recurso protegido que a permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="31595-144">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="31595-145">As instruções a seguir são necessárias para ser `true` para todas as implementações do método IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="31595-145">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="31595-146">X, Y e Z representam <xref:System.Security.IPermission> objetos que não são um `null` referência (`Nothing` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="31595-146">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="31595-147">Retorna X.IsSubsetOf(X) `true`.</span><span class="sxs-lookup"><span data-stu-id="31595-147">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="31595-148">X.IsSubsetOf(Y) retorna o mesmo valor que Y.IsSubsetOf(X) se e somente se X e Y representam o mesmo conjunto de permissões.</span><span class="sxs-lookup"><span data-stu-id="31595-148">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="31595-149">Se X.IsSubsetOf(Y) e Y.IsSubsetOf(Z) retornam `true`, X.IsSubsetOf(Z) retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="31595-149">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="31595-150">Se X representa um objeto IPermission vazio com um estado de permissão de *nenhum* e Y representa um objeto de IPermission é um `null` referência (`Nothing` no Visual Basic), retorna X.IsSubsetOf(Y) `true`.</span><span class="sxs-lookup"><span data-stu-id="31595-150">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="31595-151">Se Z também for uma permissão vazia, a compostas operação X.Union(Z) conjunto. Também retorna IsSubsetOf(Y) `true` porque o <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> de duas permissões vazias é uma permissão vazia.</span><span class="sxs-lookup"><span data-stu-id="31595-151">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31595-152">O parâmetro de destino não for uma referência <see langword="null" /> (<see langword="Nothing" /> no Visual Basic) e não for uma instância da mesma classe que a permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-152">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31595-153">Retorna um valor que especifica se o <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual é irrestrito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-153">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31595-154">
            <see langword="True" /> se a permissão for irrestrita; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-154">
              <see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-155">Uma permissão irrestrita representa acesso a todos os recursos protegidos pela permissão.</span><span class="sxs-lookup"><span data-stu-id="31595-155">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31595-156">Cria uma codificação XML do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> e seu estado atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-156">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31595-157">Um <see cref="T:System.Security.SecurityElement" /> objeto que contém uma codificação XML da permissão, incluindo informações de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-157">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="31595-158">Uma permissão a ser combinada com a permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-158">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="31595-159">Ele deve ser do mesmo tipo da permissão atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-159">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31595-160">Cria uma permissão que é a união entre a <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e a permissão especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-160">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31595-161">Uma nova permissão que representa o <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> do <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> atual e a permissão especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-161">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31595-162">O resultado de uma chamada para <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> é uma permissão que representa todas as operações representadas pelo atual <xref:System.Net.PeerToPeer.PnrpPermission> e a permissão especificada.</span><span class="sxs-lookup"><span data-stu-id="31595-162">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="31595-163">Qualquer solicitação que passa a ter a permissão passa seu union.</span><span class="sxs-lookup"><span data-stu-id="31595-163">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="31595-164">As instruções a seguir são necessárias para ser `true` para todas as implementações do método Union.</span><span class="sxs-lookup"><span data-stu-id="31595-164">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="31595-165">X e Y representam <xref:System.Security.IPermission> objetos que não são um `null` referência (`Nothing` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="31595-165">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="31595-166">X.Union(X) retorna um objeto que tem o mesmo valor de X.</span><span class="sxs-lookup"><span data-stu-id="31595-166">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="31595-167">X.Union(Y) retorna um objeto que tem o mesmo valor que o objeto retornado por Y.Union(X).</span><span class="sxs-lookup"><span data-stu-id="31595-167">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="31595-168">X.Union (um `null` referência (`Nothing` no Visual Basic)) retorna um objeto que tem o mesmo valor de X.</span><span class="sxs-lookup"><span data-stu-id="31595-168">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31595-169">O parâmetro <paramref name="target" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31595-169">
              <paramref name="target" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>