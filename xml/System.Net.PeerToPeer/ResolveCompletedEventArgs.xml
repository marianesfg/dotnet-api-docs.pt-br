<Type Name="ResolveCompletedEventArgs" FullName="System.Net.PeerToPeer.ResolveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb8d300c8d83189282dddde3e76716923e00b8c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473586" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Usado em conjunto com o evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />, que é sinalizado após a conclusão de uma solicitação de resolução para um <see cref="T:System.Net.PeerToPeer.PeerName" /> específico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para usar o objeto ResolveCompletedEventArgs, instanciar um <xref:System.Net.PeerToPeer.PeerNameResolver> do objeto e utilizar um dos métodos de resolução. Para processamento assíncrono, use o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.  
  
 Quando o resolvedor atingiu o fim da Cloud(s) para consultar o <xref:System.Net.PeerToPeer.PeerName>, ou atingiu o número máximo de entradas de registro para o <xref:System.Net.PeerToPeer.PeerNameRecordCollection> está construindo, para concluir o processo de resolver o evento é gerado e o representante associado faz com que ResolveAsync concluir. O evento também pode ser gerado para conclusões anormais, que não retornam uma coleção.  
  
 Esse evento é gerado apenas uma vez quando todos os pontos de extremidade foram encontrados.  
  
 Todas as referências a essa instância do objeto resolvedor são coordenadas com o token fornecido, que é um identificador exclusivo, determinado pelo desenvolvedor para esta solicitação de resolução assíncronas.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveCompletedEventArgs (System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, Exception error, bool canceled, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, class System.Exception error, bool canceled, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveCompletedEventArgs(System::Net::PeerToPeer::PeerNameRecordCollection ^ peerNameRecordCollection, Exception ^ error, bool canceled, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveCompletedEventArgs : System.Net.PeerToPeer.PeerNameRecordCollection * Exception * bool * obj -&gt; System.Net.PeerToPeer.ResolveCompletedEventArgs" Usage="new System.Net.PeerToPeer.ResolveCompletedEventArgs (peerNameRecordCollection, error, canceled, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="canceled" Type="System.Boolean" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecordCollection">A coleção associada ao nome do par que foi resolvido.</param>
        <param name="error">Retorna uma exceção se ocorreu um erro.</param>
        <param name="canceled">
          <see langword="True" /> se a operação <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> foi cancelada, caso contrário, <see langword="False" />.</param>
        <param name="userToken">O token de usuário especificado quando uma operação <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> foi iniciada.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecordCollection">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecordCollection As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecordCollection ^ PeerNameRecordCollection { System::Net::PeerToPeer::PeerNameRecordCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecordCollection : System.Net.PeerToPeer.PeerNameRecordCollection" Usage="System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> a ser resolvido.</summary>
        <value>O <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> objeto a ser resolvido é o encontrado em resposta a um <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operação em um determinado <see cref="T:System.Net.PeerToPeer.PeerName" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento é gerado quando todas as nuvens tem sido consultadas para esse nome de ponto a ponto, ou quando o número máximo de registros de nome de ponto a ponto foi recuperado. Ele é gerado, colocando a coleção de registro de nome de ponto a ponto para o <xref:System.Net.PeerToPeer.ResolveCompletedEventArgs> argumento do evento para o qual o método OnResolveCompleted está esperando.  A alteração no estado desperta o processo.  
  
 A menos que explicitamente especificado, o valor padrão para todas as propriedades é `null` para tipos de referência e zero (0) para propriedades do tipo `int`. Se nenhum registro foi encontrado, `null` será retornado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>