<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5969f6650c66ee5ebbe78523ecd6d6593418c69" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30426300" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Define o tipo de <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser criado. Um nome par é seguro ou não. Um nome par seguro fornece uma prova de propriedade do nome. Um nome par não seguro não tem uma identidade associada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um nó deve ter acesso à chave privada associada à chave pública, usado na criação de seguro <xref:System.Net.PeerToPeer.PeerName>para comprovar a propriedade. O nó não tem uma relação com uma chave pública.  
  
 O formato de um nome de ponto a ponto é: *Authority.Classifier*. O valor de <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depende se o nome é um nome de ponto a ponto segura ou um nome de ponto a ponto segura. O <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> parte do nome pode ser definido como qualquer cadeia de caracteres que contém a 15 caracteres Unicode, incluindo o `null` terminador. Uma vez o <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> e nível de segurança de um par foram estabelecidas, um par também pode ser chamado com um nome relativo ou um nome de host.  
  
 Somente o proprietário ou host de ponto a ponto, pode registrar um nome de ponto a ponto segura com o [API do provedor de Namespace PNRP](http://go.microsoft.com/fwlink?LinkID=92731). Qualquer nó pode declarar a propriedade a qualquer desprotegido <xref:System.Net.PeerToPeer.PeerName>.  
  
 **Observação** usando um protegidos <xref:System.Net.PeerToPeer.PeerName> não garante a segurança geral de um aplicativo de rede. A segurança do aplicativo depende de implementação.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Cria um <see cref="T:System.Net.PeerToPeer.PeerName" /> seguro usando a identidade do usuário atual.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Cria um <see cref="T:System.Net.PeerToPeer.PeerName" /> não seguro usando a identidade do usuário atual.</summary>
      </Docs>
    </Member>
  </Members>
</Type>