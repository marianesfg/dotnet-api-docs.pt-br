<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fbb46569ea8c3e2c36d884eb360682eca12794a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bc492-101">Especifica os valores que resolvem um <see cref="T:System.Net.PeerToPeer.PeerName" /> para um <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> usando o protocolo da API do Provedor de Namespace PNRP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bc492-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-102">Um <xref:System.Net.PeerToPeer.PeerNameRecord> que contém todas as informações para o <xref:System.Net.PeerToPeer.PeerName> que foi publicado no <xref:System.Net.PeerToPeer.Cloud> ou cloud(s) que foram consultados durante o processo de resolução.</span><span class="sxs-lookup"><span data-stu-id="bc492-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bc492-103">Inicializa uma nova instância padrão da classe <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-104">Depois de resolver com êxito um <xref:System.Net.PeerToPeer.PeerName>, o <xref:System.Net.PeerToPeer.PeerNameRecord> contém todas as informações de especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> que foram publicada a cloud(s) foram consultados durante a <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="bc492-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bc492-105">O objeto <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> que contém os dados retornados pelo evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-106">Retorna dados de resolução de pares depois que o evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> é acionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-107">Esse método é um retorno de chamada assíncrono usado para processar os dados de resolução de nome de ponto a ponto, após a resolução de ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="bc492-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="bc492-108">Tipos derivados podem substituir esse método para executar mais tarefas quando a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> é gerado pelo objeto resolvedor peer.</span><span class="sxs-lookup"><span data-stu-id="bc492-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bc492-109">Objeto <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> que contém informações de progresso da resolução de nomes de par retornadas pelo evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-109">
              <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-110">Retorna dados de andamento da resolução de pares quando o <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> é acionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-111">Esse método é um retorno de chamada assíncrono usado para processar os dados de resolução de pares após a solicitação do progresso de resolução de ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="bc492-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="bc492-112">Tipos derivados podem substituir esse método para executar mais tarefas quando a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento ocorre.</span><span class="sxs-lookup"><span data-stu-id="bc492-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bc492-113">Ao substituir este método em um tipo derivado, certifique-se de chamar o tipo base <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> método para que registrado delegados receber o evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bc492-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc492-114">Resolve um objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> para um <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> usando o protocolo PNRP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-115">Esse método associa nomes de ponto a ponto para nuvens.</span><span class="sxs-lookup"><span data-stu-id="bc492-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="bc492-116">Chamando o <xref:System.Net.PeerToPeer.PeerNameResolver> método é semelhante a chamar o <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método para cada registro de nome de ponto a ponto no <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="bc492-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="bc492-117">Observe que usando o método de resolução em um registro de nome de ponto a ponto individuais não invalidará resolver vários nomes de ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="bc492-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="bc492-118">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="bc492-119">Eles são idênticos nos parâmetros, que eles são passados, exceto que o método ResolveAsync inclui um token do sistema em sua lista de parâmetro para manipulação de eventos assíncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="bc492-120">Se o <xref:System.Net.PeerToPeer.Cloud> parâmetro não for fornecido, o método usa o <xref:System.Net.PeerToPeer.Cloud.Available> atalho para preencher os parâmetros de nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="bc492-121">Se o `maxRecords` parâmetro estiver ausente, o valor padrão de zero faz com que um <xref:System.ArgumentOutOfRangeException> exceção seja lançada.</span><span class="sxs-lookup"><span data-stu-id="bc492-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="bc492-122">Esse evento também será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-123">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-124">Resolve o <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado em todas as nuvens conhecidas para o par de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc492-125">Uma <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> que contém todos os registros de nomes de par (representados como objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) associados ao nome de par especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="bc492-126">Para nomes de par não seguros, o mesmo <see cref="T:System.Net.PeerToPeer.PeerName" /> pode ser registrado por usuários diferentes na mesma <see cref="T:System.Net.PeerToPeer.Cloud" /> e associado a diferentes pontos de extremidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-127">Esse método associa um nome de ponto a ponto para nuvens.</span><span class="sxs-lookup"><span data-stu-id="bc492-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="bc492-128">Todas as nuvens são consultadas para o <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="bc492-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="bc492-129">Se o nome de ponto a ponto não pode ser resolvido ou é `null`, uma <xref:System.Net.PeerToPeer.PeerToPeerException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="bc492-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="bc492-130">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="bc492-131">Chamando o <xref:System.Net.PeerToPeer.PeerNameResolver> método é semelhante a chamar o <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método para cada registro de nome de ponto a ponto no <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="bc492-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="bc492-132">Observe que usando o método de resolução em um registro de nome de ponto a ponto individuais não invalidará resolver vários nomes de ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="bc492-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="bc492-133">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="bc492-134">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="bc492-135">Se o <xref:System.Net.PeerToPeer.Cloud> parâmetro não for fornecido, o método usa o <xref:System.Net.PeerToPeer.Cloud.Available> atalho para preencher os parâmetros de nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="bc492-136">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc492-137">O exemplo de código a seguir ilustra como resolver um <xref:System.Net.PeerToPeer.PeerName> publicados em qualquer <xref:System.Net.PeerToPeer.Cloud>.</span><span class="sxs-lookup"><span data-stu-id="bc492-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-138">O parâmetro <paramref name="peerName" /> é definido como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="bc492-139">O nome do par especificado não pode ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-139">The peer name specified cannot be resolved.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-140">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bc492-141">O número máximo de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> a ser obtido de todos os objetos <see cref="T:System.Net.PeerToPeer.Cloud" /> para o <c>peerName</c> fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-142">Resolve o nome do par especificado em todas as nuvens conhecidas para o par de chamada, retornando não mais do que o número especificado de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc492-143">Uma <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> cujo tamanho é menor ou igual a entradas <paramref name="maxRecords" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="bc492-144">Esta coleção contém registros de nome de par associados ao <see cref="T:System.Net.PeerToPeer.PeerName" /> que foi resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-145">Esse método associa um nome de ponto a ponto para nuvens.</span><span class="sxs-lookup"><span data-stu-id="bc492-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="bc492-146">Todas as nuvens são consultadas para o nome do par.</span><span class="sxs-lookup"><span data-stu-id="bc492-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="bc492-147">Para nomes de ponto a ponto segura, o mesmo nome de ponto a ponto pode ser registrado por usuários diferentes no mesmo <xref:System.Net.PeerToPeer.Cloud>e associados a diferentes pontos de extremidade.</span><span class="sxs-lookup"><span data-stu-id="bc492-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="bc492-148">Se o <xref:System.Net.PeerToPeer.PeerName> não pode ser resolvido (por exemplo, o nome de ponto a ponto não está publicado) um <xref:System.Net.PeerToPeer.PeerToPeerException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="bc492-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="bc492-149">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="bc492-150">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="bc492-151">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-152">O parâmetro <paramref name="peerName" /> é definido como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bc492-153">O parâmetro <paramref name="maxRecords" /> é menor ou igual a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="bc492-154">O nome do par fornecido não pode ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-154">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-155">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="bc492-156">A <see cref="T:System.Net.PeerToPeer.Cloud" /> na qual resolver o nome do par.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-157">Resolve o <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificado na <see cref="T:System.Net.PeerToPeer.Cloud" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc492-158">
            <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> que contém todos os registros de nomes de par (representados como objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) associados ao nome de par especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-158">
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="bc492-159">Para nomes de par não seguros, o mesmo <see cref="T:System.Net.PeerToPeer.PeerName" /> pode ser registrado por usuários diferentes na mesma <see cref="T:System.Net.PeerToPeer.Cloud" /> e associado a diferentes pontos de extremidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-160">Se o <xref:System.Net.PeerToPeer.PeerName> não pode ser resolvido (ou seja, o nome do par não está publicado) um <xref:System.Net.PeerToPeer.PeerToPeerException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="bc492-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (i.e., the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="bc492-161">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="bc492-162">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="bc492-163">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="bc492-164">Se o <xref:System.Net.PeerToPeer.Cloud> parâmetro é `null`, o <xref:System.Net.PeerToPeer.PeerNameResolver> usa o <xref:System.Net.PeerToPeer.Cloud.Available> atalho para preencher o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="bc492-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="bc492-165">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-166">O parâmetro <paramref name="peerName" /> é definido como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="bc492-167">O nome do par fornecido não pode ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-167">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-168">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="bc492-169">A <see cref="T:System.Net.PeerToPeer.Cloud" /> na qual resolver o <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bc492-170">O número máximo de objetos de registro de nomes de par a ser obtido na nuvem especificada para o <c>peerName</c> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-171">Resolve o <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificado na <see cref="T:System.Net.PeerToPeer.Cloud" /> especificada, retornando não mais do que o número especificado de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc492-172">Uma <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> cujo tamanho é menor ou igual a entradas <paramref name="maxRecords" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="bc492-173">Esta coleção contém registros de nome de par associados ao <see cref="T:System.Net.PeerToPeer.PeerName" /> que foi resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-174">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="bc492-175">Se o nome de ponto a ponto não pode ser resolvido, um <xref:System.Net.PeerToPeer.PeerToPeerException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="bc492-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="bc492-176">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="bc492-177">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="bc492-178">Se o <xref:System.Net.PeerToPeer.Cloud> parâmetro é `null`, o <xref:System.Net.PeerToPeer.PeerNameResolver> usa o <xref:System.Net.PeerToPeer.Cloud.Available> atalho para preencher o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="bc492-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="bc492-179">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-180">O parâmetro <paramref name="peerName" /> é definido como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bc492-181">O parâmetro <paramref name="maxRecords" /> é menor ou igual a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="bc492-182">O nome do par fornecido não pode ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-182">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bc492-183">Estes métodos iniciam uma operação assíncrona de resolução para o <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado em todas as nuvens conhecidas para o par de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-184">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, que é usado quando o processamento assíncrono é necessário.</span><span class="sxs-lookup"><span data-stu-id="bc492-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="bc492-185">Eles são idênticos nos parâmetros, que eles são passados, exceto que ResolveAsync inclui um token do sistema em sua lista de parâmetro para manipulação de eventos.</span><span class="sxs-lookup"><span data-stu-id="bc492-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="bc492-186">Se ocorrer uma incompatibilidade de parâmetro entre o método de resolução e o método ResolveAsync e o <xref:System.Net.PeerToPeer.Cloud> parâmetro não for fornecido, o método usa o <xref:System.Net.PeerToPeer.Cloud.Available> atalho para preencher os parâmetros de nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-187">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="bc492-188">Um objeto definido pelo usuário que contém informações de estado sobre a operação de resolução de nomes de par.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-188">A user-defined object that contains state information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-189">Inicia uma operação assíncrona de resolução de nomes de par para o <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificado em todas as nuvens conhecidas para o par de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-190">Esse método assincronamente associa um nome de ponto a ponto para nuvens.</span><span class="sxs-lookup"><span data-stu-id="bc492-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="bc492-191">Todas as nuvens são consultadas para o <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="bc492-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="bc492-192">Ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="bc492-193">Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="bc492-194">Se o nome de ponto a ponto não pode ser resolvido, um <xref:System.Net.PeerToPeer.PeerToPeerException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="bc492-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="bc492-195">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="bc492-196">Chamando o <xref:System.Net.PeerToPeer.PeerNameResolver> método é semelhante a chamar o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método para cada registro de nome de ponto a ponto no <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="bc492-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="bc492-197">Observe que usando o método de resolução em um registro de nome de ponto a ponto individuais não invalidará resolver vários nomes de ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="bc492-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="bc492-198">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="bc492-199">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="bc492-200">Todas as referências assíncronas para o objeto de resolvedor sejam coordenadas com um token de identificador exclusivo.</span><span class="sxs-lookup"><span data-stu-id="bc492-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="bc492-201">Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.</span><span class="sxs-lookup"><span data-stu-id="bc492-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="bc492-202">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-203">Um ou ambos os parâmetros <paramref name="peerName" /> e <paramref name="userState" /> são definidos como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-204">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bc492-205">O número máximo de registros a ser obtido para o Nome do Par.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-205">The maximum number of records to obtain for the Peer Name.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="bc492-206">Um objeto definido pelo usuário que contém informações sobre a operação de resolução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-206">A user-defined object that contains information about the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-207">Inicia uma operação assíncrona de resolução de nomes de par para o <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado em todas as nuvens conhecidas para o par de chamada, retornando não mais que <paramref name="maxRecords" /> entradas para o nome do par.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-208">Esse método assincronamente associa um nome de ponto a ponto para nuvens.</span><span class="sxs-lookup"><span data-stu-id="bc492-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="bc492-209">Todas as nuvens são consultadas para o <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="bc492-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="bc492-210">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="bc492-211">Se o nome de ponto a ponto não pode ser resolvido ou é `null`, uma <xref:System.Net.PeerToPeer.PeerToPeerException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="bc492-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="bc492-212">Este método gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="bc492-213">Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="bc492-214">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="bc492-215">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="bc492-216">Todas as referências assíncronas para o objeto de resolvedor sejam coordenadas com um token de identificador exclusivo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="bc492-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="bc492-217">Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.</span><span class="sxs-lookup"><span data-stu-id="bc492-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="bc492-218">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-219">Um ou ambos os parâmetros <paramref name="peerName" /> e <paramref name="userState" /> são definidos como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bc492-220">O parâmetro <paramref name="maxRecords" /> é menor ou igual a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-221">O <see cref="T:System.Net.PeerToPeer.PeerName" /> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="bc492-222">A <see cref="T:System.Net.PeerToPeer.Cloud" /> na qual resolver o <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="bc492-223">Um <see cref="T:System.Object" /> definido pelo usuário que contém informações sobre a operação de resolução de nomes de par.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-224">Inicia uma operação assíncrona de resolução de nomes de par para o <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado na <see cref="T:System.Net.PeerToPeer.Cloud" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-225">Este método gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="bc492-226">Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="bc492-227">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="bc492-228">Se o <xref:System.Net.PeerToPeer.Cloud> parâmetro é `null`, o nome é resolvido usando o <xref:System.Net.PeerToPeer.Cloud.Available> atalho, que inicializa valores padrão para o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="bc492-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="bc492-229">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="bc492-230">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="bc492-231">Todas as referências assíncronas para o objeto de resolvedor sejam coordenadas com um token de identificador exclusivo.</span><span class="sxs-lookup"><span data-stu-id="bc492-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="bc492-232">Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.</span><span class="sxs-lookup"><span data-stu-id="bc492-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="bc492-233">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-234">Um ou ambos os parâmetros <paramref name="peerName" /> e <paramref name="userState" /> são definidos como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="bc492-235">O <c>peerName</c> a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-235">The <c>peerName</c> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="bc492-236">A <c>cloud</c> na qual resolver <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-236">The <c>cloud</c> in which to resolve <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bc492-237">O número máximo de registros a serem obtidos da <c>cloud</c> para <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-237">The maximum number of records to obtain from <c>cloud</c> for <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="bc492-238">Um objeto definido pelo usuário que contém informações sobre a operação de resolução de nomes de par.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-238">A user-defined object that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-239">Inicia uma operação assíncrona de resolução de nomes de par para o <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado na <see cref="T:System.Net.PeerToPeer.Cloud" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="bc492-240">A operação de resolução resolverá não mais de <paramref name="maxRecords" /> entradas para o nome do par especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-241">Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.</span><span class="sxs-lookup"><span data-stu-id="bc492-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="bc492-242">Este método gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="bc492-243">Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="bc492-244">Se o <xref:System.Net.PeerToPeer.Cloud> parâmetro é `null`, o nome é resolvido usando o <xref:System.Net.PeerToPeer.Cloud.Available> atalho, que inicializa valores padrão para o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="bc492-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="bc492-245">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bc492-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="bc492-246">Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.</span><span class="sxs-lookup"><span data-stu-id="bc492-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="bc492-247">Todas as referências assíncronas para o objeto de resolvedor peer sejam coordenadas com um token de identificador exclusivo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="bc492-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="bc492-248">Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.</span><span class="sxs-lookup"><span data-stu-id="bc492-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="bc492-249">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento será gerado se a operação resolver é concluído em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-250">Um ou ambos os parâmetros <paramref name="peerName" /> e <paramref name="userState" /> são definidos como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc492-251">Um ou mais parâmetros fornecidos são inválidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-251">One or more supplied parameters are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="bc492-252">A conclusão bem-sucedida desta operação exige, pelo menos, um manipulador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-252">Successful completion of this operation requires at least one event handler.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bc492-253">O parâmetro <paramref name="maxRecords" /> é menor ou igual a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="bc492-254">O objeto fornecido para a instância de método <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> que iniciou a operação de resolução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc492-255">Cancelar a solicitação assíncrona de resolução de nomes de par especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-255">Cancels the specified asynchronous peer name resolution request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-256">Chamar esse método garante que o sistema não tentará obter registros adicionais especificado <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="bc492-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="bc492-257">Se esse método é chamado quando uma operação de resolução de nome do par assíncrona não estiver pendente, ele atua como uma "nenhuma operação" (não operações).</span><span class="sxs-lookup"><span data-stu-id="bc492-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="bc492-258">O `userState` objeto deve ser fornecido, pois ele é usado para rastrear uma chamada assíncrona específica quando várias chamadas estão em andamento.</span><span class="sxs-lookup"><span data-stu-id="bc492-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="bc492-259">Esse objeto fornecido pelo chamador é exclusivo para cada solicitação de resolução de nome de ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="bc492-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="bc492-260">Esse método retornará imediatamente, mas a operação pode ou não pode cancelar imediatamente.</span><span class="sxs-lookup"><span data-stu-id="bc492-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="bc492-261">Os argumentos do evento retornados pelo <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento contém um campo que pode ser controlado por clientes para determinar se o cancelamento tenha ocorrido.</span><span class="sxs-lookup"><span data-stu-id="bc492-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="bc492-262">Chamar esse método garante que o evento ResolveCompleted será sinalizado assim que possível com o argumento do evento <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="bc492-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bc492-263">Os parâmetros <paramref name="userState" /> não podem ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bc492-264">O evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> é sinalizado quando uma solicitação de resolução de nomes de par para um <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> específico foi concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-265">O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento será gerado uma vez para cada ponto de extremidade encontrado e esse evento será gerado apenas uma vez quando todos os pontos de extremidade foram encontrados.</span><span class="sxs-lookup"><span data-stu-id="bc492-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="bc492-266">Esse evento também será gerado se o <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operação realizada em erro ou for cancelada.</span><span class="sxs-lookup"><span data-stu-id="bc492-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bc492-267">Este evento é sinalizado sempre que um objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> é localizado em resposta a uma operação <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> para um <see cref="T:System.Net.PeerToPeer.PeerName" /> específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc492-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc492-268">Se vários <xref:System.Net.PeerToPeer.PeerName> objetos existem no cloud(s) que está sendo consultada, esse evento é sinalizado uma vez para cada <xref:System.Net.PeerToPeer.PeerNameRecord> encontrado.</span><span class="sxs-lookup"><span data-stu-id="bc492-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>