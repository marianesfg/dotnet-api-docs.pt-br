<Type Name="IPinnable" FullName="System.Buffers.IPinnable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="907982cc3daf2aad256508185bbdc2e178bd9cea" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52195951" /></Metadata><TypeSignature Language="C#" Value="public interface IPinnable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPinnable" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IPinnable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPinnable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPinnable" />
  <TypeSignature Language="F#" Value="type IPinnable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="78f30-101">Fornece um mecanismo para fixar e desafixar objetos para impedir que o coletor de lixo os mova.</span><span class="sxs-lookup"><span data-stu-id="78f30-101">Provides a mechanism for pinning and unpinning objects to prevent the garbage collector from moving them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="78f30-102">A classe <xref:System.Buffers.MemoryManager%601> implementa a interface `IPinnable`.</span><span class="sxs-lookup"><span data-stu-id="78f30-102">The <xref:System.Buffers.MemoryManager%601> class implements the `IPinnable` interface.</span></span>

       ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Pin">
      <MemberSignature Language="C#" Value="public System.Buffers.MemoryHandle Pin (int elementIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Buffers.MemoryHandle Pin(int32 elementIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IPinnable.Pin(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pin (elementIndex As Integer) As MemoryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::MemoryHandle Pin(int elementIndex);" />
      <MemberSignature Language="F#" Value="abstract member Pin : int -&gt; System.Buffers.MemoryHandle" Usage="iPinnable.Pin elementIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.MemoryHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementIndex"><span data-ttu-id="78f30-103">O deslocamento para o elemento dentro do buffer de memória para o qual o <see cref="T:System.Buffers.MemoryHandle" /> retornado aponta.</span><span class="sxs-lookup"><span data-stu-id="78f30-103">The offset to the element within the memory buffer to which the returned <see cref="T:System.Buffers.MemoryHandle" /> points.</span></span></param>
        <summary><span data-ttu-id="78f30-104">Fixa um bloco de memória.</span><span class="sxs-lookup"><span data-stu-id="78f30-104">Pins a block of memory.</span></span></summary>
        <returns><span data-ttu-id="78f30-105">Um identificador para o bloco de memória.</span><span class="sxs-lookup"><span data-stu-id="78f30-105">A handle to the block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="78f30-106">Um desenvolvedor pode acessar um objeto que implementa o <xref:System.Buffers.IPinnable> interface sem a fixação somente por meio de APIs gerenciadas.</span><span class="sxs-lookup"><span data-stu-id="78f30-106">A developer can access an object that implements the <xref:System.Buffers.IPinnable> interface without pinning it only through managed APIs.</span></span> <span data-ttu-id="78f30-107">Anexação é necessária para acesso por APIs não gerenciadas.</span><span class="sxs-lookup"><span data-stu-id="78f30-107">Pinning is required for access by unmanaged APIs.</span></span> 

<span data-ttu-id="78f30-108">Chame esse método para indicar que o <xref:System.Buffers.IPinnable> objeto não pode ser movido pelo coletor de lixo para que o endereço do objeto fixado pode ser usado.</span><span class="sxs-lookup"><span data-stu-id="78f30-108">Call this method to indicate that the <xref:System.Buffers.IPinnable> object cannot be moved by the garbage collector so that the address of the pinned object can be used.</span></span>


       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unpin">
      <MemberSignature Language="C#" Value="public void Unpin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unpin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IPinnable.Unpin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unpin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unpin();" />
      <MemberSignature Language="F#" Value="abstract member Unpin : unit -&gt; unit" Usage="iPinnable.Unpin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78f30-109">Libera um bloco de memória fixado.</span><span class="sxs-lookup"><span data-stu-id="78f30-109">Frees a block of pinned memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="78f30-110">Chame esse método para indicar que o <xref:System.Buffers.IPinnable> objeto não precisa mais ser fixados, e que o coletor de lixo pode movê-lo agora.</span><span class="sxs-lookup"><span data-stu-id="78f30-110">Call this method to indicate that the <xref:System.Buffers.IPinnable> object no longer needs to be pinned, and that the garbage collector can now move the object.</span></span>


       ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>