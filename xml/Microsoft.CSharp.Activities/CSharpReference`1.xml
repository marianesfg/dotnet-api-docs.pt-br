<Type Name="CSharpReference&lt;TResult&gt;" FullName="Microsoft.CSharp.Activities.CSharpReference&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b9f29d7306a8cde5a4f6d25c74c4b76e6614e8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30336120" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CSharpReference&lt;TResult&gt; : System.Activities.CodeActivity&lt;System.Activities.Location&lt;TResult&gt;&gt;, System.Activities.Expressions.ITextExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpReference`1&lt;TResult&gt; extends System.Activities.CodeActivity`1&lt;class System.Activities.Location`1&lt;!TResult&gt;&gt; implements class System.Activities.Expressions.ITextExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CSharp.Activities.CSharpReference`1" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpReference(Of TResult)&#xA;Inherits CodeActivity(Of Location(Of TResult))&#xA;Implements ITextExpression" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class CSharpReference : System::Activities::CodeActivity&lt;System::Activities::Location&lt;TResult&gt; ^&gt;, System::Activities::Expressions::ITextExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.CodeActivity&lt;System.Activities.Location&lt;TResult&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">System.Activities.Location&lt;TResult&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Expressions.ITextExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("ExpressionText")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">To be added.</typeparam>
    <summary>Especifica informações sobre uma referência do C#.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.CSharp.Activities.CSharpReference`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Activities.CSharpReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.CSharp.Activities.CSharpReference`1" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpReference (string expressionText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpReference(System::String ^ expressionText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionText">O texto da expressão.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.CSharp.Activities.CSharpReference`1" /> com o texto de expressão especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">Os metadados compilados.</param>
        <summary>Compila novos metadados para a referência do C#.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Activities.Location&lt;TResult&gt; Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Activities.Location`1&lt;!TResult&gt; Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (context As CodeActivityContext) As Location(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Activities::Location&lt;TResult&gt; ^ Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">O contexto.</param>
        <summary>Executa a referência do C#.</summary>
        <returns>A referência executada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionText">
      <MemberSignature Language="C#" Value="public string ExpressionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o texto da expressão para a referência.</summary>
        <value>O texto da expressão para a referência.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionTree">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetExpressionTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetExpressionTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpressionTree () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::Expressions::Expression ^ GetExpressionTree();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Expressions.ITextExpression.GetExpressionTree</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém a árvore de expressão para a referência do C#.</summary>
        <returns>A árvore de expressão.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CSharp.Activities.CSharpReference`1.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.Expressions.ITextExpression.Language</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o idioma usado para a referência.</summary>
        <value>O idioma usado para a referência.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresCompilation">
      <MemberSignature Language="C#" Value="public bool RequiresCompilation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresCompilation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresCompilation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresCompilation { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.Expressions.ITextExpression.RequiresCompilation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se a referência exige compilação.</summary>
        <value>
          <see langword="True" /> Se a referência requer compilação; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>