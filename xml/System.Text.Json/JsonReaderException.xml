<Type Name="JsonReaderException" FullName="System.Text.Json.JsonReaderException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b733ec301906d6ddd7f438bff4eaa4ccd79cad12" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541717" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonReaderException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonReaderException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonReaderException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderException sealed : Exception" />
  <TypeSignature Language="F#" Value="type JsonReaderException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4db31-101">A exceção que é gerada quando o <see cref="T:System.Text.Json.Utf8JsonReader" /> encontra dados inválidos ou não permitidos por uma de suas opções.</span><span class="sxs-lookup"><span data-stu-id="4db31-101">The exception that is thrown when <see cref="T:System.Text.Json.Utf8JsonReader" /> encounters invalid data or data disallowed by any of its options.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonReaderException (string message, long lineNumber, long bytePositionInLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int64 lineNumber, int64 bytePositionInLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderException.#ctor(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Long, bytePositionInLine As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonReaderException(System::String ^ message, long lineNumber, long bytePositionInLine);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonReaderException : string * int64 * int64 -&gt; System.Text.Json.JsonReaderException" Usage="new System.Text.Json.JsonReaderException (message, lineNumber, bytePositionInLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int64" />
        <Parameter Name="bytePositionInLine" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4db31-102">A mensagem de erro específica do contexto.</span><span class="sxs-lookup"><span data-stu-id="4db31-102">The context-specific error message.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="4db31-103">O número de linha (começando em 0) em que o JSON inválido foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="4db31-103">The line number (starting at 0) at which the invalid JSON was encountered.</span></span></param>
        <param name="bytePositionInLine"><span data-ttu-id="4db31-104">O número de bytes (começando em 0) na linha atual em que o JSON inválido foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="4db31-104">The byte count (starting at 0) in the current line where the invalid JSON was encountered.</span></span></param>
        <summary><span data-ttu-id="4db31-105">Cria um objeto de exceção para retransmitir as informações de erro ao usuário.</span><span class="sxs-lookup"><span data-stu-id="4db31-105">Creates a new exception object to relay error information to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
        
<span data-ttu-id="4db31-106">Observe que o `bytePositionInLine` conta o número de bytes (ou seja, unidades de código UTF-8) e não caracteres ou escalares.</span><span class="sxs-lookup"><span data-stu-id="4db31-106">Note that the `bytePositionInLine` counts the number of bytes (that is, UTF-8 code units) and not characters or scalars.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytePositionInLine">
      <MemberSignature Language="C#" Value="public long BytePositionInLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytePositionInLine" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderException.BytePositionInLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytePositionInLine As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytePositionInLine { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytePositionInLine : int64" Usage="System.Text.Json.JsonReaderException.BytePositionInLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4db31-107">Obtém o número de bytes lidos dentro da linha atual (começando em 0) antes da exceção.</span><span class="sxs-lookup"><span data-stu-id="4db31-107">Gets the number of bytes read within the current line (starting at 0) before the exception.</span></span></summary>
        <value><span data-ttu-id="4db31-108">O número de bytes lidos dentro da linha atual (começando em 0) antes da exceção.</span><span class="sxs-lookup"><span data-stu-id="4db31-108">The number of bytes read within the current line (starting at 0) before the exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="jsonReaderException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="4db31-109">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</span><span class="sxs-lookup"><span data-stu-id="4db31-109">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="4db31-110">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</span><span class="sxs-lookup"><span data-stu-id="4db31-110">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="4db31-111">Define o <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com informações sobre a exceção.</span><span class="sxs-lookup"><span data-stu-id="4db31-111">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int64" Usage="System.Text.Json.JsonReaderException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4db31-112">Obtém o número de linhas lidas (começando em 0) antes da exceção.</span><span class="sxs-lookup"><span data-stu-id="4db31-112">Gets the number of lines read (starting at 0) before the exception.</span></span></summary>
        <value><span data-ttu-id="4db31-113">O número de leitura de linhas (começando em 0) antes da exceção.</span><span class="sxs-lookup"><span data-stu-id="4db31-113">The number of lines read (starting at 0) before the exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
