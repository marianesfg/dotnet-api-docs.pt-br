<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Stroke.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bbc2998fc7c991c000e9cdb3a850e6fa973cf7bd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbc2998fc7c991c000e9cdb3a850e6fa973cf7bd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Represents a single ink stroke.</source>
          <target state="translated">Representa um único traço de tinta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is the data object that is collected from a pointing device, such as a tablet pen or a mouse.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> é o objeto de dados que é coletado de um dispositivo apontador, como uma caneta ou mouse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> podem ser criados e manipulados programaticamente e pode ser representado visualmente em um elemento de tinta, como o <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> contains information about both its position and appearance.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> contém informações sobre sua posição e a aparência.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is a collection of <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objects that specifies the position of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade é uma coleção de <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objetos que especifica a posição do <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> property specifies a stroke's appearance.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> propriedade especifica a aparência do traço.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> from a <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como criar um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`myInkPresenter`</ph>.</source>
          <target state="translated">Este exemplo supõe que haja uma <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> chamado <ph id="ph2">`myInkPresenter`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is empty..</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> está vazio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> object that specifies the appearance of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que especifica a aparência do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> from a <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como criar um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>This example assumes that there is an <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> called <ph id="ph2">`myInkPresenter`</ph>.</source>
          <target state="translated">Este exemplo supõe que haja uma <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> chamado <ph id="ph2">`myInkPresenter`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source><ph id="ph1">&lt;paramref name="drawingAtrributes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="drawingAtrributes" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
          <source><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stylusPoints" /&gt;</ph> está vazio.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The unique identifier for the property.</source>
          <target state="translated">O identificador exclusivo para a propriedade.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The value of the custom property.</source>
          <target state="translated">O valor da propriedade personalizada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source><bpt id="p1">&lt;c&gt;</bpt>propertyData<ept id="p1">&lt;/c&gt;</ept> must be of type <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.Single" /&gt;</ph>, <ph id="ph10">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph11">&lt;see cref="T:System.DateTime" /&gt;</ph>, <ph id="ph12">&lt;see cref="T:System.Boolean" /&gt;</ph>, <ph id="ph13">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph14">&lt;see cref="T:System.Decimal" /&gt;</ph> or an array of these data types, except <ph id="ph15">&lt;see cref="T:System.String" /&gt;</ph>, which is not allowed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>propertyData<ept id="p1">&lt;/c&gt;</ept> deve ser do tipo <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.Single" /&gt;</ph>, <ph id="ph10">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph11">&lt;see cref="T:System.DateTime" /&gt;</ph>, <ph id="ph12">&lt;see cref="T:System.Boolean" /&gt;</ph>, <ph id="ph13">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph14">&lt;see cref="T:System.Decimal" /&gt;</ph> ou uma matriz desses tipos de dados, exceto <ph id="ph15">&lt;see cref="T:System.String" /&gt;</ph>, que não é permitido.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>Adds a custom property to the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Adiciona uma propriedade personalizada ao objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>This method is useful if you need to store extra information in the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">Esse método é útil se você precisar armazenar informações extras de <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The following example demonstrates how to add a custom property to a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como adicionar uma propriedade personalizada para um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="propertyData" /&gt;</ph> argument is not one of the allowed data types listed in the <ph id="ph2">&lt;see langword="Parameters" /&gt;</ph> section.</source>
          <target state="translated">O argumento <ph id="ph1">&lt;paramref name="propertyData" /&gt;</ph> não é um dos tipos de dados permitidos listados na seção <ph id="ph2">&lt;see langword="Parameters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>Returns a deep copy of the existing <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Retorna uma cópia profunda do objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> existente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">O novo objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>The properties of an object that is a deep copy of another object have the same values as the properties of the original object.</source>
          <target state="translated">As propriedades de um objeto que é uma cópia profunda de outro objeto têm os mesmos valores de propriedades do objeto original.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Clone">
          <source>The following example demonstrates how to get a copy of the current <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como obter uma cópia do atual <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>The unique identifier for the property.</source>
          <target state="translated">O identificador exclusivo para a propriedade.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object contains the specified custom property.</source>
          <target state="translated">Retorna um valor que indica se o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> contém a propriedade personalizada especificada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the custom property exists; otherwise, returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se a propriedade personalizada existir, caso contrário, retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)">
          <source>The following example demonstrates how to determine whether a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object has a custom property.</source>
          <target state="translated">O exemplo a seguir demonstra como determinar se um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto tem uma propriedade personalizada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object based upon a <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</source>
          <target state="translated">Renderiza o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> com base em um <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> object onto which the stroke will be rendered.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> no qual o traço será renderizado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object based upon the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</source>
          <target state="translated">Renderiza o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> com base no <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
          <source>The following example demonstrates how to draw a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object by using a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como desenhar um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto usando um <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> object onto which the stroke will be rendered.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> no qual o traço será renderizado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> object defining the attributes of the stroke that is drawn.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que define os atributos do traço que é desenhado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object based upon the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph>.</source>
          <target state="translated">Renderiza o objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> com base no <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to draw a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object by using a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como desenhar um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto usando um <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> object onto which the stroke will be rendered.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> no qual o traço será renderizado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> object defining the attributes of the stroke that is drawn.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que define os atributos do traço que é desenhado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Renders the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> on the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> using the specified <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph>.</source>
          <target state="translated">Renderiza o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> no <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> especificado usando o <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method to perform custom drawing when you inherit from the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class.</source>
          <target state="translated">Substituir o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> método para executar o desenho personalizado ao herdar do <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to draw a circle at each <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como desenhar um círculo em cada <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> está definida como <ph id="ph2">`true`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> é usado para obter os pontos de caneta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade é usada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> para o objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>These attributes, such as color and width, are applied to the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object as it is drawn.</source>
          <target state="translated">Esses atributos, como cor e largura são aplicados para o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto como ela é desenhada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>Changing <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> causes the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributesChanged&gt;</ph> event to fire.</source>
          <target state="translated">Alterar <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> faz com que o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributesChanged&gt;</ph> evento seja acionado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> to make a stroke green.</source>
          <target state="translated">O exemplo a seguir define o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> para tornar um traço verde.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Ink.Stroke.DrawingAttributes">
          <source>The set value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor definido é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object change.</source>
          <target state="translated">Ocorre quando o <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /&gt;</ph> associado ao objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs&gt;</ph> contains information about the property that changed.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs&gt;</ph> contém informações sobre a propriedade alterada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>You can compare the <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A&gt;</ph> property against the members of <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributeIds&gt;</ph> to see which value changed.</source>
          <target state="translated">Você pode comparar a <ph id="ph1">&lt;xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A&gt;</ph> propriedade em relação aos membros do <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributeIds&gt;</ph> para ver qual valor alterado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesChanged">
          <source>The following example demonstrates how to add a handler for this event.</source>
          <target state="translated">O exemplo a seguir demonstra como adicionar um manipulador para esse evento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced">
          <source>Occurs when the drawing attributes of a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object are replaced.</source>
          <target state="translated">Ocorre quando os atributos de desenho de um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> são substituídos.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced">
          <source>The following example demonstrates how to add a handler for this event.</source>
          <target state="translated">O exemplo a seguir demonstra como adicionar um manipulador para esse evento.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>Returns the stylus points the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> uses when <ph id="ph2">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Retorna os pontos de caneta que o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> usa quando <ph id="ph2">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> é <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that contains the stylus points along the spine of a <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> when <ph id="ph3">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph></source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que contém os pontos de caneta pela lombada de um <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> quando <ph id="ph3">&lt;see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /&gt;</ph> é <ph id="ph4">&lt;see langword="true" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> method returns a new <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> that contains the stylus points that the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> uses when the <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property on the <ph id="ph5">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property is set to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> método retorna um novo <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> que contém a caneta pontos que a <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> usa quando o <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propriedade no <ph id="ph5">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> está definida como <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>To get the stylus points that are used when <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, use the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property.</source>
          <target state="translated">Para obter os pontos de caneta que são usadas quando <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> é definido como <ph id="ph2">`false`</ph>, use o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>The following example demonstrates how to draw a circle at each <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como desenhar um círculo em cada <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> está definida como <ph id="ph2">`true`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> é usado para obter os pontos de caneta.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBezierStylusPoints">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade é usada.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBounds">
          <source>Retrieves the bounding box for the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Recupera a caixa delimitadora do objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure defining the bounding box for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que define a caixa delimitadora para um objeto <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetBounds">
          <source>The following example demonstrates how to get the boundary rectangle for a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como obter o retângulo de limite para um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified area.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão dentro da área especificada.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The points that specify the line which defines where to clip.</source>
          <target state="translated">Os pontos que especificam a linha que define onde recortar.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified bounds.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão dentro dos limites especificados.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains copies of the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified bounds.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contém cópias dos segmentos do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão dentro dos limites especificados.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that is within <ph id="ph4">`lassoPoints`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contém os traços que representam os segmentos do <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que esteja dentro do <ph id="ph4">`lassoPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> não altera o original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método conecta os primeiro e último pontos no <ph id="ph2">`lassoPoints`</ph> para criar o laço.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The following example removes the ink that is outside of the specified bounds.</source>
          <target state="translated">O exemplo a seguir remove a tinta que está fora dos limites especificados.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the area to clip.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que especifica a área a ser recortada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the specified rectangle.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão dentro do retângulo especificado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains copies of the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are within the bounds of <ph id="ph3">&lt;paramref name="bounds" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contém cópias dos segmentos do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão dentro dos limites de <ph id="ph3">&lt;paramref name="bounds" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that is within <ph id="ph4">`bounds`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contém os traços que representam os segmentos do <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que esteja dentro do <ph id="ph4">`bounds`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> não altera o original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)">
          <source>The following example removes the ink that is outside of the specified bounds.</source>
          <target state="translated">O exemplo a seguir remove a tinta que está fora dos limites especificados.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Returns the segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> after part of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> is erased.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual após parte do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> ser apagado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that specifies the area to erase.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que especifica a área a ser apagada.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the specified bounds.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão fora dos limites especificados.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the specified bounds.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contém os segmentos do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão fora dos limites especificados.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that are outside of <ph id="ph4">`lassoPoints`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contém os traços que representam os segmentos do <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que estão fora do <ph id="ph4">`lassoPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> não altera o original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetClipResult%2A&gt;</ph> método conecta os primeiro e último pontos no <ph id="ph2">`lassoPoints`</ph> para criar o laço.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})">
          <source>The following example removes the ink that is within the specified bounds.</source>
          <target state="translated">O exemplo a seguir remove a tinta que esteja dentro dos limites especificados.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the area to erase.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que especifica a área a ser apagada.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>Returns segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the specified rectangle.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão fora do retângulo especificado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> that are outside the bounds of the specified <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contém os segmentos do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual que estão fora dos limites do <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that contains strokes that represent the segments of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that are outside of <ph id="ph4">`bounds`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que contém os traços que representam os segmentos do <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que estão fora do <ph id="ph4">`bounds`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> não altera o original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)">
          <source>The following example removes the ink that is within the specified bounds.</source>
          <target state="translated">O exemplo a seguir remove a tinta que esteja dentro dos limites especificados.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that specifies the path that dissects the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que especifica o caminho que apresenta o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> that specifies the shape of the eraser.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> que especifica a forma da borracha.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>Returns the segments of the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> after it is dissected by the designated path using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>.</source>
          <target state="translated">Retorna os segmentos do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual após ele ser apresentado pelo caminho designado usando o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that contains copies of the segments of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> after it is dissected by the specified path.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> que contém cópias dos segmentos do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual após ele ser apresentado pelo caminho especificado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> method uses <ph id="ph2">`eraserShape`</ph> to hit test the stroke along <ph id="ph3">`eraserPath`</ph> and returns a <ph id="ph4">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> that represent dissected segments.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> método usa <ph id="ph2">`eraserShape`</ph> para atingir o traçado ao longo de teste <ph id="ph3">`eraserPath`</ph> e retorna um <ph id="ph4">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> que representam dissected segmentos.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> does not change the original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetEraseResult%2A&gt;</ph> não altera o original <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The following example demonstrates how to erase the ink that intersects a specified path.</source>
          <target state="translated">O exemplo a seguir demonstra como apagar tinta cruza um caminho especificado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> da <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> to customize the shape of the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> método para obter um <ph id="ph2">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> para personalizar a forma do <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry">
          <source>Consider caching the <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> to avoid calling <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> multiple times, which may impact performance.</source>
          <target state="translated">Considere o armazenamento em cache o <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> para evitar chamar <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> várias vezes, que podem afetar o desempenho.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> that determines the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> que determina o <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> using the specified <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual usando os <ph id="ph3">&lt;see cref="T:System.Windows.Ink.DrawingAttributes" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;</ph> properties of <ph id="ph7">`drawingAttributes`</ph> to determine the <ph id="ph8">&lt;xref:System.Windows.Media.Geometry&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> método usa o <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes.Width%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Ink.DrawingAttributes.Height%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A&gt;</ph> propriedades de <ph id="ph7">`drawingAttributes`</ph> para determinar o <ph id="ph8">&lt;xref:System.Windows.Media.Geometry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>Consider caching the <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> to avoid calling <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> multiple times, which may impact performance.</source>
          <target state="translated">Considere o armazenamento em cache o <ph id="ph1">&lt;xref:System.Windows.Media.Geometry&gt;</ph> para evitar chamar <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.GetGeometry%2A&gt;</ph> várias vezes, que podem afetar o desempenho.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>The following example demonstrates how to draw a circle at each <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> of a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como desenhar um círculo em cada <ph id="ph1">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> de um <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> está definida como <ph id="ph2">`true`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> é usado para obter os pontos de caneta.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade é usada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>The unique identifier for the property.</source>
          <target state="translated">O identificador exclusivo para a propriedade.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>Retrieves the property data for the specified GUID.</source>
          <target state="translated">Recupera os dados de propriedade do GUID especificado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> containing the property data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see langword="object" /&gt;</ph> que contém os dados de propriedade.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source>The following example demonstrates how to retrieve a custom property on a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como recuperar uma propriedade personalizada em um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)">
          <source><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph> is not associated with a custom property of the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyDataId" /&gt;</ph> não está associado a uma propriedade personalizada do <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
          <source>Retrieves the GUIDs of any custom properties associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Recupera os GUIDs de todas as propriedades personalizadas associadas ao objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> objects.</source>
          <target state="translated">Uma matriz de objetos de <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
          <source>The following example demonstrates how to get the GUIDs of a stroke's custom properties.</source>
          <target state="translated">O exemplo a seguir demonstra como obter os GUIDs de propriedades personalizadas do traçado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="T:System.Windows.Ink.Stroke">
          <source>Returns whether the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intersects or is within a certain area.</source>
          <target state="translated">Retorna se o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intercepta ou está dentro de uma determinada área.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> methods to determine whether a <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> intersects a certain point or is within specified bounds.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> métodos para determinar se um <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> cruza um determinado ponto ou dentro de limites especificados.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The following methods check whether the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is intersected.</source>
          <target state="translated">A verificação de métodos a seguir se o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> se cruzam.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Ink.Stroke">
          <source>The following methods check whether the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is surrounded.</source>
          <target state="translated">A verificação de métodos a seguir se o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> estiver fechado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> ao qual será aplicado o teste de clique.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>Returns a value that indicates whether current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intersects the specified point.</source>
          <target state="translated">Retorna um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual intersecciona o ponto especificado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="point" /&gt;</ph> intersects the current stroke; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="point" /&gt;</ph> intersecciona o traço atual, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>This method behaves the same way as the overloaded <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29&gt;</ph> method does when <ph id="ph2">`diameter`</ph> is 1.</source>
          <target state="translated">Esse método se comporta da mesma forma que o sobrecarregado <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29&gt;</ph> método faz quando <ph id="ph2">`diameter`</ph> é 1.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)">
          <source>The following example changes the color of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> if it intersects a certain area.</source>
          <target state="translated">O exemplo a seguir altera a cor de um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> se houver interseção entre uma determinada área.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that represents the bounds of the area to hit test.</source>
          <target state="translated">Uma matriz do tipo <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que representa os limites da área que passará por teste de clique.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The percentage of the length of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, that must be in <bpt id="p1">&lt;c&gt;</bpt>lassoPoints<ept id="p1">&lt;/c&gt;</ept> for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> to be considered hit.</source>
          <target state="translated">O percentual do tamanho do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, que deve estar em <bpt id="p1">&lt;c&gt;</bpt>lassoPoints<ept id="p1">&lt;/c&gt;</ept> para o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> ser considerado um clique.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> is within the specified bounds.</source>
          <target state="translated">Retorna um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual está dentro dos limites especificados.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stroke is within the specified bounds; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o traço atual estiver dentro dos limites especificados, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> method connects the first and last points in <ph id="ph2">`lassoPoints`</ph> to create the lasso.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> método conecta os primeiro e último pontos no <ph id="ph2">`lassoPoints`</ph> para criar o laço.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)">
          <source>The following example renders a stroke purple if at least 80% of the stroke is within the bounds of <ph id="ph1">`myPoints`</ph>.</source>
          <target state="translated">O exemplo a seguir renderiza um traço roxas se pelo menos 80% do traço está dentro dos limites do <ph id="ph1">`myPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The path that <bpt id="p1">&lt;c&gt;</bpt>stylusShape<ept id="p1">&lt;/c&gt;</ept> follows for hit testing</source>
          <target state="translated">O caminho que o <bpt id="p1">&lt;c&gt;</bpt>stylusShape<ept id="p1">&lt;/c&gt;</ept> segue para teste de clique</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The shape of <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> with which to hit test.</source>
          <target state="translated">A forma do <bpt id="p1">&lt;c&gt;</bpt>caminho<ept id="p1">&lt;/c&gt;</ept> com a qual realizar o teste de clique.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>Returns whether the specified path intersects the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>.</source>
          <target state="translated">Retorna se o caminho especificado intersecciona o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> usando o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="stylusShape" /&gt;</ph> intersects the current stroke; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="stylusShape" /&gt;</ph> intersecciona o traço atual, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> method uses <ph id="ph2">`stylusShape`</ph> to hit test the stroke along <ph id="ph3">`eraserPath`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.HitTest%2A&gt;</ph> método usa <ph id="ph2">`stylusShape`</ph> para atingir o traçado ao longo de teste <ph id="ph3">`eraserPath`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)">
          <source>The following code renders a stroke purple if the stroke intersects the path of <ph id="ph1">`myPoints`</ph>.</source>
          <target state="translated">O código a seguir renderiza um traço roxas se traço intercepta o caminho do <ph id="ph1">`myPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that defines the center of the area to hit test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> que define o centro da área que passará pelo teste de clique.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>The diameter of the area to hit test.</source>
          <target state="translated">O diâmetro da área que passará pelo teste de clique.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>Returns a value that indicates whether current <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> intersects the specified area.</source>
          <target state="translated">Retorna um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> atual intersecciona a área especificada.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified area intersects the current stroke; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a área especificada intersecciona o traço atual, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)">
          <source>The following example changes the color of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> if it intersects a certain area.</source>
          <target state="translated">O exemplo a seguir altera a cor de um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> se houver interseção entre uma determinada área.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that represents the bounds of the area to hit test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> que representa os limites da área que passará por teste de clique.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>The percentage of the length of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, that must be in <bpt id="p1">&lt;c&gt;</bpt>percentageWithinBounds<ept id="p1">&lt;/c&gt;</ept> for the <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> to be considered hit..</source>
          <target state="translated">O percentual do tamanho do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>, que deve estar em <bpt id="p1">&lt;c&gt;</bpt>percentageWithinBounds<ept id="p1">&lt;/c&gt;</ept> para o <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> ser considerado um clique.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> is within the bounds of the specified rectangle.</source>
          <target state="translated">Retorna um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> está dentro dos limites do retângulo especificado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stroke is within the bounds of <ph id="ph2">&lt;paramref name="bounds" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o traço atual estiver dentro dos limites de <ph id="ph2">&lt;paramref name="bounds" /&gt;</ph>, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)">
          <source>The following example renders a stroke purple if at least 80% of the stroke is within the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir renderiza um traço roxas se pelo menos 80% do traço está dentro do <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.Invalidated">
          <source>Occurs when the appearance of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> changes.</source>
          <target state="translated">Ocorre quando a aparência do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> é alterada.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.Invalidated">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> handles the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event and calls the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> identificadores o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> eventos e chamadas de <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.Invalidated">
          <source>If you inherit from the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class and your stroke's appearance is based on a custom state, you must call the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> method to raise the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event.</source>
          <target state="translated">Se você herdar o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> classe e a aparência do traço é baseado em um estado personalizado, você deve chamar o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> método para gerar o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>Allows derived classes to modify the default behavior of the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" /&gt;</ph> event.</source>
          <target state="translated">Permite que classes derivadas modifiquem o comportamento padrão do evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>When overriding this method in a derived class, call the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir esse método em uma classe derivada, chame o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A&gt;</ph> método da classe base, de modo que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>Allows derived classes to modify the default behavior of the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" /&gt;</ph> event.</source>
          <target state="translated">Permite que classes derivadas modifiquem o comportamento padrão do evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>When overriding this method in a derived class, call the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir esse método em uma classe derivada, chame o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A&gt;</ph> método da classe base, de modo que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.Invalidated" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.Invalidated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>If you inherit from the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> class and your stroke's appearance is based on a custom state, you must call the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> method to raise the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event.</source>
          <target state="translated">Se você herdar o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> classe e a aparência do traço é baseado em um estado personalizado, você deve chamar o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> método para gerar o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> handles the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> event and calls the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.InkPresenter&gt;</ph> identificadores o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.Invalidated&gt;</ph> eventos e chamadas de <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>The following example draws a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> either as a solid stroke or as a series of <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objects, depending on the <ph id="ph3">`Mode`</ph> property.</source>
          <target state="translated">O exemplo a seguir desenha um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> como um traço sólido ou como uma série de <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objetos, dependendo do <ph id="ph3">`Mode`</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> method, which in turn calls the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> where the stroke is drawn.</source>
          <target state="translated">O exemplo chama o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnInvalidated%2A&gt;</ph> método, que por sua vez chama o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawCore%2A&gt;</ph> onde o traço é desenhado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">Os dados de evento que descrevem a propriedade alterada, bem como valores novos e antigos.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Occurs when any <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando qualquer propriedade <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> é alterada.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>Allows derived classes to modify the default behavior of the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" /&gt;</ph> event.</source>
          <target state="translated">Permite que classes derivadas modifiquem o comportamento padrão do evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
          <source>When overriding this method in a derived class, call the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir esse método em uma classe derivada, chame o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A&gt;</ph> método da classe base, de modo que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.PropertyDataChanged">
          <source>Occurs when the custom properties on a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object changes.</source>
          <target state="translated">Ocorre quando as propriedades personalizadas em um objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> são alteradas.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.PropertyDataChanged">
          <source>The following example demonstrates how to add a handler for this event.</source>
          <target state="translated">O exemplo a seguir demonstra como adicionar um manipulador para esse evento.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)">
          <source>The unique identifier for the property.</source>
          <target state="translated">O identificador exclusivo para a propriedade.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)">
          <source>Deletes a custom property from the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> object.</source>
          <target state="translated">Exclui uma propriedade personalizada do objeto <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)">
          <source>The following example demonstrates how to delete a custom property from a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como excluir uma propriedade personalizada de um <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>Returns the stylus points of the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">Retorna os pontos da caneta do <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> that contains the stylus points that represent the current <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph> que contém os pontos de caneta que representam atual <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>To get the stylus points that are used when the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, use the <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> method.</source>
          <target state="translated">Para obter os pontos de caneta que são usadas quando o <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> propriedade no <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.DrawingAttributes%2A&gt;</ph> está definida como <ph id="ph3">`true`</ph>, usar o <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property must have at least one <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> in it.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> atribuído para o <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade deve ter pelo menos um <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> nele.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>If you try to assign an empty <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, or remove all the <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objects from <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, an exception occurs.</source>
          <target state="translated">Se você tentar atribuir vazio <ph id="ph1">&lt;xref:System.Windows.Input.StylusPointCollection&gt;</ph> para <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, ou remova todos os <ph id="ph3">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> objetos de <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph>, ocorre uma exceção.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>The following example is part of an overridden <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> that draws a circle at each <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir faz parte de uma substituição <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> que desenha um círculo em cada <ph id="ph2">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> is used to get the stylus points.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A&gt;</ph> está definida como <ph id="ph2">`true`</ph>, o <ph id="ph3">&lt;xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A&gt;</ph> é usado para obter os pontos de caneta.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Ink.Stroke.StylusPoints">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> property is used.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPoints%2A&gt;</ph> propriedade é usada.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.StylusPointsChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> property changes.</source>
          <target state="translated">Ocorre quando a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> muda.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.StylusPointsChanged">
          <source>The following example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsChanged&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir demonstra como tratar o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="E:System.Windows.Ink.Stroke.StylusPointsReplaced">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> property is assigned a new <ph id="ph2">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph>.</source>
          <target state="translated">Ocorre quando a propriedade <ph id="ph1">&lt;see cref="P:System.Windows.Ink.Stroke.StylusPoints" /&gt;</ph> recebe uma nova <ph id="ph2">&lt;see cref="T:System.Windows.Input.StylusPointCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Ink.Stroke.StylusPointsReplaced">
          <source>The following example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsReplaced&gt;</ph> event.</source>
          <target state="translated">O exemplo a seguir demonstra como tratar o <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke.StylusPointsReplaced&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> object defining the transformation.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> que define a transformação.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to apply the transformation to the tip of the stylus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para aplicar a transformação à ponta da caneta; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>Performs a transformation based upon the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> object.</source>
          <target state="translated">Executa uma transformação com base no objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> object represents a 3x3 matrix used for transformations in two-dimensional space.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> objeto representa uma matriz de 3x3 usada para transformações no espaço bidimensional.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>Each point of the Stroke object is transformed by the supplied Matrix.</source>
          <target state="translated">Cada ponto do objeto traço é transformado pela matriz fornecida.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.</source>
          <target state="translated">Por exemplo se o valor de Point.X original for 100, o valor original de Point.Y é 55 e a transformação Matrix.Scale (0,5, 0,5), o novo valor de Point.X é 50 e o novo valor de Point.Y é 27,5.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)">
          <source>The following example demonstrates how to transform a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como transformar uma <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objeto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>