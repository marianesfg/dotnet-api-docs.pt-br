<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XContainer.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5975ff3e595a7e42b32687e50bd64d6eefc73e39b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">975ff3e595a7e42b32687e50bd64d6eefc73e39b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Represents a node that can contain other nodes.</source>
          <target state="translated">Representa um nó que pode conter outros nós.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This class provides functionality such as finding the next or previous sibling node, or enumerating the direct children of a node.</source>
          <target state="translated">Essa classe fornece funcionalidades como localizar o nó irmão anterior ou seguinte, ou enumerar os filhos diretos de um nó.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The two classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph> are <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">As duas classes que derivam de <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph> são <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> e <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Adds the specified content as children to this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Adiciona o conteúdo especificado como filhos deste <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">Este método adiciona o novo conteúdo após o conteúdo existente do <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to add the results of a query to one of them.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML e, em seguida, usa esse método para adicionar os resultados de uma consulta para um deles.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>A content object containing simple content or a collection of content objects to be added.</source>
          <target state="translated">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo a ser adicionada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>Adds the specified content as children of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Adiciona o conteúdo especificado como filhos deste <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">Este método adiciona o novo conteúdo após o conteúdo existente do <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>The following example creates two XML trees, and then uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to one of them.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML e, em seguida, usa esse método para adicionar um <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objeto para um deles.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">Ele também adiciona os resultados de uma <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> consulta para a árvore XML.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Uma lista de parâmetros de objetos de conteúdo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>Adds the specified content as children of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Adiciona o conteúdo especificado como filhos deste <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This method adds the new content after the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">Este método adiciona o novo conteúdo após o conteúdo existente do <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>The following example creates two XML trees, uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object to one of them.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML, usa esse método para adicionar um <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objeto para um deles.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">Ele também adiciona os resultados de uma <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> consulta para a árvore XML.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Add(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">Adiciona o conteúdo especificado como os primeiros filhos desse documento ou elemento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">Este método adiciona o novo conteúdo antes do conteúdo existente do <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to add the results of a query to one of them.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML e, em seguida, usa esse método para adicionar os resultados de uma consulta para um deles.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>A content object containing simple content or a collection of content objects to be added.</source>
          <target state="translated">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo a ser adicionada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">Adiciona o conteúdo especificado como os primeiros filhos desse documento ou elemento.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">Este método adiciona o novo conteúdo antes do conteúdo existente do <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>The following example creates two XML trees, uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first element to one of them.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML, usa esse método para adicionar um <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objeto como o primeiro elemento em um deles.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">Ele também adiciona os resultados de uma <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> consulta para a árvore XML.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Uma lista de parâmetros de objetos de conteúdo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>Adds the specified content as the first children of this document or element.</source>
          <target state="translated">Adiciona o conteúdo especificado como os primeiros filhos desse documento ou elemento.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This method adds the new content before the existing content of the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</source>
          <target state="translated">Este método adiciona o novo conteúdo antes do conteúdo existente do <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>The following example creates two XML trees, and uses this method to add an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> object as the first element to one of them.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML e usa esse método para adicionar um <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> objeto como o primeiro elemento em um deles.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>It also adds the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query to the XML tree.</source>
          <target state="translated">Ele também adiciona os resultados de uma <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> consulta para a árvore XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
          <source>The parent is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O pai é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that can be used to add nodes to the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que pode ser usado para adicionar nós ao <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that is ready to have content written to it.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> que está pronto para receber a gravação de conteúdo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>While serializing, namespace prefixes are inferred from the namespace attributes in the XML tree.</source>
          <target state="translated">Durante a serialização, prefixos de namespace são inferidos dos atributos do namespace na árvore XML.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>trabalhando com Namespaces XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>You can use this method to perform an XSLT transformation.</source>
          <target state="translated">Você pode usar esse método para executar uma transformação XSLT.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>You can create an XML tree, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> from the XML tree, create a new document, and create a <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.</source>
          <target state="translated">Você pode criar uma árvore XML, criar um <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> na árvore de XML, criar um novo documento e criar um <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> que gravará no novo documento.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>Then, you can invoke the XSLT transformation, passing the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transform.</source>
          <target state="translated">Em seguida, você pode chamar a transformação XSLT, passando o <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> para a transformação.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</source>
          <target state="translated">Depois que a transformação for concluída com êxito, a nova árvore XML será preenchida com os resultados da transformação.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.CreateWriter">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>Returns a collection of the descendant nodes for this document or element, in document order.</source>
          <target state="translated">Retorna uma coleção dos nós descendentes desse documento ou elemento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the descendant nodes of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém os nós descendentes do <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>Note that attributes are not considered to be nodes in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, so they will not be part of the collection that is returned by this method.</source>
          <target state="translated">Observe que os atributos não são considerados para ser nós em <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, portanto, eles não farão parte da coleção que é retornada por este método.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>The following example creates an XML tree, and then iterates through the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.DescendantNodes%2A&gt;</ph> axis.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML e, em seguida, itera por meio de <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.DescendantNodes%2A&gt;</ph> eixo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.DescendantNodes">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Returns a collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">Retorna uma coleção dos elementos descendentes desse documento ou elemento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>Returns a collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">Retorna uma coleção dos elementos descendentes desse documento ou elemento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the descendant elements of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém os elementos descendentes do <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>Note that this method will not return itself in the resulting <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Observe que esse método não retornará próprio resultante <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>See <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A&gt;</ph> if you need to include the current <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> in the results.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.DescendantsAndSelf%2A&gt;</ph> se você precisa incluir atual <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> nos resultados.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>The following example creates an XML tree, and then uses this axis method to retrieve the descendants.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML e, em seguida, usa esse método de eixo para recuperar os descendentes.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the descendant elements for this document or element, in document order.</source>
          <target state="translated">Retorna uma coleção filtrada dos elementos descendentes desse documento ou elemento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the descendant elements of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that match the specified <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém os elementos descendentes do <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> que correspondem ao <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The following example prints all descendants of an element.</source>
          <target state="translated">O exemplo a seguir imprime todos os descendentes de um elemento.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Este é o mesmo exemplo, mas nesse caso, o XML é em um namespace.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>trabalhando com Namespaces XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Gets the first (in document order) child element with the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Obtém o primeiro elemento filho (na ordem de documentos) com o <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that matches the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que corresponde ao <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Returns <ph id="ph1">`null`</ph> if there is no element with the specified name.</source>
          <target state="translated">Retorna <ph id="ph1">`null`</ph> se não houver nenhum elemento com o nome especificado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Some axis methods return collections of elements or attributes.</source>
          <target state="translated">Alguns métodos de eixo retornam coleções de elementos ou atributos.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This method returns only a single element.</source>
          <target state="translated">Esse método retorna um único elemento.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This method returns <ph id="ph1">`null`</ph> if the element with the specified name is not found.</source>
          <target state="translated">Este método retorna <ph id="ph1">`null`</ph> se o elemento com o nome especificado não foi encontrado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>All of the methods that allow you to construct elements (the constructor of <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph>, and so on) accept <ph id="ph3">`null`</ph> as a valid argument.</source>
          <target state="translated">Todos os métodos que permitem que você construa elementos (construtor de <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;</ph>, e assim por diante) aceitar <ph id="ph3">`null`</ph> como um argumento válido.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This allows you to use a convenient idiom: you can call this method as part of functional construction, and the element is added to the XML tree being constructed if and only if the element exists in the source tree.</source>
          <target state="translated">Isso permite que você use um idioma conveniente: você pode chamar esse método como parte da construção funcional, e o elemento é adicionado à árvore XML que está sendo construído se e somente se o elemento existir na árvore de origem.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following example shows this idiom.</source>
          <target state="translated">O exemplo a seguir mostra esse idioma.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In contrast to <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>, this method is not an axis method.</source>
          <target state="translated">Em comparação com <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</ph>, esse método não é um método do eixo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>It does not use deferred execution; it simply returns an element when called.</source>
          <target state="translated">Não usar execução adiada; ele simplesmente retorna um elemento quando chamado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">O exemplo a seguir mostra dois usos desse método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In one case, the method finds the element in <ph id="ph1">`srcTree`</ph>.</source>
          <target state="translated">Em um caso, o método localiza o elemento <ph id="ph1">`srcTree`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>In the second case, the method does not find the element in the source tree, no element is added to <ph id="ph1">`xmlTree`</ph>, and no exception is thrown.</source>
          <target state="translated">No segundo caso, o método não localizar o elemento na árvore de origem, nenhum elemento será adicionado ao <ph id="ph1">`xmlTree`</ph>, e nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>Note that the Visual Basic example uses the child XML property.</source>
          <target state="translated">Observe que o exemplo do Visual Basic usa o propriedade XML filho.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>It is also allowable to use the <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> method directly in Visual Basic.</source>
          <target state="translated">Também é permitido usar o <ph id="ph1">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;</ph> método diretamente no Visual Basic.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Este é o mesmo exemplo, mas nesse caso, o XML é em um namespace.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>trabalhando com Namespaces XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Returns a collection of the child elements of this element or document, in document order.</source>
          <target state="translated">Retorna uma coleção dos elementos filho desse elemento ou documento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>Returns a collection of the child elements of this element or document, in document order.</source>
          <target state="translated">Retorna uma coleção dos elementos filho desse elemento ou documento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the child elements of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém os elementos filho deste <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, na ordem de documento.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>The following example creates an XML tree, and then selects some elements using this axis method.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML e, em seguida, seleciona alguns elementos usando esse método de eixo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Este é o mesmo exemplo, mas nesse caso, o XML é em um namespace.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>trabalhando com Namespaces XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the child elements of this element or document, in document order.</source>
          <target state="translated">Retorna uma coleção filtrada dos elementos filho desse elemento ou documento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">Somente os elementos que têm um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente são incluídos na coleção.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> containing the children of the <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that have a matching <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>, in document order.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> que contém os filhos do <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, que têm um <ph id="ph4">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> correspondente, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The following example creates an XML tree, and then selects several child elements using this axis method.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML e, em seguida, seleciona vários elementos filho usando esse método de eixo.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>The following is the same example, but in this case the XML is in a namespace.</source>
          <target state="translated">Este é o mesmo exemplo, mas nesse caso, o XML é em um namespace.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>trabalhando com Namespaces XML<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>Get the first child node of this node.</source>
          <target state="translated">Obtém o primeiro nó filho desse nó.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the first child node of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém o primeiro nó filho do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>The following example creates an element that contains child elements.</source>
          <target state="translated">O exemplo a seguir cria um elemento que contém os elementos filho.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>It then gets the first child node of the parent element.</source>
          <target state="translated">Em seguida, obtém o primeiro nó filho do elemento pai.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.FirstNode">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>Get the last child node of this node.</source>
          <target state="translated">Obtém o último nó filho desse nó.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the last child node of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém o último nó filho do <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>The following example creates an element that contains child elements.</source>
          <target state="translated">O exemplo a seguir cria um elemento que contém os elementos filho.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>It then gets the last child node of the parent element.</source>
          <target state="translated">Em seguida, obtém o último nó filho do elemento pai.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XContainer.LastNode">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>Returns a collection of the child nodes of this element or document, in document order.</source>
          <target state="translated">Retorna uma coleção de nós filhos deste elemento ou documento, na ordem do documento.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> containing the contents of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, in document order.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> que contém o conteúdo desse <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>, na ordem de documento.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>Note that the content does not include attributes.</source>
          <target state="translated">Observe que o conteúdo não incluir atributos.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, attributes are not considered to be nodes of the tree.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, atributos não são considerados ser nós da árvore.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>They are name/value pairs associated with an element.</source>
          <target state="translated">Eles são pares de nome/valor associados a um elemento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This method uses deferred execution.</source>
          <target state="translated">Este método utiliza execução adiada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>The following example creates an XML tree with a variety of types of nodes.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML com uma variedade de tipos de nós.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>It then queries this axis method to enumerate and print the nodes.</source>
          <target state="translated">Ele consulta, em seguida, esse método de eixo para enumerar e imprimir os nós.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>The following example creates an XML tree that contains a variety of types of nodes.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML que contém uma variedade de tipos de nós.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>It then enumerates through portions of the tree, printing the node types.</source>
          <target state="translated">Em seguida, enumera por meio de partes da árvore de impressão os tipos de nós.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.Nodes">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>Removes the child nodes from this document or element.</source>
          <target state="translated">Remove os nós filho desse documento ou elemento.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>If you call this method on an element that contains attributes, this method will not remove the attributes.</source>
          <target state="translated">Se você chamar esse método em um elemento que contém atributos, esse método não removerá os atributos.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>To remove the attributes of an element, use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAttributes%2A&gt;</ph>.</source>
          <target state="translated">Para remover os atributos de um elemento, use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.RemoveAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> method has related functionality.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A&gt;</ph> método tem funcionalidade relacionada.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>It removes the child nodes of every node in a collection.</source>
          <target state="translated">Remove os nós filho de cada nó em uma coleção.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>The following example creates an XML tree that contains some child nodes.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML que contém alguns nós filho.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>It then calls this method to remove the child nodes.</source>
          <target state="translated">Depois, ele chama esse método para remover os nós filho.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.RemoveNodes">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XContainer">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">Substitui os nós filho desse documento ou elemento pelo conteúdo especificado.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This method has snapshot semantics.</source>
          <target state="translated">Esse método tem semânticas de instantâneo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">Primeiro, ele cria uma cópia do conteúdo novo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">Em seguida, remove todos os nós filho deste nó.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">Por fim, ele adiciona o novo conteúdo como nós filhos.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">Isso significa que você pode substituir nós filho usando uma consulta nos próprios nós filhos.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>The following example creates two XML trees, and then uses this method to replace the contents of one of them with the results of a query.</source>
          <target state="translated">O exemplo a seguir cria duas árvores XML e, em seguida, usa esse método para substituir o conteúdo de um com os resultados de uma consulta.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XContainer">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>A content object containing simple content or a collection of content objects that replace the children nodes.</source>
          <target state="translated">Um objeto de conteúdo que contém o conteúdo simples ou uma coleção de objetos de conteúdo que substitui os nós filho.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">Substitui os nós filho desse documento ou elemento pelo conteúdo especificado.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This method has snapshot semantics.</source>
          <target state="translated">Esse método tem semânticas de instantâneo.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">Primeiro, ele cria uma cópia do conteúdo novo.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">Em seguida, remove todos os nós filho deste nó.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">Por fim, ele adiciona o novo conteúdo como nós filhos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">Isso significa que você pode substituir nós filho usando uma consulta nos próprios nós filhos.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>The following example creates an XML tree that contains children nodes.</source>
          <target state="translated">O exemplo a seguir cria uma árvore XML que contém nós filhos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>It then replaces all of the children nodes with a single element.</source>
          <target state="translated">Em seguida, substitui a todos os nós filhos de um único elemento.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>To see an example of replacing the children nodes with the results of a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> query, see <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.ReplaceNodes%2A&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo de substituição de nós filhos com os resultados de uma <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> de consulta, consulte <ph id="ph2">&lt;xref:System.Xml.Linq.XContainer.ReplaceNodes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>A parameter list of content objects.</source>
          <target state="translated">Uma lista de parâmetros de objetos de conteúdo.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>Replaces the children nodes of this document or element with the specified content.</source>
          <target state="translated">Substitui os nós filho desse documento ou elemento pelo conteúdo especificado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>For details about the valid content that can be passed to this function, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Para obter detalhes sobre o conteúdo válido que pode ser passado para esta função, consulte <bpt id="p1">[</bpt>conteúdo válido de XElement e XDocument objetos<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Esse método gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This method has snapshot semantics.</source>
          <target state="translated">Esse método tem semânticas de instantâneo.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It first creates a copy of the new content.</source>
          <target state="translated">Primeiro, ele cria uma cópia do conteúdo novo.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It then removes all children nodes of this node.</source>
          <target state="translated">Em seguida, remove todos os nós filho deste nó.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>Finally, it adds the new content as children nodes.</source>
          <target state="translated">Por fim, ele adiciona o novo conteúdo como nós filhos.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This means that you can replace children nodes using a query on the children nodes themselves.</source>
          <target state="translated">Isso significa que você pode substituir nós filho usando uma consulta nos próprios nós filhos.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>The following example creates a dictionary and an XML tree.</source>
          <target state="translated">O exemplo a seguir cria um dicionário e uma árvore XML.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>It then queries the dictionary, projects the results to an <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, and replaces the contents of the XML tree with the results of the query.</source>
          <target state="translated">Em seguida, consulta o dicionário, projeta os resultados para um <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> de <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>e substitui o conteúdo da árvore XML com os resultados da consulta.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>