<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XComment.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50fc0b2083b9458cff3e6453ea367a679830a8925.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fc0b2083b9458cff3e6453ea367a679830a8925</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XComment">
          <source>Represents an XML comment.</source>
          <target state="translated">Representa um comentário XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XComment">
          <source>You can add an XML comment as a child node of an element.</source>
          <target state="translated">Você pode adicionar um comentário XML como um nó filho de um elemento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XComment">
          <source>You can also add an XML comment to an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> as a sibling of the root element node.</source>
          <target state="translated">Você também pode adicionar um comentário XML para uma <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> como um irmão do nó de elemento raiz.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XComment">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>A string that contains the contents of the new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> object.</source>
          <target state="translated">Uma cadeia de caracteres que contém o conteúdo do novo objeto <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> class with the specified string content.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> com o conteúdo de cadeia de caracteres especificada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>The following example creates an element that contains a comment as a child node.</source>
          <target state="translated">O exemplo a seguir cria um elemento que contém um comentário como um nó filho.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> node to copy from.</source>
          <target state="translated">O nó <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> em que a cópia ocorrerá.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> class from an existing comment node.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> com base em um nó de comentário existente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">Este construtor é utilizado principalmente para fazer uma cópia profunda de uma árvore XML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
          <source>The <ph id="ph1">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Obtém o tipo de nó para este nó.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>The node type.</source>
          <target state="translated">O tipo de nó.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Comment" /&gt;</ph>.</source>
          <target state="translated">Para objetos <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XComment" /&gt;</ph>, esse valor é <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Comment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Como todas as classes que derivam da <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contêm um <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> propriedade, você pode escrever código que opera em coleções de subclasse concreta de <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">O tipo de nó de cada nó na coleção, em seguida, pode testar seu código.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>The following example creates a comment node and prints its node type.</source>
          <target state="translated">O exemplo a seguir cria um nó de comentário e imprime o tipo de nó.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XComment.Value">
          <source>Gets or sets the string value of this comment.</source>
          <target state="translated">Obtém ou define o valor de cadeia de caracteres deste comentário.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the string value of this comment.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o valor de cadeia de caracteres deste comentário.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>Unlike <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, you cannot retrieve the contents of a comment by casting it to a string.</source>
          <target state="translated">Ao contrário de <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, você não pode recuperar o conteúdo de um comentário, convertê-la em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>Instead, you must use this property to retrieve the contents.</source>
          <target state="translated">Em vez disso, você deve usar essa propriedade para recuperar o conteúdo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">Configuração para essa propriedade gerará o <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>The following example creates a comment node.</source>
          <target state="translated">O exemplo a seguir cria um nó de comentário.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>It then retrieves the contents of the comment node.</source>
          <target state="translated">Em seguida, ele recupera o conteúdo do nó de comentário.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XComment.Value">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XComment.Value">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> no qual esse método gravará.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
          <source>Write this comment to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Gravar este comentário em um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Esse método é usado principalmente internamente pelos métodos gravar uma árvore XML para uma <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>