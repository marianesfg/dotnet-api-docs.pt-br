<Type Name="JournalEntry" FullName="System.Windows.Navigation.JournalEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2169bd9acae79d9baf2713aea991d3c63cac7a4" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32693184" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JournalEntry : System.Windows.DependencyObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JournalEntry extends System.Windows.DependencyObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.JournalEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class JournalEntry&#xA;Inherits DependencyObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JournalEntry : System::Windows::DependencyObject, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa uma entrada no histórico de navegação, para frente ou para trás.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Presentation Foundation implementa um serviço de histórico de navegação que armazena uma entrada para cada parte do conteúdo que foi anteriormente navegou para, assim como o histórico de navegação no [!INCLUDE[TLA#tla_ie](~/includes/tlasharptla-ie-md.md)]. Histórico de navegação consiste em duas pilhas, uma que lembra o histórico de navegação e outra que lembra o histórico de navegação de avanço.  
  
 Uma entrada para o item atual é adicionada para fazer o histórico de navegação quando ocorre uma navegação progressiva. Isso ocorre nas seguintes situações:  
  
-   O `Navigate` método é chamado (<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, <xref:System.Windows.Navigation.NavigationWindow.Navigate%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Frame.Navigate%2A?displayProperty=nameWithType>).  
  
-   O `GoForward` método é chamado (<xref:System.Windows.Navigation.NavigationService.GoForward%2A?displayProperty=nameWithType>, <xref:System.Windows.Navigation.NavigationWindow.GoForward%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Frame.GoForward%2A?displayProperty=nameWithType>).  
  
-   O botão encaminhar na barra de navegação da interface do usuário que é exibido no navegador atual ([!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
 Da mesma forma, uma entrada para o item atual é adicionada ao histórico de Navegação progressiva antes que ocorra uma navegação regressiva, que ocorre quando:  
  
-   O `GoBack` método é chamado (<xref:System.Windows.Navigation.NavigationService.GoBack%2A?displayProperty=nameWithType>, <xref:System.Windows.Navigation.NavigationWindow.GoBack%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Frame.GoBack%2A?displayProperty=nameWithType>).  
  
-   O botão Voltar na barra de navegação da interface do usuário que é exibido no navegador atual ([!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
 Cada entrada em volta e o histórico de navegação de avanço são uma ocorrência da <xref:System.Windows.Navigation.JournalEntry> classe.  
  
 Cada <xref:System.Windows.Navigation.JournalEntry> objeto encapsula informações sobre uma navegação específica, incluindo um nome para a entrada (<xref:System.Windows.Navigation.JournalEntry.Name%2A>), se a entrada é mantida ativa (<xref:System.Windows.Navigation.JournalEntry.KeepAlive%2A>) e o [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] para o conteúdo que é direcionado (<xref:System.Windows.Navigation.JournalEntry.Source%2A>).  
  
 Você pode recuperar todos os <xref:System.Windows.Navigation.JournalEntry> objetos no histórico de navegação, enumerando a <xref:System.Windows.Navigation.NavigationWindow.BackStack%2A?displayProperty=nameWithType> ou <xref:System.Windows.Controls.Frame.BackStack%2A?displayProperty=nameWithType> propriedades. Para o histórico de navegação de avanço, você pode recuperar todos os <xref:System.Windows.Navigation.JournalEntry> objetos enumerando a <xref:System.Windows.Navigation.NavigationWindow.ForwardStack%2A?displayProperty=nameWithType> ou <xref:System.Windows.Controls.Frame.ForwardStack%2A?displayProperty=nameWithType> propriedades.  
  
 Se você precisar remover o mais recente <xref:System.Windows.Navigation.JournalEntry> do objeto do histórico de navegação, para evitar a navegação a ele, por exemplo, você pode chamar o `RemoveBackEntry` método (<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=nameWithType>, <xref:System.Windows.Navigation.NavigationWindow.RemoveBackEntry%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.Frame.RemoveBackEntry%2A?displayProperty=nameWithType>), que remove o <xref:System.Windows.Navigation.JournalEntry> de objeto e retorna uma referência a ele.  
  
 Não é possível adicionar <xref:System.Windows.Navigation.JournalEntry> objetos ao histórico de navegação, no entanto, porque não é possível instanciar nem derivam <xref:System.Windows.Navigation.JournalEntry>, e porque nenhum tipo implementa um membro para fazer isso. No entanto, você pode adicionar personalizado <xref:System.Windows.Navigation.CustomContentState> objetos para fazer o histórico de navegação, chamando o `AddBackEntry` método (<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A>, <xref:System.Windows.Controls.Frame.AddBackEntry%2A>); <xref:System.Windows.Navigation.NavigationService> adiciona o <xref:System.Windows.Navigation.CustomContentState> objeto para um internamente criados <xref:System.Windows.Navigation.JournalEntry> objeto, que é adicionado ao histórico de navegação.  
  
   
  
## Examples  
 O exemplo a seguir mostra como recuperar o mais recente <xref:System.Windows.Navigation.JournalEntry> objeto da pilha de navegação para obter o <xref:System.Windows.Navigation.JournalEntry.Name%2A> e <xref:System.Windows.Navigation.JournalEntry.Source%2A> valores de propriedade.  
  
 [!code-csharp[JournalEntrySnippets#GetJournalEntryCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/DatePage.xaml.cs#getjournalentrycodebehind)]
 [!code-vb[JournalEntrySnippets#GetJournalEntryCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/JournalEntrySnippets/visualbasic/datepage.xaml.vb#getjournalentrycodebehind)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JournalEntry (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JournalEntry(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">As informações de serialização.</param>
        <param name="context">O contexto de streaming.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Navigation.JournalEntry" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomContentState">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.CustomContentState CustomContentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.CustomContentState CustomContentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.CustomContentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomContentState As CustomContentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::CustomContentState ^ CustomContentState { System::Windows::Navigation::CustomContentState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.CustomContentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.Windows.Navigation.CustomContentState" /> que é associado com essa entrada de diário.</summary>
        <value>O <see cref="T:System.Windows.Navigation.CustomContentState" /> objeto que está associado esta entrada de diário. Se não houver um associado, <see langword="null" /> será retornado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeepAlive">
      <MemberSignature Language="C#" Value="public static bool GetKeepAlive (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetKeepAlive(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetKeepAlive(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">O elemento do qual obter o valor da propriedade anexada.</param>
        <summary>Retorna a propriedade anexada <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> da entrada de diário para o elemento especificado.</summary>
        <returns>O valor da propriedade anexada <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> da entrada de diário para o elemento especificado.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">O elemento do qual obter o valor da propriedade anexada.</param>
        <summary>Obtém a propriedade anexada <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> da entrada de diário para o elemento especificado.</summary>
        <returns>A propriedade anexada <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> da entrada de diário para o elemento especificado.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Os dados necessários para serializar o objeto de destino.</param>
        <param name="context">O contexto de streaming.</param>
        <summary>Chamado quando este objeto é serializado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="ILAsm" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="see GetKeepAlive, and SetKeepAlive" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAliveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeepAliveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeepAliveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeepAliveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeepAliveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da entrada de diário.</summary>
        <value>O nome da entrada do diário.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conteúdo hospedado por <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, ou [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)], exibir a interface do usuário que permite aos usuários navegar por meio de volta e histórico de navegação de avanço da navegação. O texto que é exibido para cada entrada no histórico de navegação depende de qual das seguintes partes dos dados são usadas para criar automaticamente um nome de entrada de histórico de navegação, em ordem de precedência:  
  
-   O anexo <xref:System.Windows.Navigation.JournalEntry.Name%2A> atributo.  
  
-   <xref:System.Windows.Controls.Page.Title%2A>.  
  
-   <xref:System.Windows.Controls.Page.WindowTitle%2A> e o [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] para a página atual  
  
-   O [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] para a página atual.  
  
<a name="xamlAttributeUsage_Name"></a>   
## <a name="xaml-attribute-usage"></a>Uso do Atributo XAML  
 \<*object* **JournalEntry.Name**="<xref:System.String>"/>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Navigation.JournalEntry.NameProperty>|  
|Propriedades de metadados é definido como `true`|Nenhum|  
  
   
  
## Examples  
 O exemplo a seguir mostra como definir o <xref:System.Windows.Navigation.JournalEntry.Name%2A> propriedade para um <xref:System.Windows.Controls.Page> de marcação, com um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] anexado o uso de propriedades.  
  
 [!code-xaml[JournalEntrySnippets#JENameMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/JournalEntrySnippets/CSharp/JENamePage.xaml#jenamemarkup)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeepAlive">
      <MemberSignature Language="C#" Value="public static void SetKeepAlive (System.Windows.DependencyObject dependencyObject, bool keepAlive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKeepAlive(class System.Windows.DependencyObject dependencyObject, bool keepAlive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetKeepAlive(System::Windows::DependencyObject ^ dependencyObject, bool keepAlive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="keepAlive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">O elemento no qual definir o valor da propriedade anexada.</param>
        <param name="keepAlive">
          <see langword="true" /> para manter a entrada de diário na memória; caso contrário, <see langword="false" />.</param>
        <summary>Define a propriedade anexada <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> do elemento especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public static void SetName (System.Windows.DependencyObject dependencyObject, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetName(class System.Windows.DependencyObject dependencyObject, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetName(System::Windows::DependencyObject ^ dependencyObject, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">O elemento no qual definir o valor da propriedade anexada.</param>
        <param name="name">O nome a ser atribuído à propriedade anexada.</param>
        <summary>Define a propriedade anexada <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> do elemento especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Windows.Navigation.JournalEntry.NameProperty" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.JournalEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o URI do conteúdo para o qual foi navegado.</summary>
        <value>O URI do conteúdo que foi acessado, ou <see langword="null" /> se nenhum URI é associado à entrada.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>