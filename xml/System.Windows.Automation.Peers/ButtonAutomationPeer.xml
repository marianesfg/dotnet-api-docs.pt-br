<Type Name="ButtonAutomationPeer" FullName="System.Windows.Automation.Peers.ButtonAutomationPeer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e833e223b0f4497ded32b13ec01f2c9b5b226d9f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39932019" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonAutomationPeer : System.Windows.Automation.Peers.ButtonBaseAutomationPeer, System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonAutomationPeer extends System.Windows.Automation.Peers.ButtonBaseAutomationPeer implements class System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonAutomationPeer&#xA;Inherits ButtonBaseAutomationPeer&#xA;Implements IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonAutomationPeer : System::Windows::Automation::Peers::ButtonBaseAutomationPeer, System::Windows::Automation::Provider::IInvokeProvider" />
  <TypeSignature Language="F#" Value="type ButtonAutomationPeer = class&#xA;    inherit ButtonBaseAutomationPeer&#xA;    interface IInvokeProvider" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Peers.ButtonBaseAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IInvokeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Expõe tipos <see cref="T:System.Windows.Controls.Button" /> à Automação de Interface do Usuário.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonAutomationPeer (System.Windows.Controls.Button owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.Button owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Button)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonAutomationPeer(System::Windows::Controls::Button ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.Peers.ButtonAutomationPeer : System.Windows.Controls.Button -&gt; System.Windows.Automation.Peers.ButtonAutomationPeer" Usage="new System.Windows.Automation.Peers.ButtonAutomationPeer owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Controls.Button" />
      </Parameters>
      <Docs>
        <param name="owner">O elemento associado a este par de automação.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlTypeCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAutomationControlTypeCore () As AutomationControlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationControlType GetAutomationControlTypeCore();" />
      <MemberSignature Language="F#" Value="override this.GetAutomationControlTypeCore : unit -&gt; System.Windows.Automation.Peers.AutomationControlType" Usage="buttonAutomationPeer.GetAutomationControlTypeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o tipo de controle do elemento que está associado ao par de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <returns>O valor de enumeração <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected override string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetClassNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetClassNameCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetClassNameCore();" />
      <MemberSignature Language="F#" Value="override this.GetClassNameCore : unit -&gt; string" Usage="buttonAutomationPeer.GetClassNameCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o nome do controle que está associado a esse par de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</summary>
        <returns>Uma cadeia de caracteres que contém “Botão”.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public override object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetPattern(System::Windows::Automation::Peers::PatternInterface patternInterface);" />
      <MemberSignature Language="F#" Value="override this.GetPattern : System.Windows.Automation.Peers.PatternInterface -&gt; obj" Usage="buttonAutomationPeer.GetPattern patternInterface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">Um valor na enumeração.</param>
        <summary>Obtém o objeto que dá suporte ao padrão de controle especificado do elemento que está associado a esse par de automação.</summary>
        <returns>Se <paramref name="patternInterface" /> for <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />, esse método retorna um ponteiro <see langword="this" />; caso contrário, esse método retornará <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <MemberSignature Language="C#" Value="void IInvokeProvider.Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IInvokeProvider.Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke () Implements IInvokeProvider.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.IInvokeProvider.Invoke() = System::Windows::Automation::Provider::IInvokeProvider::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.IInvokeProvider.Invoke</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Este tipo ou membro dá suporte à infraestrutura [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] e não se destina a ser usado diretamente do código.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>