<Type Name="IViewAutomationPeer" FullName="System.Windows.Automation.Peers.IViewAutomationPeer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f097eabb263c33fd270f1499d779b3b239fbe2fd" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37527587" /></Metadata><TypeSignature Language="C#" Value="public interface IViewAutomationPeer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IViewAutomationPeer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Peers.IViewAutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IViewAutomationPeer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IViewAutomationPeer" />
  <TypeSignature Language="F#" Value="type IViewAutomationPeer = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Permite que uma exibição personalizada de uma <see cref="T:System.Windows.Controls.ListView" /> que deriva de <see cref="T:System.Windows.Controls.ViewBase" /> implemente recursos de automação de par que sejam específicos à exibição personalizada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O código a seguir mostra uma exibição personalizada que implementa <xref:System.Windows.Automation.Peers.IViewAutomationPeer> em uma classe separada para lidar com um botão que aparece na parte superior do <xref:System.Windows.Controls.ListView> controle.  
  
 [!code-csharp[ListViewCustomView#IVAPCreate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/OneButtonHeaderView.cs#ivapcreate)]
 [!code-vb[ListViewCustomView#IVAPCreate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic/onebuttonheaderview.vb#ivapcreate)]  
[!code-csharp[ListViewCustomView#IVAP](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCustomView/CSharp/OneButtonHeaderView.cs#ivap)]
[!code-vb[ListViewCustomView#IVAP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCustomView/visualbasic/onebuttonheaderview.vb#ivap)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ViewBase" />
    <altmember cref="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)" />
  </Docs>
  <Members>
    <Member MemberName="CreateItemAutomationPeer">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Peers.ItemAutomationPeer CreateItemAutomationPeer(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.IViewAutomationPeer.CreateItemAutomationPeer(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateItemAutomationPeer (item As Object) As ItemAutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::ItemAutomationPeer ^ CreateItemAutomationPeer(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member CreateItemAutomationPeer : obj -&gt; System.Windows.Automation.Peers.ItemAutomationPeer" Usage="iViewAutomationPeer.CreateItemAutomationPeer item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.ItemAutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">O <see cref="T:System.Windows.Controls.ListViewItem" /> que está associado com a <see cref="T:System.Windows.Controls.ListView" /> que é usada por este <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</summary>
        <returns>A nova instância <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationControlType GetAutomationControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetAutomationControlType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAutomationControlType () As AutomationControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::AutomationControlType GetAutomationControlType();" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationControlType : unit -&gt; System.Windows.Automation.Peers.AutomationControlType" Usage="iViewAutomationPeer.GetAutomationControlType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém o tipo de controle para o elemento que está associado a este <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />.</summary>
        <returns>Um valor na enumeração <see cref="T:System.Windows.Automation.Peers.AutomationControlType" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; GetChildren (System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Windows.Automation.Peers.AutomationPeer&gt; GetChildren(class System.Collections.Generic.List`1&lt;class System.Windows.Automation.Peers.AutomationPeer&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren (children As List(Of AutomationPeer)) As List(Of AutomationPeer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Windows::Automation::Peers::AutomationPeer ^&gt; ^ GetChildren(System::Collections::Generic::List&lt;System::Windows::Automation::Peers::AutomationPeer ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; -&gt; System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;" Usage="iViewAutomationPeer.GetChildren children" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;" />
      </Parameters>
      <Docs>
        <param name="children">Os pares de automação para os itens de lista.</param>
        <summary>Obtém a coleção de elementos filho imediatos do par [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] especificado.</summary>
        <returns>Os pares de automação de todos os itens no controle. Se a exibição contém elementos interativos ou informativos além dos itens de lista, os pares de automação desses elementos devem ser adicionados à lista.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPattern(System::Windows::Automation::Peers::PatternInterface patternInterface);" />
      <MemberSignature Language="F#" Value="abstract member GetPattern : System.Windows.Automation.Peers.PatternInterface -&gt; obj" Usage="iViewAutomationPeer.GetPattern patternInterface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">Um valor na enumeração.</param>
        <summary>Obtém o padrão de controle associado ao <paramref name="patternInterface" /> especificado.</summary>
        <returns>Retorna o objeto que implementa o padrão de controle. Se esse método retornar nulo, o valor retornado de <see cref="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> será usado.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
      </Docs>
    </Member>
    <Member MemberName="ItemsChanged">
      <MemberSignature Language="C#" Value="public void ItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="iViewAutomationPeer.ItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> que contém os dados do evento.</param>
        <summary>Chamado por <see cref="T:System.Windows.Controls.ListView" /> quando a coleção de itens é alterada.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
      </Docs>
    </Member>
    <Member MemberName="ViewDetached">
      <MemberSignature Language="C#" Value="public void ViewDetached ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ViewDetached() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached" />
      <MemberSignature Language="VB.NET" Value="Public Sub ViewDetached ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ViewDetached();" />
      <MemberSignature Language="F#" Value="abstract member ViewDetached : unit -&gt; unit" Usage="iViewAutomationPeer.ViewDetached " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chamado quando a exibição personalizada não é mais aplicada ao <see cref="T:System.Windows.Controls.ListView" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
      </Docs>
    </Member>
  </Members>
</Type>