<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MutexSecurity.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac532296db222ea6141fe27393ef3e6f899d0231f0f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32296db222ea6141fe27393ef3e6f899d0231f0f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Represents the Windows access control security for a named mutex.</source>
          <target state="translated">Representa a segurança do controle de acesso do Windows de um mutex nomeado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object specifies access rights for a named system mutex, and also specifies how access attempts are audited.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto Especifica direitos de acesso para um mutex do sistema nomeado e também especifica como as tentativas de acesso são auditadas.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Access rights to the mutex are expressed as rules, with each access rule represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> object.</source>
          <target state="translated">Direitos de acesso para o mutex são expressos como regras, com cada regra de acesso representado por um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Each auditing rule is represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> object.</source>
          <target state="translated">Cada regra de auditoria é representada por um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">Isso reflete o sistema de segurança de Windows subjacente, em que cada objeto protegível tem no máximo um controle lista de acesso discricionário (DACL) que controla o acesso para o objeto protegido e no máximo um sistema controle lista de acesso (SACL) que especifica que as tentativas de acesso são auditadas.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">A DACL e SACL são ordenados listas de entradas de controle de acesso (ACE) que especificam o acesso e auditoria para usuários e grupos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> object might represent more than one ACE.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> ou <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objeto pode representar mais de uma ACE.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object can represent a local mutex or a named system mutex.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto pode representar um mutex local ou um mutex do sistema nomeado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Windows access control security is meaningful only for named system mutexes.</source>
          <target state="translated">Segurança de controle de acesso do Windows é significativa apenas para o sistema nomeado mutexes.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>, e <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classes ocultar os detalhes de implementação de ACEs e ACLs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">Elas permitem que você ignore os diferentes tipos ACE dezessete e a complexidade de manter corretamente herança e propagação de direitos de acesso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>These objects are also designed to prevent the following common access control errors:</source>
          <target state="translated">Esses objetos também foram projetados para impedir que os seguintes erros comuns de controle de acesso:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Creating a security descriptor with a null DACL.</source>
          <target state="translated">Criando um descritor de segurança com uma DACL null.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">Uma referência nula para uma DACL permite que qualquer usuário adicionar regras de acesso a um objeto, potencialmente, criando um ataque de negação de serviço.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto sempre começa com uma DACL vazia, o que nega todo o acesso para todos os usuários.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Violating the canonical ordering of ACEs.</source>
          <target state="translated">Violando a ordem canônica de ACEs.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">Se a lista ACE na DACL não é mantida na ordem canônica, os usuários podem inadvertidamente receberá acesso para o objeto protegido.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">Por exemplo, os direitos de acesso negado sempre devem aparecer antes de direitos de acesso permitido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objects maintain the correct order internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objetos de mantém a ordem correta internamente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">Manipulando os sinalizadores de descritor de segurança, que devem estar sob controle do Gerenciador de recursos somente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Creating invalid combinations of ACE flags.</source>
          <target state="translated">Criando combinações inválidas de sinalizadores ACE.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Manipulating inherited ACEs.</source>
          <target state="translated">Manipulação de ACEs herdadas.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">Herança e propagação são manipulados pelo Gerenciador de recursos, em resposta a alterações feitas às regras de acesso e auditoria.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">Inserindo ACEs sentidas ACLs.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</source>
          <target state="translated">Os recursos somente os objetos de segurança do .NET não oferece suportados são perigosas atividades que devem ser evitadas, a maioria dos desenvolvedores de aplicativos, como o seguinte:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">Tarefas de nível inferior que são normalmente executadas pelo Gerenciador de recursos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">Adicionar ou remover entradas de controle de acesso de maneiras que não precisam manter a ordem canônica.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>To modify Windows access control security for a named mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Para modificar a segurança de controle de acesso do Windows para um mutex nomeado, use o <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> método para obter o <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Modify the security object by adding and removing rules, and then use the <ph id="ph1">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach it.</source>
          <target state="translated">Modificar o objeto de segurança, adicionando e removendo regras e, em seguida, usar o <ph id="ph1">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> método para recolocá-la.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object do not affect the access levels of the named mutex until you call the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named mutex.</source>
          <target state="translated">Alterações feitas em um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto não afetam os níveis de acesso do mutex nomeado até que você chamar o <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> método para atribuir o objeto de segurança alterado o mutex nomeado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>To copy access control security from one mutex to another, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object representing the access and audit rules for the first mutex, and then use the <ph id="ph3">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method, or a constructor that accepts a <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, to assign those rules to the second mutex.</source>
          <target state="translated">Para copiar a segurança de controle de acesso de um mutex para outro, use o <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> método para obter um <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto que representa as regras de acesso e auditoria para o mutex primeiro e, em seguida, use o <ph id="ph3">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> método ou um construtor que aceite um <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto atribuir essas regras para o segundo mutex.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to set access rules for a named mutex, and the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">Os usuários com um investimento em linguagem de definição de descritor de segurança (SDDL) podem usar o <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> método para definir regras de acesso para um mutex nomeado e o <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> método para obter uma cadeia de caracteres que representa as regras de acesso no formato SDDL.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This is not recommended for new development.</source>
          <target state="translated">Isso não é recomendado para novo desenvolvimento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Não há suporte para segurança em objetos de sincronização para o Windows 98 ou Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">O exemplo de código a seguir demonstra a separação entre <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regras e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> regras e exibe a combinação de direitos em regras compatíveis.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto adiciona regras de permissão e negação vários direitos para o usuário atual e exibe o par resultante de regras.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">O exemplo permite que novos direitos para o usuário atual e exibe o resultado mostra que novos direitos são mesclados com a existente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class with default values.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> com valores padrão.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto sempre começa com uma lista vazia de acesso discricionário (DACL), que nega todo o acesso para todos os usuários.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name of the system mutex whose access control security rules are to be retrieved.</source>
          <target state="translated">O nome do sistema mutex cujas regras de segurança de controle de acesso devem ser recuperadas.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>A combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> flags specifying the sections to retrieve.</source>
          <target state="translated">Uma combinação de sinalizadores <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> que especificam as seções a serem recuperadas.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class with the specified sections of the access control security rules from the system mutex with the specified name.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> com as seções especificadas das regras de segurança de controle de acesso do mutex do sistema com o nome especificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This constructor allows you to obtain the access control security for a named system mutex without first creating a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este construtor permite obter a segurança de controle de acesso para um mutex do sistema nomeado sem primeiro criar uma <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Caution must be exercised when working with named system objects.</source>
          <target state="translated">Deve ser tomado cuidado ao trabalhar com objetos de sistema nomeado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If there is a system object named <ph id="ph1">`name`</ph> that is not a mutex, its control access security might be retrieved.</source>
          <target state="translated">Se houver um objeto de sistema chamado <ph id="ph1">`name`</ph> que não é um mutex, a segurança de acesso de controle pode ser recuperada.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>There is no system object with the specified name.</source>
          <target state="translated">Não há nenhum objeto do sistema com o nome especificado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>Gets the enumeration that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent access rights.</source>
          <target state="translated">Obtém a enumeração que a classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> usa para representar os direitos de acesso.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> enumeration.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa a enumeração <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> classe substituição de <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> propriedade e retornar o tipo que eles usam para representar os direitos de acesso.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">Quando você trabalha com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de enumeração correto a ser usado com cada objeto de segurança.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> que identifica o usuário ou o grupo ao qual a regra se aplica.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the access rights to allow or deny, cast to an integer.</source>
          <target state="translated">Uma combinação bit a bit de valores <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> que especificam os direitos de acesso a serem permitidos ou negados, convertidos em um inteiro.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          <target state="translated">Sem utilidade para mutexes nomeados, porque eles não têm nenhuma hierarquia.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          <target state="translated">Sem utilidade para mutexes nomeados, porque eles não têm nenhuma hierarquia.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          <target state="translated">Sem utilidade para mutexes nomeados, porque eles não têm nenhuma hierarquia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> que especificam se os direitos são permitidos ou negados.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          <target state="translated">Cria uma nova regra de controle de acesso para o usuário especificado, com os direitos de acesso, o controle de acesso e os sinalizadores especificados.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> object representing the specified rights for the specified user.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> que representa os direitos especificados para o usuário especificado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> class.</source>
          <target state="translated">A maneira recomendada para criação de regras de controle de acesso é usar os construtores de <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</source>
          <target state="translated">Embora os sinalizadores de herança e propagação fazem sentidos para mutexes nomeado, ele ainda é possível especificá-los.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">Isso não é recomendável, pois ela desnecessariamente complica a manutenção de regras, por exemplo por interferir com a combinação de regras que seriam compatíveis.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> ou <ph id="ph4">&lt;paramref name="type" /&gt;</ph> especifica um valor inválido.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> é zero.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> não e do tipo <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nem de um tipo como <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> que pode ser convertido para o tipo <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent access rules.</source>
          <target state="translated">Obtém o tipo que a classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> usa para representar as regras de acesso.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa a classe <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rules.</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> classe substituição a <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> propriedade e retornar o tipo que eles usam para representar as regras de acesso.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">Quando você trabalha com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de regra de acesso corretas para usar com cada objeto de segurança.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The access control rule to add.</source>
          <target state="translated">A regra de controle de acesso a ser adicionada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for a matching access control rule with which the new rule can be merged.</source>
          <target state="translated">Pesquisa por uma regra de controle de acesso correspondente com a qual a nova regra pode ser mesclada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Se nenhum erro for encontrado, adiciona a nova regra.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A&gt;</ph> method searches for rules with the same user or group and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A&gt;</ph> método procura regras com o mesmo usuário ou grupo e o mesmo <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> como <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se nenhum for encontrado, <ph id="ph1">`rule`</ph> é adicionado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">Se uma regra de correspondência for encontrada, os direitos no <ph id="ph1">`rule`</ph> são mescladas com a regra existente.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">O exemplo de código a seguir demonstra a separação entre <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regras e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> regras e exibe a combinação de direitos em regras compatíveis.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto adiciona regras de permissão e negação vários direitos para o usuário atual e exibe o par resultante de regras.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">O exemplo permite que novos direitos para o usuário atual e exibe o resultado mostra que novos direitos são mesclados com a existente <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> cannot be mapped to a known identity.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> não pode ser mapeado para uma identidade conhecida.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The audit rule to add.</source>
          <target state="translated">A regra de auditoria a adicionar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The user specified by this rule determines the search.</source>
          <target state="translated">O usuário especificado por essa regra determina a pesquisa.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          <target state="translated">Pesquisa uma regra de auditoria com a qual a nova regra pode ser mesclada.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If none are found, adds the new rule.</source>
          <target state="translated">Se nenhum erro for encontrado, adiciona a nova regra.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A&gt;</ph> method searches for rules with the same user or group as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A&gt;</ph> método procura regras com o mesmo usuário ou grupo como <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se nenhum for encontrado, <ph id="ph1">`rule`</ph> é adicionado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">Se uma regra de correspondência for encontrada, os sinalizadores no <ph id="ph1">`rule`</ph> são mesclados para a regra existente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> que identifica o usuário ou o grupo ao qual a regra se aplica.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the access rights to audit, cast to an integer.</source>
          <target state="translated">Uma combinação bit a bit de valores <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> que especifica os direitos de acesso a serem auditados e convertidos em um inteiro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          <target state="translated">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specify whether to audit successful access, failed access, or both.</source>
          <target state="translated">Uma combinação bit a bit de valores <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> que especificam se deve-se auditar acesso com êxito, acesso com falha ou ambos.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          <target state="translated">Cria uma nova regra de auditoria, especificando o usuário ao qual a regra se aplica, os direitos de acesso para auditoria e o resultado que dispara a regra de auditoria.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> object representing the specified audit rule for the specified user.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> que representa a regra de auditoria para o usuário especificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The return type of the method is the base class, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, but the return value can be cast safely to the derived class.</source>
          <target state="translated">O tipo de retorno do método é a classe base, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, mas o valor retornado pode ser convertido com segurança para a classe derivada.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> class.</source>
          <target state="translated">A maneira recomendada para criar regras de auditoria é usar os construtores de <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</source>
          <target state="translated">Embora os sinalizadores de herança e propagação fazem sentidos para mutexes nomeado, ele ainda é possível especificá-los.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">Isso não é recomendável, pois ela desnecessariamente complica a manutenção de regras, por exemplo por interferir com a combinação de regras que seriam compatíveis.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> ou <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> especifica um valor inválido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> é zero.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> não e do tipo <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nem de um tipo como <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> que pode ser convertido para o tipo <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent audit rules.</source>
          <target state="translated">Obtém o tipo que a classe <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> usa para representar as regras de auditoria.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> class.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que representa a classe <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent audit rights.</source>
          <target state="translated">Classes que derivam de <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> classe substituição a <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> propriedade e retornar o tipo que eles usam para representar os direitos de auditoria.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">Quando você trabalha com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de regra de auditoria correto a ser usado com cada objeto de segurança.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> que especifica o usuário e <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Especifica os direitos a serem removidos da regra compatível, se encontrado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for an access control rule with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          <target state="translated">Procura uma regra de controle de acesso com o mesmo usuário e <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (permitir ou negar) como a regra especificada e com herança compatível e sinalizadores de propagação; se uma regra com essas características for encontrada, os direitos contidos na regra de acesso especificada serão removidos dela.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se uma regra compatível for encontrada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for a rule that has the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Atual <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> é pesquisada para uma regra que tem o mesmo usuário e o mesmo <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> valor como <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se nenhuma regra for encontrada, nenhuma ação é executada e o método retornará <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">Se as regras de correspondência for encontradas, seus sinalizadores de herança e compatibilidade são verificados quanto à compatibilidade com os sinalizadores especificados na <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se nenhuma regra compatível foi encontrada, nenhuma ação é executada e o método retornará <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se uma regra com sinalizadores compatíveis for encontrada, os direitos especificados em <ph id="ph1">`rule`</ph> são removidos da regra compatível, e o método retornará <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Se <ph id="ph1">`rule`</ph> Especifica direitos não contidos na regra compatível, nenhuma ação será tomada em relação a esses direitos.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Se todos os direitos são removidos da regra compatível, toda a regra será removida do atual <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Although you can specify inheritance and propagation flags for mutex access rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">Embora você possa especificar sinalizadores de herança e propagação para regras de acesso de mutex, criando-as com o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> método, isso não é recomendado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">Herança e propagação não têm significado para mutexes nomeado e façam a manutenção de regras de acesso mais complicado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> method to remove rights from an <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in a <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> método para remover direitos de um <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra em um <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>It also shows that other rights in <ph id="ph1">`rule`</ph> are ignored.</source>
          <target state="translated">Ele também mostra que outros direitos no <ph id="ph1">`rule`</ph> são ignorados.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> e o adiciona regras que permitirem e negar vários direitos para o usuário atual.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The rights allowed include <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize&gt;</ph>.</source>
          <target state="translated">Os direitos de permissão incluem <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>, e <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule for the current user, including <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> rights, and uses that rule with the <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> method to remove <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> from the <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph6">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">O exemplo cria uma nova regra para o usuário atual, incluindo <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> e <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> direitos e usa a regra com o <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> método para remover <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> do <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra no <ph id="ph6">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The extraneous <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> right in <ph id="ph2">`rule`</ph> is ignored.</source>
          <target state="translated">O estranhas <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> diretamente no <ph id="ph2">`rule`</ph> será ignorado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> que especifica o usuário e o <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> pelos quais pesquisar.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">Todos os direitos especificados por essa regra são ignorados.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule and, if found, removes them.</source>
          <target state="translated">Pesquisa por todas as regras de controle de acesso com o mesmo usuário e <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (permitir ou negar) como a regra especificada e, se encontradas, remove-as.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object is searched for rules that have the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">Atual <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto é pesquisado para regras que têm o mesmo usuário e o mesmo <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> valor como <ph id="ph3">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Quaisquer direitos especificados pelo <ph id="ph1">`rule`</ph> são ignorados quando executar esta pesquisa.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Se nenhuma regra de correspondência for encontrada, nenhuma ação é executada.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A&gt;</ph> method removes all rules that match user and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignoring rights.</source>
          <target state="translated">O exemplo de código a seguir mostra que o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A&gt;</ph> método Remove todas as regras de correspondam de usuário e <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignorando direitos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto, adiciona regras de permissão e negação vários direitos para o usuário atual e, em seguida, mescla direitos adicionais para o <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule from the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">O exemplo cria uma nova regra que permite que o usuário atual assumir a propriedade e usa a regra para remover o <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra do <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to remove.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> a ser removido.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Pesquisa por uma regra de controle de acesso que corresponda exatamente à regra especificada e, se encontrada, remove-a.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">A regra será removida somente se ele corresponde exatamente <ph id="ph1">`rule`</ph> em todos os detalhes, incluindo sinalizadores.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Other rules with the same user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> are not affected.</source>
          <target state="translated">Outras regras com o mesmo usuário e <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> não são afetados.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">Uma regra representa um ou mais subjacente entradas controle de acesso (ACE) e essas entradas são divididos ou combinados conforme necessário, quando você modificar as regras de segurança de acesso para um usuário.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Portanto, uma regra não existe mais no formulário específico que tinha quando foi adicionado e nesse caso o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> método não pode removê-lo.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</source>
          <target state="translated">O exemplo de código a seguir mostra que o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> método requer uma correspondência exata para remover uma regra e regras para permitir e negar direitos são independentes umas das outras.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rule.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto, adiciona regras de permissão e negação vários direitos para o usuário atual e, em seguida, mescla direitos adicionais para o <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra de acesso.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then passes the original <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule to the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method, and displays the results, showing that nothing is deleted.</source>
          <target state="translated">O exemplo, em seguida, passa o original <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra para o <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> método e exibe os resultados, mostrando que nada é excluído.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then constructs a rule that matches the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, and successfully uses the <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method to remove the rule.</source>
          <target state="translated">O exemplo constrói uma regra que corresponda a <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regra no <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto e, com êxito, usa o <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> método para remover a regra.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> que especifica o usuário pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          <target state="translated">Especifica os direitos a serem removidos da regra compatível, se encontrado.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          <target state="translated">Pesquisa uma regra de controle de auditoria com o mesmo usuário que a regra especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra compatível for encontrada, os direitos contidos na regra especificada serão removidos dela.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se uma regra compatível for encontrada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for an audit rule that has the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Atual <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> é pesquisada para uma regra de auditoria que tenha o mesmo usuário conforme <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se nenhuma regra for encontrada, nenhuma ação é executada e o método retornará <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">Se as regras de correspondência for encontradas, seus sinalizadores de herança e compatibilidade são verificados quanto à compatibilidade com os sinalizadores especificados na <ph id="ph1">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se nenhuma regra compatível foi encontrada, nenhuma ação é executada e o método retornará <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se uma regra com sinalizadores compatíveis for encontrada, os direitos especificados em <ph id="ph1">`rule`</ph> são removidos da regra compatível, e o método retornará <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">Se <ph id="ph1">`rule`</ph> Especifica direitos não contidos na regra compatível, nenhuma ação será tomada em relação a esses direitos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">Se todos os direitos são removidos da regra compatível, toda a regra será removida do atual <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Although you can specify inheritance and propagation flags for mutex audit rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">Embora você possa especificar sinalizadores de herança e propagação para regras de auditoria de mutex, criando-as com o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> método, isso não é recomendado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">Herança e propagação não têm significado para mutexes nomeado e façam a manutenção de regras de auditoria mais complicado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> that specifies the user to search for.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> que especifica o usuário pelo qual pesquisar.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Any rights specified by this rule are ignored.</source>
          <target state="translated">Todos os direitos especificados por essa regra são ignorados.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          <target state="translated">Pesquisa todas as regras de auditoria com o mesmo usuário que a regra especificada e, se encontradas, remove-as.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for audit rules that have the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">Atual <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> é pesquisada para regras de auditoria que têm o mesmo usuário conforme <ph id="ph2">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">Quaisquer direitos especificados pelo <ph id="ph1">`rule`</ph> são ignorados quando executar esta pesquisa.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>All matching rules are removed.</source>
          <target state="translated">Todas as regras correspondentes são removidas.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">Se nenhuma regra de correspondência for encontrada, nenhuma ação é executada.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> to be removed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> a ser removido.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          <target state="translated">Pesquisa por uma regra de auditoria que corresponda exatamente à regra especificada e, se encontrada, remove-a.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">A regra será removida somente se ele corresponde exatamente <ph id="ph1">`rule`</ph> em todos os detalhes, incluindo sinalizadores.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">Outras regras de auditoria para o mesmo usuário não são afetadas.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">Uma regra representa um ou mais subjacente entradas controle de acesso (ACE) e essas entradas são divididos ou combinados conforme necessário, quando você modificar as regras de segurança de auditoria para um usuário.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">Portanto, uma regra não existe mais no formulário específico que tinha quando foi adicionado e nesse caso o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> método não pode removê-lo.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, and then adds the specified rule.</source>
          <target state="translated">Remove todas as regras de controle de acesso com o mesmo usuário que a regra especificada, independentemente de <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> e, em seguida, adiciona a regra especificada.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se não houver nenhuma regra de acesso cujo usuário corresponder a regra especificada, <ph id="ph1">`rule`</ph> é adicionado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> method replaces all rules for the matching user with the rule specified for the match.</source>
          <target state="translated">O seguinte exemplo de código mostra como o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> método substitui todas as regras para o usuário correspondente com a regra especificada para a correspondência.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> e o adiciona regras que permitirem e negar vários direitos para o usuário atual.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> method to replace both of the existing rules with the new rule.</source>
          <target state="translated">O exemplo cria uma nova regra que permite o controle total do usuário atual e usa o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> método para substituir as regras existentes com a nova regra.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> of this rule determine the rules to remove before this rule is added.</source>
          <target state="translated">O usuário e o <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> dessa regra determinam as regras a serem removidas antes dessa regra ser adicionada.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Removes all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          <target state="translated">Remove todas as regras de controle de acesso com o mesmo usuário e <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (permitir ou negar) que a regra especificada e, em seguida, adiciona a regra especificada.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, the effect of this method is to remove all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">Se a regra especificada tem <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, é o efeito desse método para remover todos os <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> regras para o usuário especificado, substituindo-os com a regra especificada.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">Se a regra especificada tem <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, todos os <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> regras para o usuário especificado são substituídas com a regra especificada.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If there are no rules whose user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> match the specified rule, <ph id="ph2">`rule`</ph> is added.</source>
          <target state="translated">Se não houver nenhuma regra cujo usuário e <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> correspondem à regra especificada, <ph id="ph2">`rule`</ph> é adicionado.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> method removes all rules that match both the user and the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> of <ph id="ph3">`rule`</ph>, replacing them with <ph id="ph4">`rule`</ph>.</source>
          <target state="translated">O seguinte exemplo de código mostra como o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> método Remove todas as regras que correspondem o usuário e o <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> de <ph id="ph3">`rule`</ph>, substituí-las com <ph id="ph4">`rule`</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">O exemplo cria um <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> e o adiciona regras que permitirem e negar vários direitos para o usuário atual.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> method to replace the existing Allow rule with the new rule.</source>
          <target state="translated">O exemplo cria uma nova regra que permite o controle total do usuário atual e usa o <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> regra com a nova regra de permissão de método para substituir a existente.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The rule that denies access is not affected.</source>
          <target state="translated">A regra que nega o acesso não é afetada.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">Este exemplo não anexa o objeto de segurança para um <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Exemplos que anexa os objetos de segurança podem ser encontrados em <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          <target state="translated">O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> value, and then adds the specified rule.</source>
          <target state="translated">Remove todas as regras de auditoria com o mesmo usuário que a regra especificada, independentemente do valor de <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> e, em seguida, adiciona a regra especificada.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">Se não houver nenhuma regra de auditoria cujo usuário corresponder a regra especificada, <ph id="ph1">`rule`</ph> é adicionado.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>