<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fdf66ef2b7d0263ff0d55b59d333dd71cd0ba275" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49150108" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15128-101">Representa um conjunto de direitos de acesso permitidos ou negados para um usuário ou grupo.</span><span class="sxs-lookup"><span data-stu-id="15128-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="15128-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="15128-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15128-103">O <xref:System.Security.AccessControl.RegistryAccessRule> classe é parte de um conjunto de classes do .NET Framework fornece para gerenciar a segurança de controle de acesso do Windows em chaves do registro.</span><span class="sxs-lookup"><span data-stu-id="15128-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="15128-104">Para obter uma visão geral dessas classes, e sua relação com as estruturas de controle de acesso subjacentes do Windows, consulte <xref:System.Security.AccessControl.RegistrySecurity>.</span><span class="sxs-lookup"><span data-stu-id="15128-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15128-105">Segurança de controle de acesso do Windows só pode ser aplicada às chaves do registro.</span><span class="sxs-lookup"><span data-stu-id="15128-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="15128-106">Ele não pode ser aplicado a pares chave/valor individual armazenados em uma chave.</span><span class="sxs-lookup"><span data-stu-id="15128-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="15128-107">Para obter uma lista das regras aplicadas a uma chave do registro, use o <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obter uma <xref:System.Security.AccessControl.RegistrySecurity> do objeto e, em seguida, use seu <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> método para obter uma coleção de <xref:System.Security.AccessControl.RegistryAccessRule> objetos.</span><span class="sxs-lookup"><span data-stu-id="15128-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="15128-108"><xref:System.Security.AccessControl.RegistryAccessRule> objetos não mapeiam um para um com entradas de controle de acesso na lista de acesso de controle discricionário (DACL) subjacente.</span><span class="sxs-lookup"><span data-stu-id="15128-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="15128-109">Quando você obter o conjunto de todas as regras de acesso para uma chave do registro, o conjunto contém o número mínimo de regras necessárias no momento para expressar a todas as entradas de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="15128-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15128-110">As entradas de controle de acesso subjacente alteram como aplicar e remover as regras.</span><span class="sxs-lookup"><span data-stu-id="15128-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="15128-111">As informações nas regras serão mescladas se possível, para manter o menor número de entradas de controle de acesso.</span><span class="sxs-lookup"><span data-stu-id="15128-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="15128-112">Dessa forma, quando você lê a lista atual de regras, ele pode não ser exatamente igual a lista de todas as regras que você adicionou.</span><span class="sxs-lookup"><span data-stu-id="15128-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="15128-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objetos para especificar os direitos de acesso para permitir ou negar a um usuário ou grupo.</span><span class="sxs-lookup"><span data-stu-id="15128-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="15128-114">Um <xref:System.Security.AccessControl.RegistryAccessRule> do objeto sempre representa o acesso permitido ou negado acesso, nunca ambos.</span><span class="sxs-lookup"><span data-stu-id="15128-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="15128-115">Para aplicar uma regra a uma chave do registro, use o <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obter o <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="15128-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="15128-116">Modificar a <xref:System.Security.AccessControl.RegistrySecurity> objeto por meio de seus métodos para adicionar a regra e, em seguida, use o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método anexar novamente o objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="15128-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15128-117">Alterações feitas em um <xref:System.Security.AccessControl.RegistrySecurity> objeto não afetam os níveis de acesso da chave do registro até que você chame o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para atribuir o objeto de segurança alterada para a chave do registro.</span><span class="sxs-lookup"><span data-stu-id="15128-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="15128-118"><xref:System.Security.AccessControl.RegistryAccessRule> os objetos são imutáveis.</span><span class="sxs-lookup"><span data-stu-id="15128-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="15128-119">Segurança para uma chave do registro é modificada usando os métodos do <xref:System.Security.AccessControl.RegistrySecurity> classe para adicionar ou remover regras; conforme você faz isso, as entradas de controle de acesso subjacentes são modificadas.</span><span class="sxs-lookup"><span data-stu-id="15128-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15128-120">O exemplo de código a seguir demonstra as regras de acesso com herança e de propagação.</span><span class="sxs-lookup"><span data-stu-id="15128-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="15128-121">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto, em seguida, cria e adiciona duas regras que têm o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="15128-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="15128-122">A primeira regra não tem nenhum sinalizador de propagação, enquanto o segundo tem <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> e <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="15128-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="15128-123">O programa exibe as regras de <xref:System.Security.AccessControl.RegistrySecurity> de objeto e, em seguida, usa o objeto para criar uma subchave.</span><span class="sxs-lookup"><span data-stu-id="15128-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="15128-124">O programa cria um filho subchave e uma subchave neto e, em seguida, exibe a segurança para cada subchave.</span><span class="sxs-lookup"><span data-stu-id="15128-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="15128-125">Por fim, o programa exclui as chaves de teste.</span><span class="sxs-lookup"><span data-stu-id="15128-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15128-126">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="15128-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="15128-127">O usuário ou grupo ao qual a regra se aplica.</span><span class="sxs-lookup"><span data-stu-id="15128-127">The user or group the rule applies to.</span></span> <span data-ttu-id="15128-128">Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="15128-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="15128-129">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que indicam os direitos permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="15128-130">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que indicam se os direitos são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="15128-131">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, especificando o usuário ou grupo ao qual a regra se aplica, os direitos de acesso e se estes são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15128-132">Este construtor Especifica herança e propagação padrão.</span><span class="sxs-lookup"><span data-stu-id="15128-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="15128-133">Ou seja, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> e <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="15128-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15128-134"><paramref name="registryRights" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-134"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-135">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-135">-or-</span></span> 
 <span data-ttu-id="15128-136"><paramref name="type" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15128-137"><paramref name="identity" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15128-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15128-138">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-138">-or-</span></span> 
 <span data-ttu-id="15128-139"><paramref name="eventRights" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="15128-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15128-140"><paramref name="identity" /> não é do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="15128-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="15128-141">O nome do usuário ou grupo ao qual a regra se aplica.</span><span class="sxs-lookup"><span data-stu-id="15128-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="15128-142">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que indicam os direitos permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-142">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="15128-143">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que indicam se os direitos são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="15128-144">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, especificando o nome do usuário ou do grupo ao qual a regra se aplica, os direitos de acesso e se eles são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15128-145">Este construtor Especifica herança e propagação padrão.</span><span class="sxs-lookup"><span data-stu-id="15128-145">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="15128-146">Ou seja, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> e <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="15128-146">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="15128-147">Este construtor é equivalente a criar uma <xref:System.Security.Principal.NTAccount> objeto, passando `identity` para o <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> construtor e passando o recém-criado <xref:System.Security.Principal.NTAccount> do objeto para o <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="15128-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15128-148">O exemplo de código a seguir cria regras de acesso do registro e os adiciona a um <xref:System.Security.AccessControl.RegistrySecurity> objeto, mostrando como as regras que permitem e negar direitos permanecem separadas, enquanto as regras compatíveis do mesmo tipo é mesclado.</span><span class="sxs-lookup"><span data-stu-id="15128-148">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15128-149"><paramref name="registryRights" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-149"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-150">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-150">-or-</span></span> 
 <span data-ttu-id="15128-151"><paramref name="type" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-151"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15128-152"><paramref name="registryRights" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="15128-152"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15128-153"><paramref name="identity" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15128-153"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15128-154">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-154">-or-</span></span> 
 <span data-ttu-id="15128-155"><paramref name="identity" /> é uma cadeia de comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="15128-155"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="15128-156">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-156">-or-</span></span> 
 <span data-ttu-id="15128-157"><paramref name="identity" /> tem mais de 512 caracteres.</span><span class="sxs-lookup"><span data-stu-id="15128-157"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="15128-158">O usuário ou grupo ao qual a regra se aplica.</span><span class="sxs-lookup"><span data-stu-id="15128-158">The user or group the rule applies to.</span></span> <span data-ttu-id="15128-159">Deve ser do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> ou um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="15128-159">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="15128-160">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que especificam os direitos permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-160">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="15128-161">Uma combinação bit a bit de sinalizadores <see cref="T:System.Security.AccessControl.InheritanceFlags" /> que especificam como os direitos de acesso são herdados de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="15128-161">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="15128-162">Uma combinação bit a bit de sinalizadores <see cref="T:System.Security.AccessControl.PropagationFlags" /> que especificam como os direitos de acesso são propagados para outros objetos.</span><span class="sxs-lookup"><span data-stu-id="15128-162">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span></span></param>
        <param name="type"><span data-ttu-id="15128-163">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-163">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="15128-164">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, especificando o usuário ou grupo ao qual a regra se aplica, os direitos de acesso, os sinalizadores de herança, os sinalizadores de propagação e se os direitos de acesso especificados são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-164">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15128-165">Todas as chaves do registro são contêineres, portanto, o único sinalizador de herança que seja significativo para chaves do registro é o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="15128-165">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15128-166">Se este sinalizador não for especificado, os sinalizadores de propagação serão ignorados e somente a chave de imediata é afetada.</span><span class="sxs-lookup"><span data-stu-id="15128-166">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="15128-167">Se o sinalizador estiver presente, a regra é propagada conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="15128-167">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="15128-168">A tabela pressupõe que exista uma subchave S com subchave filho CS e subchave neto GS.</span><span class="sxs-lookup"><span data-stu-id="15128-168">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="15128-169">Ou seja, o caminho da subchave neto é S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="15128-169">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="15128-170">Sinalizadores de propagação</span><span class="sxs-lookup"><span data-stu-id="15128-170">Propagation flags</span></span>|<span data-ttu-id="15128-171">S</span><span class="sxs-lookup"><span data-stu-id="15128-171">S</span></span>|<span data-ttu-id="15128-172">CS</span><span class="sxs-lookup"><span data-stu-id="15128-172">CS</span></span>|<span data-ttu-id="15128-173">GS</span><span class="sxs-lookup"><span data-stu-id="15128-173">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="15128-174">X</span><span class="sxs-lookup"><span data-stu-id="15128-174">X</span></span>|<span data-ttu-id="15128-175">X</span><span class="sxs-lookup"><span data-stu-id="15128-175">X</span></span>|<span data-ttu-id="15128-176">X</span><span class="sxs-lookup"><span data-stu-id="15128-176">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="15128-177">X</span><span class="sxs-lookup"><span data-stu-id="15128-177">X</span></span>|<span data-ttu-id="15128-178">X</span><span class="sxs-lookup"><span data-stu-id="15128-178">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="15128-179">X</span><span class="sxs-lookup"><span data-stu-id="15128-179">X</span></span>|<span data-ttu-id="15128-180">X</span><span class="sxs-lookup"><span data-stu-id="15128-180">X</span></span>|  
|<span data-ttu-id="15128-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="15128-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="15128-182">X</span><span class="sxs-lookup"><span data-stu-id="15128-182">X</span></span>||  
  
 <span data-ttu-id="15128-183">O padrão da subchave neto rege todas as subchaves contidas na subchave neto.</span><span class="sxs-lookup"><span data-stu-id="15128-183">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="15128-184">Por exemplo, se o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> sinalizador for especificado para `inheritanceFlags` e o <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> sinalizador de propagação é especificado para `propagationFlags`, essa regra não se aplica à subchave imediata, mas se aplicam a todas as suas subchaves filho imediato e a todas as subchaves eles contêm.</span><span class="sxs-lookup"><span data-stu-id="15128-184">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15128-185">Embora você possa especificar o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> sinalize para `inheritanceFlags`, não há nenhuma razão para isso.</span><span class="sxs-lookup"><span data-stu-id="15128-185">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="15128-186">Para fins de controle de acesso, os pares de nome/valor em uma subchave não são objetos separados.</span><span class="sxs-lookup"><span data-stu-id="15128-186">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="15128-187">Os direitos de acesso para os pares nome/valor são controlados pelos direitos da subchave.</span><span class="sxs-lookup"><span data-stu-id="15128-187">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="15128-188">Além disso, uma vez que todas as subchaves são contêineres (ou seja, eles podem conter outras subchaves), eles não são afetados pelo <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="15128-188">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="15128-189">Por fim, especificando o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador desnecessariamente complica a manutenção de regras, pois interfere com a combinação de regras compatíveis caso contrário.</span><span class="sxs-lookup"><span data-stu-id="15128-189">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15128-190"><paramref name="registryRights" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-190"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-191">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-191">-or-</span></span> 
 <span data-ttu-id="15128-192"><paramref name="type" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-192"><paramref name="type" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-193">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-193">-or-</span></span> 
 <span data-ttu-id="15128-194"><paramref name="inheritanceFlags" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-194"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-195">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-195">-or-</span></span> 
 <span data-ttu-id="15128-196"><paramref name="propagationFlags" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-196"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15128-197"><paramref name="identity" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15128-197"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15128-198">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-198">-or-</span></span> 
 <span data-ttu-id="15128-199"><paramref name="registryRights" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="15128-199"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15128-200"><paramref name="identity" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="15128-200"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="15128-201">O nome do usuário ou grupo ao qual a regra se aplica.</span><span class="sxs-lookup"><span data-stu-id="15128-201">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="15128-202">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que indicam os direitos permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-202">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="15128-203">Uma combinação bit a bit de sinalizadores <see cref="T:System.Security.AccessControl.InheritanceFlags" /> que especificam como os direitos de acesso são herdados de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="15128-203">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="15128-204">Uma combinação bit a bit de sinalizadores <see cref="T:System.Security.AccessControl.PropagationFlags" /> que especificam como os direitos de acesso são propagados para outros objetos.</span><span class="sxs-lookup"><span data-stu-id="15128-204">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span></span></param>
        <param name="type"><span data-ttu-id="15128-205">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-205">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="15128-206">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, especificando o nome do usuário ou grupo ao qual a regra se aplica, os direitos de acesso, os sinalizadores de herança, os sinalizadores de propagação e se os direitos de acesso especificados são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="15128-206">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15128-207">Todas as chaves do registro são contêineres, portanto, o único sinalizador de herança que seja significativo para chaves do registro é o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="15128-207">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15128-208">Se este sinalizador não for especificado, os sinalizadores de propagação serão ignorados e somente a chave de imediata é afetada.</span><span class="sxs-lookup"><span data-stu-id="15128-208">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="15128-209">Se o sinalizador estiver presente, a regra é propagada conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="15128-209">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="15128-210">A tabela pressupõe que exista uma subchave S com subchave filho CS e subchave neto GS.</span><span class="sxs-lookup"><span data-stu-id="15128-210">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="15128-211">Ou seja, o caminho da subchave neto é S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="15128-211">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="15128-212">Sinalizadores de propagação</span><span class="sxs-lookup"><span data-stu-id="15128-212">Propagation flags</span></span>|<span data-ttu-id="15128-213">S</span><span class="sxs-lookup"><span data-stu-id="15128-213">S</span></span>|<span data-ttu-id="15128-214">CS</span><span class="sxs-lookup"><span data-stu-id="15128-214">CS</span></span>|<span data-ttu-id="15128-215">GS</span><span class="sxs-lookup"><span data-stu-id="15128-215">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="15128-216">X</span><span class="sxs-lookup"><span data-stu-id="15128-216">X</span></span>|<span data-ttu-id="15128-217">X</span><span class="sxs-lookup"><span data-stu-id="15128-217">X</span></span>|<span data-ttu-id="15128-218">X</span><span class="sxs-lookup"><span data-stu-id="15128-218">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="15128-219">X</span><span class="sxs-lookup"><span data-stu-id="15128-219">X</span></span>|<span data-ttu-id="15128-220">X</span><span class="sxs-lookup"><span data-stu-id="15128-220">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="15128-221">X</span><span class="sxs-lookup"><span data-stu-id="15128-221">X</span></span>|<span data-ttu-id="15128-222">X</span><span class="sxs-lookup"><span data-stu-id="15128-222">X</span></span>|  
|<span data-ttu-id="15128-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="15128-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="15128-224">X</span><span class="sxs-lookup"><span data-stu-id="15128-224">X</span></span>||  
  
 <span data-ttu-id="15128-225">O padrão da subchave neto rege todas as subchaves contidas na subchave neto.</span><span class="sxs-lookup"><span data-stu-id="15128-225">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="15128-226">Por exemplo, se o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> sinalizador for especificado para `inheritanceFlags` e o <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> sinalizador de propagação é especificado para `propagationFlags`, essa regra não se aplica à subchave imediata, mas se aplicam a todas as suas subchaves filho imediato e a todas as subchaves eles contêm.</span><span class="sxs-lookup"><span data-stu-id="15128-226">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15128-227">Embora você possa especificar o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> sinalize para `inheritanceFlags`, não há nenhuma razão para isso.</span><span class="sxs-lookup"><span data-stu-id="15128-227">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="15128-228">Para fins de controle de acesso, os pares de nome/valor em uma subchave não são objetos separados.</span><span class="sxs-lookup"><span data-stu-id="15128-228">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="15128-229">Os direitos de acesso para os pares nome/valor são controlados pelos direitos da subchave.</span><span class="sxs-lookup"><span data-stu-id="15128-229">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="15128-230">Além disso, uma vez que todas as subchaves são contêineres (ou seja, eles podem conter outras subchaves), eles não são afetados pelo <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="15128-230">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="15128-231">Por fim, especificando o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador desnecessariamente complica a manutenção de regras, pois interfere com a combinação de regras compatíveis caso contrário.</span><span class="sxs-lookup"><span data-stu-id="15128-231">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="15128-232">Este construtor é equivalente a criar uma <xref:System.Security.Principal.NTAccount> objeto, passando `identity` para o <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> construtor e passando o recém-criado <xref:System.Security.Principal.NTAccount> do objeto para o <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="15128-232">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15128-233">O exemplo de código a seguir demonstra as regras de acesso com herança e de propagação.</span><span class="sxs-lookup"><span data-stu-id="15128-233">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="15128-234">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto e, em seguida, cria e adiciona duas regras que têm o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="15128-234">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="15128-235">A primeira regra não tem nenhum sinalizador de propagação, enquanto o segundo tem <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> e <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="15128-235">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="15128-236">O programa exibe as regras de <xref:System.Security.AccessControl.RegistrySecurity> objeto e, em seguida, usa o <xref:System.Security.AccessControl.RegistrySecurity> objeto para criar uma subchave.</span><span class="sxs-lookup"><span data-stu-id="15128-236">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="15128-237">O programa cria um filho subchave e uma subchave neto e, em seguida, exibe as regras para cada subchave.</span><span class="sxs-lookup"><span data-stu-id="15128-237">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="15128-238">Por fim, o programa exclui as chaves de teste.</span><span class="sxs-lookup"><span data-stu-id="15128-238">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15128-239"><paramref name="registryRights" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-239"><paramref name="registryRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-240">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-240">-or-</span></span> 
 <span data-ttu-id="15128-241"><paramref name="type" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-241"><paramref name="type" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-242">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-242">-or-</span></span> 
 <span data-ttu-id="15128-243"><paramref name="inheritanceFlags" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-243"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="15128-244">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-244">-or-</span></span> 
 <span data-ttu-id="15128-245"><paramref name="propagationFlags" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="15128-245"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15128-246"><paramref name="eventRights" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="15128-246"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15128-247"><paramref name="identity" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15128-247"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15128-248">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-248">-or-</span></span> 
 <span data-ttu-id="15128-249"><paramref name="identity" /> é uma cadeia de comprimento zero.</span><span class="sxs-lookup"><span data-stu-id="15128-249"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="15128-250">- ou -</span><span class="sxs-lookup"><span data-stu-id="15128-250">-or-</span></span> 
 <span data-ttu-id="15128-251"><paramref name="identity" /> tem mais de 512 caracteres.</span><span class="sxs-lookup"><span data-stu-id="15128-251"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15128-252">Obtém os direitos permitidos ou negados pela regra de acesso.</span><span class="sxs-lookup"><span data-stu-id="15128-252">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="15128-253">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que indicam os direitos permitidos ou negados pela regra de acesso.</span><span class="sxs-lookup"><span data-stu-id="15128-253">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15128-254"><xref:System.Security.AccessControl.RegistryAccessRule> os objetos são imutáveis.</span><span class="sxs-lookup"><span data-stu-id="15128-254"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="15128-255">Você pode criar uma nova regra de acesso que representa um usuário diferente, diferentes direitos ou outro <xref:System.Security.AccessControl.AccessControlType>, mas você não pode modificar uma regra de acesso existente.</span><span class="sxs-lookup"><span data-stu-id="15128-255">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>