<Type Name="RegistrySecurity" FullName="System.Security.AccessControl.RegistrySecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83a08bdb3dcd1015c17c86c1ba77c6ac1001351e" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52228087" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistrySecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrySecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistrySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrySecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrySecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type RegistrySecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38651-101">Representa a segurança do controle de acesso do Windows para uma chave do Registro.</span><span class="sxs-lookup"><span data-stu-id="38651-101">Represents the Windows access control security for a registry key.</span></span> <span data-ttu-id="38651-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="38651-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-103">Um <xref:System.Security.AccessControl.RegistrySecurity> objeto Especifica os direitos de acesso para uma chave do registro e também especifica como as tentativas de acesso são auditadas.</span><span class="sxs-lookup"><span data-stu-id="38651-103">A <xref:System.Security.AccessControl.RegistrySecurity> object specifies access rights for a registry key, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="38651-104">Direitos de acesso à chave do registro são expressas como regras, com cada regra de acesso representado por um <xref:System.Security.AccessControl.RegistryAccessRule> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-104">Access rights to the registry key are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.RegistryAccessRule> object.</span></span> <span data-ttu-id="38651-105">Cada regra de auditoria é representada por um <xref:System.Security.AccessControl.RegistryAuditRule> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.RegistryAuditRule> object.</span></span>  
  
 <span data-ttu-id="38651-106">Isso espelha o sistema de segurança Windows subjacente, no qual cada objeto protegível tem no máximo um controle lista de acesso discricionário (DACL) que controla o acesso ao objeto protegido e no máximo com a lista de controle de acesso um sistema (SACL) que especifica que o acesso tentativas são auditadas.</span><span class="sxs-lookup"><span data-stu-id="38651-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="38651-107">A DACL e SACL são listas ordenadas de entradas de controle de acesso (ACE) que especificam o acesso e auditoria para usuários e grupos.</span><span class="sxs-lookup"><span data-stu-id="38651-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="38651-108">Um <xref:System.Security.AccessControl.RegistryAccessRule> ou <xref:System.Security.AccessControl.RegistryAuditRule> objeto pode representar mais de uma ACE.</span><span class="sxs-lookup"><span data-stu-id="38651-108">A <xref:System.Security.AccessControl.RegistryAccessRule> or <xref:System.Security.AccessControl.RegistryAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-109">Segurança de controle de acesso do Windows só pode ser aplicada às chaves do registro.</span><span class="sxs-lookup"><span data-stu-id="38651-109">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="38651-110">Ele não pode ser aplicado a pares chave/valor individual armazenados em uma chave.</span><span class="sxs-lookup"><span data-stu-id="38651-110">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="38651-111">O <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, e <xref:System.Security.AccessControl.RegistryAuditRule> classes ocultar os detalhes da implementação de ACLs e ACEs.</span><span class="sxs-lookup"><span data-stu-id="38651-111">The <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, and <xref:System.Security.AccessControl.RegistryAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="38651-112">Eles permitem que você ignore os diferentes tipos ACE dezessete e a complexidade de manter corretamente a herança e propagação de direitos de acesso.</span><span class="sxs-lookup"><span data-stu-id="38651-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="38651-113">Esses objetos também são projetados para impedir que os seguintes erros comuns de controle de acesso:</span><span class="sxs-lookup"><span data-stu-id="38651-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="38651-114">Criando um descritor de segurança com uma DACL null.</span><span class="sxs-lookup"><span data-stu-id="38651-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="38651-115">Uma referência nula para uma DACL permite que qualquer usuário adicionar regras de acesso a um objeto, possivelmente criando um ataque de negação de serviço.</span><span class="sxs-lookup"><span data-stu-id="38651-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="38651-116">Um novo <xref:System.Security.AccessControl.RegistrySecurity> objeto sempre começa com uma DACL vazia, o que nega todo o acesso para todos os usuários.</span><span class="sxs-lookup"><span data-stu-id="38651-116">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="38651-117">Violação de ordem canônica das ACEs.</span><span class="sxs-lookup"><span data-stu-id="38651-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="38651-118">Se a lista ACE na DACL não é mantida na ordem canônica, os usuários podem inadvertidamente receber acesso para o objeto protegido.</span><span class="sxs-lookup"><span data-stu-id="38651-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="38651-119">Por exemplo, os direitos de acesso negado sempre devem aparecer antes de direitos de acesso permitido.</span><span class="sxs-lookup"><span data-stu-id="38651-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="38651-120"><xref:System.Security.AccessControl.RegistrySecurity> objetos mantêm a ordem correta internamente.</span><span class="sxs-lookup"><span data-stu-id="38651-120"><xref:System.Security.AccessControl.RegistrySecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="38651-121">Manipulando os sinalizadores de descritor de segurança, que devem estar sob controle do Gerenciador de recursos apenas.</span><span class="sxs-lookup"><span data-stu-id="38651-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="38651-122">Criando as combinações de sinalizadores da ACE inválidas.</span><span class="sxs-lookup"><span data-stu-id="38651-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="38651-123">Manipulação de ACEs herdadas.</span><span class="sxs-lookup"><span data-stu-id="38651-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="38651-124">Herança e propagação são manipuladas pelo Gerenciador de recursos, em resposta a alterações feitas às regras de acesso e auditoria.</span><span class="sxs-lookup"><span data-stu-id="38651-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="38651-125">Inserindo sem sentido ACEs em ACLs.</span><span class="sxs-lookup"><span data-stu-id="38651-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="38651-126">As apenas os objetos de segurança do .NET não oferece suporte para as funcionalidades são atividades perigosas que devem ser evitadas com a maioria dos desenvolvedores de aplicativos, como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="38651-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="38651-127">Tarefas de nível inferior que são normalmente executadas pelo Gerenciador de recursos.</span><span class="sxs-lookup"><span data-stu-id="38651-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="38651-128">Adicionando ou removendo entradas de controle de acesso de maneiras que não mantêm a ordem canônica.</span><span class="sxs-lookup"><span data-stu-id="38651-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="38651-129">Para modificar a segurança de controle de acesso do Windows para uma chave do registro, use o <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obter o <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-129">To modify Windows access control security for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="38651-130">Modificar o objeto de segurança, adicionando e removendo regras e, em seguida, usar o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para anexá-lo novamente.</span><span class="sxs-lookup"><span data-stu-id="38651-130">Modify the security object by adding and removing rules, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38651-131">Alterações feitas em um <xref:System.Security.AccessControl.RegistrySecurity> objeto não afetam os níveis de acesso da chave do registro até que você chame o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para atribuir o objeto de segurança alterada para a chave do registro.</span><span class="sxs-lookup"><span data-stu-id="38651-131">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="38651-132">Para copiar a segurança de controle de acesso de chave do registro de um para outro, use o <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obter uma <xref:System.Security.AccessControl.RegistrySecurity> do objeto que representa as regras de acesso e auditoria para a primeira chave de registro e, em seguida, use o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para atribuir essas regras para o segunda chave do registro.</span><span class="sxs-lookup"><span data-stu-id="38651-132">To copy access control security from one registry key to another, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object representing the access and audit rules for the first registry key, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign those rules to the second registry key.</span></span> <span data-ttu-id="38651-133">Você também pode atribuir as regras para uma segunda chave do registro com um <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> ou <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> método que usa um <xref:System.Security.AccessControl.RegistrySecurity> parâmetro de objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-133">You can also assign the rules to a second registry key with an <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> method that takes a <xref:System.Security.AccessControl.RegistrySecurity> object parameter.</span></span>  
  
 <span data-ttu-id="38651-134">Os usuários com um investimento em linguagem de definição de descritor de segurança (SDDL) podem usar o <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> método para definir regras de acesso para uma chave do registro e o <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> método para obter uma cadeia de caracteres que representa as regras de acesso no formato SDDL.</span><span class="sxs-lookup"><span data-stu-id="38651-134">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a registry key, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="38651-135">Isso não é recomendado para novo desenvolvimento.</span><span class="sxs-lookup"><span data-stu-id="38651-135">This is not recommended for new development.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-136">Esta seção contém dois exemplos de código.</span><span class="sxs-lookup"><span data-stu-id="38651-136">This section contains two code examples.</span></span> <span data-ttu-id="38651-137">O primeiro exemplo mostra como compatível com mesclagem de regras quando adicionados e removidos e o segundo mostra como os sinalizadores de herança e de propagação afetam a adição e exclusão de regras.</span><span class="sxs-lookup"><span data-stu-id="38651-137">The first example shows how compatible rules merge when added and removed, and the second shows how inheritance and propagation flags affect the addition and deletion of rules.</span></span>  
  
 <span data-ttu-id="38651-138">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="38651-138">Example 1</span></span>  
  
 <span data-ttu-id="38651-139">O seguinte exemplo de código mostra como o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método Remove os direitos de uma regra compatível e como a <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método mescla direitos com regras compatíveis.</span><span class="sxs-lookup"><span data-stu-id="38651-139">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="38651-140">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto e adiciona uma regra que permite que o usuário atual <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-140">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="38651-141">O exemplo cria uma regra que concede ao usuário <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, com a mesma herança e direitos de propagação como a primeira regra e usa o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para remover essa nova regra do <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-141">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="38651-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> é um constituinte de <xref:System.Security.AccessControl.RegistryRights.ReadKey>, portanto, ele é removido da regra compatível.</span><span class="sxs-lookup"><span data-stu-id="38651-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="38651-143">As regras de <xref:System.Security.AccessControl.RegistrySecurity> objeto são exibidos, mostrando os restantes constituintes de <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span><span class="sxs-lookup"><span data-stu-id="38651-143">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="38651-144">O exemplo de código, em seguida, chama o <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método para mesclar as <xref:System.Security.AccessControl.RegistryRights.SetValue> com o botão direito novamente para a regra no <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-144">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-145">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-145">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-146">O segundo exemplo nesta seção anexa um objeto de segurança e, então, fazer os exemplos <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> e <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38651-146">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 <span data-ttu-id="38651-147">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="38651-147">Example 2</span></span>  
  
 <span data-ttu-id="38651-148">O exemplo de código a seguir demonstra as regras de acesso com herança e de propagação.</span><span class="sxs-lookup"><span data-stu-id="38651-148">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="38651-149">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto, em seguida, cria e adiciona duas regras que têm o <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="38651-149">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="38651-150">A primeira regra não tem nenhum sinalizador de propagação, enquanto o segundo tem <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> e <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="38651-150">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="38651-151">O programa exibe as regras de <xref:System.Security.AccessControl.RegistrySecurity> objeto e, em seguida, usa o <xref:System.Security.AccessControl.RegistrySecurity> objeto para criar uma subchave.</span><span class="sxs-lookup"><span data-stu-id="38651-151">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="38651-152">O programa cria um filho subchave e uma subchave neto, em seguida, exibe a segurança para cada subchave.</span><span class="sxs-lookup"><span data-stu-id="38651-152">The program creates a child subkey and a grandchild subkey, then displays the security for each subkey.</span></span> <span data-ttu-id="38651-153">Por fim, o programa exclui as chaves de teste.</span><span class="sxs-lookup"><span data-stu-id="38651-153">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38651-154">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> com valores padrão.</span><span class="sxs-lookup"><span data-stu-id="38651-154">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-155">Um novo <xref:System.Security.AccessControl.RegistrySecurity> objeto sempre começa com uma lista vazia de acesso discricionário (DACL), que nega todo o acesso para todos os usuários.</span><span class="sxs-lookup"><span data-stu-id="38651-155">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38651-156">Obtém o tipo de enumeração que a classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> usa para representar os direitos de acesso.</span><span class="sxs-lookup"><span data-stu-id="38651-156">Gets the enumeration type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rights.</span></span></summary>
        <value><span data-ttu-id="38651-157">Um objeto <see cref="T:System.Type" /> que representa a enumeração <see cref="T:System.Security.AccessControl.RegistryRights" />.</span><span class="sxs-lookup"><span data-stu-id="38651-157">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryRights" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-158">Classes que derivam de <xref:System.Security.AccessControl.ObjectSecurity> substituição de classe a <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> propriedade e retornar o tipo que eles usam para representar os direitos de acesso.</span><span class="sxs-lookup"><span data-stu-id="38651-158">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="38651-159">Ao trabalhar com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de enumeração correto a ser usado com cada objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="38651-159">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="registrySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="38651-160">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</span><span class="sxs-lookup"><span data-stu-id="38651-160">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="38651-161">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que especificam os direitos de acesso a serem permitidos ou negados, convertidos em um inteiro.</span><span class="sxs-lookup"><span data-stu-id="38651-161">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to allow or deny, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="38651-162">Um valor booliano que especifica se a regra é herdada.</span><span class="sxs-lookup"><span data-stu-id="38651-162">A Boolean value specifying whether the rule is inherited.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="38651-163">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.InheritanceFlags" /> que especificam como a regra é herdada por subchaves.</span><span class="sxs-lookup"><span data-stu-id="38651-163">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="38651-164">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.PropagationFlags" /> que modificam o modo como a regra é herdada por subchaves.</span><span class="sxs-lookup"><span data-stu-id="38651-164">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span></span> <span data-ttu-id="38651-165">Sem sentido se o valor de <paramref name="inheritanceFlags" /> for <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="38651-165">Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="type"><span data-ttu-id="38651-166">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</span><span class="sxs-lookup"><span data-stu-id="38651-166">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="38651-167">Cria uma nova regra de controle de acesso para o usuário especificado, com os direitos de acesso, o controle de acesso e os sinalizadores especificados.</span><span class="sxs-lookup"><span data-stu-id="38651-167">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span></span></summary>
        <returns><span data-ttu-id="38651-168">Um objeto <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que representa os direitos especificados para o usuário especificado.</span><span class="sxs-lookup"><span data-stu-id="38651-168">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> object representing the specified rights for the specified user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-169">A maneira recomendada para criar regras de controle de acesso é usar os construtores do <xref:System.Security.AccessControl.RegistryAccessRule> classe.</span><span class="sxs-lookup"><span data-stu-id="38651-169">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-170">Embora você possa especificar o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> sinalizador, não há nenhuma razão para isso.</span><span class="sxs-lookup"><span data-stu-id="38651-170">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="38651-171">Para fins de controle de acesso, os pares de nome/valor em uma subchave não são objetos separados.</span><span class="sxs-lookup"><span data-stu-id="38651-171">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="38651-172">Os direitos de acesso para os pares nome/valor são controlados pelos direitos da subchave.</span><span class="sxs-lookup"><span data-stu-id="38651-172">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="38651-173">Além disso, uma vez que todas as subchaves são contêineres (ou seja, eles podem conter outras subchaves), eles não são afetados pelo <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="38651-173">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="38651-174">Por fim, especificando o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador desnecessariamente complica a manutenção de regras, pois interfere com a combinação normal regras compatíveis.</span><span class="sxs-lookup"><span data-stu-id="38651-174">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38651-175"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="38651-175"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-176"><paramref name="identityReference" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-176"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="38651-177">- ou -</span><span class="sxs-lookup"><span data-stu-id="38651-177">-or-</span></span> 
 <span data-ttu-id="38651-178"><paramref name="accessMask" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="38651-178"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38651-179"><paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="38651-179"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38651-180">Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> usa para representar as regras de acesso.</span><span class="sxs-lookup"><span data-stu-id="38651-180">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rules.</span></span></summary>
        <value><span data-ttu-id="38651-181">Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="38651-181">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-182">Classes que derivam de <xref:System.Security.AccessControl.ObjectSecurity> substituição de classe a <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> propriedade e retornar o tipo que eles usam para representar as regras de acesso.</span><span class="sxs-lookup"><span data-stu-id="38651-182">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="38651-183">Ao trabalhar com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de regra de acesso corretas para usar com cada objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="38651-183">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-184">A regra de controle de acesso a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="38651-184">The access control rule to add.</span></span></param>
        <summary><span data-ttu-id="38651-185">Pesquisa um controle de acesso correspondente com o qual a nova regra pode ser mesclada.</span><span class="sxs-lookup"><span data-stu-id="38651-185">Searches for a matching access control with which the new rule can be merged.</span></span> <span data-ttu-id="38651-186">Se nenhum erro for encontrado, adiciona a nova regra.</span><span class="sxs-lookup"><span data-stu-id="38651-186">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-187">O <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método procura regras com o mesmo usuário ou grupo e o mesmo <xref:System.Security.AccessControl.AccessControlType> como `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-187">The <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="38651-188">Se nenhum for encontrado, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-188">If none are found, `rule` is added.</span></span> <span data-ttu-id="38651-189">Se uma regra de correspondência for encontrada, os direitos no `rule` são mescladas com a regra existente.</span><span class="sxs-lookup"><span data-stu-id="38651-189">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
 <span data-ttu-id="38651-190">As regras não podem ser mescladas se tiverem os sinalizadores de herança diferente.</span><span class="sxs-lookup"><span data-stu-id="38651-190">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="38651-191">Por exemplo, se um usuário tem permissão de acesso de leitura sem sinalizadores de herança, e <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> é usado para adicionar uma regra de dar ao usuário acesso de gravação com a herança de subchaves (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), as duas regras não podem ser mescladas.</span><span class="sxs-lookup"><span data-stu-id="38651-191">For example, if a user is allowed read access with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> is used to add a rule giving the user write access with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 <span data-ttu-id="38651-192">Regras com diferentes <xref:System.Security.AccessControl.AccessControlType> valores nunca são mesclados.</span><span class="sxs-lookup"><span data-stu-id="38651-192">Rules with different <xref:System.Security.AccessControl.AccessControlType> values are never merged.</span></span>  
  
 <span data-ttu-id="38651-193">Regras expressam os direitos da maneira mais econômica.</span><span class="sxs-lookup"><span data-stu-id="38651-193">Rules express rights in the most economical way.</span></span> <span data-ttu-id="38651-194">Por exemplo, se um usuário tiver <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> e <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> direitos e você adiciona uma regra permitindo <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> direitos, o usuário tem todas as partes constituintes da <xref:System.Security.AccessControl.RegistryRights.ReadKey> direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-194">For example, if a user has <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> and <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> rights, and you add a rule allowing <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the user has all the constituent parts of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="38651-195">Se você consultar os direitos do usuário, você verá uma regra que contém <xref:System.Security.AccessControl.RegistryRights.ReadKey> direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-195">If you query the user's rights, you will see a rule containing <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="38651-196">Da mesma forma, se você remover <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> direitos, os outros constituintes de <xref:System.Security.AccessControl.RegistryRights.ReadKey> direitos reaparecerá.</span><span class="sxs-lookup"><span data-stu-id="38651-196">Similarly, if you remove <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the other constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights will reappear.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-197">O exemplo de código a seguir cria regras de acesso do registro e os adiciona a um <xref:System.Security.AccessControl.RegistrySecurity> objeto, mostrando como as regras que permitem e negar direitos permanecem separadas, enquanto as regras compatíveis do mesmo tipo é mesclado.</span><span class="sxs-lookup"><span data-stu-id="38651-197">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-198">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-198">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-199">Exemplos que anexar objetos de segurança podem ser encontrados em <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> e <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38651-199">Examples that attach security objects can be found in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38651-200">Um exemplo de código que demonstra os sinalizadores de herança e de propagação pode ser encontrado na <xref:System.Security.AccessControl.RegistryAccessRule> classe.</span><span class="sxs-lookup"><span data-stu-id="38651-200">A code example that demonstrates inheritance and propagation flags can be found in the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-201"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-201"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-202">A regra de auditoria a adicionar.</span><span class="sxs-lookup"><span data-stu-id="38651-202">The audit rule to add.</span></span> <span data-ttu-id="38651-203">O usuário especificado por essa regra determina a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38651-203">The user specified by this rule determines the search.</span></span></param>
        <summary><span data-ttu-id="38651-204">Pesquisa uma regra de auditoria com a qual a nova regra pode ser mesclada.</span><span class="sxs-lookup"><span data-stu-id="38651-204">Searches for an audit rule with which the new rule can be merged.</span></span> <span data-ttu-id="38651-205">Se nenhum erro for encontrado, adiciona a nova regra.</span><span class="sxs-lookup"><span data-stu-id="38651-205">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-206">O <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> método procura regras com o mesmo usuário ou grupo como `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-206">The <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="38651-207">Se nenhum for encontrado, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-207">If none are found, `rule` is added.</span></span> <span data-ttu-id="38651-208">Se uma regra de correspondência for encontrada, os sinalizadores no `rule` são mesclados em que a regra existente.</span><span class="sxs-lookup"><span data-stu-id="38651-208">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 <span data-ttu-id="38651-209">As regras não podem ser mescladas se tiverem os sinalizadores de herança diferente.</span><span class="sxs-lookup"><span data-stu-id="38651-209">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="38651-210">Por exemplo, se as tentativas de gravar em uma chave com falha são auditadas para um determinado usuário, sem sinalizadores de herança, e <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> é usado para adicionar uma regra especificando que tentativas com falha para alterar as permissões devem ser auditados para o mesmo usuário, mas com a herança para subchaves (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), as duas regras não podem ser mescladas.</span><span class="sxs-lookup"><span data-stu-id="38651-210">For example, if failed attempts to write to a key are audited for a particular user, with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> is used to add a rule specifying that failed attempts to change permissions are to be audited for the same user, but with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="registrySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="38651-211">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</span><span class="sxs-lookup"><span data-stu-id="38651-211">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="38651-212">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> que especifica os direitos de acesso a serem auditados e convertidos em um inteiro.</span><span class="sxs-lookup"><span data-stu-id="38651-212">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to audit, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="38651-213">Um valor booliano que especifica se a regra é herdada.</span><span class="sxs-lookup"><span data-stu-id="38651-213">A Boolean value specifying whether the rule is inherited.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="38651-214">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.InheritanceFlags" /> que especificam como a regra é herdada por subchaves.</span><span class="sxs-lookup"><span data-stu-id="38651-214">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="38651-215">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.PropagationFlags" /> que modificam o modo como a regra é herdada por subchaves.</span><span class="sxs-lookup"><span data-stu-id="38651-215">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span></span> <span data-ttu-id="38651-216">Sem sentido se o valor de <paramref name="inheritanceFlags" /> for <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="38651-216">Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="flags"><span data-ttu-id="38651-217">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica se a auditoria deve ser realizada em caso de acesso com êxito, com falha ou ambos.</span><span class="sxs-lookup"><span data-stu-id="38651-217">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</span></span></param>
        <summary><span data-ttu-id="38651-218">Cria uma nova regra de auditoria, especificando o usuário ao qual a regra se aplica, os direitos de acesso para auditoria, a herança e a propagação da regra e o resultado que dispara a regra.</span><span class="sxs-lookup"><span data-stu-id="38651-218">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, the inheritance and propagation of the rule, and the outcome that triggers the rule.</span></span></summary>
        <returns><span data-ttu-id="38651-219">Um objeto <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que representa a regra de auditoria especificada para o usuário especificado com os sinalizadores especificados.</span><span class="sxs-lookup"><span data-stu-id="38651-219">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> object representing the specified audit rule for the specified user, with the specified flags.</span></span> <span data-ttu-id="38651-220">O tipo de retorno do método é a classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, mas o valor retornado pode ser convertido com segurança para a classe derivada.</span><span class="sxs-lookup"><span data-stu-id="38651-220">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-221">A maneira recomendada para criar regras de auditoria é usar os construtores do <xref:System.Security.AccessControl.RegistryAuditRule> classe.</span><span class="sxs-lookup"><span data-stu-id="38651-221">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-222">Embora você possa especificar o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> sinalizador, não há nenhuma razão para isso.</span><span class="sxs-lookup"><span data-stu-id="38651-222">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="38651-223">Para fins de controle de auditoria, os pares de nome/valor em uma subchave não são objetos separados.</span><span class="sxs-lookup"><span data-stu-id="38651-223">For the purposes of audit control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="38651-224">Os direitos de auditoria para os pares nome/valor são controlados pelos direitos da subchave.</span><span class="sxs-lookup"><span data-stu-id="38651-224">The audit rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="38651-225">Além disso, uma vez que todas as subchaves são contêineres (ou seja, eles podem conter outras subchaves), eles não são afetados pelo <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador.</span><span class="sxs-lookup"><span data-stu-id="38651-225">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="38651-226">Por fim, especificando o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> sinalizador desnecessariamente complica a manutenção de regras, pois interfere com a combinação normal regras compatíveis.</span><span class="sxs-lookup"><span data-stu-id="38651-226">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38651-227"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> especifica um valor inválido.</span><span class="sxs-lookup"><span data-stu-id="38651-227"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-228"><paramref name="identityReference" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-228"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="38651-229">- ou -</span><span class="sxs-lookup"><span data-stu-id="38651-229">-or-</span></span> 
 <span data-ttu-id="38651-230"><paramref name="accessMask" /> é zero.</span><span class="sxs-lookup"><span data-stu-id="38651-230"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38651-231"><paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="38651-231"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38651-232">Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.RegistrySecurity" /> usa para representar as regras de auditoria.</span><span class="sxs-lookup"><span data-stu-id="38651-232">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent audit rules.</span></span></summary>
        <value><span data-ttu-id="38651-233">Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</span><span class="sxs-lookup"><span data-stu-id="38651-233">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-234">Classes que derivam de <xref:System.Security.AccessControl.ObjectSecurity> substituição de classe a <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> propriedade e retornar o tipo que eles usam para representar os direitos de auditoria.</span><span class="sxs-lookup"><span data-stu-id="38651-234">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="38651-235">Ao trabalhar com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de regra de auditoria correta para usar com cada objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="38651-235">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As RegistryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; bool" Usage="registrySecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-236">Um <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que especifica o usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível.</span><span class="sxs-lookup"><span data-stu-id="38651-236">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="38651-237">Especifica os direitos a serem removidos da regra compatível, se encontrado.</span><span class="sxs-lookup"><span data-stu-id="38651-237">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="38651-238">Pesquisa por uma regra de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra de acesso especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra com essas características for encontrada, os direitos contidos na regra de acesso especificada serão removidos dela.</span><span class="sxs-lookup"><span data-stu-id="38651-238">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span></span></summary>
        <returns><span data-ttu-id="38651-239"><see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38651-239"><see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-240">O atual <xref:System.Security.AccessControl.RegistrySecurity> é procurado por uma regra que tem o mesmo usuário e o mesmo <xref:System.Security.AccessControl.AccessControlType> de valor como `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-240">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="38651-241">Se nenhuma dessas regras é encontrada, nenhuma ação será tomada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="38651-241">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="38651-242">Se as regras de correspondência for encontradas, seus sinalizadores de herança e compatibilidade são verificadas para compatibilidade com os sinalizadores especificados na `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-242">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="38651-243">Se nenhuma regra compatível for encontrada, nenhuma ação será tomada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="38651-243">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="38651-244">Se uma regra com sinalizadores compatíveis for encontrada, os direitos especificados `rule` são removidos da regra compatível, e o método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="38651-244">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="38651-245">Se `rule` Especifica os direitos não contidos na regra compatível, nenhuma ação será tomada em relação a esses direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-245">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="38651-246">Se todos os direitos são removidos da regra compatível, toda a regra é removida do atual <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-246">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-247">O seguinte exemplo de código mostra como o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método Remove os direitos de uma regra compatível e como a <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método mescla direitos com regras compatíveis.</span><span class="sxs-lookup"><span data-stu-id="38651-247">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="38651-248">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto e adiciona uma regra que permite que o usuário atual <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-248">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="38651-249">O exemplo cria uma regra que concede ao usuário <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, com a mesma herança e direitos de propagação como a primeira regra e usa o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para remover essa nova regra do <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-249">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="38651-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> é um constituinte de <xref:System.Security.AccessControl.RegistryRights.ReadKey>, portanto, ele é removido da regra compatível.</span><span class="sxs-lookup"><span data-stu-id="38651-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="38651-251">As regras de <xref:System.Security.AccessControl.RegistrySecurity> objeto são exibidos, mostrando os restantes constituintes de <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span><span class="sxs-lookup"><span data-stu-id="38651-251">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="38651-252">O exemplo de código, em seguida, chama o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para mesclar as <xref:System.Security.AccessControl.RegistryRights.SetValue> com o botão direito novamente para a regra no <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-252">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-253">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-253">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-254">O segundo exemplo nesta seção anexa um objeto de segurança e, então, fazer os exemplos <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38651-254">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType><xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-255"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-255"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-256">Um <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que especifica o usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> pelos quais pesquisar.</span><span class="sxs-lookup"><span data-stu-id="38651-256">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span></span> <span data-ttu-id="38651-257">Quaisquer direitos, sinalizadores de herança ou sinalizadores de propagação especificados por essa regra são ignorados.</span><span class="sxs-lookup"><span data-stu-id="38651-257">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="38651-258">Pesquisa por todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e, se encontradas, remove-as.</span><span class="sxs-lookup"><span data-stu-id="38651-258">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-259">O atual <xref:System.Security.AccessControl.RegistrySecurity> é procurado por regras que têm o mesmo usuário e o mesmo <xref:System.Security.AccessControl.AccessControlType> de valor como `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-259">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="38651-260">Quaisquer direitos, sinalizadores de herança ou sinalizadores de propagação especificados por `rule` são ignorados quando executar esta pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38651-260">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="38651-261">Se nenhuma regra de correspondência for encontrada, nenhuma ação é executada.</span><span class="sxs-lookup"><span data-stu-id="38651-261">If no matching rules are found, no action is taken.</span></span>  
  
 <span data-ttu-id="38651-262">Por exemplo, se um usuário tiver várias regras que permitem que vários direitos com herança diferente e sinalizadores de propagação, você pode remover todas essas regras com a criação de um <xref:System.Security.AccessControl.RegistryAccessRule> objeto que especifica o usuário e <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, com quaisquer direitos arbitrários e sinalizadores, e passar essa regra, o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="38651-262">For example, if a user has multiple rules that allow various rights with different inheritance and propagation flags, you can remove all those rules by creating a <xref:System.Security.AccessControl.RegistryAccessRule> object that specifies the user and <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, with any arbitrary rights and flags, and passing that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-263">O exemplo de código a seguir mostra que o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> método Remove todas as regras que correspondem ao usuário e <xref:System.Security.AccessControl.AccessControlType>, ignorando os direitos e sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="38651-263">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights and flags.</span></span>  
  
 <span data-ttu-id="38651-264">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto e adiciona as regras de permissão e negação vários direitos para o usuário atual, com diferentes sinalizadores de herança e de propagação.</span><span class="sxs-lookup"><span data-stu-id="38651-264">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="38651-265">O exemplo cria uma nova regra que permite que o usuário atual apropriar-se e passa essa regra, o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> método para remover as duas regras que permitem o acesso.</span><span class="sxs-lookup"><span data-stu-id="38651-265">The example then creates a new rule that allows the current user to take ownership, and passes that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method to remove the two rules that allow access.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-266">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-266">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-267">Consulte a <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método e o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="38651-267">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-268"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-268"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-269">O <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> a ser removido.</span><span class="sxs-lookup"><span data-stu-id="38651-269">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to remove.</span></span></param>
        <summary><span data-ttu-id="38651-270">Pesquisa por uma regra de controle de acesso que corresponda exatamente à regra especificada e, se encontrada, remove-a.</span><span class="sxs-lookup"><span data-stu-id="38651-270">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-271">A regra será removida somente se ele corresponde exatamente a `rule` em todos os detalhes, incluindo sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="38651-271">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="38651-272">Outras regras com o mesmo usuário e <xref:System.Security.AccessControl.AccessControlType> não são afetados.</span><span class="sxs-lookup"><span data-stu-id="38651-272">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38651-273">Uma regra representa um ou mais subjacente entradas controle de acesso (ACE) e essas entradas são divididos ou combinados conforme necessário quando você modifica as regras de segurança de acesso para um usuário.</span><span class="sxs-lookup"><span data-stu-id="38651-273">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="38651-274">Portanto, uma regra talvez não exista mais no formulário específico que tinha quando foi adicionada e nesse caso o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método não é possível removê-lo.</span><span class="sxs-lookup"><span data-stu-id="38651-274">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-275">O exemplo de código a seguir mostra que o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método Remove uma regra somente se ele corresponder exatamente.</span><span class="sxs-lookup"><span data-stu-id="38651-275">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method removes a rule only if it matches exactly.</span></span>  
  
 <span data-ttu-id="38651-276">O exemplo cria duas regras que permitem que diferentes direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-276">The example creates two rules that allow different rights.</span></span> <span data-ttu-id="38651-277">As regras têm sinalizadores de herança e de propagação compatíveis, portanto, quando a segunda regra é adicionada que ele mescla com o primeiro.</span><span class="sxs-lookup"><span data-stu-id="38651-277">The rules have compatible inheritance and propagation flags, so when the second rule is added it merges with the first.</span></span> <span data-ttu-id="38651-278">O exemplo chama o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método, especificando a primeira regra, mas porque as regras são mescladas não há nenhuma regra que corresponde ao.</span><span class="sxs-lookup"><span data-stu-id="38651-278">The example calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method, specifying the first rule, but because the rules are merged there is no rule that matches.</span></span> <span data-ttu-id="38651-279">O exemplo, em seguida, chama o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para a remover a segunda regra de regra mesclada e, finalmente, chama o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método para remover a primeira regra.</span><span class="sxs-lookup"><span data-stu-id="38651-279">The example then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to the remove the second rule from the merged rule, and finally calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method to remove the first rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-280">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-280">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-281">Consulte a <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método e o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="38651-281">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-282"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-282"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As RegistryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; bool" Usage="registrySecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-283">Um <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que especifica o usuário pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível.</span><span class="sxs-lookup"><span data-stu-id="38651-283">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="38651-284">Especifica os direitos a serem removidos da regra compatível, se encontrado.</span><span class="sxs-lookup"><span data-stu-id="38651-284">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="38651-285">Pesquisa uma regra de controle de auditoria com o mesmo usuário que a regra especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra compatível for encontrada, os direitos contidos na regra especificada serão removidos dela.</span><span class="sxs-lookup"><span data-stu-id="38651-285">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span></span></summary>
        <returns><span data-ttu-id="38651-286"><see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38651-286"><see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-287">O atual <xref:System.Security.AccessControl.RegistrySecurity> é procurado por uma regra de auditoria que tenha o mesmo usuário que `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-287">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="38651-288">Se nenhuma dessas regras é encontrada, nenhuma ação será tomada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="38651-288">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="38651-289">Se as regras de correspondência for encontradas, seus sinalizadores de herança e compatibilidade são verificadas para compatibilidade com os sinalizadores especificados na `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-289">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="38651-290">Se nenhuma regra compatível for encontrada, nenhuma ação será tomada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="38651-290">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="38651-291">Se uma regra com sinalizadores compatíveis for encontrada, os direitos especificados `rule` são removidos da regra compatível, e o método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="38651-291">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="38651-292">Se `rule` Especifica os direitos não contidos na regra compatível, nenhuma ação será tomada em relação a esses direitos.</span><span class="sxs-lookup"><span data-stu-id="38651-292">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="38651-293">Se todos os direitos são removidos da regra compatível, toda a regra é removida do atual <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-293">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-294"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-294"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-295">Um <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que especifica o usuário pelo qual pesquisar.</span><span class="sxs-lookup"><span data-stu-id="38651-295">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for.</span></span> <span data-ttu-id="38651-296">Quaisquer direitos, sinalizadores de herança ou sinalizadores de propagação especificados por essa regra são ignorados.</span><span class="sxs-lookup"><span data-stu-id="38651-296">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="38651-297">Pesquisa todas as regras de auditoria com o mesmo usuário que a regra especificada e, se encontradas, remove-as.</span><span class="sxs-lookup"><span data-stu-id="38651-297">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-298">O atual <xref:System.Security.AccessControl.RegistrySecurity> é procurado por regras de auditoria que têm o mesmo usuário que `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-298">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="38651-299">Quaisquer direitos, sinalizadores de herança ou sinalizadores de propagação especificados por `rule` são ignorados quando executar esta pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38651-299">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="38651-300">Se nenhuma regra de correspondência for encontrada, nenhuma ação é executada.</span><span class="sxs-lookup"><span data-stu-id="38651-300">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-301"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-301"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-302">O <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> a ser removido.</span><span class="sxs-lookup"><span data-stu-id="38651-302">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to be removed.</span></span></param>
        <summary><span data-ttu-id="38651-303">Pesquisa por uma regra de auditoria que corresponda exatamente à regra especificada e, se encontrada, remove-a.</span><span class="sxs-lookup"><span data-stu-id="38651-303">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-304">A regra será removida somente se ele corresponde exatamente a `rule` em todos os detalhes, incluindo sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="38651-304">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="38651-305">Outras regras de auditoria para o mesmo usuário não são afetadas.</span><span class="sxs-lookup"><span data-stu-id="38651-305">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="38651-306">Uma regra representa um ou mais subjacente entradas controle de acesso (ACE) e essas entradas são divididos ou combinados conforme necessário quando você modifica as regras de segurança de auditoria para um usuário.</span><span class="sxs-lookup"><span data-stu-id="38651-306">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="38651-307">Portanto, uma regra talvez não exista mais no formulário específico que tinha quando foi adicionada e nesse caso o <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> método não é possível removê-lo.</span><span class="sxs-lookup"><span data-stu-id="38651-307">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-308"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-308"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-309">O <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-309">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span></span> <span data-ttu-id="38651-310">O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="38651-310">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="38651-311">Remove todas as regras de controle de acesso com o mesmo usuário que a regra especificada, independentemente de <see cref="T:System.Security.AccessControl.AccessControlType" /> e, em seguida, adiciona a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="38651-311">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-312">Se não houver nenhum cujo usuário corresponde a regra especificada, as regras de acesso `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-312">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-313">O seguinte exemplo de código mostra como o <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> método substitui todas as regras para o usuário correspondente com a regra especificada para a correspondência.</span><span class="sxs-lookup"><span data-stu-id="38651-313">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="38651-314">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto e adiciona as regras de permissão e negação vários direitos para o usuário atual, com diferentes sinalizadores de herança e de propagação.</span><span class="sxs-lookup"><span data-stu-id="38651-314">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="38651-315">O exemplo cria uma nova regra que permite que o usuário atual somente ler a chave e usa o <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> método para remover todas as regras para o usuário e substituí-los com a nova regra.</span><span class="sxs-lookup"><span data-stu-id="38651-315">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method to remove the all rules for the user and replace them with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-316">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-316">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-317">Consulte a <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método e o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="38651-317">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-318">O <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-318">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span></span> <span data-ttu-id="38651-319">O usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> dessa regra determinam as regras a serem removidas antes dessa regra ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="38651-319">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="38651-320">Remove todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) que a regra especificada e, em seguida, adiciona a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="38651-320">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-321">Se a regra especificada tiver <xref:System.Security.AccessControl.AccessControlType.Allow>, o efeito desse método é remover todos os <xref:System.Security.AccessControl.AccessControlType.Allow> regras para o usuário especificado, substituindo-os com a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="38651-321">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="38651-322">Se a regra especificada tiver <xref:System.Security.AccessControl.AccessControlType.Deny>, todos os <xref:System.Security.AccessControl.AccessControlType.Deny> regras para o usuário especificado são substituídas com a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="38651-322">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="38651-323">Se não houver nenhuma regra cujo usuário e <xref:System.Security.AccessControl.AccessControlType> correspondem à regra especificada, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-323">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38651-324">O exemplo de código a seguir mostra que o <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> método Remove todas as regras que correspondem ao usuário e a <xref:System.Security.AccessControl.AccessControlType> dos `rule`, ignorando os direitos e os sinalizadores e substitui-los com `rule`.</span><span class="sxs-lookup"><span data-stu-id="38651-324">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, ignoring rights and flags, and replaces them with `rule`.</span></span>  
  
 <span data-ttu-id="38651-325">O exemplo cria um <xref:System.Security.AccessControl.RegistrySecurity> do objeto e adiciona as regras de permissão e negação vários direitos para o usuário atual, com diferentes sinalizadores de herança e de propagação.</span><span class="sxs-lookup"><span data-stu-id="38651-325">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="38651-326">O exemplo cria uma nova regra que permite que o usuário atual somente ler a chave e usa o <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> método para remover as duas regras que permitem o acesso e substituí-los com a nova regra.</span><span class="sxs-lookup"><span data-stu-id="38651-326">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method to remove the two rules that allow access and to replace them with the new rule.</span></span> <span data-ttu-id="38651-327">A regra que nega o acesso não é afetada.</span><span class="sxs-lookup"><span data-stu-id="38651-327">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38651-328">Este exemplo não anexa o objeto de segurança para um <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="38651-328">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="38651-329">Consulte a <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método e o <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="38651-329">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-330"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-330"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="38651-331">O <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-331">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to add.</span></span> <span data-ttu-id="38651-332">O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="38651-332">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="38651-333">Remove todas as regras de auditoria com o mesmo usuário que a regra especificada, independentemente do valor de <see cref="T:System.Security.AccessControl.AuditFlags" /> e, em seguida, adiciona a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="38651-333">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38651-334">Se não houver nenhuma regra de auditoria cujo usuário corresponde a regra especificada, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38651-334">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38651-335"><paramref name="rule" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38651-335"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>