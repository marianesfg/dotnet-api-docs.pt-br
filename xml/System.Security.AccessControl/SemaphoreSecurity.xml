<Type Name="SemaphoreSecurity" FullName="System.Security.AccessControl.SemaphoreSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02041a0b04c0b45af0a829d8bd9904736588668d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SemaphoreSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreSecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type SemaphoreSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4750f-101">Representa a segurança do controle de acesso do Windows de um semáforo nomeado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4750f-101">Represents the Windows access control security for a named semaphore.</span>
      </span>
      <span data-ttu-id="4750f-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4750f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-103">Um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto Especifica direitos de acesso para um semáforo de sistema nomeado e também especifica como as tentativas de acesso são auditadas.</span><span class="sxs-lookup"><span data-stu-id="4750f-103">A <xref:System.Security.AccessControl.SemaphoreSecurity> object specifies access rights for a named system semaphore, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="4750f-104">Direitos de acesso para o semáforo são expressos como regras, com cada regra de acesso representado por um <xref:System.Security.AccessControl.SemaphoreAccessRule> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-104">Access rights to the semaphore are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.SemaphoreAccessRule> object.</span></span> <span data-ttu-id="4750f-105">Cada regra de auditoria é representada por um <xref:System.Security.AccessControl.SemaphoreAuditRule> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.SemaphoreAuditRule> object.</span></span>  
  
 <span data-ttu-id="4750f-106">Isso reflete o sistema de segurança de Windows subjacente, em que cada objeto protegível tem no máximo um controle lista de acesso discricionário (DACL) que controla o acesso ao objeto protegido e no máximo com a lista de controle de acesso um sistema (SACL) que especifica que o acesso tentativas são auditadas.</span><span class="sxs-lookup"><span data-stu-id="4750f-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="4750f-107">A DACL e SACL são ordenados listas de entradas de controle de acesso (ACE) que especificam o acesso e auditoria para usuários e grupos.</span><span class="sxs-lookup"><span data-stu-id="4750f-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="4750f-108">Um <xref:System.Security.AccessControl.SemaphoreAccessRule> ou <xref:System.Security.AccessControl.SemaphoreAuditRule> objeto pode representar mais de uma ACE.</span><span class="sxs-lookup"><span data-stu-id="4750f-108">A <xref:System.Security.AccessControl.SemaphoreAccessRule> or <xref:System.Security.AccessControl.SemaphoreAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-109">Um <xref:System.Threading.Semaphore> objeto pode representar um semáforo local ou um semáforo de sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="4750f-109">A <xref:System.Threading.Semaphore> object can represent a local semaphore or a named system semaphore.</span></span> <span data-ttu-id="4750f-110">Segurança de controle de acesso do Windows é significativa apenas para semáforos sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="4750f-110">Windows access control security is meaningful only for named system semaphores.</span></span>  
  
 <span data-ttu-id="4750f-111">O <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Security.AccessControl.SemaphoreAccessRule>, e <xref:System.Security.AccessControl.SemaphoreAuditRule> classes ocultar os detalhes de implementação de ACEs e ACLs.</span><span class="sxs-lookup"><span data-stu-id="4750f-111">The <xref:System.Security.AccessControl.SemaphoreSecurity>, <xref:System.Security.AccessControl.SemaphoreAccessRule>, and <xref:System.Security.AccessControl.SemaphoreAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="4750f-112">Elas permitem que você ignore os diferentes tipos ACE dezessete e a complexidade de manter corretamente herança e propagação de direitos de acesso.</span><span class="sxs-lookup"><span data-stu-id="4750f-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="4750f-113">Esses objetos também foram projetados para impedir que os seguintes erros comuns de controle de acesso:</span><span class="sxs-lookup"><span data-stu-id="4750f-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="4750f-114">Criando um descritor de segurança com uma DACL null.</span><span class="sxs-lookup"><span data-stu-id="4750f-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="4750f-115">Uma referência nula para uma DACL permite que qualquer usuário adicionar regras de acesso a um objeto, potencialmente, criando um ataque de negação de serviço.</span><span class="sxs-lookup"><span data-stu-id="4750f-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="4750f-116">Um novo <xref:System.Security.AccessControl.SemaphoreSecurity> objeto sempre começa com uma DACL vazia, o que nega todo o acesso para todos os usuários.</span><span class="sxs-lookup"><span data-stu-id="4750f-116">A new <xref:System.Security.AccessControl.SemaphoreSecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="4750f-117">Violando a ordem canônica de ACEs.</span><span class="sxs-lookup"><span data-stu-id="4750f-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="4750f-118">Se a lista ACE na DACL não é mantida na ordem canônica, os usuários podem inadvertidamente receberá acesso para o objeto protegido.</span><span class="sxs-lookup"><span data-stu-id="4750f-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="4750f-119">Por exemplo, os direitos de acesso negado sempre devem aparecer antes de direitos de acesso permitido.</span><span class="sxs-lookup"><span data-stu-id="4750f-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="4750f-120"><xref:System.Security.AccessControl.SemaphoreSecurity> objetos de mantém a ordem correta internamente.</span><span class="sxs-lookup"><span data-stu-id="4750f-120"><xref:System.Security.AccessControl.SemaphoreSecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="4750f-121">Manipulando os sinalizadores de descritor de segurança, que devem estar sob controle do Gerenciador de recursos somente.</span><span class="sxs-lookup"><span data-stu-id="4750f-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="4750f-122">Criando combinações inválidas de sinalizadores ACE.</span><span class="sxs-lookup"><span data-stu-id="4750f-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="4750f-123">Manipulação de ACEs herdadas.</span><span class="sxs-lookup"><span data-stu-id="4750f-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="4750f-124">Herança e propagação são manipulados pelo Gerenciador de recursos, em resposta a alterações feitas às regras de acesso e auditoria.</span><span class="sxs-lookup"><span data-stu-id="4750f-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="4750f-125">Inserindo ACEs sentidas ACLs.</span><span class="sxs-lookup"><span data-stu-id="4750f-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="4750f-126">Os recursos somente os objetos de segurança do .NET não oferece suportados são perigosas atividades que devem ser evitadas, a maioria dos desenvolvedores de aplicativos, como o seguinte:</span><span class="sxs-lookup"><span data-stu-id="4750f-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="4750f-127">Tarefas de nível inferior que são normalmente executadas pelo Gerenciador de recursos.</span><span class="sxs-lookup"><span data-stu-id="4750f-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="4750f-128">Adicionar ou remover entradas de controle de acesso de maneiras que não precisam manter a ordem canônica.</span><span class="sxs-lookup"><span data-stu-id="4750f-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="4750f-129">Para modificar a segurança de controle de acesso do Windows para um semáforo com nome, use o <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> método para obter o <xref:System.Security.AccessControl.SemaphoreSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-129">To modify Windows access control security for a named semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="4750f-130">Modificar o objeto de segurança, adicionando e removendo regras e, em seguida, usar o <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> método para recolocá-la.</span><span class="sxs-lookup"><span data-stu-id="4750f-130">Modify the security object by adding and removing rules, and then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4750f-131">Alterações feitas em um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto não afetam os níveis de acesso do sinal do nomeada até que você chamar o <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> método para atribuir o objeto de segurança alterado para o semáforo com nome.</span><span class="sxs-lookup"><span data-stu-id="4750f-131">Changes you make to a <xref:System.Security.AccessControl.SemaphoreSecurity> object do not affect the access levels of the named semaphore until you call the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named semaphore.</span></span>  
  
 <span data-ttu-id="4750f-132">Para copiar a segurança de controle de acesso de um sinal para outro, use o <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> método para obter um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto que representa as regras de acesso e auditoria para o sinal do primeiro e depois use o <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> método ou um construtor que aceite um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto atribuir essas regras para o sinal do segundo.</span><span class="sxs-lookup"><span data-stu-id="4750f-132">To copy access control security from one semaphore to another, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.SemaphoreSecurity> object representing the access and audit rules for the first semaphore, then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method, or a constructor that accepts a <xref:System.Security.AccessControl.SemaphoreSecurity> object, to assign those rules to the second semaphore.</span></span>  
  
 <span data-ttu-id="4750f-133">Os usuários com um investimento em linguagem de definição de descritor de segurança (SDDL) podem usar o <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> método para definir regras de acesso para um semáforo com nome e o <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> método para obter uma cadeia de caracteres que representa as regras de acesso no formato SDDL.</span><span class="sxs-lookup"><span data-stu-id="4750f-133">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a named semaphore, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="4750f-134">Isso não é recomendado para novo desenvolvimento.</span><span class="sxs-lookup"><span data-stu-id="4750f-134">This is not recommended for new development.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-135">Não há suporte para segurança em objetos de sincronização para o Windows 98 ou Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="4750f-135">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-136">O exemplo de código a seguir demonstra a separação entre <xref:System.Security.AccessControl.AccessControlType.Allow> regras e <xref:System.Security.AccessControl.AccessControlType.Deny> regras e exibe a combinação de direitos em regras compatíveis.</span><span class="sxs-lookup"><span data-stu-id="4750f-136">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="4750f-137">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto adiciona regras de permissão e negação vários direitos para o usuário atual e exibe o par resultante de regras.</span><span class="sxs-lookup"><span data-stu-id="4750f-137">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="4750f-138">O exemplo permite que novos direitos para o usuário atual e exibe o resultado mostra que novos direitos são mesclados com a existente <xref:System.Security.AccessControl.AccessControlType.Allow> regra.</span><span class="sxs-lookup"><span data-stu-id="4750f-138">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-139">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-139">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-140">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-140">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.SemaphoreAccessRule" />
    <altmember cref="T:System.Security.AccessControl.SemaphoreAuditRule" />
    <altmember cref="T:System.Security.AccessControl.SemaphoreRights" />
    <altmember cref="M:System.Threading.Semaphore.GetAccessControl" />
    <altmember cref="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4750f-141">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-141">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4750f-142">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> com valores padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-143">Um novo <xref:System.Security.AccessControl.SemaphoreSecurity> objeto sempre começa com uma lista vazia de acesso discricionário (DACL), que nega todo o acesso para todos os usuários.</span><span class="sxs-lookup"><span data-stu-id="4750f-143">A new <xref:System.Security.AccessControl.SemaphoreSecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4750f-144">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-144">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.SemaphoreSecurity" Usage="new System.Security.AccessControl.SemaphoreSecurity (name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4750f-145">O nome do semáforo do sistema cujas regras de segurança de controle de acesso devem ser recuperadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-145">The name of the system semaphore whose access control security rules are to be retrieved.</span>
          </span>
        </param>
        <param name="includeSections">
          <span data-ttu-id="4750f-146">Uma combinação de sinalizadores <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especificam as seções a serem recuperadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-146">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-147">Inicializa uma nova instância da classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> com as seções especificadas das regras de segurança de controle de acesso do semáforo do sistema com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-147">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with the specified sections of the access control security rules from the system semaphore with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-148">Este construtor permite obter a segurança de controle de acesso para um semáforo de sistema nomeado sem primeiro criar uma <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-148">This constructor allows you to obtain the access control security for a named system semaphore without first creating a <xref:System.Threading.Semaphore> object.</span></span>  
  
 <span data-ttu-id="4750f-149">Deve ser tomado cuidado ao trabalhar com objetos de sistema nomeado.</span><span class="sxs-lookup"><span data-stu-id="4750f-149">Caution must be exercised when working with named system objects.</span></span> <span data-ttu-id="4750f-150">Se houver um objeto de sistema chamado `name` que não é um sinal, a segurança de acesso de controle pode ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="4750f-150">If there is a system object named `name` that is not a semaphore, its control access security might be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4750f-151">Essa classe não é compatível com o Windows 98 nem com o Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-151">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.SemaphoreSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4750f-152">Obtém a enumeração que a classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> usa para representar os direitos de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-152">Gets the enumeration that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4750f-153">Um objeto <see cref="T:System.Type" /> que representa a enumeração <see cref="T:System.Security.AccessControl.SemaphoreRights" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-153">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreRights" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-154">Classes que derivam de <xref:System.Security.AccessControl.ObjectSecurity> classe substituição de <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> propriedade e retornar o tipo que eles usam para representar os direitos de acesso.</span><span class="sxs-lookup"><span data-stu-id="4750f-154">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="4750f-155">Quando você trabalha com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de enumeração correto a ser usado com cada objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="4750f-155">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="abstract member AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule&#xA;override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="semaphoreSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="4750f-156">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-156">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="4750f-157">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especificam os direitos de acesso a serem permitidos ou negados, convertidos em um inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-157">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to allow or deny, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="4750f-158">Sem utilidade para semáforos nomeados, porque eles não têm nenhuma hierarquia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-158">Meaningless for named semaphores, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="4750f-159">Sem utilidade para semáforos nomeados, porque eles não têm nenhuma hierarquia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-159">Meaningless for named semaphores, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="4750f-160">Sem utilidade para semáforos nomeados, porque eles não têm nenhuma hierarquia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-160">Meaningless for named semaphores, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="4750f-161">Um dos valores <see cref="T:System.Security.AccessControl.AccessControlType" /> que especificam se os direitos são permitidos ou negados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-161">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-162">Cria uma nova regra de controle de acesso para o usuário especificado, com os direitos de acesso, o controle de acesso e os sinalizadores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-162">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4750f-163">Um objeto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que representa os direitos especificados para o usuário especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-163">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> object representing the specified rights for the specified user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-164">A maneira recomendada para criação de regras de controle de acesso é usar os construtores de <xref:System.Security.AccessControl.SemaphoreAccessRule> classe.</span><span class="sxs-lookup"><span data-stu-id="4750f-164">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.SemaphoreAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-165">Embora os sinalizadores de herança e propagação fazem sentidos para semáforos nomeados, ainda é possível especificá-los, que isso não é recomendado, porque ela desnecessariamente complica a manutenção de regras, por exemplo por interferir com a combinação de regras Caso contrário, será compatível.</span><span class="sxs-lookup"><span data-stu-id="4750f-165">Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4750f-166">
            <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="type" /> especifica um valor inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-166">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-167">
            <paramref name="identityReference" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-167">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4750f-168">-ou- <paramref name="accessMask" /> é zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-168">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4750f-169">
            <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-169">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.SemaphoreSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4750f-170">Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> usa para representar as regras de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-170">Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4750f-171">Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-171">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-172">Classes que derivam de <xref:System.Security.AccessControl.ObjectSecurity> classe substituição a <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> propriedade e retornar o tipo que eles usam para representar as regras de acesso.</span><span class="sxs-lookup"><span data-stu-id="4750f-172">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="4750f-173">Quando você trabalha com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de regra de acesso corretas para usar com cada objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="4750f-173">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAccessRule : System.Security.AccessControl.SemaphoreAccessRule -&gt; unit" Usage="semaphoreSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-174">A regra de controle de acesso a ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-174">The access control rule to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-175">Pesquisa por uma regra correspondente com a qual a nova regra pode ser mesclada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-175">Searches for a matching rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="4750f-176">Se nenhum erro for encontrado, adiciona a nova regra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-176">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-177">O <xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A> método procura regras com o mesmo usuário ou grupo e o mesmo <xref:System.Security.AccessControl.AccessControlType> como `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-177">The <xref:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="4750f-178">Se nenhum for encontrado, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="4750f-178">If none are found, `rule` is added.</span></span> <span data-ttu-id="4750f-179">Se uma regra de correspondência for encontrada, os direitos no `rule` são mescladas com a regra existente.</span><span class="sxs-lookup"><span data-stu-id="4750f-179">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-180">O exemplo de código a seguir demonstra a separação entre <xref:System.Security.AccessControl.AccessControlType.Allow> regras e <xref:System.Security.AccessControl.AccessControlType.Deny> regras e exibe a combinação de direitos em regras compatíveis.</span><span class="sxs-lookup"><span data-stu-id="4750f-180">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="4750f-181">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto adiciona regras de permissão e negação vários direitos para o usuário atual e exibe o par resultante de regras.</span><span class="sxs-lookup"><span data-stu-id="4750f-181">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="4750f-182">O exemplo permite que novos direitos para o usuário atual e exibe o resultado mostra que novos direitos são mesclados com a existente <xref:System.Security.AccessControl.AccessControlType.Allow> regra.</span><span class="sxs-lookup"><span data-stu-id="4750f-182">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-183">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-183">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-184">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-184">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-185">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-185">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAuditRule : System.Security.AccessControl.SemaphoreAuditRule -&gt; unit" Usage="semaphoreSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-186">A regra de auditoria a adicionar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-186">The audit rule to add.</span>
          </span>
          <span data-ttu-id="4750f-187">O usuário especificado por essa regra determina a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-187">The user specified by this rule determines the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-188">Pesquisa uma regra de auditoria com a qual a nova regra pode ser mesclada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-188">Searches for an audit rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="4750f-189">Se nenhum erro for encontrado, adiciona a nova regra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-189">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-190">O <xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A> método procura regras com o mesmo usuário ou grupo como `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-190">The <xref:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="4750f-191">Se nenhum for encontrado, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="4750f-191">If none are found, `rule` is added.</span></span> <span data-ttu-id="4750f-192">Se uma regra de correspondência for encontrada, os sinalizadores no `rule` são mesclados para a regra existente.</span><span class="sxs-lookup"><span data-stu-id="4750f-192">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="abstract member AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule&#xA;override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="semaphoreSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="4750f-193">Um <see cref="T:System.Security.Principal.IdentityReference" /> que identifica o usuário ou o grupo ao qual a regra se aplica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-193">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="4750f-194">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica os direitos de acesso a serem auditados e convertidos em um inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-194">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to audit, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="4750f-195">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-195">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="4750f-196">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-196">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="4750f-197">Sem utilidade para identificadores de espera nomeados, porque eles não têm nenhuma hierarquia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-197">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="4750f-198">Uma combinação bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especificam se deve-se auditar acesso com êxito, acesso com falha ou ambos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-198">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-199">Cria uma nova regra de auditoria, especificando o usuário ao qual a regra se aplica, os direitos de acesso para auditoria e o resultado que dispara a regra de auditoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-199">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4750f-200">Um objeto <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que representa a regra de auditoria para o usuário especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-200">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> object representing the specified audit rule for the specified user.</span>
          </span>
          <span data-ttu-id="4750f-201">O tipo de retorno do método é a classe base, <see cref="T:System.Security.AccessControl.AuditRule" />, mas o valor retornado pode ser convertido com segurança para a classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-201">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-202">A maneira recomendada para criar regras de auditoria é usar os construtores de <xref:System.Security.AccessControl.SemaphoreAuditRule> classe.</span><span class="sxs-lookup"><span data-stu-id="4750f-202">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.SemaphoreAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-203">Embora os sinalizadores de herança e propagação fazem sentidos para semáforos nomeados, ele ainda é possível especificá-los.</span><span class="sxs-lookup"><span data-stu-id="4750f-203">Although inheritance and propagation flags are meaningless for named semaphores, it is still possible to specify them.</span></span> <span data-ttu-id="4750f-204">Isso não é recomendável, pois ela desnecessariamente complica a manutenção de regras, por exemplo por interferir com a combinação de regras que seriam compatíveis.</span><span class="sxs-lookup"><span data-stu-id="4750f-204">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4750f-205">
            <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> ou <paramref name="flags" /> especifica um valor inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-205">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-206">
            <paramref name="identityReference" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-206">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4750f-207">-ou- <paramref name="accessMask" /> é zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-207">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4750f-208">
            <paramref name="identityReference" /> não e do tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> nem de um tipo como <see cref="T:System.Security.Principal.NTAccount" /> que pode ser convertido para o tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-208">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.SemaphoreSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4750f-209">Obtém o tipo que a classe <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> usa para representar as regras de auditoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-209">Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent audit rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4750f-210">Um objeto <see cref="T:System.Type" /> que representa a classe <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-210">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-211">Classes que derivam de <xref:System.Security.AccessControl.ObjectSecurity> classe substituição a <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> propriedade e retornar o tipo que eles usam para representar os direitos de auditoria.</span><span class="sxs-lookup"><span data-stu-id="4750f-211">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="4750f-212">Quando você trabalha com matrizes ou coleções que contêm vários tipos de objetos de segurança, use essa propriedade para determinar o tipo de regra de auditoria correto a ser usado com cada objeto de segurança.</span><span class="sxs-lookup"><span data-stu-id="4750f-212">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As SemaphoreAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRule : System.Security.AccessControl.SemaphoreAccessRule -&gt; bool" Usage="semaphoreSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-213">Um <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que especifica o usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-213">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="4750f-214">Especifica os direitos a serem removidos da regra compatível, se encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-214">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-215">Procura uma regra de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e com herança compatível e sinalizadores de propagação; se uma regra com essas características for encontrada, os direitos contidos na regra de acesso especificada serão removidos dela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-215">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4750f-216">
            <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-216">
              <see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-217">Atual <xref:System.Security.AccessControl.SemaphoreSecurity> é pesquisada para uma regra que tem o mesmo usuário e o mesmo <xref:System.Security.AccessControl.AccessControlType> valor como `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-217">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="4750f-218">Se nenhuma regra for encontrada, nenhuma ação é executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="4750f-218">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="4750f-219">Se as regras de correspondência for encontradas, seus sinalizadores de herança e compatibilidade são verificados quanto à compatibilidade com os sinalizadores especificados na `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-219">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="4750f-220">Se nenhuma regra compatível foi encontrada, nenhuma ação é executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="4750f-220">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="4750f-221">Se uma regra com sinalizadores compatíveis for encontrada, os direitos especificados em `rule` são removidos da regra compatível, e o método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="4750f-221">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="4750f-222">Se `rule` Especifica direitos não contidos na regra compatível, nenhuma ação será tomada em relação a esses direitos.</span><span class="sxs-lookup"><span data-stu-id="4750f-222">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="4750f-223">Se todos os direitos são removidos da regra compatível, toda a regra será removida do atual <xref:System.Security.AccessControl.SemaphoreSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-223">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4750f-224">Embora você possa especificar sinalizadores de herança e propagação para regras de acesso de semáforo, criando-as com o <xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A> método, isso não é recomendado.</span><span class="sxs-lookup"><span data-stu-id="4750f-224">Although you can specify inheritance and propagation flags for semaphore access rules, by creating them with the <xref:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="4750f-225">Herança e propagação não têm significado para semáforos nomeados e façam a manutenção de regras de acesso mais complicado.</span><span class="sxs-lookup"><span data-stu-id="4750f-225">Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of access rules more complicated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-226">O exemplo de código a seguir demonstra o uso do <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> método para remover direitos de um <xref:System.Security.AccessControl.AccessControlType.Allow> regra em um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-226">The following code example demonstrates the use of the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> method to remove rights from an <xref:System.Security.AccessControl.AccessControlType.Allow> rule in a <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="4750f-227">Ele também mostra que outros direitos no `rule` são ignorados.</span><span class="sxs-lookup"><span data-stu-id="4750f-227">It also shows that other rights in `rule` are ignored.</span></span>  
  
 <span data-ttu-id="4750f-228">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> e o adiciona regras que permitirem e negar vários direitos para o usuário atual.</span><span class="sxs-lookup"><span data-stu-id="4750f-228">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="4750f-229">Os direitos de permissão incluem <xref:System.Security.AccessControl.SemaphoreRights.Modify>, <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions>, e <xref:System.Security.AccessControl.SemaphoreRights.Synchronize>.</span><span class="sxs-lookup"><span data-stu-id="4750f-229">The rights allowed include <xref:System.Security.AccessControl.SemaphoreRights.Modify>, <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions>, and <xref:System.Security.AccessControl.SemaphoreRights.Synchronize>.</span></span> <span data-ttu-id="4750f-230">O exemplo cria uma nova regra para o usuário atual, incluindo <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> e <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> direitos e usa a regra com o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> método para remover <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> do <xref:System.Security.AccessControl.AccessControlType.Allow> regra no <xref:System.Security.AccessControl.SemaphoreSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-230">The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> and <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> rights, and uses that rule with the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule%2A> method to remove <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions> from the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="4750f-231">O estranhas <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> diretamente no `rule` será ignorado.</span><span class="sxs-lookup"><span data-stu-id="4750f-231">The extraneous <xref:System.Security.AccessControl.SemaphoreRights.TakeOwnership> right in `rule` is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-232">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-232">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-233">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-233">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-234">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-234">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleAll : System.Security.AccessControl.SemaphoreAccessRule -&gt; unit" Usage="semaphoreSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-235">Um <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que especifica o usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> pelos quais pesquisar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-235">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span>
          </span>
          <span data-ttu-id="4750f-236">Todos os direitos especificados por essa regra são ignorados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-236">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-237">Pesquisa por todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) como a regra especificada e, se encontradas, remove-as.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-237">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-238">Atual <xref:System.Security.AccessControl.SemaphoreSecurity> objeto é pesquisado para regras que têm o mesmo usuário e o mesmo <xref:System.Security.AccessControl.AccessControlType> valor como `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-238">The current <xref:System.Security.AccessControl.SemaphoreSecurity> object is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="4750f-239">Quaisquer direitos especificados pelo `rule` são ignorados quando executar esta pesquisa.</span><span class="sxs-lookup"><span data-stu-id="4750f-239">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="4750f-240">Se nenhuma regra de correspondência for encontrada, nenhuma ação é executada.</span><span class="sxs-lookup"><span data-stu-id="4750f-240">If no matching rules are found, no action is taken.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-241">O exemplo de código a seguir mostra que o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A> método Remove todas as regras de correspondam de usuário e <xref:System.Security.AccessControl.AccessControlType>, ignorando direitos.</span><span class="sxs-lookup"><span data-stu-id="4750f-241">The following code example shows that the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.</span></span>  
  
 <span data-ttu-id="4750f-242">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto, adiciona regras de permissão e negação vários direitos para o usuário atual e, em seguida, mescla direitos adicionais para o <xref:System.Security.AccessControl.AccessControlType.Allow> regra.</span><span class="sxs-lookup"><span data-stu-id="4750f-242">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span> <span data-ttu-id="4750f-243">O exemplo cria uma nova regra que permite que o usuário atual assumir a propriedade e usa a regra para remover o <xref:System.Security.AccessControl.AccessControlType.Allow> regra do <xref:System.Security.AccessControl.SemaphoreSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-243">The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType.Allow> rule from the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-244">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-244">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-245">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-245">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-246">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-246">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleSpecific : System.Security.AccessControl.SemaphoreAccessRule -&gt; unit" Usage="semaphoreSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-247">O <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-247">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-248">Pesquisa por uma regra de controle de acesso que corresponda exatamente à regra especificada e, se encontrada, remove-a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-248">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-249">A regra será removida somente se ele corresponde exatamente `rule` em todos os detalhes, incluindo sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="4750f-249">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="4750f-250">Outras regras com o mesmo usuário e <xref:System.Security.AccessControl.AccessControlType> não são afetados.</span><span class="sxs-lookup"><span data-stu-id="4750f-250">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4750f-251">Uma regra representa um ou mais subjacente entradas controle de acesso (ACE) e essas entradas são divididos ou combinados conforme necessário, quando você modificar as regras de segurança de acesso para um usuário.</span><span class="sxs-lookup"><span data-stu-id="4750f-251">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="4750f-252">Portanto, uma regra não existe mais no formulário específico que tinha quando foi adicionado e nesse caso o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> método não pode removê-lo.</span><span class="sxs-lookup"><span data-stu-id="4750f-252">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-253">O exemplo de código a seguir mostra que o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> método requer uma correspondência exata para remover uma regra e regras para permitir e negar direitos são independentes umas das outras.</span><span class="sxs-lookup"><span data-stu-id="4750f-253">The following code example shows that the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</span></span>  
  
 <span data-ttu-id="4750f-254">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> objeto, adiciona regras de permissão e negação vários direitos para o usuário atual e, em seguida, mescla direitos adicionais para o <xref:System.Security.AccessControl.AccessControlType.Allow> regra de acesso.</span><span class="sxs-lookup"><span data-stu-id="4750f-254">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> access rule.</span></span> <span data-ttu-id="4750f-255">O exemplo, em seguida, passa o original <xref:System.Security.AccessControl.AccessControlType.Allow> regra para o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> método e exibe os resultados, mostrando que nada é excluído.</span><span class="sxs-lookup"><span data-stu-id="4750f-255">The example then passes the original <xref:System.Security.AccessControl.AccessControlType.Allow> rule to the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method, and displays the results, showing that nothing is deleted.</span></span> <span data-ttu-id="4750f-256">O exemplo constrói uma regra que corresponda a <xref:System.Security.AccessControl.AccessControlType.Allow> regra no <xref:System.Security.AccessControl.SemaphoreSecurity> objeto e, com êxito, usa o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> método para remover a regra.</span><span class="sxs-lookup"><span data-stu-id="4750f-256">The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.SemaphoreSecurity> object, and successfully uses the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific%2A> method to remove the rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-257">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-257">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-258">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-258">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-259">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-259">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As SemaphoreAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRule : System.Security.AccessControl.SemaphoreAuditRule -&gt; bool" Usage="semaphoreSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-260">Um <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que especifica o usuário pelo qual pesquisar, bem como um conjunto de sinalizadores de herança e de propagação com os quais uma regra correspondente, se encontrada, deve ser compatível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-260">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="4750f-261">Especifica os direitos a serem removidos da regra compatível, se encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-261">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-262">Pesquisa uma regra de controle de auditoria com o mesmo usuário que a regra especificada e com sinalizadores de herança e de propagação compatíveis; se uma regra compatível for encontrada, os direitos contidos na regra especificada serão removidos dela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-262">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4750f-263">
            <see langword="true" /> se uma regra compatível for encontrada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-263">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-264">Atual <xref:System.Security.AccessControl.SemaphoreSecurity> é pesquisada para uma regra de auditoria que tenha o mesmo usuário conforme `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-264">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="4750f-265">Se nenhuma regra for encontrada, nenhuma ação é executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="4750f-265">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="4750f-266">Se as regras de correspondência for encontradas, seus sinalizadores de herança e compatibilidade são verificados quanto à compatibilidade com os sinalizadores especificados na `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-266">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="4750f-267">Se nenhuma regra compatível foi encontrada, nenhuma ação é executada e o método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="4750f-267">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="4750f-268">Se uma regra com sinalizadores compatíveis for encontrada, os direitos especificados em `rule` são removidos da regra compatível, e o método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="4750f-268">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="4750f-269">Se `rule` Especifica direitos não contidos na regra compatível, nenhuma ação será tomada em relação a esses direitos.</span><span class="sxs-lookup"><span data-stu-id="4750f-269">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="4750f-270">Se todos os direitos são removidos da regra compatível, toda a regra será removida do atual <xref:System.Security.AccessControl.SemaphoreSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-270">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4750f-271">Embora você possa especificar sinalizadores de herança e propagação para regras de auditoria de semáforo, criando-as com o <xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A> método, isso não é recomendado.</span><span class="sxs-lookup"><span data-stu-id="4750f-271">Although you can specify inheritance and propagation flags for semaphore audit rules, by creating them with the <xref:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="4750f-272">Herança e propagação não têm significado para semáforos nomeados e façam a manutenção de regras de auditoria mais complicado.</span><span class="sxs-lookup"><span data-stu-id="4750f-272">Inheritance and propagation have no meaning for named semaphores, and they make the maintenance of audit rules more complicated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-273">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-273">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleAll : System.Security.AccessControl.SemaphoreAuditRule -&gt; unit" Usage="semaphoreSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-274">Um <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que especifica o usuário pelo qual pesquisar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-274">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for.</span>
          </span>
          <span data-ttu-id="4750f-275">Todos os direitos especificados por essa regra são ignorados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-275">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-276">Pesquisa todas as regras de auditoria com o mesmo usuário que a regra especificada e, se encontradas, remove-as.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-276">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-277">Atual <xref:System.Security.AccessControl.SemaphoreSecurity> é pesquisada para regras de auditoria que têm o mesmo usuário conforme `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-277">The current <xref:System.Security.AccessControl.SemaphoreSecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="4750f-278">Quaisquer direitos especificados pelo `rule` são ignorados quando executar esta pesquisa.</span><span class="sxs-lookup"><span data-stu-id="4750f-278">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="4750f-279">Todas as regras correspondentes são removidas.</span><span class="sxs-lookup"><span data-stu-id="4750f-279">All matching rules are removed.</span></span> <span data-ttu-id="4750f-280">Se nenhuma regra de correspondência for encontrada, nenhuma ação é executada.</span><span class="sxs-lookup"><span data-stu-id="4750f-280">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-281">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-281">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleSpecific : System.Security.AccessControl.SemaphoreAuditRule -&gt; unit" Usage="semaphoreSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-282">O <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-282">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-283">Pesquisa por uma regra de auditoria que corresponda exatamente à regra especificada e, se encontrada, remove-a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-283">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-284">A regra será removida somente se ele corresponde exatamente `rule` em todos os detalhes, incluindo sinalizadores.</span><span class="sxs-lookup"><span data-stu-id="4750f-284">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="4750f-285">Outras regras de auditoria para o mesmo usuário não são afetadas.</span><span class="sxs-lookup"><span data-stu-id="4750f-285">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4750f-286">Uma regra representa um ou mais subjacente entradas controle de acesso (ACE) e essas entradas são divididos ou combinados conforme necessário, quando você modificar as regras de segurança de auditoria para um usuário.</span><span class="sxs-lookup"><span data-stu-id="4750f-286">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="4750f-287">Portanto, uma regra não existe mais no formulário específico que tinha quando foi adicionado e nesse caso o <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A> método não pode removê-lo.</span><span class="sxs-lookup"><span data-stu-id="4750f-287">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-288">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-288">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.ResetAccessRule : System.Security.AccessControl.SemaphoreAccessRule -&gt; unit" Usage="semaphoreSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-289">O <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-289">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="4750f-290">O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-290">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-291">Remove todas as regras de controle de acesso com o mesmo usuário que a regra especificada, independentemente de <see cref="T:System.Security.AccessControl.AccessControlType" /> e, em seguida, adiciona a regra especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-291">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-292">Se não houver nenhuma regra de acesso cujo usuário corresponder a regra especificada, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="4750f-292">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-293">O seguinte exemplo de código mostra como o <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> método substitui todas as regras para o usuário correspondente com a regra especificada para a correspondência.</span><span class="sxs-lookup"><span data-stu-id="4750f-293">The following code example shows how the <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="4750f-294">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> e o adiciona regras que permitirem e negar vários direitos para o usuário atual.</span><span class="sxs-lookup"><span data-stu-id="4750f-294">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="4750f-295">O exemplo cria uma nova regra que permite o controle total do usuário atual e usa o <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> método para substituir as regras existentes com a nova regra.</span><span class="sxs-lookup"><span data-stu-id="4750f-295">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule%2A> method to replace both of the existing rules with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-296">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-296">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-297">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-297">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-298">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-298">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.SemaphoreAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.SemaphoreAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As SemaphoreAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::SemaphoreAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAccessRule : System.Security.AccessControl.SemaphoreAccessRule -&gt; unit" Usage="semaphoreSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-299">O <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-299">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="4750f-300">O usuário e o <see cref="T:System.Security.AccessControl.AccessControlType" /> dessa regra determinam as regras a serem removidas antes dessa regra ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-300">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-301">Remove todas as regras de controle de acesso com o mesmo usuário e <see cref="T:System.Security.AccessControl.AccessControlType" /> (permitir ou negar) que a regra especificada e, em seguida, adiciona a regra especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-301">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-302">Se a regra especificada tem <xref:System.Security.AccessControl.AccessControlType.Allow>, é o efeito desse método para remover todos os <xref:System.Security.AccessControl.AccessControlType.Allow> regras para o usuário especificado, substituindo-os com a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="4750f-302">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="4750f-303">Se a regra especificada tem <xref:System.Security.AccessControl.AccessControlType.Deny>, todos os <xref:System.Security.AccessControl.AccessControlType.Deny> regras para o usuário especificado são substituídas com a regra especificada.</span><span class="sxs-lookup"><span data-stu-id="4750f-303">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="4750f-304">Se não houver nenhuma regra cujo usuário e <xref:System.Security.AccessControl.AccessControlType> correspondem à regra especificada, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="4750f-304">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4750f-305">O seguinte exemplo de código mostra como o <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> método Remove todas as regras que correspondem o usuário e o <xref:System.Security.AccessControl.AccessControlType> de `rule`, substituí-las com `rule`.</span><span class="sxs-lookup"><span data-stu-id="4750f-305">The following code example shows how the <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.</span></span>  
  
 <span data-ttu-id="4750f-306">O exemplo cria um <xref:System.Security.AccessControl.SemaphoreSecurity> e o adiciona regras que permitirem e negar vários direitos para o usuário atual.</span><span class="sxs-lookup"><span data-stu-id="4750f-306">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="4750f-307">O exemplo cria uma nova regra que permite o controle total do usuário atual e usa o <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> regra com a nova regra de permissão de método para substituir a existente.</span><span class="sxs-lookup"><span data-stu-id="4750f-307">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule%2A> method to replace the existing Allow rule with the new rule.</span></span> <span data-ttu-id="4750f-308">A regra que nega o acesso não é afetada.</span><span class="sxs-lookup"><span data-stu-id="4750f-308">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4750f-309">Este exemplo não anexa o objeto de segurança para um <xref:System.Threading.Semaphore> objeto.</span><span class="sxs-lookup"><span data-stu-id="4750f-309">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="4750f-310">Exemplos que anexa os objetos de segurança podem ser encontrados em <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> e <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4750f-310">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-311">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-311">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.SemaphoreAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.SemaphoreAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As SemaphoreAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::SemaphoreAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAuditRule : System.Security.AccessControl.SemaphoreAuditRule -&gt; unit" Usage="semaphoreSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.SemaphoreAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="4750f-312">O <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-312">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to add.</span>
          </span>
          <span data-ttu-id="4750f-313">O usuário especificado por essa regra determina as regras a serem removidas antes dessa regra ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-313">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4750f-314">Remove todas as regras de auditoria com o mesmo usuário que a regra especificada, independentemente do valor de <see cref="T:System.Security.AccessControl.AuditFlags" /> e, em seguida, adiciona a regra especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-314">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4750f-315">Se não houver nenhuma regra de auditoria cujo usuário corresponder a regra especificada, `rule` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="4750f-315">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4750f-316">
            <paramref name="rule" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4750f-316">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>