<Type Name="MessageEnumerator" FullName="System.Messaging.MessageEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23b91a2631794fe77c1398283e744a03f64ef34f" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46645473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageEnumerator extends System.MarshalByRefObject implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageEnumerator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageEnumerator : MarshalByRefObject, IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type MessageEnumerator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="567e0-101">Fornece um cursor somente de avanço para enumerar por meio de mensagens em uma fila de mensagens.</span>
      <span class="sxs-lookup">
        <span data-stu-id="567e0-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-102">Use <xref:System.Messaging.MessageEnumerator> para interação dinâmica com mensagens em uma fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-102">Use <xref:System.Messaging.MessageEnumerator> for dynamic interaction with messages in a queue.</span></span> <span data-ttu-id="567e0-103">Métodos disponíveis por meio de <xref:System.Messaging.MessageQueue> classe pode retornar um <xref:System.Messaging.MessageEnumerator> que aponta para uma lista dinâmica de mensagens na fila ou uma matriz que contém uma cópia em um dado momento – um instantâneo - da fila no momento, o método especificado foi chamado.</span><span class="sxs-lookup"><span data-stu-id="567e0-103">Methods available through the <xref:System.Messaging.MessageQueue> class can return either a <xref:System.Messaging.MessageEnumerator> pointing to a dynamic list of messages in the queue, or an array that contains a copy at a given instant - a snapshot - of the queue at the time the specified method was called.</span></span>  
  
 <span data-ttu-id="567e0-104">Ao contrário de um instantâneo estático, um enumerador permite modificar a coleção.</span><span class="sxs-lookup"><span data-stu-id="567e0-104">Unlike a static snapshot, an enumerator allows you to modify the collection.</span></span> <span data-ttu-id="567e0-105">Usando um <xref:System.Messaging.MessageEnumerator>, você pode remover mensagens da fila e a alteração é refletida imediatamente na fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-105">Using a <xref:System.Messaging.MessageEnumerator>, you can remove messages from the queue, and the change is immediately reflected in the queue.</span></span>  
  
 <span data-ttu-id="567e0-106">Um enumerador não remove as mensagens da fila quando ele consulta a fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-106">An enumerator does not remove the messages from the queue when it queries the queue.</span></span> <span data-ttu-id="567e0-107">Ele retorna informações sobre a mensagem na posição atual do cursor, mas deixa a mensagem na fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-107">It returns information about the message at the current cursor position, but it leaves the message in the queue.</span></span>  
  
 <span data-ttu-id="567e0-108">Um <xref:System.Messaging.MessageEnumerator> é um cursor, inicializado para o início de uma lista dinâmica.</span><span class="sxs-lookup"><span data-stu-id="567e0-108">A <xref:System.Messaging.MessageEnumerator> is a cursor, initialized to the head of a dynamic list.</span></span> <span data-ttu-id="567e0-109">A ordem da lista é igual à ordem das mensagens na fila, de acordo com a prioridade da mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-109">The list order is the same as the order of the messages in the queue, according to message priority.</span></span> <span data-ttu-id="567e0-110">Você pode mover o cursor para a primeira mensagem na fila chamando <xref:System.Messaging.MessageEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-110">You can move the cursor to the first message in the queue by calling <xref:System.Messaging.MessageEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="567e0-111">Depois que o enumerador foi inicializado, você pode usar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> para percorrer as mensagens restantes para frente.</span><span class="sxs-lookup"><span data-stu-id="567e0-111">After the enumerator has been initialized, you can use <xref:System.Messaging.MessageEnumerator.MoveNext%2A> to step forward through the remaining messages.</span></span> <span data-ttu-id="567e0-112">Você pode especificar se deseja esperar uma mensagem se torne disponível, passando um tempo limite para o <xref:System.Messaging.MessageEnumerator.MoveNext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="567e0-112">You can specify whether to wait for a message to become available by passing a timeout into the <xref:System.Messaging.MessageEnumerator.MoveNext%2A> method.</span></span>  
  
 <span data-ttu-id="567e0-113">Como o enumerador é dinâmico, uma mensagem que é acrescentada a posição do cursor atual (por exemplo, devido à baixa prioridade), além do pode ser acessado pelo enumerador.</span><span class="sxs-lookup"><span data-stu-id="567e0-113">Because the enumerator is dynamic, a message that is appended beyond the cursor's current position (for example, due to low priority), can be accessed by the enumerator.</span></span> <span data-ttu-id="567e0-114">Uma mensagem que é inserida antes que a posição do cursor atual não pode ser acessada.</span><span class="sxs-lookup"><span data-stu-id="567e0-114">A message that is inserted before the cursor's current position cannot be accessed.</span></span> <span data-ttu-id="567e0-115">Não é possível retroceder uma etapa com um <xref:System.Messaging.MessageEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="567e0-115">It is not possible to step backward with a <xref:System.Messaging.MessageEnumerator>.</span></span> <span data-ttu-id="567e0-116">Um cursor permite a movimentação de somente avanço.</span><span class="sxs-lookup"><span data-stu-id="567e0-116">A cursor allows forward-only movement.</span></span> <span data-ttu-id="567e0-117">O <xref:System.Messaging.MessageEnumerator.Reset%2A> método permite que você coloque o cursor novamente no início da fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-117">The <xref:System.Messaging.MessageEnumerator.Reset%2A> method enables you to place the cursor back at the beginning of the queue.</span></span>  
  
 <span data-ttu-id="567e0-118">Instâncias de <xref:System.Messaging.MessageEnumerator> para uma determinada fila trabalhar de forma independente.</span><span class="sxs-lookup"><span data-stu-id="567e0-118">Instances of <xref:System.Messaging.MessageEnumerator> for a given queue work independently.</span></span> <span data-ttu-id="567e0-119">Você pode criar dois <xref:System.Messaging.MessageEnumerator> instâncias que se aplicam à mesma fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-119">You can create two <xref:System.Messaging.MessageEnumerator> instances that apply to the same queue.</span></span> <span data-ttu-id="567e0-120">As alterações que um <xref:System.Messaging.MessageEnumerator> facilita para as mensagens na fila serão refletidas imediatamente no enumerador segundo se o segundo enumerador está posicionado antes da primeira.</span><span class="sxs-lookup"><span data-stu-id="567e0-120">The changes that one <xref:System.Messaging.MessageEnumerator> makes to the messages in the queue will be reflected immediately in a second enumerator if the second enumerator is positioned before the first.</span></span> <span data-ttu-id="567e0-121">No entanto, se dois enumeradores têm a mesma posição e um deles remove a mensagem nessa posição, uma exceção é lançada se o enumerador outro tentativas de obter o valor da <xref:System.Messaging.MessageEnumerator.Current%2A> propriedade na mensagem excluída por enquanto.</span><span class="sxs-lookup"><span data-stu-id="567e0-121">However, if two enumerators have the same position and one of them removes the message at that position, an exception is thrown if the other enumerator attempts to get the value of the <xref:System.Messaging.MessageEnumerator.Current%2A> property on the now-deleted message.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="567e0-122">Se você criar uma instância do <xref:System.Messaging.MessageQueue> com <xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=nameWithType> definido como `true`, nenhum outro aplicativo pode modificar as mensagens no seu enumerador enquanto você tem a conexão para a fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-122">If you create an instance of <xref:System.Messaging.MessageQueue> with <xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=nameWithType> set to `true`, no other application can modify the messages in your enumerator while you have the connection to the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="567e0-123">O exemplo a seguir obtém uma lista dinâmica de mensagens em uma fila e contagens de todas as mensagens com o <xref:System.Messaging.Message.Priority%2A> propriedade definida como <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="567e0-123">The following example gets a dynamic list of messages in a queue and counts all messages with the <xref:System.Messaging.Message.Priority%2A> property set to <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CPP/mqgetmessageenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CS/mqgetmessageenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/VB/mqgetmessageenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageEnumerator.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="567e0-124">Libera os recursos associados ao enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-124">Frees the resources associated with the enumerator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-125">O sistema operacional retém um identificador aberto para a fila durante o tempo de vida do cursor.</span><span class="sxs-lookup"><span data-stu-id="567e0-125">The operating system retains an open handle to the queue during the lifetime of the cursor.</span></span> <span data-ttu-id="567e0-126">Quando você terminar de trabalhar com o enumerador, chame <xref:System.Messaging.MessageEnumerator.Close%2A> para liberar os recursos associados com o identificador.</span><span class="sxs-lookup"><span data-stu-id="567e0-126">When you have finished working with the enumerator, call <xref:System.Messaging.MessageEnumerator.Close%2A> to release the resources associated with the handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Current { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Messaging.Message" Usage="System.Messaging.MessageEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="567e0-127">Obtém o <see cref="T:System.Messaging.Message" /> atual para o qual este enumerador aponta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-127">Gets the current <see cref="T:System.Messaging.Message" /> that this enumerator points to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="567e0-128">A mensagem atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-128">The current message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-129">Quando o enumerador é criado, ele aponta para o início da fila, em um local antes da primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-129">When the enumerator is created, it points to the head of the queue, at a location before the first message.</span></span> <span data-ttu-id="567e0-130">Nesse caso, <xref:System.Messaging.MessageEnumerator.Current%2A> não é válido e lançará uma exceção se ele for acessado.</span><span class="sxs-lookup"><span data-stu-id="567e0-130">In this case, <xref:System.Messaging.MessageEnumerator.Current%2A> is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="567e0-131">Você deve chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> para posicionar o cursor a primeira mensagem na fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-131">You must call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> to position the cursor at the first message in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="567e0-132">Você chamou <see cref="P:System.Messaging.MessageEnumerator.Current" /> antes da primeira chamada para <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-132">You called <see cref="P:System.Messaging.MessageEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />.</span>
          </span>
          <span data-ttu-id="567e0-133">O cursor está localizado antes do primeiro elemento da enumeração de mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-133">The cursor is located before the first element of the message enumeration.</span>
          </span>
          <span data-ttu-id="567e0-134">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-134">-or-</span>
          </span>
          <span data-ttu-id="567e0-135">Você chamou <see cref="P:System.Messaging.MessageEnumerator.Current" /> após uma chamada para <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> ter retornado <see langword="false" /> (indicando que o cursor está localizado depois do último elemento da enumeração de mensagem.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-135">You called <see cref="P:System.Messaging.MessageEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> had returned <see langword="false" /> (indicating the cursor is located after the last element of the message enumeration.)</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-136">A mensagem para a qual o enumerador está apontando no momento não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-136">The message the enumerator is currently pointing to no longer exists.</span>
          </span>
          <span data-ttu-id="567e0-137">Ela pode ter sido excluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-137">It might have been deleted.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="M:System.Messaging.MessageEnumerator.Reset" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="CursorHandle">
      <MemberSignature Language="C#" Value="public IntPtr CursorHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int CursorHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageEnumerator.CursorHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CursorHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr CursorHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.CursorHandle : nativeint" Usage="System.Messaging.MessageEnumerator.CursorHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="567e0-138">Obtém o cursor de Enfileiramento de Mensagens nativo usado para procurar mensagens na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-138">Gets the native Message Queuing cursor handle used to browse messages in the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="567e0-139">O identificador nativo do cursor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-139">The native cursor handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-140">Esta propriedade contém o identificador nativo para a enumeração.</span><span class="sxs-lookup"><span data-stu-id="567e0-140">This property contains the native handle to the enumeration.</span></span> <span data-ttu-id="567e0-141">Quando você terminar de trabalhar com o enumerador, chame <xref:System.Messaging.MessageEnumerator.Close%2A> liberar esse recurso.</span><span class="sxs-lookup"><span data-stu-id="567e0-141">When you have finished working with the enumerator, call <xref:System.Messaging.MessageEnumerator.Close%2A> to release this resource.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-142">O identificador não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-142">The handle does not exist.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="567e0-143">Libera os recursos usados pelo <see cref="T:System.Messaging.MessageEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-143">Releases the resources used by the <see cref="T:System.Messaging.MessageEnumerator" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="messageEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="567e0-144">Libera todos os recursos usados pelo <see cref="T:System.Messaging.MessageEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-144">Releases all resources used by the <see cref="T:System.Messaging.MessageEnumerator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-145">Chamando <xref:System.Messaging.MessageEnumerator.Dispose%2A> permite que os recursos usados pelo <xref:System.Messaging.MessageEnumerator> para ser realocados para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="567e0-145">Calling <xref:System.Messaging.MessageEnumerator.Dispose%2A> allows the resources used by the <xref:System.Messaging.MessageEnumerator> to be reallocated for other purposes.</span></span> <span data-ttu-id="567e0-146">Para obter mais informações sobre <xref:System.Messaging.MessageEnumerator.Dispose%2A>, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="567e0-146">For more information about <xref:System.Messaging.MessageEnumerator.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="567e0-147">Limpando recursos não gerenciados</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-147">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="messageEnumerator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="567e0-148">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-148">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-149">Libera os recursos não gerenciados usados pelo <see cref="T:System.Messaging.MessageEnumerator" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-149">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageEnumerator" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-150">Este método é chamado pelo método público <xref:System.Messaging.MessageEnumerator.Dispose%2A> e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-150">This method is called by the public <xref:System.Messaging.MessageEnumerator.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="567e0-151">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="567e0-151">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="567e0-152"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="567e0-152"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="567e0-153">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Messaging.MessageEnumerator> referências.</span><span class="sxs-lookup"><span data-stu-id="567e0-153">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Messaging.MessageEnumerator> references.</span></span> <span data-ttu-id="567e0-154">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="567e0-154">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="567e0-155">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="567e0-155">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="567e0-156">Ao substituir <see langword="Dispose(Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="567e0-156">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="567e0-157">Para obter mais informações sobre como implementar <see langword="Dispose" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="567e0-157">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="567e0-158">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="567e0-158">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">
          <span data-ttu-id="567e0-159">Como implementar um método Dispose</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-159">Implementing a Dispose method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="567e0-160">Limpando recursos não gerenciados</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-160">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MessageEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MessageEnumerator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="messageEnumerator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveNext">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="567e0-161">Avança o enumerador para a próxima mensagem na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-161">Advances the enumerator to the next message in the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="messageEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="567e0-162">Avança o enumerador para a próxima mensagem na fila, se houver um disponível no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-162">Advances the enumerator to the next message in the queue, if one is currently available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-163">
            <see langword="true" /> se o enumerador tiver avançado para a próxima mensagem com sucesso; <see langword="false" /> se o enumerador tiver atingido o final da fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-163">
              <see langword="true" /> if the enumerator was succesfully advanced to the next message; <see langword="false" /> if the enumerator has reached the end of the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-164">Essa sobrecarga retorna imediatamente se não há nenhuma mensagem na fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-164">This overload returns immediately if there is no message in the queue.</span></span> <span data-ttu-id="567e0-165">Não há outra sobrecarga que aguarda um especificado <xref:System.TimeSpan> para uma mensagem chegar.</span><span class="sxs-lookup"><span data-stu-id="567e0-165">There is another overload that waits a specified <xref:System.TimeSpan> for a message to arrive.</span></span>  
  
 <span data-ttu-id="567e0-166">Se uma mensagem não está disponível no momento porque a fila está vazia ou porque você ultrapassou o último elemento da coleção <xref:System.Messaging.MessageEnumerator.MoveNext%2A> retorna `false` para o método de chamada.</span><span class="sxs-lookup"><span data-stu-id="567e0-166">If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, <xref:System.Messaging.MessageEnumerator.MoveNext%2A> returns `false` to the calling method.</span></span>  
  
 <span data-ttu-id="567e0-167">No momento da criação, um enumerador é conceitualmente posicionado antes da primeira mensagem da fila e a primeira chamada para <xref:System.Messaging.MessageEnumerator.MoveNext%2A> traz a primeira mensagem da fila para o modo de exibição.</span><span class="sxs-lookup"><span data-stu-id="567e0-167">Upon creation, an enumerator is conceptually positioned before the first message of the queue, and the first call to <xref:System.Messaging.MessageEnumerator.MoveNext%2A> brings the first message of the queue into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-168">Foi gerada uma exceção específica de Enfileiramento de Mensagens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-168">An exception specific to Message Queuing was thrown.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageEnumerator.Reset" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.MoveNext : TimeSpan -&gt; bool" Usage="messageEnumerator.MoveNext timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="567e0-169">O <see cref="T:System.TimeSpan" /> a esperar uma mensagem ficar disponível se o enumerador estiver posicionado no final da fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-169">The <see cref="T:System.TimeSpan" /> to wait for a message to be available if the enumerator is positioned at the end of the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-170">Avança o enumerador para a próxima mensagem na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-170">Advances the enumerator to the next message in the queue.</span>
          </span>
          <span data-ttu-id="567e0-171">Se o enumerador estiver posicionado no final da fila, o <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> aguardará até uma mensagem estar disponível ou o tempo limite determinado ser atingido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-171">If the enumerator is positioned at the end of the queue, <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> waits until a message is available or the given timeout expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-172">
            <see langword="true" /> se o enumerador tiver avançado com êxito para a próxima mensagem; <see langword="false" /> se o enumerador tiver atingido o fim da fila e uma mensagem não ficar disponível dentro do tempo especificado pelo <paramref name="timeout" /> parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-172">
              <see langword="true" /> if the enumerator successfully advanced to the next message; <see langword="false" /> if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <paramref name="timeout" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-173">Essa sobrecarga de espera se não houver nenhuma mensagem na fila ou se o cursor atingiu o final da fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-173">This overload waits if there is no message in the queue or if the cursor has reached the end of the queue.</span></span> <span data-ttu-id="567e0-174">Se uma mensagem não está disponível no momento porque a fila está vazia ou porque você ultrapassou o último elemento na coleção, <xref:System.Messaging.MessageEnumerator.MoveNext%2A> aguarda o tempo limite especificado.</span><span class="sxs-lookup"><span data-stu-id="567e0-174">If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, <xref:System.Messaging.MessageEnumerator.MoveNext%2A> waits the specified timeout.</span></span>  
  
 <span data-ttu-id="567e0-175">Se o cursor já estiver no final da fila <xref:System.Messaging.MessageEnumerator.MoveNext%2A> somente retorna `true` se a nova mensagem chega dentro do intervalo de tempo especificado, tem prioridade inferior a todas as mensagens atualmente na fila e é colocado no final da fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-175">If the cursor is already at the end of the queue, <xref:System.Messaging.MessageEnumerator.MoveNext%2A> only returns `true` if the new message arrives within the specified time interval, has lower priority than all messages currently in the queue and is placed at the end of the queue.</span></span> <span data-ttu-id="567e0-176">Uma sobrecarga sem parâmetro retorna imediatamente se nenhuma outra mensagem está na fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-176">An overload with no parameter returns immediately if no further messages are in the queue.</span></span>  
  
 <span data-ttu-id="567e0-177">No momento da criação, um enumerador é conceitualmente posicionado antes da primeira mensagem da enumeração e a primeira chamada para <xref:System.Messaging.MessageEnumerator.MoveNext%2A> traz a primeira mensagem da enumeração no modo de exibição.</span><span class="sxs-lookup"><span data-stu-id="567e0-177">Upon creation, an enumerator is conceptually positioned before the first message of the enumeration, and the first call to <xref:System.Messaging.MessageEnumerator.MoveNext%2A> brings the first message of the enumeration into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="567e0-178">O valor especificado para o parâmetro de tempo limite é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-178">The value specified for the timeout parameter is invalid.</span>
          </span>
          <span data-ttu-id="567e0-179">Pode representar um número negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-179">It might represent a negative number.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-180">Foi gerada uma exceção específica de Enfileiramento de Mensagens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-180">An exception specific to Message Queuing was thrown.</span>
          </span>
          <span data-ttu-id="567e0-181">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-181">-or-</span>
          </span>
          <span data-ttu-id="567e0-182">O tempo limite expirou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-182">The timeout has expired.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageEnumerator.Reset" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="567e0-183">Remove a mensagem atual da fila e retorna a mensagem para o aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-183">Removes the current message from the queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-184">Remover a mensagem a exclui da fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-184">Removing the message deletes it from the queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-185">O comportamento descrito para essas sobrecargas é aplicável somente se o <xref:System.Messaging.MessageEnumerator> instância é recuperada usando o <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-185">The behavior described for these overloads is applicable only if the <xref:System.Messaging.MessageEnumerator> instance is retrieved by using the <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>.</span></span> <span data-ttu-id="567e0-186">Não use <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> para recuperar uma instância de <xref:System.Messaging.MessageEnumerator> como esse método foi substituído.</span><span class="sxs-lookup"><span data-stu-id="567e0-186">Do not use <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> to retrieve an instance of <xref:System.Messaging.MessageEnumerator> as this method has been deprecated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public System.Messaging.Message RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCurrent () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ RemoveCurrent();" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : unit -&gt; System.Messaging.Message" Usage="messageEnumerator.RemoveCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="567e0-187">Remove a mensagem atual de uma fila transacional ou não transacional e retorna a mensagem para o aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-187">Removes the current message from a transactional or non-transactional queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-188">Não há nenhum tempo limite especificado para uma mensagem chegar na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-188">There is no timeout specified for a message to arrive in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-189">Uma <see cref="T:System.Messaging.Message" /> que faz referência à primeira mensagem disponível na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-189">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-190"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Remove e retorna a mensagem no local de atual do cursor.</span><span class="sxs-lookup"><span data-stu-id="567e0-190"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> removes and returns the message at the cursor's current location.</span></span>  
  
 <span data-ttu-id="567e0-191">Se você estiver usando o registro no diário de fila, removendo a mensagem faz com que uma cópia para ser mantida na fila do diário, assim como o <xref:System.Messaging.MessageQueue> da classe <xref:System.Messaging.MessageQueue.Receive%2A> que o método.</span><span class="sxs-lookup"><span data-stu-id="567e0-191">If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Receive%2A> method does.</span></span>  
  
 <span data-ttu-id="567e0-192">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-192">When you remove the current message, the cursor is moved to the next message.</span></span> <span data-ttu-id="567e0-193">Você não precisa chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-193">You do not have to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span></span>  
  
 <span data-ttu-id="567e0-194">Se você chamar essa sobrecarga em uma fila transacional, enfileiramento de mensagens cria uma única transação interna.</span><span class="sxs-lookup"><span data-stu-id="567e0-194">If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public System.Messaging.Message RemoveCurrent (System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message RemoveCurrent(class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCurrent (transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ RemoveCurrent(System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageEnumerator.RemoveCurrent transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="567e0-195">O objeto <see cref="T:System.Messaging.MessageQueueTransaction" /> que especifica a transação na qual a mensagem será removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-195">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction in which the message will be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-196">Remove a mensagem atual de uma fila transacional e retorna a mensagem ao aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-196">Removes the current message from a transactional queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-197">Não há nenhum tempo limite especificado para uma mensagem chegar na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-197">There is no timeout specified for a message to arrive in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-198">Uma <see cref="T:System.Messaging.Message" /> que faz referência à primeira mensagem disponível na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-198">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-199"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Remove e retorna a mensagem no local atual do cursor, usando o contexto de transação interna definido pela `transaction` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="567e0-199"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> removes and returns the message at the cursor's current location, using the internal transaction context defined by the `transaction` parameter.</span></span>  
  
 <span data-ttu-id="567e0-200">Se você estiver usando o registro no diário de fila, removendo a mensagem faz com que uma cópia para ser mantida na fila do diário, assim como o <xref:System.Messaging.MessageQueue> da classe <xref:System.Messaging.MessageQueue.Receive%2A> que o método.</span><span class="sxs-lookup"><span data-stu-id="567e0-200">If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Receive%2A> method does.</span></span>  
  
 <span data-ttu-id="567e0-201">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> a ser retornado para a fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-201">When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> to be returned to the queue.</span></span> <span data-ttu-id="567e0-202">A remoção não é irreversível até que a transação é confirmada.</span><span class="sxs-lookup"><span data-stu-id="567e0-202">The removal is not irreversible until the transaction is committed.</span></span>  
  
 <span data-ttu-id="567e0-203">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-203">When you remove the current message, the cursor is moved to the next message.</span></span> <span data-ttu-id="567e0-204">Você não precisa chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-204">You do not have to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="567e0-205">O parâmetro <paramref name="transaction" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-205">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public System.Messaging.Message RemoveCurrent (System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message RemoveCurrent(valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCurrent (transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ RemoveCurrent(System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageEnumerator.RemoveCurrent transactionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="transactionType">
          <span data-ttu-id="567e0-206">Um dos valores de <see cref="T:System.Messaging.MessageQueueTransactionType" />, que descreve o tipo de contexto de transação associado à mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-206">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-207">Remove a mensagem atual de uma fila e retorna a mensagem ao aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-207">Removes the current message from a queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-208">Não há nenhum tempo limite especificado para uma mensagem chegar na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-208">There is no timeout specified for a message to arrive in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-209">Uma <see cref="T:System.Messaging.Message" /> que faz referência à primeira mensagem disponível na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-209">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-210"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Remove e retorna a mensagem no local atual do cursor, usando um contexto de transação definido pelo `transactionType` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="567e0-210"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> removes and returns the message at the cursor's current location, using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="567e0-211">Especificar `Automatic` para o `transactionType` parâmetro se já houver um contexto de transação externo anexada ao thread de que você deseja usar para receber a mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-211">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="567e0-212">Especificar `Single` se você quiser receber a mensagem como uma única transação interna.</span><span class="sxs-lookup"><span data-stu-id="567e0-212">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="567e0-213">Você pode especificar `None` se você quiser receber uma mensagem de uma fila transacional fora de um contexto de transação.</span><span class="sxs-lookup"><span data-stu-id="567e0-213">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="567e0-214">Se você estiver usando o registro no diário de fila, removendo a mensagem faz com que uma cópia para ser mantida na fila do diário, assim como o <xref:System.Messaging.MessageQueue> da classe <xref:System.Messaging.MessageQueue.Receive%2A> que o método.</span><span class="sxs-lookup"><span data-stu-id="567e0-214">If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Receive%2A> method does.</span></span>  
  
 <span data-ttu-id="567e0-215">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> a ser retornado para a fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-215">When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> to be returned to the queue.</span></span> <span data-ttu-id="567e0-216">A remoção não é irreversível até que a transação é confirmada.</span><span class="sxs-lookup"><span data-stu-id="567e0-216">The removal is not irreversible until the transaction is committed.</span></span>  
  
 <span data-ttu-id="567e0-217">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-217">When you remove the current message, the cursor is moved to the next message.</span></span> <span data-ttu-id="567e0-218">Você não precisa chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-218">You do not have to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="567e0-219">O parâmetro <paramref name="transactionType" /> não é um dos membros do <see cref="T:System.Messaging.MessageQueueTransactionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-219">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public System.Messaging.Message RemoveCurrent (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message RemoveCurrent(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCurrent (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ RemoveCurrent(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : TimeSpan -&gt; System.Messaging.Message" Usage="messageEnumerator.RemoveCurrent timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="567e0-220">O intervalo de tempo a esperar uma mensagem chegar na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-220">The interval of time to wait for a message to arrive in the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-221">Remove a mensagem atual da fila e retorna a mensagem para o aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-221">Removes the current message from the queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-222">Se houver uma mensagem a ser removida, o método a retornará imediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-222">If there is a message to remove, the method returns it immediately.</span>
          </span>
          <span data-ttu-id="567e0-223">Caso contrário, o método aguardará o tempo limite especificado para que uma nova mensagem chegue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-223">Otherwise, the method waits the specified timeout for a new message to arrive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-224">Uma <see cref="T:System.Messaging.Message" /> que faz referência à primeira mensagem disponível na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-224">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-225"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Remove e retorna a mensagem no local de atual do cursor.</span><span class="sxs-lookup"><span data-stu-id="567e0-225"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> removes and returns the message at the cursor's current location.</span></span> <span data-ttu-id="567e0-226">Se o cursor estiver no final da fila, essa sobrecarga do método aguarda até que uma mensagem esteja disponível ou o intervalo especificado pelo `timeout` parâmetro expirou.</span><span class="sxs-lookup"><span data-stu-id="567e0-226">If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the `timeout` parameter has expired.</span></span>  
  
 <span data-ttu-id="567e0-227">Se você estiver usando o registro no diário de fila, removendo a mensagem faz com que uma cópia para ser mantida na fila do diário, assim como o <xref:System.Messaging.MessageQueue> da classe <xref:System.Messaging.MessageQueue.Receive%2A> que o método.</span><span class="sxs-lookup"><span data-stu-id="567e0-227">If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Receive%2A> method does.</span></span>  
  
 <span data-ttu-id="567e0-228">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-228">When you remove the current message, the cursor is moved to the next message.</span></span> <span data-ttu-id="567e0-229">Você não precisa chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-229">You do not have to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span></span>  
  
 <span data-ttu-id="567e0-230">Se você chamar essa sobrecarga em uma fila transacional, enfileiramento de mensagens cria uma única transação interna.</span><span class="sxs-lookup"><span data-stu-id="567e0-230">If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="567e0-231">O valor especificado para o parâmetro <paramref name="timeout" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-231">The value specified for the <paramref name="timeout" /> parameter is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-232">O tempo limite expirou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-232">The timeout has expired.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public System.Messaging.Message RemoveCurrent (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message RemoveCurrent(valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCurrent (timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ RemoveCurrent(TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : TimeSpan * System.Messaging.MessageQueueTransaction -&gt; System.Messaging.Message" Usage="messageEnumerator.RemoveCurrent (timeout, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="567e0-233">O intervalo de tempo de espera para a mensagem ser removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-233">The interval of time to wait for the message to be removed.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="567e0-234">O objeto <see cref="T:System.Messaging.MessageQueueTransaction" /> que especifica o contexto de transação para a mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-234">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction context for the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-235">Remove a mensagem atual de uma fila transacional e retorna a mensagem ao aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-235">Removes the current message from a transactional queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-236">Se houver uma mensagem a ser removida, o método a retornará imediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-236">If there is a message to remove, the method returns it immediately.</span>
          </span>
          <span data-ttu-id="567e0-237">Caso contrário, o método aguardará o tempo limite especificado para que uma nova mensagem chegue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-237">Otherwise, the method waits the specified timeout for a new message to arrive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-238">Uma <see cref="T:System.Messaging.Message" /> que faz referência à primeira mensagem disponível na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-238">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-239"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Remove e retorna a mensagem no local de atual do cursor.</span><span class="sxs-lookup"><span data-stu-id="567e0-239"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> removes and returns the message at the cursor's current location.</span></span> <span data-ttu-id="567e0-240">Se o cursor estiver no final da fila, essa sobrecarga do método aguarda até que uma mensagem esteja disponível ou o intervalo especificado pelo `timeout` parâmetro expirou.</span><span class="sxs-lookup"><span data-stu-id="567e0-240">If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the `timeout` parameter has expired.</span></span>  
  
 <span data-ttu-id="567e0-241">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> a ser retornado para a fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-241">When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> to be returned to the queue.</span></span> <span data-ttu-id="567e0-242">A remoção não é irreversível até que a transação é confirmada.</span><span class="sxs-lookup"><span data-stu-id="567e0-242">The removal is not irreversible until the transaction is committed.</span></span>  
  
 <span data-ttu-id="567e0-243">Se você estiver usando o registro no diário de fila, removendo a mensagem faz com que uma cópia para ser mantida na fila do diário, assim como o <xref:System.Messaging.MessageQueue> da classe <xref:System.Messaging.MessageQueue.Receive%2A> que o método.</span><span class="sxs-lookup"><span data-stu-id="567e0-243">If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Receive%2A> method does.</span></span>  
  
 <span data-ttu-id="567e0-244">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-244">When you remove the current message, the cursor is moved to the next message.</span></span> <span data-ttu-id="567e0-245">Você não precisa chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-245">You do not have to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="567e0-246">O valor especificado para o parâmetro <paramref name="timeout" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-246">The value specified for the <paramref name="timeout" /> parameter is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="567e0-247">O parâmetro <paramref name="transaction" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-247">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-248">O tempo limite expirou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-248">The timeout has expired.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public System.Messaging.Message RemoveCurrent (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message RemoveCurrent(valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCurrent (timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ RemoveCurrent(TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : TimeSpan * System.Messaging.MessageQueueTransactionType -&gt; System.Messaging.Message" Usage="messageEnumerator.RemoveCurrent (timeout, transactionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="567e0-249">O intervalo de tempo de espera para a mensagem ser removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-249">The interval of time to wait for the message to be removed.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="567e0-250">Um dos valores de <see cref="T:System.Messaging.MessageQueueTransactionType" />, que descreve o tipo de contexto de transação associado à mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-250">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="567e0-251">Remove a mensagem atual de uma fila e retorna a mensagem ao aplicativo de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-251">Removes the current message from a queue and returns the message to the calling application.</span>
          </span>
          <span data-ttu-id="567e0-252">Se houver uma mensagem a ser removida, o método a retornará imediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-252">If there is a message to remove, the method returns it immediately.</span>
          </span>
          <span data-ttu-id="567e0-253">Caso contrário, o método aguardará o tempo limite especificado para que uma nova mensagem chegue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-253">Otherwise, the method waits the specified timeout for a new message to arrive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="567e0-254">Uma <see cref="T:System.Messaging.Message" /> que faz referência à primeira mensagem disponível na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-254">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-255"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Remove e retorna a mensagem no local atual do cursor, usando um contexto de transação definido pelo `transactionType` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="567e0-255"><xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> removes and returns the message at the cursor's current location, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="567e0-256">Se o cursor estiver no final da fila, essa sobrecarga do método aguarda até que uma mensagem esteja disponível ou o intervalo especificado pelo `timeout` parâmetro expirou.</span><span class="sxs-lookup"><span data-stu-id="567e0-256">If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the `timeout` parameter has expired.</span></span>  
  
 <span data-ttu-id="567e0-257">Especificar `Automatic` para o `transactionType` parâmetro se já houver um contexto de transação externo anexada ao thread de que você deseja usar para receber a mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-257">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="567e0-258">Especificar `Single` se você quiser receber a mensagem como uma única transação interna.</span><span class="sxs-lookup"><span data-stu-id="567e0-258">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="567e0-259">Você pode especificar `None` se você quiser receber uma mensagem de uma fila transacional fora de um contexto de transação.</span><span class="sxs-lookup"><span data-stu-id="567e0-259">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="567e0-260">Se você estiver usando o registro no diário de fila, removendo a mensagem faz com que uma cópia para ser mantida na fila do diário, assim como o <xref:System.Messaging.MessageQueue> da classe <xref:System.Messaging.MessageQueue.Receive%2A> que o método.</span><span class="sxs-lookup"><span data-stu-id="567e0-260">If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Receive%2A> method does.</span></span>  
  
 <span data-ttu-id="567e0-261">Ao trabalhar com filas transacionais, uma reversão de uma transação faz com que todas as mensagens removidas por uma chamada para <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> a ser retornado para a fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-261">When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> to be returned to the queue.</span></span> <span data-ttu-id="567e0-262">A remoção não é irreversível até que a transação é confirmada.</span><span class="sxs-lookup"><span data-stu-id="567e0-262">The removal is not irreversible until the transaction is committed.</span></span>  
  
 <span data-ttu-id="567e0-263">Quando você remove a mensagem atual, o cursor é movido para a próxima mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-263">When you remove the current message, the cursor is moved to the next message.</span></span> <span data-ttu-id="567e0-264">Você não precisa chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="567e0-264">You do not have to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="567e0-265">O valor especificado para o parâmetro <paramref name="timeout" /> é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-265">The value specified for the <paramref name="timeout" /> parameter is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="567e0-266">O tempo limite expirou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-266">The timeout has expired.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="567e0-267">O parâmetro <paramref name="transactionType" /> não é um dos membros do <see cref="T:System.Messaging.MessageQueueTransactionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-267">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="messageEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="567e0-268">Redefine o enumerador atual para que ele aponte para o início da fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-268">Resets the current enumerator so it points to the head of the queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="567e0-269">Um enumerador só pode mover em uma direção progressiva.</span><span class="sxs-lookup"><span data-stu-id="567e0-269">An enumerator can only move in a forward direction.</span></span> <span data-ttu-id="567e0-270">Use esse método para iniciar novamente no início da fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-270">Use this method to start over at the beginning of the queue.</span></span>  
  
 <span data-ttu-id="567e0-271">Depois de chamar <xref:System.Messaging.MessageEnumerator.Reset%2A>, o cursor aponta para a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="567e0-271">After calling <xref:System.Messaging.MessageEnumerator.Reset%2A>, the cursor points to the first message.</span></span> <span data-ttu-id="567e0-272">Você não precisará chamar <xref:System.Messaging.MessageEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageEnumerator.Reset%2A> para mover o cursor para frente para a primeira mensagem na fila.</span><span class="sxs-lookup"><span data-stu-id="567e0-272">You do not need to call <xref:System.Messaging.MessageEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageEnumerator.Reset%2A> to move the cursor forward to the first message in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="567e0-273">Retorna um <see cref="T:System.Messaging.Message" /> que faz referência à mensagem na posição atual do cursor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-273">Returns a <see cref="T:System.Messaging.Message" /> that references the message at the current cursor position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="567e0-274">Um <see cref="T:System.Messaging.Message" /> que faz referência a mensagem na posição atual do cursor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="567e0-274">A <see cref="T:System.Messaging.Message" /> that references the message at the current cursor position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>