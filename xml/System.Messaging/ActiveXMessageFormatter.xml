<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="50bf8-101">Serializa ou desserializa os tipos de dados primitivos e outros objetos de ou para o corpo de uma mensagem do Enfileiramento de Mensagens, usando um formato compatível com o Componente ActiveX do MSMQ.</span><span class="sxs-lookup"><span data-stu-id="50bf8-101">Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50bf8-102">O <xref:System.Messaging.ActiveXMessageFormatter> é compatível com as mensagens enviadas usando componentes COM serviço de enfileiramento de mensagens, que permite a interoperabilidade com aplicativos que usam o controle COM MSMQ.</span><span class="sxs-lookup"><span data-stu-id="50bf8-102">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</span></span>  
  
 <span data-ttu-id="50bf8-103">O <xref:System.Messaging.ActiveXMessageFormatter> pode serializar a maioria dos tipos primitivos, bem como objetos que implementam o `IPersistStream` interface OLE.</span><span class="sxs-lookup"><span data-stu-id="50bf8-103">The <xref:System.Messaging.ActiveXMessageFormatter> can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface.</span></span> <span data-ttu-id="50bf8-104">Ele pode desserializar o mesmo conjunto de tipos primitivos, mas requer mais esforço ao desserializar um objeto COM (por exemplo, um objeto criado usando o Visual Basic 6.0) que implementa `IPersistStream`.</span><span class="sxs-lookup"><span data-stu-id="50bf8-104">It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`.</span></span> <span data-ttu-id="50bf8-105">O objeto a ser desserializado deve ser na memória, importe primeiro o objeto em um aplicativo do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="50bf8-105">The object to deserialize must be in memory by first importing the object into a .NET Framework application.</span></span>  
  
 <span data-ttu-id="50bf8-106">Quando um aplicativo envia uma mensagem à fila utilizando uma instância do <xref:System.Messaging.MessageQueue> classe, o formatador serializa o objeto em um fluxo e o insere no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="50bf8-106">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="50bf8-107">Durante a leitura de uma fila usando um <xref:System.Messaging.MessageQueue>, o formatador desserializa os dados da mensagem para o <xref:System.Messaging.Message.Body%2A> propriedade de um <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="50bf8-107">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="50bf8-108">Serialização ActiveX é muito compact, que faz usando o <xref:System.Messaging.ActiveXMessageFormatter> e controle de MSMQ COM um método muito rápido de serialização.</span><span class="sxs-lookup"><span data-stu-id="50bf8-108">ActiveX serialization is very compact, which makes using the <xref:System.Messaging.ActiveXMessageFormatter> and MSMQ COM control a very fast method of serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50bf8-109">Inicializa uma nova instância da classe <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-109">Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="50bf8-110">O <see cref="T:System.Messaging.Message" /> a ser inspecionado.</span><span class="sxs-lookup"><span data-stu-id="50bf8-110">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="50bf8-111">Determina se o formatador pode desserializar o conteúdo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="50bf8-111">Determines whether the formatter can deserialize the contents of the message.</span></span></summary>
        <returns>
          <span data-ttu-id="50bf8-112"><see langword="true" /> se o <see cref="T:System.Messaging.ActiveXMessageFormatter" /> pode desserializar a mensagem; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-112"><see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50bf8-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> Retorna `false` se o corpo da mensagem não é um primitivo de que o controle ActiveX de enfileiramento de mensagens pode desserializar ou se ele não implementa o `IPersistStream` interface.</span><span class="sxs-lookup"><span data-stu-id="50bf8-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50bf8-114">O parâmetro <paramref name="message" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-114">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50bf8-115">Cria uma instância da classe <see cref="T:System.Messaging.ActiveXMessageFormatter" /> que é idêntica a <see cref="T:System.Messaging.ActiveXMessageFormatter" /> atual.</span><span class="sxs-lookup"><span data-stu-id="50bf8-115">Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="50bf8-116">Um objeto cujas propriedades são idênticas às desse <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-116">An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50bf8-117">Esse método é usado pelo <xref:System.Messaging.MessageQueue> classe para receber várias mensagens ao mesmo tempo (por exemplo, se o aplicativo está recebendo de forma assíncrona).</span><span class="sxs-lookup"><span data-stu-id="50bf8-117">This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</span></span> <span data-ttu-id="50bf8-118">Normalmente, você não precisa chamar este método no código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="50bf8-118">You typically do not need to call this method in your application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject"><span data-ttu-id="50bf8-119">Um objeto OLE que implementa <see langword="IPersistStreamInit" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-119">An OLE object that implements <see langword="IPersistStreamInit" />.</span></span></param>
        <summary><span data-ttu-id="50bf8-120">Fornece um utilitário para ajudar a serializar objetos COM que implementam <see langword="IPersistStream" /> e exigem que <see langword="IPersistStreamInit" /> seja chamado.</span><span class="sxs-lookup"><span data-stu-id="50bf8-120">Provides a utility to help serialize COM objects that implement <see langword="IPersistStream" /> and require <see langword="IPersistStreamInit" /> to be called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="50bf8-121">O <see cref="T:System.Messaging.Message" />, no formato de controle ActiveX do MSMQ, a ser desserializado.</span><span class="sxs-lookup"><span data-stu-id="50bf8-121">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="50bf8-122">Lê o conteúdo de determinada mensagem e cria um objeto que contém a mensagem desserializada.</span><span class="sxs-lookup"><span data-stu-id="50bf8-122">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="50bf8-123">A mensagem desserializada.</span><span class="sxs-lookup"><span data-stu-id="50bf8-123">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50bf8-124">Se o corpo da mensagem representa um tipo primitivo, a mensagem <xref:System.Messaging.Message.BodyType%2A> propriedade deve ser um dos tipos gerenciados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="50bf8-124">If the body of the message represents a primitive type, the message's <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.</span></span>  
  
|<span data-ttu-id="50bf8-125">Valor de BodyType</span><span class="sxs-lookup"><span data-stu-id="50bf8-125">BodyType value</span></span>|<span data-ttu-id="50bf8-126">Tipo gerenciado</span><span class="sxs-lookup"><span data-stu-id="50bf8-126">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="50bf8-127">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="50bf8-127">VT_LPSTR</span></span>|<span data-ttu-id="50bf8-128"><xref:System.Char> matriz (desserializado com codificação ASCII)</span><span class="sxs-lookup"><span data-stu-id="50bf8-128"><xref:System.Char> array (deserialized using ASCII encoding)</span></span>|  
|<span data-ttu-id="50bf8-129">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="50bf8-129">VT_BSTR, VT_LPWSTR</span></span>|<span data-ttu-id="50bf8-130"><xref:System.String> (desserializados usando a codificação Unicode)</span><span class="sxs-lookup"><span data-stu-id="50bf8-130"><xref:System.String> (deserialized using Unicode encoding)</span></span>|  
|<span data-ttu-id="50bf8-131">VT_VECTOR &#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="50bf8-131">VT_VECTOR &#124; VT_UI1</span></span>|<span data-ttu-id="50bf8-132">Matriz <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="50bf8-132"><xref:System.Byte> array</span></span>|  
|<span data-ttu-id="50bf8-133">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="50bf8-133">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="50bf8-134">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="50bf8-134">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="50bf8-135">VT_CY</span><span class="sxs-lookup"><span data-stu-id="50bf8-135">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="50bf8-136">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="50bf8-136">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="50bf8-137">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="50bf8-137">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="50bf8-138">VT_I2</span><span class="sxs-lookup"><span data-stu-id="50bf8-138">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="50bf8-139">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="50bf8-139">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="50bf8-140">VT_I4</span><span class="sxs-lookup"><span data-stu-id="50bf8-140">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="50bf8-141">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="50bf8-141">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="50bf8-142">VT_I8</span><span class="sxs-lookup"><span data-stu-id="50bf8-142">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="50bf8-143">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="50bf8-143">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="50bf8-144">VT_R4</span><span class="sxs-lookup"><span data-stu-id="50bf8-144">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="50bf8-145">VT_R8</span><span class="sxs-lookup"><span data-stu-id="50bf8-145">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="50bf8-146">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="50bf8-146">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="50bf8-147">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="50bf8-147">VT_STREAMED_OBJECT</span></span>|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="50bf8-148">A propriedade <see cref="P:System.Messaging.Message.BodyType" /> do <paramref name="message" /> passado como um parâmetro não pode ser mapeada para um tipo primitivo, nem representa um objeto transmitido.</span><span class="sxs-lookup"><span data-stu-id="50bf8-148">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="50bf8-149">O corpo representa um objeto armazenado.</span><span class="sxs-lookup"><span data-stu-id="50bf8-149">The body represents a stored object.</span></span> <span data-ttu-id="50bf8-150">O <see cref="T:System.Messaging.ActiveXMessageFormatter" /> não oferece suporte à desserialização de objetos armazenados.</span><span class="sxs-lookup"><span data-stu-id="50bf8-150">The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50bf8-151">O parâmetro <paramref name="message" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-151">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="50bf8-152">O <see cref="T:System.Messaging.Message" /> cuja propriedade <see cref="P:System.Messaging.Message.Body" /> conterá o objeto serializado.</span><span class="sxs-lookup"><span data-stu-id="50bf8-152">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="50bf8-153">O objeto a ser serializado no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="50bf8-153">The object to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="50bf8-154">Serializa um objeto no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="50bf8-154">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50bf8-155">A tabela a seguir mostra a relação entre tipos gerenciados e o <xref:System.Messaging.Message.BodyType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="50bf8-155">The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property.</span></span> <span data-ttu-id="50bf8-156">O objeto que você serializar deve ser um destes tipos gerenciados ou deve implementar a OLE `IPersistStream` interface.</span><span class="sxs-lookup"><span data-stu-id="50bf8-156">The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.</span></span>  
  
|<span data-ttu-id="50bf8-157">Valor de BodyType</span><span class="sxs-lookup"><span data-stu-id="50bf8-157">BodyType value</span></span>|<span data-ttu-id="50bf8-158">Tipo gerenciado</span><span class="sxs-lookup"><span data-stu-id="50bf8-158">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="50bf8-159">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="50bf8-159">VT_LPSTR</span></span>|<xref:System.Char>|  
|<span data-ttu-id="50bf8-160">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="50bf8-160">VT_BSTR, VT_LPWSTR</span></span>|<xref:System.String>|  
|<span data-ttu-id="50bf8-161">VT_VECTOR &#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="50bf8-161">VT_VECTOR &#124; VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="50bf8-162">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="50bf8-162">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="50bf8-163">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="50bf8-163">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="50bf8-164">VT_CY</span><span class="sxs-lookup"><span data-stu-id="50bf8-164">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="50bf8-165">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="50bf8-165">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="50bf8-166">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="50bf8-166">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="50bf8-167">VT_I2</span><span class="sxs-lookup"><span data-stu-id="50bf8-167">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="50bf8-168">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="50bf8-168">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="50bf8-169">VT_I4</span><span class="sxs-lookup"><span data-stu-id="50bf8-169">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="50bf8-170">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="50bf8-170">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="50bf8-171">VT_I8</span><span class="sxs-lookup"><span data-stu-id="50bf8-171">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="50bf8-172">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="50bf8-172">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="50bf8-173">VT_R4</span><span class="sxs-lookup"><span data-stu-id="50bf8-173">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="50bf8-174">VT_R8</span><span class="sxs-lookup"><span data-stu-id="50bf8-174">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="50bf8-175">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="50bf8-175">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="50bf8-176">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="50bf8-176">VT_STREAMED_OBJECT</span></span>|<span data-ttu-id="50bf8-177">`IPersistStream` (OLE) <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="50bf8-177">`IPersistStream` (OLE) <xref:System.Object></span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="50bf8-178">O objeto a ser serializado não é nem um primitivo nem um objeto transmitido que implementa a interface <see langword="IPersistStream" /> de OLE.</span><span class="sxs-lookup"><span data-stu-id="50bf8-178">The object to serialize is neither a primitive nor a streamed object that implements the OLE <see langword="IPersistStream" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50bf8-179">O parâmetro <paramref name="message" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="50bf8-179">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>