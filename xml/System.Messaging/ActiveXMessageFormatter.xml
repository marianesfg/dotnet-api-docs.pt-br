<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ActiveXMessageFormatter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</source>
          <target state="translated">Serializa ou desserializa os tipos de dados primitivos e outros objetos de ou para o corpo de uma mensagem do Enfileiramento de Mensagens, usando um formato compatível com o Componente ActiveX do MSMQ.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> é compatível com as mensagens enviadas usando componentes COM serviço de enfileiramento de mensagens, que permite a interoperabilidade com aplicativos que usam o controle COM MSMQ.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> can serialize most primitives, as well as objects that implement the <ph id="ph2">`IPersistStream`</ph> OLE interface.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> pode serializar a maioria dos tipos primitivos, bem como objetos que implementam o <ph id="ph2">`IPersistStream`</ph> interface OLE.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements <ph id="ph1">`IPersistStream`</ph>.</source>
          <target state="translated">Ele pode desserializar o mesmo conjunto de tipos primitivos, mas requer mais esforço ao desserializar um objeto COM (por exemplo, um objeto criado usando o Visual Basic 6.0) que implementa <ph id="ph1">`IPersistStream`</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>The object to deserialize must be in memory by first importing the object into a .NET Framework application.</source>
          <target state="translated">O objeto a ser desserializado deve ser na memória, importe primeiro o objeto em um aplicativo do .NET Framework.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>When an application sends a message to the queue using an instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class, the formatter serializes the object into a stream and inserts it into the message body.</source>
          <target state="translated">Quando um aplicativo envia uma mensagem à fila utilizando uma instância do <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> classe, o formatador serializa o objeto em um fluxo e o insere no corpo da mensagem.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>When reading from a queue using a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, the formatter deserializes the message data into the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated">Durante a leitura de uma fila usando um <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, o formatador desserializa os dados da mensagem para o <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> propriedade de um <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ActiveXMessageFormatter">
          <source>ActiveX serialization is very compact, which makes using the <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and MSMQ COM control a very fast method of serialization.</source>
          <target state="translated">Serialização ActiveX é muito compact, que faz usando o <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> e controle de MSMQ COM um método muito rápido de serialização.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> to inspect.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> a ser inspecionado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source>Determines whether the formatter can deserialize the contents of the message.</source>
          <target state="translated">Determina se o formatador pode desserializar o conteúdo da mensagem.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> can deserialize the message; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> pode desserializar a mensagem; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the <ph id="ph3">`IPersistStream`</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A&gt;</ph> Retorna <ph id="ph2">`false`</ph> se o corpo da mensagem não é um primitivo de que o controle ActiveX de enfileiramento de mensagens pode desserializar ou se ele não implementa o <ph id="ph3">`IPersistStream`</ph> interface.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="message" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> class that is identical to the current <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">Cria uma instância da classe <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> que é idêntica a <ph id="ph2">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>An object whose properties are identical to those of this <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">Um objeto cujas propriedades são idênticas às desse <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>This method is used by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</source>
          <target state="translated">Esse método é usado pelo <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> classe para receber várias mensagens ao mesmo tempo (por exemplo, se o aplicativo está recebendo de forma assíncrona).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Clone">
          <source>You typically do not need to call this method in your application code.</source>
          <target state="translated">Normalmente, você não precisa chamar este método no código do aplicativo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
          <source>An OLE object that implements <ph id="ph1">&lt;see langword="IPersistStreamInit" /&gt;</ph>.</source>
          <target state="translated">Um objeto OLE que implementa <ph id="ph1">&lt;see langword="IPersistStreamInit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
          <source>Provides a utility to help serialize COM objects that implement <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> and require <ph id="ph2">&lt;see langword="IPersistStreamInit" /&gt;</ph> to be called.</source>
          <target state="translated">Fornece um utilitário para ajudar a serializar objetos COM que implementam <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> e exigem que <ph id="ph2">&lt;see langword="IPersistStreamInit" /&gt;</ph> seja chamado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, in MSMQ ActiveX control format, to deserialize.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, no formato de controle ActiveX do MSMQ, a ser desserializado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">Lê o conteúdo de determinada mensagem e cria um objeto que contém a mensagem desserializada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The deserialized message.</source>
          <target state="translated">A mensagem desserializada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>If the body of the message represents a primitive type, the message's <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property must be one of the managed types in the following table.</source>
          <target state="translated">Se o corpo da mensagem representa um tipo primitivo, a mensagem <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> propriedade deve ser um dos tipos gerenciados na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>BodyType value</source>
          <target state="translated">Valor de BodyType</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>Managed type</source>
          <target state="translated">Tipo gerenciado</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_LPSTR</source>
          <target state="translated">VT_LPSTR</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Char&gt;</ph> array (deserialized using ASCII encoding)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char&gt;</ph> matriz (desserializado com codificação ASCII)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_BSTR, VT_LPWSTR</source>
          <target state="translated">VT_BSTR, VT_LPWSTR</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> (deserialized using Unicode encoding)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> (desserializados usando a codificação Unicode)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_VECTOR &amp;#124; VT_UI1</source>
          <target state="translated">VT_VECTOR &amp;#124; VT_UI1</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> array</source>
          <target state="translated">Matriz <ph id="ph1">&lt;xref:System.Byte&gt;</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_BOOL</source>
          <target state="translated">VT_BOOL</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_CLSID</source>
          <target state="translated">VT_CLSID</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_CY</source>
          <target state="translated">VT_CY</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_DATE</source>
          <target state="translated">VT_DATE</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I1, VT_UI1</source>
          <target state="translated">VT_I1, VT_UI1</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I2</source>
          <target state="translated">VT_I2</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_UI2</source>
          <target state="translated">VT_UI2</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I4</source>
          <target state="translated">VT_I4</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_UI4</source>
          <target state="translated">VT_UI4</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_I8</source>
          <target state="translated">VT_I8</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_UI8</source>
          <target state="translated">VT_UI8</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_R4</source>
          <target state="translated">VT_R4</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_R8</source>
          <target state="translated">VT_R8</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_NULL</source>
          <target state="translated">VT_NULL</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>VT_STREAMED_OBJECT</source>
          <target state="translated">VT_STREAMED_OBJECT</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> property of the <ph id="ph2">&lt;paramref name="message" /&gt;</ph> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> do <ph id="ph2">&lt;paramref name="message" /&gt;</ph> passado como um parâmetro não pode ser mapeada para um tipo primitivo, nem representa um objeto transmitido.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The body represents a stored object.</source>
          <target state="translated">O corpo representa um objeto armazenado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> does not support deserialization of stored objects.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Messaging.ActiveXMessageFormatter" /&gt;</ph> não oferece suporte à desserialização de objetos armazenados.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="message" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> property will contain the serialized object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> cuja propriedade <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> conterá o objeto serializado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object to be serialized into the message body.</source>
          <target state="translated">O objeto a ser serializado no corpo da mensagem.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">Serializa um objeto no corpo da mensagem.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The following table shows the relationship between managed types and the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property.</source>
          <target state="translated">A tabela a seguir mostra a relação entre tipos gerenciados e o <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object that you serialize must be one of these managed types or must implement the OLE <ph id="ph1">`IPersistStream`</ph> interface.</source>
          <target state="translated">O objeto que você serializar deve ser um destes tipos gerenciados ou deve implementar a OLE <ph id="ph1">`IPersistStream`</ph> interface.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>BodyType value</source>
          <target state="translated">Valor de BodyType</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Managed type</source>
          <target state="translated">Tipo gerenciado</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_LPSTR</source>
          <target state="translated">VT_LPSTR</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_BSTR, VT_LPWSTR</source>
          <target state="translated">VT_BSTR, VT_LPWSTR</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_VECTOR &amp;#124; VT_UI1</source>
          <target state="translated">VT_VECTOR &amp;#124; VT_UI1</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_BOOL</source>
          <target state="translated">VT_BOOL</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_CLSID</source>
          <target state="translated">VT_CLSID</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_CY</source>
          <target state="translated">VT_CY</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_DATE</source>
          <target state="translated">VT_DATE</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I1, VT_UI1</source>
          <target state="translated">VT_I1, VT_UI1</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I2</source>
          <target state="translated">VT_I2</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_UI2</source>
          <target state="translated">VT_UI2</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I4</source>
          <target state="translated">VT_I4</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_UI4</source>
          <target state="translated">VT_UI4</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_I8</source>
          <target state="translated">VT_I8</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_UI8</source>
          <target state="translated">VT_UI8</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_R4</source>
          <target state="translated">VT_R4</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_R8</source>
          <target state="translated">VT_R8</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_NULL</source>
          <target state="translated">VT_NULL</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>VT_STREAMED_OBJECT</source>
          <target state="translated">VT_STREAMED_OBJECT</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source><ph id="ph1">`IPersistStream`</ph> (OLE) <ph id="ph2">&lt;xref:System.Object&gt;</ph></source>
          <target state="translated"><ph id="ph1">`IPersistStream`</ph> (OLE) <ph id="ph2">&lt;xref:System.Object&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object to serialize is neither a primitive nor a streamed object that implements the OLE <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> interface.</source>
          <target state="translated">O objeto a ser serializado não é nem um primitivo nem um objeto transmitido que implementa a interface <ph id="ph1">&lt;see langword="IPersistStream" /&gt;</ph> de OLE.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="message" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>