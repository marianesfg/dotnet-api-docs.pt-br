<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f84dce420bbd218ac7a5239c45ed08057c395a0c" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53504435" /></Metadata><TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type XmlMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="797d1-101">Serializa e desserializa objetos para ou do corpo de uma mensagem, usando o formato XML baseado na definição de esquema XSD.</span><span class="sxs-lookup"><span data-stu-id="797d1-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-102">O <xref:System.Messaging.XmlMessageFormatter> é o formatador padrão que uma instância de <xref:System.Messaging.MessageQueue> usa para serializar mensagens gravadas na fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="797d1-103">Quando você cria uma instância do <xref:System.Messaging.MessageQueue>, uma instância do <xref:System.Messaging.XmlMessageFormatter> é criado para você e associado a <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="797d1-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="797d1-104">Você pode especificar um formatador diferente criá-lo em seu código e atribuindo-o para o <xref:System.Messaging.MessageQueue.Formatter%2A> propriedade de seu <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="797d1-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="797d1-105">Padrão de uma fila <xref:System.Messaging.XmlMessageFormatter> instância pode ser usada para gravar na fila, mas ele não pode ser usado para ler na fila até que você definir o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> ou <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> propriedade no formatador.</span><span class="sxs-lookup"><span data-stu-id="797d1-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="797d1-106">Você pode definir um ou ambos os valores na instância de formatador de padrão, ou você pode criar uma nova instância do formatador e defina os valores automaticamente, passando-os como argumentos em apropriado <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="797d1-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="797d1-107">Ao especificar <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> em vez de <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, tipo existência é verificada em tempo de compilação, em vez da hora de leitura, reduzindo a possibilidade de erro.</span><span class="sxs-lookup"><span data-stu-id="797d1-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="797d1-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requer que cada entrada seja totalmente qualificado, especificando seu nome de assembly.</span><span class="sxs-lookup"><span data-stu-id="797d1-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="797d1-109">Além disso, ao trabalhar com várias versões simultâneas, o número de versão deve ser anexado para o nome do tipo de destino também.</span><span class="sxs-lookup"><span data-stu-id="797d1-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="797d1-110">O <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais esquemas para tentar corresponder ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="797d1-111">Isso permite que o formatador interpretar o corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="797d1-112">A instância serializada no corpo da mensagem deve estar em conformidade com um dos esquemas representados na matriz de tipo.</span><span class="sxs-lookup"><span data-stu-id="797d1-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="797d1-113">Quando você ler a mensagem usando o <xref:System.Messaging.MessageQueue.Receive%2A> método, o método cria um objeto do tipo que corresponde ao esquema identificado e lê o corpo da mensagem para ele.</span><span class="sxs-lookup"><span data-stu-id="797d1-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="797d1-114">Apenas uma das duas propriedades deve ser definida durante a leitura da fila, mas você pode definir ambos.</span><span class="sxs-lookup"><span data-stu-id="797d1-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="797d1-115">O conjunto de tipos é o conjunto combinado de duas propriedades.</span><span class="sxs-lookup"><span data-stu-id="797d1-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="797d1-116">A decisão de qual propriedade a ser usada é específica para seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="797d1-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="797d1-117">Se o corpo da mensagem contém um tipo cujo esquema não corresponde a nenhum dos tipos na matriz para uma das propriedades, uma exceção será lançada quando a mensagem é lida.</span><span class="sxs-lookup"><span data-stu-id="797d1-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="797d1-118">O <xref:System.Messaging.XmlMessageFormatter> é um componente crucial de acoplamento fraco de mensagens baseadas em XML.</span><span class="sxs-lookup"><span data-stu-id="797d1-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="797d1-119">A utilitário XSD.exe usa que o formato XML é usado para gerar o esquema XML, como quando você usa o utilitário para serializar uma classe usada por seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="797d1-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="797d1-120">A classe deve ter um construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="797d1-120">The class must have a default constructor.</span></span>  
  
 <span data-ttu-id="797d1-121">O formato é usado novamente o processo inverso quando o utilitário gera uma classe com base no esquema você distribuir para descrever seus dados de classe.</span><span class="sxs-lookup"><span data-stu-id="797d1-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="797d1-122">O uso do utilitário e o esquema XML que ele gera permite que você evite redistributing.dll arquivos toda vez que você recompilar uma classe depois que a implementação de sua classe foi alterado.</span><span class="sxs-lookup"><span data-stu-id="797d1-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="797d1-123">Desde que o esquema não é alterada no cliente ou servidor, outras alterações em ambos os lados não afetam a outra.</span><span class="sxs-lookup"><span data-stu-id="797d1-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-124">O exemplo de código a seguir inclui três partes de código: um componente de servidor, uma classe ordem e o código do cliente.</span><span class="sxs-lookup"><span data-stu-id="797d1-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="797d1-125">A classe order pode ser usada pelo utilitário XSD.exe para gerar o esquema que o servidor reconhece dentro de mensagens de entrada.</span><span class="sxs-lookup"><span data-stu-id="797d1-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="797d1-126">O esquema é um arquivo XML formatado que descreve a "forma" da classe.</span><span class="sxs-lookup"><span data-stu-id="797d1-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="797d1-127">Esse esquema, em seguida, pode ser usado no lado do cliente para gerar uma classe de pedido de cliente específico que compartilha o mesmo esquema que a classe de servidor.</span><span class="sxs-lookup"><span data-stu-id="797d1-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="797d1-128">O exemplo de código a seguir representa um componente de servidor que recebe pedidos por meio de uma fila de mensagens.</span><span class="sxs-lookup"><span data-stu-id="797d1-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="797d1-129">O corpo da mensagem deve ser um objeto de pedido cujo esquema corresponde à classe {1&gt;Order.CS&lt;1 abaixo.</span><span class="sxs-lookup"><span data-stu-id="797d1-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="797d1-130">O processo de servidor ou aplicativo desserializa a ordem.</span><span class="sxs-lookup"><span data-stu-id="797d1-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="797d1-131">O exemplo de código a seguir representa a classe de ordem que fornece um esquema para os objetos de ordem que o aplicativo no servidor recebe e desserializa.</span><span class="sxs-lookup"><span data-stu-id="797d1-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="797d1-132">Qualquer aplicativo cliente que interage com o aplicativo no servidor deve enviar mensagens para o servidor pelas informações de serialização em uma classe de ordem definida localmente no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="797d1-133">A classe ordem definida localmente deve ter o mesmo esquema que a classe ordem definida pelo servidor no qual o aplicativo no servidor tenta desserializar o corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="797d1-134">O utilitário XSD.exe permite que o Gerenciador do aplicativo no servidor de criar e distribuir o esquema que o cliente deve usar para serializar mensagens enviadas para o servidor.</span><span class="sxs-lookup"><span data-stu-id="797d1-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="797d1-135">Quando o Gerenciador do aplicativo cliente recebe o esquema para a classe de ordem, o utilitário XSD.exe é usado novamente para gerar uma classe de ordem de clientes específicos do esquema.</span><span class="sxs-lookup"><span data-stu-id="797d1-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="797d1-136">É essa classe que é usada no exemplo de código cliente abaixo, a classe de ordem do servidor não (o utilitário XSD.exe faz com que a classe de esquema gerado ter o mesmo nome que a classe original).</span><span class="sxs-lookup"><span data-stu-id="797d1-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="797d1-137">Essa nova classe ordem é usado para serializar a ordem no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="797d1-138">O exemplo de código a seguir é o lado do cliente de processamento, usado para serializar um pedido e enviar as informações associadas com a ordem em uma fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="797d1-139">O código associa informações de Item, a quantidade e o endereço de elementos do esquema que foram gerados para a classe {1&gt;Order.CS&lt;1 pelo utilitário XSD.exe.</span><span class="sxs-lookup"><span data-stu-id="797d1-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="797d1-140">Um pedido é enviado para a fila de pedidos no computador local.</span><span class="sxs-lookup"><span data-stu-id="797d1-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="797d1-141">Depois que o esquema é gerado da classe ordem no servidor, você pode modificar a classe.</span><span class="sxs-lookup"><span data-stu-id="797d1-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="797d1-142">A menos que as alterações de esquema, você não precisa redistribuir o esquema.</span><span class="sxs-lookup"><span data-stu-id="797d1-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="797d1-143">Depois de distribuído o esquema e gerado de uma classe de ordem do lado do cliente, essa classe de cliente também pode ser modificado independentemente de classe de ordem do servidor, desde que o próprio esquema não será modificado.</span><span class="sxs-lookup"><span data-stu-id="797d1-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="797d1-144">As duas classes se tornam acoplados de forma flexível.</span><span class="sxs-lookup"><span data-stu-id="797d1-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="797d1-145">Inicializa uma nova instância da classe <see cref="T:System.Messaging.XmlMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-146">Inicializa uma nova instância da classe <see cref="T:System.Messaging.XmlMessageFormatter" />, sem tipos de destino definidos.</span><span class="sxs-lookup"><span data-stu-id="797d1-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-147">Essa sobrecarga do construtor é usada com mais frequência ao gravar na fila, como tipos de destino não são necessários durante a gravação.</span><span class="sxs-lookup"><span data-stu-id="797d1-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="797d1-148">Para ler uma mensagem de uma fila usando uma instância de <xref:System.Messaging.XmlMessageFormatter> criado usando este construtor, você deve definir o <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> ou <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades para o formatador Saiba quais tipos para tentar desserializar.</span><span class="sxs-lookup"><span data-stu-id="797d1-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="797d1-149">Quando você cria um novo <xref:System.Messaging.MessageQueue>, um padrão <xref:System.Messaging.XmlMessageFormatter> instância é criada, sem o conjunto de tipos de destino.</span><span class="sxs-lookup"><span data-stu-id="797d1-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="797d1-150">Assim como acontece com um formatador criado com esse construtor, você deve definir os tipos de destino para essa instância de formatador se você quiser ler na fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : string[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypeNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames"><span data-ttu-id="797d1-151">Uma matriz do tipo <see cref="T:System.String" /> que especifica o conjunto dos possíveis tipos que serão desserializados pelo formatador da mensagem fornecida.</span><span class="sxs-lookup"><span data-stu-id="797d1-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span> <span data-ttu-id="797d1-152">Esses valores devem ser totalmente qualificados, por exemplo, “MyNamespace.MyOrders, MyOrdersAssemblyName”.</span><span class="sxs-lookup"><span data-stu-id="797d1-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span></span></param>
        <summary><span data-ttu-id="797d1-153">Inicializa uma nova instância da classe <see cref="T:System.Messaging.XmlMessageFormatter" />, definindo os tipos de destino passados como uma matriz de valores de cadeia de caracteres (totalmente qualificados).</span><span class="sxs-lookup"><span data-stu-id="797d1-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-154">Os construtores com parâmetros de tipo de destino são usados com mais frequência durante a leitura da fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="797d1-155">Ao escrever, não é necessário especificar os tipos de destino.</span><span class="sxs-lookup"><span data-stu-id="797d1-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="797d1-156">Essa sobrecarga da <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> construtor define o <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> propriedade para os valores passados através da matriz a `targetTypeNames` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="797d1-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="797d1-157">Definir essa propriedade permite uma <xref:System.Messaging.MessageQueue> usando este <xref:System.Messaging.XmlMessageFormatter> instância para ler as mensagens que contêm objetos de tipos.</span><span class="sxs-lookup"><span data-stu-id="797d1-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="797d1-158">Tanto a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais esquemas para tentar corresponder ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="797d1-159">Isso permite que o formatador interpretar o corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="797d1-160">A instância serializada no corpo da mensagem deve estar em conformidade com um dos esquemas representados na matriz de tipo.</span><span class="sxs-lookup"><span data-stu-id="797d1-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="797d1-161">Quando você ler a mensagem usando o <xref:System.Messaging.MessageQueue.Receive%2A> método, o método cria um objeto do tipo que corresponde ao esquema identificado e lê o corpo da mensagem para ele.</span><span class="sxs-lookup"><span data-stu-id="797d1-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="797d1-162">Apenas uma das duas propriedades deve ser definida durante a leitura da fila, mas você pode definir ambos.</span><span class="sxs-lookup"><span data-stu-id="797d1-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="797d1-163">O conjunto de tipos é o conjunto combinado de duas propriedades.</span><span class="sxs-lookup"><span data-stu-id="797d1-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="797d1-164">A decisão de qual delas usar é específica para seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="797d1-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="797d1-165">Se o corpo da mensagem contém um tipo cujo esquema não corresponde a nenhum dos tipos na matriz para uma das propriedades, uma exceção será lançada em tempo de leitura.</span><span class="sxs-lookup"><span data-stu-id="797d1-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-166">O parâmetro <paramref name="targetTypeNames" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : Type[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes"><span data-ttu-id="797d1-167">Uma matriz do tipo <see cref="T:System.Type" /> que especifica o conjunto dos possíveis tipos que serão desserializados pelo formatador da mensagem fornecida.</span><span class="sxs-lookup"><span data-stu-id="797d1-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></param>
        <summary><span data-ttu-id="797d1-168">Inicializa uma nova instância da classe <see cref="T:System.Messaging.XmlMessageFormatter" />, definindo tipos de destino transmitidos como uma matriz de tipos de objeto.</span><span class="sxs-lookup"><span data-stu-id="797d1-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-169">Os construtores com parâmetros de tipo de destino são usados com mais frequência durante a leitura da fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="797d1-170">Ao escrever, não é necessário especificar os tipos de destino.</span><span class="sxs-lookup"><span data-stu-id="797d1-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="797d1-171">Essa sobrecarga da <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> construtor define o <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedade para os valores passados através da matriz a `targetTypes` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="797d1-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="797d1-172">Definir essa propriedade permite uma <xref:System.Messaging.MessageQueue> usando este <xref:System.Messaging.XmlMessageFormatter> instância para ler as mensagens que contêm objetos dos tipos dados.</span><span class="sxs-lookup"><span data-stu-id="797d1-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="797d1-173">Tanto a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais esquemas para tentar corresponder ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="797d1-174">Isso permite que o formatador interpretar o corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="797d1-175">A instância serializada no corpo da mensagem deve estar em conformidade com um dos esquemas representados na matriz de tipo.</span><span class="sxs-lookup"><span data-stu-id="797d1-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="797d1-176">Quando você ler a mensagem usando o <xref:System.Messaging.MessageQueue.Receive%2A> método, o método cria um objeto do tipo que corresponde ao esquema identificado e lê o corpo da mensagem para ele.</span><span class="sxs-lookup"><span data-stu-id="797d1-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="797d1-177">Apenas uma das duas propriedades deve ser definida durante a leitura da fila, mas você pode definir ambos.</span><span class="sxs-lookup"><span data-stu-id="797d1-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="797d1-178">O conjunto de tipos é o conjunto combinado de duas propriedades.</span><span class="sxs-lookup"><span data-stu-id="797d1-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="797d1-179">A decisão de qual delas usar é específica para seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="797d1-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="797d1-180">Se o corpo da mensagem contém um tipo cujo esquema não corresponde a nenhum dos tipos na matriz para uma das propriedades, uma exceção será lançada em tempo de leitura.</span><span class="sxs-lookup"><span data-stu-id="797d1-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="797d1-181">Ao especificar <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> em vez de <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, tipo existência é verificada em tempo de compilação, em vez da hora de leitura, reduzindo a possibilidade de erro.</span><span class="sxs-lookup"><span data-stu-id="797d1-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="797d1-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requer que cada entrada seja totalmente qualificado, especificando seu nome de assembly.</span><span class="sxs-lookup"><span data-stu-id="797d1-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="797d1-183">Além disso, ao trabalhar com várias versões simultâneas, o número de versão deve ser anexado para o nome do tipo de destino também.</span><span class="sxs-lookup"><span data-stu-id="797d1-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="797d1-184">Ao usar <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, você pode adicionar cada objeto (por exemplo, `MyClass`) à lista de uma maneira demonstrada pelo código a seguir em C#.</span><span class="sxs-lookup"><span data-stu-id="797d1-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-185">O parâmetro <paramref name="targetTypes" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="xmlMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="797d1-186">O <see cref="T:System.Messaging.Message" /> a ser inspecionado.</span><span class="sxs-lookup"><span data-stu-id="797d1-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="797d1-187">Determina se o formatador pode desserializar a mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-187">Determines whether the formatter can deserialize the message.</span></span></summary>
        <returns><span data-ttu-id="797d1-188"><see langword="true" /> se o formatador XML puder desserializar a mensagem; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-188"><see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-189">Quando <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> é chamado, o formatador tenta determinar se o conteúdo da mensagem é algo que ele pode desserializar.</span><span class="sxs-lookup"><span data-stu-id="797d1-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="797d1-190">O formatador pode desserializar apenas a mensagem se o tipo no corpo da mensagem tem o mesmo esquema como um dos tipos na matriz representada pela <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="797d1-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="797d1-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> Retorna `false` nas duas seguintes circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="797d1-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="797d1-192">A mensagem não foi formatada usando o <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="797d1-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="797d1-193">O esquema do corpo da mensagem não está entre aqueles listados em ambos os <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> ou <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="797d1-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="797d1-194">O <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais tipos de objetos deve ser capaz de desserializar.</span><span class="sxs-lookup"><span data-stu-id="797d1-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="797d1-195">Se qualquer tipo está ausente na lista, ainda é encontrado dentro da mensagem <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="797d1-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="797d1-196">Nenhuma das propriedades <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> ou <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> foi definida.</span><span class="sxs-lookup"><span data-stu-id="797d1-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-197">O parâmetro <paramref name="message" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-197">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="xmlMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="797d1-198">Cria uma instância da classe <see cref="T:System.Messaging.XmlMessageFormatter" /> cujas propriedades de leitura/gravação (os conjuntos dos tipos de destino) são as mesmas que a instância <see cref="T:System.Messaging.XmlMessageFormatter" /> atual.</span><span class="sxs-lookup"><span data-stu-id="797d1-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="797d1-199">Um objeto cujas propriedades são idênticas àquelas da instância <see cref="T:System.Messaging.XmlMessageFormatter" />, mas cujos metadados não o especificam como uma instância da classe de formatador.</span><span class="sxs-lookup"><span data-stu-id="797d1-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-200">Esse método cria uma cópia do formatador e a inicializa todas as suas propriedades para os valores desse <xref:System.Messaging.XmlMessageFormatter> objeto.</span><span class="sxs-lookup"><span data-stu-id="797d1-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="xmlMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="797d1-201">O <see cref="T:System.Messaging.Message" />, em formato XML, a ser desserializado.</span><span class="sxs-lookup"><span data-stu-id="797d1-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="797d1-202">Lê o conteúdo de determinada mensagem e cria um objeto que contém a mensagem desserializada.</span><span class="sxs-lookup"><span data-stu-id="797d1-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="797d1-203">A mensagem desserializada.</span><span class="sxs-lookup"><span data-stu-id="797d1-203">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-204">Tanto a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais esquemas para tentar corresponder ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="797d1-205">Uma dessas propriedades deve ser definida antes que a mensagem pode ser desserializada.</span><span class="sxs-lookup"><span data-stu-id="797d1-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="797d1-206">A instância serializada no corpo da mensagem deve estar em conformidade com um dos esquemas representados na matriz de tipo.</span><span class="sxs-lookup"><span data-stu-id="797d1-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="797d1-207">Quando você ler a mensagem usando o <xref:System.Messaging.MessageQueue.Receive%2A> método, o método cria um objeto do tipo que corresponde ao esquema identificado e lê o corpo da mensagem para ele.</span><span class="sxs-lookup"><span data-stu-id="797d1-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="797d1-208">Os tipos de destino não deve ser especificado para gravar na fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="797d1-209">Nenhuma das propriedades <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> ou <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> foi definida.</span><span class="sxs-lookup"><span data-stu-id="797d1-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span>  
  
<span data-ttu-id="797d1-210">- ou -</span><span class="sxs-lookup"><span data-stu-id="797d1-210">-or-</span></span> 
<span data-ttu-id="797d1-211">A instância serializada no corpo da mensagem não é compatível com nenhum dos esquemas representados pelos tipos nas propriedades <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> e <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-212">O parâmetro <paramref name="message" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-212">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypeNames : string[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="797d1-213">Especifica o conjunto de tipos possíveis que serão desserializados pelo formatador da mensagem fornecida.</span><span class="sxs-lookup"><span data-stu-id="797d1-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="797d1-214">Uma matriz do tipo <see cref="T:System.String" /> que especifica os tipos de objetos a serem desserializados do corpo da mensagem ao ler a mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-215">Tanto a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais esquemas para tentar corresponder ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="797d1-216">Isso permite que o formatador interpretar o corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="797d1-217">A instância serializada no corpo da mensagem deve estar em conformidade com um dos esquemas representados na matriz de tipo.</span><span class="sxs-lookup"><span data-stu-id="797d1-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="797d1-218">Quando você ler a mensagem usando o <xref:System.Messaging.MessageQueue.Receive%2A> método, o método cria um objeto do tipo que corresponde ao esquema identificado e lê o corpo da mensagem para ele.</span><span class="sxs-lookup"><span data-stu-id="797d1-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="797d1-219">Apenas uma das duas propriedades deve ser definida durante a leitura da fila, mas você pode definir ambos.</span><span class="sxs-lookup"><span data-stu-id="797d1-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="797d1-220">O conjunto de tipos é o conjunto combinado de duas propriedades.</span><span class="sxs-lookup"><span data-stu-id="797d1-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="797d1-221">A decisão de qual propriedade a ser usada é específica para seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="797d1-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="797d1-222">Se o corpo da mensagem contém um tipo cujo esquema não corresponde a nenhum dos tipos na matriz para uma das propriedades, uma exceção será lançada quando a mensagem é lida.</span><span class="sxs-lookup"><span data-stu-id="797d1-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="797d1-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requer que cada entrada seja totalmente qualificado, especificando seu nome de assembly.</span><span class="sxs-lookup"><span data-stu-id="797d1-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="797d1-224">Além disso, ao trabalhar com várias versões simultâneas, o número de versão deve ser anexado para o nome do tipo de destino também.</span><span class="sxs-lookup"><span data-stu-id="797d1-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="797d1-225">Os tipos de destino só são necessários durante a leitura da fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="797d1-226">O <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades não precisam ser definidas para gravar na fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-227">A propriedade <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypes : Type[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="797d1-228">Especifica o conjunto de tipos possíveis que serão desserializados pelo formatador da mensagem fornecida.</span><span class="sxs-lookup"><span data-stu-id="797d1-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="797d1-229">Uma matriz do tipo <see cref="T:System.Type" /> que especifica os tipos de objetos a serem desserializados do corpo da mensagem ao ler a mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-230">Tanto a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades informar ao formatador quais esquemas para tentar corresponder ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="797d1-231">Isso permite que o formatador interpretar o corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="797d1-232">A instância serializada no corpo da mensagem deve estar em conformidade com um dos esquemas representados na matriz de tipo.</span><span class="sxs-lookup"><span data-stu-id="797d1-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="797d1-233">Quando você ler a mensagem usando o <xref:System.Messaging.MessageQueue.Receive%2A> método, o método cria um objeto do tipo que corresponde ao esquema identificado e lê o corpo da mensagem para ele.</span><span class="sxs-lookup"><span data-stu-id="797d1-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="797d1-234">Apenas uma das duas propriedades deve ser definida durante a leitura da fila, mas você pode definir ambos.</span><span class="sxs-lookup"><span data-stu-id="797d1-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="797d1-235">O conjunto de tipos é o conjunto combinado de duas propriedades.</span><span class="sxs-lookup"><span data-stu-id="797d1-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="797d1-236">A decisão de qual propriedade a ser usada é específica para seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="797d1-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="797d1-237">Se o corpo da mensagem contém um tipo cujo esquema não corresponde a nenhum dos tipos na matriz para uma das propriedades, uma exceção será lançada quando a mensagem é lida.</span><span class="sxs-lookup"><span data-stu-id="797d1-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="797d1-238">Os tipos de destino só são necessários durante a leitura da fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="797d1-239">O <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> e <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedades não precisam ser definidas para gravar na fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="797d1-240">Ao especificar <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> em vez de <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, tipo existência é verificada em tempo de compilação, em vez da hora de leitura, reduzindo a possibilidade de erro.</span><span class="sxs-lookup"><span data-stu-id="797d1-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="797d1-241">Ao usar <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, você pode adicionar cada objeto (por exemplo, `MyClass`) à lista de uma maneira demonstrada pelo código do c# `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span><span class="sxs-lookup"><span data-stu-id="797d1-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="797d1-242">O exemplo de código a seguir envia e recebe uma mensagem que contém um pedido de e para uma fila.</span><span class="sxs-lookup"><span data-stu-id="797d1-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-243">A propriedade <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="xmlMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="797d1-244">O <see cref="T:System.Messaging.Message" /> cuja propriedade <see cref="P:System.Messaging.Message.Body" /> conterá o objeto serializado.</span><span class="sxs-lookup"><span data-stu-id="797d1-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="797d1-245">O <see cref="T:System.Object" /> a ser serializado no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="797d1-246">Serializa um objeto no corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-246">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="797d1-247">Os tipos de destino não precisam ser especificados para gravar na fila conforme eles devem ser durante a leitura.</span><span class="sxs-lookup"><span data-stu-id="797d1-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="797d1-248">O <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> ou <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> propriedade é usada pelo formatador apenas ao desserializar uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="797d1-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="797d1-249">O <xref:System.Messaging.XmlMessageFormatter> utiliza o <xref:System.Xml.Serialization.XmlSerializer> classe, que define o que pode ser serializado.</span><span class="sxs-lookup"><span data-stu-id="797d1-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="797d1-250">Somente propriedades públicas e campos públicos podem ser serializadas.</span><span class="sxs-lookup"><span data-stu-id="797d1-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="797d1-251">Estruturas, as estruturas com matrizes e matrizes de estruturas são todos serializável, desde que não usam o estilo codificado com o protocolo SOAP.</span><span class="sxs-lookup"><span data-stu-id="797d1-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="797d1-252">O parâmetro <paramref name="message" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-252">The <paramref name="message" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="797d1-253">- ou -</span><span class="sxs-lookup"><span data-stu-id="797d1-253">-or-</span></span> 
<span data-ttu-id="797d1-254">O parâmetro <paramref name="obj" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="797d1-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>