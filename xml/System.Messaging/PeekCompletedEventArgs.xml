<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="78e46-101">Fornece dados para o evento de <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> .</span><span class="sxs-lookup"><span data-stu-id="78e46-101">Provides data for the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span></span> <span data-ttu-id="78e46-102">Quando sua operação de espiada assíncrona chama um manipulador de eventos, uma instância dessa classe é passada para o manipulador.</span><span class="sxs-lookup"><span data-stu-id="78e46-102">When your asynchronous peek operation calls an event handler, an instance of this class is passed to the handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78e46-103">Quando você usa notificação de eventos para inspecionar (ler sem remover) mensagens assincronamente da fila, você deve criar um método que manipula o processamento de mensagem.</span><span class="sxs-lookup"><span data-stu-id="78e46-103">When you use event notification to peek (read without removing) messages asynchronously from the queue, you must create a method that handles your message processing.</span></span> <span data-ttu-id="78e46-104">Seu código deve chamar <xref:System.Messaging.MessageQueue.BeginPeek%2A> para iniciar o processamento assíncrono.</span><span class="sxs-lookup"><span data-stu-id="78e46-104">Your code must call <xref:System.Messaging.MessageQueue.BeginPeek%2A> to begin the asynchronous processing.</span></span> <span data-ttu-id="78e46-105">Quando uma mensagem é inspecionada, o aplicativo é notificado por meio de <xref:System.Messaging.MessageQueue.PeekCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="78e46-105">When a message is peeked, your application is notified through the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="78e46-106">Uma instância de <xref:System.Messaging.PeekCompletedEventArgs> é passado para o delegado de evento que chama o manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="78e46-106">An instance of <xref:System.Messaging.PeekCompletedEventArgs> is passed into the event delegate that calls your event handler.</span></span> <span data-ttu-id="78e46-107">Os dados associados a <xref:System.Messaging.MessageQueue.PeekCompleted> evento está contido no delegado <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="78e46-107">The data associated with the <xref:System.Messaging.MessageQueue.PeekCompleted> event is contained in the delegate's <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.</span></span>  
  
 <span data-ttu-id="78e46-108">Há duas maneiras de fornecer notificação de evento de conclusão: notificação de eventos e retornos de chamada.</span><span class="sxs-lookup"><span data-stu-id="78e46-108">There are two ways to provide notification of event completion: event notification and callbacks.</span></span> <span data-ttu-id="78e46-109"><xref:System.Messaging.PeekCompletedEventArgs> é usado apenas com a notificação de eventos.</span><span class="sxs-lookup"><span data-stu-id="78e46-109"><xref:System.Messaging.PeekCompletedEventArgs> is used only with event notification.</span></span> <span data-ttu-id="78e46-110">Para obter informações sobre como comparar os retornos de chamada e notificação de eventos, consulte "eventos vs. Retornos de chamada"no MSDN.</span><span class="sxs-lookup"><span data-stu-id="78e46-110">For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</span></span>  
  
 <span data-ttu-id="78e46-111"><xref:System.Messaging.PeekCompletedEventArgs> fornece acesso para a mensagem que iniciou o final da operação assíncrona de pico, por meio de <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> membro.</span><span class="sxs-lookup"><span data-stu-id="78e46-111"><xref:System.Messaging.PeekCompletedEventArgs> provides access to the message that initiated the end of the asynchronous peek operation, through the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> member.</span></span> <span data-ttu-id="78e46-112">Isso é um alternativo de acesso para a mensagem e se comporta semelhante a uma chamada para <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="78e46-112">This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78e46-113">O exemplo de código a seguir cria um manipulador de eventos para o <xref:System.Messaging.MessageQueue.PeekCompleted> eventos e associa-o com o evento delegar usando o <xref:System.Messaging.PeekCompletedEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="78e46-113">The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.PeekCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.PeekCompletedEventHandler>.</span></span> <span data-ttu-id="78e46-114">O manipulador de eventos, `MyPeekCompleted`, exibe uma mensagem e grava seu rótulo para a tela.</span><span class="sxs-lookup"><span data-stu-id="78e46-114">The event handler, `MyPeekCompleted`, peeks a message and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78e46-115">Obtém ou define o resultado da operação assíncrona solicitada.</span><span class="sxs-lookup"><span data-stu-id="78e46-115">Gets or sets the result of the asynchronous operation requested.</span></span></summary>
        <value><span data-ttu-id="78e46-116">Um <see cref="T:System.IAsyncResult" /> que contém os dados associados à operação de pico.</span><span class="sxs-lookup"><span data-stu-id="78e46-116">A <see cref="T:System.IAsyncResult" /> that contains the data associated with the peek operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78e46-117"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifica as operações assíncronas em andamento ou concluídas.</span><span class="sxs-lookup"><span data-stu-id="78e46-117"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifies ongoing or completed asynchronous operations.</span></span> <span data-ttu-id="78e46-118">A propriedade contém dados que ajudam a determinar qual várias operações assíncronas potenciais para ser concluída, e quando passados para o manipulador de eventos, permite <xref:System.Messaging.MessageQueue.EndPeek%2A> para acessar a mensagem associada à operação concluída.</span><span class="sxs-lookup"><span data-stu-id="78e46-118">The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndPeek%2A> to access the message associated with the completed operation.</span></span>  
  
 <span data-ttu-id="78e46-119">Quando você chama <xref:System.Messaging.MessageQueue.BeginPeek%2A>, um <xref:System.IAsyncResult> é retornado imediatamente, mesmo que uma mensagem, se houver, tem ainda não foram recuperada porque não é possível concluir a operação.</span><span class="sxs-lookup"><span data-stu-id="78e46-119">When you call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</span></span> <span data-ttu-id="78e46-120">O <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> indica o estado da operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="78e46-120">The <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> indicates the state of the asynchronous operation.</span></span> <span data-ttu-id="78e46-121"><xref:System.Messaging.MessageQueue.BeginPeek%2A> cria o objeto, que é modificado durante a operação até <xref:System.Messaging.MessageQueue.EndPeek%2A> conclui-la.</span><span class="sxs-lookup"><span data-stu-id="78e46-121"><xref:System.Messaging.MessageQueue.BeginPeek%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndPeek%2A> completes it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78e46-122">Obtém a mensagem associada à operação de espiar assíncrona.</span><span class="sxs-lookup"><span data-stu-id="78e46-122">Gets the message associated with the asynchronous peek operation.</span></span></summary>
        <value><span data-ttu-id="78e46-123">Um <see cref="T:System.Messaging.Message" /> que representa o resultado final da operação assíncrona de pico.</span><span class="sxs-lookup"><span data-stu-id="78e46-123">A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous peek operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78e46-124">O <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> propriedade fornece um meio para recuperar a mensagem que iniciou o final da operação assíncrona de pico.</span><span class="sxs-lookup"><span data-stu-id="78e46-124">The <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> property provides a means for retrieving the message that initiated the end of the asynchronous peek operation.</span></span>  
  
 <span data-ttu-id="78e46-125"><xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> é chamado da primeira vez o <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> propriedade é leitura, portanto, não é necessário chamar <xref:System.Messaging.MessageQueue.EndPeek%2A> antes de obter o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="78e46-125"><xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> is called the first time the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndPeek%2A> prior to getting the value of this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="78e46-126">Não foi possível recuperar o <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />.</span><span class="sxs-lookup"><span data-stu-id="78e46-126">The <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> could not be retrieved.</span></span> <span data-ttu-id="78e46-127">O tempo limite em que a operação assíncrona pode ter expirado.</span><span class="sxs-lookup"><span data-stu-id="78e46-127">The time-out on the asynchronous operation might have expired.</span></span></exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>