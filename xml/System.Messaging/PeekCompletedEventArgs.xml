<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d5d541c128ecfd35240c46666234a37dc16382" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece dados para o evento de <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> . Quando sua operação de espiada assíncrona chama um manipulador de eventos, uma instância dessa classe é passada para o manipulador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você usa notificação de eventos para inspecionar (ler sem remover) mensagens assincronamente da fila, você deve criar um método que manipula o processamento de mensagem. Seu código deve chamar <xref:System.Messaging.MessageQueue.BeginPeek%2A> para iniciar o processamento assíncrono. Quando uma mensagem é inspecionada, o aplicativo é notificado por meio de <xref:System.Messaging.MessageQueue.PeekCompleted> eventos. Uma instância de <xref:System.Messaging.PeekCompletedEventArgs> é passado para o delegado de evento que chama o manipulador de eventos. Os dados associados a <xref:System.Messaging.MessageQueue.PeekCompleted> evento está contido no delegado <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parâmetro.  
  
 Há duas maneiras de fornecer notificação de evento de conclusão: notificação de eventos e retornos de chamada. <xref:System.Messaging.PeekCompletedEventArgs> é usado apenas com a notificação de eventos. Para obter informações sobre como comparar os retornos de chamada e notificação de eventos, consulte "eventos vs. Retornos de chamada"no MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs> fornece acesso para a mensagem que iniciou o final da operação assíncrona de pico, por meio de <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> membro. Isso é um alternativo de acesso para a mensagem e se comporta semelhante a uma chamada para <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um manipulador de eventos para o <xref:System.Messaging.MessageQueue.PeekCompleted> eventos e associa-o com o evento delegar usando o <xref:System.Messaging.PeekCompletedEventHandler>. O manipulador de eventos, `MyPeekCompleted`, exibe uma mensagem e grava seu rótulo para a tela.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o resultado da operação assíncrona solicitada.</summary>
        <value>Um <see cref="T:System.IAsyncResult" /> que contém os dados associados à operação de pico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifica as operações assíncronas em andamento ou concluídas. A propriedade contém dados que ajudam a determinar qual várias operações assíncronas potenciais para ser concluída, e quando passados para o manipulador de eventos, permite <xref:System.Messaging.MessageQueue.EndPeek%2A> para acessar a mensagem associada à operação concluída.  
  
 Quando você chama <xref:System.Messaging.MessageQueue.BeginPeek%2A>, um <xref:System.IAsyncResult> é retornado imediatamente, mesmo que uma mensagem, se houver, tem ainda não foram recuperada porque não é possível concluir a operação. O <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> indica o estado da operação assíncrona. <xref:System.Messaging.MessageQueue.BeginPeek%2A> cria o objeto, que é modificado durante a operação até <xref:System.Messaging.MessageQueue.EndPeek%2A> conclui-la.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a mensagem associada à operação de espiar assíncrona.</summary>
        <value>Um <see cref="T:System.Messaging.Message" /> que representa o resultado final da operação assíncrona de pico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> propriedade fornece um meio para recuperar a mensagem que iniciou o final da operação assíncrona de pico.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> é chamado da primeira vez o <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> propriedade é leitura, portanto, não é necessário chamar <xref:System.Messaging.MessageQueue.EndPeek%2A> antes de obter o valor dessa propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">Não foi possível recuperar o <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />. O tempo limite em que a operação assíncrona pode ter expirado.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>