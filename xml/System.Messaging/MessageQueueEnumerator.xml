<Type Name="MessageQueueEnumerator" FullName="System.Messaging.MessageQueueEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b7a2308828eebb55255004efdc87a3f4fddda86" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52600625" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueEnumerator extends System.MarshalByRefObject implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueEnumerator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type MessageQueueEnumerator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1db7d-101">Fornece um cursor somente de avanço para enumerar por meio de mensagens em uma fila de mensagens.</span><span class="sxs-lookup"><span data-stu-id="1db7d-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-102">Use <xref:System.Messaging.MessageQueueEnumerator> para dinâmica interação com filas na rede.</span><span class="sxs-lookup"><span data-stu-id="1db7d-102">Use <xref:System.Messaging.MessageQueueEnumerator> for dynamic interaction with queues on the network.</span></span> <span data-ttu-id="1db7d-103">Métodos disponíveis por meio de <xref:System.Messaging.MessageQueue> classe pode retornar um <xref:System.Messaging.MessageQueueEnumerator> que contém uma lista dinâmica de filas, ou uma matriz que contém um instantâneo da coleção de fila no momento em que o método especificado foi chamado.</span><span class="sxs-lookup"><span data-stu-id="1db7d-103">Methods available through the <xref:System.Messaging.MessageQueue> class can return either a <xref:System.Messaging.MessageQueueEnumerator> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</span></span>  
  
 <span data-ttu-id="1db7d-104">Não há nenhuma ordem definida de filas em uma rede.</span><span class="sxs-lookup"><span data-stu-id="1db7d-104">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="1db7d-105">Eles não são ordenados, por exemplo, ao computador, o rótulo, o status de público ou privado ou outros critérios acessível ao usuário.</span><span class="sxs-lookup"><span data-stu-id="1db7d-105">They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</span></span> <span data-ttu-id="1db7d-106">Um <xref:System.Messaging.MessageQueueEnumerator> é um cursor, inicializado para o início de uma lista dinâmica.</span><span class="sxs-lookup"><span data-stu-id="1db7d-106">A <xref:System.Messaging.MessageQueueEnumerator> is a cursor, initialized to the head of a dynamic list.</span></span> <span data-ttu-id="1db7d-107">Você pode mover o cursor para a primeira fila da enumeração chamando <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="1db7d-107">You can move the cursor to the first queue of the enumeration by calling <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="1db7d-108">Depois que o enumerador foi inicializado, você pode usar <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> para percorrer as filas restantes para frente.</span><span class="sxs-lookup"><span data-stu-id="1db7d-108">After the enumerator has been initialized, you can use <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to step forward through the remaining queues.</span></span>  
  
 <span data-ttu-id="1db7d-109">Não é possível retroceder uma etapa com um <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="1db7d-109">It is not possible to step backward with a <xref:System.Messaging.MessageQueueEnumerator>.</span></span> <span data-ttu-id="1db7d-110">Um cursor só permite o movimento de Avançar na enumeração de fila.</span><span class="sxs-lookup"><span data-stu-id="1db7d-110">A cursor only allows forward movement through the queue enumeration.</span></span> <span data-ttu-id="1db7d-111">No entanto, você pode chamar <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> para redefinir a enumeração e coloque o cursor no início da lista novamente.</span><span class="sxs-lookup"><span data-stu-id="1db7d-111">However, you can call <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to reset the enumeration and put the cursor at the beginning of the list again.</span></span> <span data-ttu-id="1db7d-112">Como o enumerador é dinâmico, uma fila que é acrescentada além a posição do cursor atual pode ser acessada pelo enumerador.</span><span class="sxs-lookup"><span data-stu-id="1db7d-112">Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</span></span> <span data-ttu-id="1db7d-113">Uma fila que é inserida antes que a posição do cursor atual não pode ser acessada sem redefinição chamada primeiro.</span><span class="sxs-lookup"><span data-stu-id="1db7d-113">A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1db7d-114">O exemplo de código a seguir itera em todas as filas de mensagens na rede e examina o caminho para cada fila.</span><span class="sxs-lookup"><span data-stu-id="1db7d-114">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="1db7d-115">Por fim, ele exibe o número de filas públicas na rede.</span><span class="sxs-lookup"><span data-stu-id="1db7d-115">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageQueueEnumerator.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1db7d-116">Libera os recursos associados ao enumerador.</span><span class="sxs-lookup"><span data-stu-id="1db7d-116">Frees the resources associated with the enumerator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-117">O sistema operacional retém um identificador aberto, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, para o enumerador de fila durante o tempo de vida do cursor.</span><span class="sxs-lookup"><span data-stu-id="1db7d-117">The operating system retains an open handle, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, to the queue enumerator during the lifetime of the cursor.</span></span> <span data-ttu-id="1db7d-118">Quando você terminar de trabalhar com o enumerador, chame <xref:System.Messaging.MessageQueueEnumerator.Close%2A> para liberar os recursos associados com o identificador.</span><span class="sxs-lookup"><span data-stu-id="1db7d-118">When you finish working with the enumerator, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to release the resources associated with the handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ Current { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueueEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db7d-119">Obtém a <see cref="T:System.Messaging.MessageQueue" /> atual da enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-119">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span></span></summary>
        <value><span data-ttu-id="1db7d-120">A fila na qual o cursor está posicionado no momento.</span><span class="sxs-lookup"><span data-stu-id="1db7d-120">The queue at which the cursor is currently positioned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-121">Quando o enumerador é criado, ele não aponta para qualquer coisa, portanto, <xref:System.Messaging.MessageQueueEnumerator.Current%2A> não é válido e lançará uma exceção se ele for acessado.</span><span class="sxs-lookup"><span data-stu-id="1db7d-121">When the enumerator is created, it does not point to anything, so <xref:System.Messaging.MessageQueueEnumerator.Current%2A> is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="1db7d-122">Você deve chamar <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> para posicionar o cursor na primeira fila na enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-122">You must call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to position the cursor at the first queue in the enumeration.</span></span>  
  
 <span data-ttu-id="1db7d-123">Diversas chamadas para <xref:System.Messaging.MessageQueueEnumerator.Current%2A> com nenhuma chamada intermediária para <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retornará a mesma <xref:System.Messaging.MessageQueue> objeto.</span><span class="sxs-lookup"><span data-stu-id="1db7d-123">Multiple calls to <xref:System.Messaging.MessageQueueEnumerator.Current%2A> with no intervening calls to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return the same <xref:System.Messaging.MessageQueue> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1db7d-124">Você chamou <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> antes da primeira chamada para <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span><span class="sxs-lookup"><span data-stu-id="1db7d-124">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span></span> <span data-ttu-id="1db7d-125">O cursor está localizado antes da primeira fila na enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-125">The cursor is located before the first queue in the enumeration.</span></span>  
  
<span data-ttu-id="1db7d-126">- ou -</span><span class="sxs-lookup"><span data-stu-id="1db7d-126">-or-</span></span> 
<span data-ttu-id="1db7d-127">Você chamou <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> após uma chamada para <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> ter retornado false (indicando que o cursor está localizado após a última fila na enumeração).</span><span class="sxs-lookup"><span data-stu-id="1db7d-127">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration).</span></span></exception>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1db7d-128">Libera os recursos usados pelo <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="1db7d-128">Releases the resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="messageQueueEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1db7d-129">Libera todos os recursos usados pelo <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="1db7d-129">Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-130">Chamando <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> permite que os recursos usados pelo <xref:System.Messaging.MessageQueueEnumerator> para ser realocados para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="1db7d-130">Calling <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> allows the resources used by the <xref:System.Messaging.MessageQueueEnumerator> to be reallocated for other purposes.</span></span> <span data-ttu-id="1db7d-131">Para obter mais informações sobre <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1db7d-131">For more information about <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="1db7d-132">Limpando recursos não gerenciados</span><span class="sxs-lookup"><span data-stu-id="1db7d-132">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="messageQueueEnumerator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1db7d-133"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="1db7d-133"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1db7d-134">Libera os recursos não gerenciados usados pelo <see cref="T:System.Messaging.MessageQueueEnumerator" /> e opcionalmente libera os recursos gerenciados.</span><span class="sxs-lookup"><span data-stu-id="1db7d-134">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-135">Este método é chamado pelo método público <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1db7d-135">This method is called by the public <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1db7d-136">`Dispose` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="1db7d-136">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1db7d-137"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="1db7d-137"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1db7d-138">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Messaging.MessageQueueEnumerator> referências.</span><span class="sxs-lookup"><span data-stu-id="1db7d-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Messaging.MessageQueueEnumerator> references.</span></span> <span data-ttu-id="1db7d-139">Este método invoca o método `Dispose` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="1db7d-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1db7d-140">
            <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span><span class="sxs-lookup"><span data-stu-id="1db7d-140">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1db7d-141">Ao substituir <see langword="Dispose(Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="1db7d-141">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1db7d-142">Para obter mais informações sobre como implementar <see langword="Dispose" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="1db7d-142">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="1db7d-143">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1db7d-143">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="1db7d-144">Como implementar um método Dispose</span><span class="sxs-lookup"><span data-stu-id="1db7d-144">Implementing a Dispose method</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="1db7d-145">Limpando recursos não gerenciados</span><span class="sxs-lookup"><span data-stu-id="1db7d-145">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MessageQueueEnumerator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="messageQueueEnumerator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1db7d-146">Libera os recursos mantidos pela fila.</span><span class="sxs-lookup"><span data-stu-id="1db7d-146">Releases the resources held by the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="1db7d-147">Este método substitui <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="1db7d-147">This method overrides <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="1db7d-148">O código do aplicativo não deve chamar esse método; método Finalize de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="1db7d-148">Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>

<span data-ttu-id="1db7d-149">Para obter mais informações, consulte [métodos Finalize e destruidores](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v=vs.100)), [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md), e [substituindo o método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1db7d-149">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v=vs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocatorHandle">
      <MemberSignature Language="C#" Value="public IntPtr LocatorHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int LocatorHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocatorHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr LocatorHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.LocatorHandle : nativeint" Usage="System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db7d-150">Obtém o identificador de Enfileiramento de Mensagens nativo usado para localizar filas em uma rede.</span><span class="sxs-lookup"><span data-stu-id="1db7d-150">Gets the native Message Queuing handle used to locate queues in a network.</span></span></summary>
        <value><span data-ttu-id="1db7d-151">O identificador nativo para a fila atual.</span><span class="sxs-lookup"><span data-stu-id="1db7d-151">The native handle to the current queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-152">Quando você não precisa mais isso <xref:System.Messaging.MessageQueueEnumerator> da instância, chame <xref:System.Messaging.MessageQueueEnumerator.Close%2A> para liberar esse identificador para o recurso.</span><span class="sxs-lookup"><span data-stu-id="1db7d-152">When you no longer need this <xref:System.Messaging.MessageQueueEnumerator> instance, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to free this handle to the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="1db7d-153">O identificador não existe.</span><span class="sxs-lookup"><span data-stu-id="1db7d-153">The handle does not exist.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1db7d-154">O código de chamada não tem permissões de procura.</span><span class="sxs-lookup"><span data-stu-id="1db7d-154">The calling code does not have browse permissions.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="messageQueueEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1db7d-155">Avança o enumerador para a próxima fila de enumeração, se houver uma disponível no momento.</span><span class="sxs-lookup"><span data-stu-id="1db7d-155">Advances the enumerator to the next queue of the enumeration, if one is currently available.</span></span></summary>
        <returns><span data-ttu-id="1db7d-156"><see langword="true" /> se o enumerador tiver avançado com êxito para a próxima fila; <see langword="false" /> se o enumerador tiver atingido o fim da enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-156"><see langword="true" /> if the enumerator was successfully advanced to the next queue; <see langword="false" /> if the enumerator has reached the end of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-157"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> Retorna `false` imediatamente se não houver nenhuma fila associada com a enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-157"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> returns `false` immediately if there are no queues associated with the enumeration.</span></span>  
  
 <span data-ttu-id="1db7d-158"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retornará `true` até que ele alcançou o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="1db7d-158"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="1db7d-159">Em seguida, ele retornará `false` para cada chamada sucessiva.</span><span class="sxs-lookup"><span data-stu-id="1db7d-159">It will then return `false` for each successive call.</span></span> <span data-ttu-id="1db7d-160">No entanto, quando <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retornou `false`, o acesso a <xref:System.Messaging.MessageQueueEnumerator.Current%2A> propriedade lançará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="1db7d-160">However once <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Messaging.MessageQueueEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="1db7d-161">No momento da criação, um enumerador é conceitualmente posicionado antes da primeira <xref:System.Messaging.MessageQueue> da enumeração e a primeira chamada para <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> traz a primeira fila de enumeração no modo de exibição.</span><span class="sxs-lookup"><span data-stu-id="1db7d-161">Upon creation, an enumerator is conceptually positioned before the first <xref:System.Messaging.MessageQueue> of the enumeration, and the first call to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> brings the first queue of the enumeration into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1db7d-162">O código de chamada não tem permissões de procura.</span><span class="sxs-lookup"><span data-stu-id="1db7d-162">The calling code does not have browse permissions.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="messageQueueEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1db7d-163">Redefine o cursor para que ele aponte para o início da enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-163">Resets the cursor, so it points to the beginning of the enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1db7d-164">Um enumerador move em uma direção de somente avanço.</span><span class="sxs-lookup"><span data-stu-id="1db7d-164">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="1db7d-165">Use esse método para retornar ao início da enumeração de filas.</span><span class="sxs-lookup"><span data-stu-id="1db7d-165">Use this method to return to the beginning of the enumeration of queues.</span></span>  
  
 <span data-ttu-id="1db7d-166"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> posiciona o cursor na primeira fila na lista.</span><span class="sxs-lookup"><span data-stu-id="1db7d-166"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> positions the cursor at the first queue in the list.</span></span> <span data-ttu-id="1db7d-167">Você não precisará chamar <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> para mover o cursor para frente para a primeira fila na enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-167">You do not need to call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to move the cursor forward to the first queue in the enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1db7d-168">Obtém a <see cref="T:System.Messaging.MessageQueue" /> atual da enumeração.</span><span class="sxs-lookup"><span data-stu-id="1db7d-168">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span></span></summary>
        <value><span data-ttu-id="1db7d-169">A fila na qual o cursor está posicionado no momento.</span><span class="sxs-lookup"><span data-stu-id="1db7d-169">The queue at which the cursor is currently positioned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>