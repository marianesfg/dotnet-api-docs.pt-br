<Type Name="MessageQueueEnumerator" FullName="System.Messaging.MessageQueueEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dd645dcfd97fa2036ad0395acbbbf3e86c2865e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459940" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueEnumerator extends System.MarshalByRefObject implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueEnumerator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6da0e-101">Fornece um cursor somente de avanço para enumerar por meio de mensagens em uma fila de mensagens.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6da0e-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-102">Use <xref:System.Messaging.MessageQueueEnumerator> para dinâmica interação com as filas na rede.</span><span class="sxs-lookup"><span data-stu-id="6da0e-102">Use <xref:System.Messaging.MessageQueueEnumerator> for dynamic interaction with queues on the network.</span></span> <span data-ttu-id="6da0e-103">Métodos disponíveis por meio de <xref:System.Messaging.MessageQueue> classe pode retornar um <xref:System.Messaging.MessageQueueEnumerator> que contém uma lista dinâmica de filas ou uma matriz que contém um instantâneo da coleção de fila no momento em que o método especificado foi chamado.</span><span class="sxs-lookup"><span data-stu-id="6da0e-103">Methods available through the <xref:System.Messaging.MessageQueue> class can return either a <xref:System.Messaging.MessageQueueEnumerator> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</span></span>  
  
 <span data-ttu-id="6da0e-104">Não há nenhuma ordem definida de filas em uma rede.</span><span class="sxs-lookup"><span data-stu-id="6da0e-104">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="6da0e-105">Eles não são ordenados, por exemplo, por computador, o rótulo, o status público ou privado ou outros critérios acessível ao usuário.</span><span class="sxs-lookup"><span data-stu-id="6da0e-105">They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</span></span> <span data-ttu-id="6da0e-106">Um <xref:System.Messaging.MessageQueueEnumerator> é um cursor, inicializado para o início de uma lista dinâmica.</span><span class="sxs-lookup"><span data-stu-id="6da0e-106">A <xref:System.Messaging.MessageQueueEnumerator> is a cursor, initialized to the head of a dynamic list.</span></span> <span data-ttu-id="6da0e-107">Você pode mover o cursor para a primeira fila da enumeração chamando <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="6da0e-107">You can move the cursor to the first queue of the enumeration by calling <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="6da0e-108">Depois que o enumerador foi inicializado, você pode usar <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> para percorrer as filas restantes para a frente.</span><span class="sxs-lookup"><span data-stu-id="6da0e-108">After the enumerator has been initialized, you can use <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to step forward through the remaining queues.</span></span>  
  
 <span data-ttu-id="6da0e-109">Não é possível retroceder uma etapa com um <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="6da0e-109">It is not possible to step backward with a <xref:System.Messaging.MessageQueueEnumerator>.</span></span> <span data-ttu-id="6da0e-110">Um cursor permite apenas movimento para frente por meio da enumeração de fila.</span><span class="sxs-lookup"><span data-stu-id="6da0e-110">A cursor only allows forward movement through the queue enumeration.</span></span> <span data-ttu-id="6da0e-111">No entanto, você pode chamar <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> para redefinir a enumeração e coloque o cursor no início da lista novamente.</span><span class="sxs-lookup"><span data-stu-id="6da0e-111">However, you can call <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to reset the enumeration and put the cursor at the beginning of the list again.</span></span> <span data-ttu-id="6da0e-112">Como o enumerador é dinâmico, uma fila que é anexada além da posição atual do cursor pode ser acessada pelo enumerador.</span><span class="sxs-lookup"><span data-stu-id="6da0e-112">Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</span></span> <span data-ttu-id="6da0e-113">Uma fila que é inserida antes da posição atual do cursor não pode ser acessada sem redefinir chamada primeiro.</span><span class="sxs-lookup"><span data-stu-id="6da0e-113">A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6da0e-114">O exemplo de código a seguir itera todas as filas de mensagens na rede e examina o caminho para cada fila.</span><span class="sxs-lookup"><span data-stu-id="6da0e-114">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="6da0e-115">Finalmente, ele exibe o número de filas públicas na rede.</span><span class="sxs-lookup"><span data-stu-id="6da0e-115">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-116">Libera os recursos associados ao enumerador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-116">Frees the resources associated with the enumerator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-117">O sistema operacional retém um identificador aberto, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, para o enumerador de fila durante o tempo de vida do cursor.</span><span class="sxs-lookup"><span data-stu-id="6da0e-117">The operating system retains an open handle, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, to the queue enumerator during the lifetime of the cursor.</span></span> <span data-ttu-id="6da0e-118">Quando terminar de trabalhar com o enumerador, chame <xref:System.Messaging.MessageQueueEnumerator.Close%2A> para liberar os recursos associados com o identificador.</span><span class="sxs-lookup"><span data-stu-id="6da0e-118">When you finish working with the enumerator, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to release the resources associated with the handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ Current { System::Messaging::MessageQueue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-119">Obtém a <see cref="T:System.Messaging.MessageQueue" /> atual da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-119">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6da0e-120">A fila na qual o cursor está atualmente posicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-120">The queue at which the cursor is currently positioned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-121">Quando o enumerador é criado, ele não apontar para qualquer coisa, portanto <xref:System.Messaging.MessageQueueEnumerator.Current%2A> não é válido e lançará uma exceção se ele for acessado.</span><span class="sxs-lookup"><span data-stu-id="6da0e-121">When the enumerator is created, it does not point to anything, so <xref:System.Messaging.MessageQueueEnumerator.Current%2A> is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="6da0e-122">Você deve chamar <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> para posicionar o cursor na primeira fila na enumeração.</span><span class="sxs-lookup"><span data-stu-id="6da0e-122">You must call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to position the cursor at the first queue in the enumeration.</span></span>  
  
 <span data-ttu-id="6da0e-123">Diversas chamadas para <xref:System.Messaging.MessageQueueEnumerator.Current%2A> com nenhuma intervenção chamadas para <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retornará o mesmo <xref:System.Messaging.MessageQueue> objeto.</span><span class="sxs-lookup"><span data-stu-id="6da0e-123">Multiple calls to <xref:System.Messaging.MessageQueueEnumerator.Current%2A> with no intervening calls to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return the same <xref:System.Messaging.MessageQueue> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6da0e-124">Você chamou <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> antes da primeira chamada para <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-124">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span>
          </span>
          <span data-ttu-id="6da0e-125">O cursor está localizado antes da primeira fila na enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-125">The cursor is located before the first queue in the enumeration.</span>
          </span>
          <span data-ttu-id="6da0e-126">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-126">-or-</span>
          </span>
          <span data-ttu-id="6da0e-127">Você chamou <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> após uma chamada para <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> ter retornado false (indicando que o cursor está localizado após a última fila na enumeração).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-127">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration).</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-128">Libera os recursos usados pelo <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-128">Releases the resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-129">Libera todos os recursos usados pelo <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-129">Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-130">Chamando <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> permite que os recursos usados pelo <xref:System.Messaging.MessageQueueEnumerator> para ser realocada para outros fins.</span><span class="sxs-lookup"><span data-stu-id="6da0e-130">Calling <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> allows the resources used by the <xref:System.Messaging.MessageQueueEnumerator> to be reallocated for other purposes.</span></span> <span data-ttu-id="6da0e-131">Para obter mais informações sobre <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="6da0e-131">For more information about <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6da0e-132">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-132">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6da0e-133">Libera os recursos não gerenciados usados pelo <see cref="T:System.Messaging.MessageQueueEnumerator" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-133">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-134">Este método é chamado pelo método público <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="6da0e-134">This method is called by the public <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6da0e-135">`Dispose` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="6da0e-135">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6da0e-136"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="6da0e-136"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6da0e-137">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Messaging.MessageQueueEnumerator> referências.</span><span class="sxs-lookup"><span data-stu-id="6da0e-137">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Messaging.MessageQueueEnumerator> references.</span></span> <span data-ttu-id="6da0e-138">Este método invoca o método `Dispose` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="6da0e-138">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6da0e-139">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6da0e-139">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="6da0e-140">Ao substituir <see langword="Dispose(Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6da0e-140">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="6da0e-141">Para obter mais informações sobre como implementar <see langword="Dispose" />, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="6da0e-141">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="6da0e-142">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="6da0e-142">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MessageQueueEnumerator ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocatorHandle">
      <MemberSignature Language="C#" Value="public IntPtr LocatorHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int LocatorHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocatorHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr LocatorHandle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-143">Obtém o identificador de Enfileiramento de Mensagens nativo usado para localizar filas em uma rede.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-143">Gets the native Message Queuing handle used to locate queues in a network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6da0e-144">O identificador nativo para a fila atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-144">The native handle to the current queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-145">Quando você não precisa mais isso <xref:System.Messaging.MessageQueueEnumerator> instância, chame <xref:System.Messaging.MessageQueueEnumerator.Close%2A> para liberar esse identificador para o recurso.</span><span class="sxs-lookup"><span data-stu-id="6da0e-145">When you no longer need this <xref:System.Messaging.MessageQueueEnumerator> instance, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to free this handle to the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="6da0e-146">O identificador não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-146">The handle does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="6da0e-147">O código de chamada não tem permissões de procura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-147">The calling code does not have browse permissions.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-148">Avança o enumerador para a próxima fila de enumeração, se houver uma disponível no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-148">Advances the enumerator to the next queue of the enumeration, if one is currently available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6da0e-149">
            <see langword="true" /> se o enumerador tiver avançado com êxito para a próxima fila; <see langword="false" /> se o enumerador tiver atingido o fim da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-149">
              <see langword="true" /> if the enumerator was successfully advanced to the next queue; <see langword="false" /> if the enumerator has reached the end of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-150"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> Retorna `false` imediatamente se não houver nenhum filas associadas a enumeração.</span><span class="sxs-lookup"><span data-stu-id="6da0e-150"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> returns `false` immediately if there are no queues associated with the enumeration.</span></span>  
  
 <span data-ttu-id="6da0e-151"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retornará `true` até que ele tenha atingido o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="6da0e-151"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="6da0e-152">Em seguida, ele retornará `false` para cada chamada sucessiva.</span><span class="sxs-lookup"><span data-stu-id="6da0e-152">It will then return `false` for each successive call.</span></span> <span data-ttu-id="6da0e-153">No entanto, quando <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> retornou `false`, acessando o <xref:System.Messaging.MessageQueueEnumerator.Current%2A> propriedade gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="6da0e-153">However once <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Messaging.MessageQueueEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="6da0e-154">Após a criação, um enumerador é conceitualmente posicionado antes da primeira <xref:System.Messaging.MessageQueue> de enumeração e a primeira chamada para <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> coloca na primeira fila da enumeração em modo de exibição.</span><span class="sxs-lookup"><span data-stu-id="6da0e-154">Upon creation, an enumerator is conceptually positioned before the first <xref:System.Messaging.MessageQueue> of the enumeration, and the first call to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> brings the first queue of the enumeration into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="6da0e-155">O código de chamada não tem permissões de procura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-155">The calling code does not have browse permissions.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-156">Redefine o cursor para que ele aponte para o início da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-156">Resets the cursor, so it points to the beginning of the enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6da0e-157">Um enumerador move em uma direção de somente avanço.</span><span class="sxs-lookup"><span data-stu-id="6da0e-157">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="6da0e-158">Use esse método para retornar ao início da enumeração de filas.</span><span class="sxs-lookup"><span data-stu-id="6da0e-158">Use this method to return to the beginning of the enumeration of queues.</span></span>  
  
 <span data-ttu-id="6da0e-159"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> posiciona o cursor na primeira fila na lista.</span><span class="sxs-lookup"><span data-stu-id="6da0e-159"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> positions the cursor at the first queue in the list.</span></span> <span data-ttu-id="6da0e-160">Você não precisa chamar <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> depois de chamar <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> para mover o cursor para frente para a primeira fila na enumeração.</span><span class="sxs-lookup"><span data-stu-id="6da0e-160">You do not need to call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to move the cursor forward to the first queue in the enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6da0e-161">Obtém a <see cref="T:System.Messaging.MessageQueue" /> atual da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-161">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6da0e-162">A fila na qual o cursor está atualmente posicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6da0e-162">The queue at which the cursor is currently positioned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>