<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueTransaction.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d2f750339c17f272f8cc360d38e3f1850a40606b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2f750339c17f272f8cc360d38e3f1850a40606b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Provides a Message Queuing internal transaction.</source>
          <target state="translated">Fornece uma transação interna do Enfileiramento de Mensagens.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>To send or receive a message as part of a transaction, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> class to create a transaction and pass it to an overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType&gt;</ph> method that takes a <ph id="ph4">`transaction`</ph> parameter.</source>
          <target state="translated">Para enviar ou receber uma mensagem como parte de uma transação, você pode usar o <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> classe para criar uma transação e transmiti-la a uma sobrecarga de <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType&gt;</ph> método que utiliza um <ph id="ph4">`transaction`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Messages sent as part of a transaction must be sent to transactional queues.</source>
          <target state="translated">As mensagens enviadas como parte de uma transação devem ser enviadas para filas transacionais.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Messages received from transactional queues must be received using a specified transaction.</source>
          <target state="translated">Mensagens recebidas de filas transacionais devem ser recebidas usando uma transação especificada.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, you can receive messages with a specified identifier or specified correlation identifier.</source>
          <target state="translated">Além de <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> método, você pode receber mensagens com um identificador especificado ou o identificador de correlação especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>See the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> methods for more information about selectively receiving messages from transactional queues.</source>
          <target state="translated">Consulte o <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> métodos para obter mais informações sobre seletivamente receber mensagens de filas transacionais.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Messages sent to transactional queues are removed if the transaction is committed.</source>
          <target state="translated">Mensagens enviadas para filas transacionais são removidas se a transação for confirmada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Similarly, messages received from transactional queues are returned to the queue if the transaction is rolled back.</source>
          <target state="translated">Da mesma forma, as mensagens recebidas de filas transacionais são retornadas para a fila se a transação for revertida.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>If you instantiate a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> and pass it to an applicable overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method to send a message to a non-transactional queue or receive a message from a non-transactional queue, the method throws an exception that indicates "Wrong Transaction Usage."</source>
          <target state="translated">Se você criar uma instância de um <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> e passá-lo para uma sobrecarga aplicável a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> método ou <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> método para enviar uma mensagem para uma fila não transacional ou receber uma mensagem de uma fila não transacional, o método gera uma exceção que indica "Uso de transação incorreto".</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> é de thread apartment com suporte, portanto, se o estado de apartment é <ph id="ph2">`STA`</ph>, você não pode usar a transação em vários threads.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
          <target state="translated">Visual Basic define o estado do thread principal para <ph id="ph1">`STA`</ph>, portanto, você deve aplicar o <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> no <ph id="ph3">`Main`</ph> sub-rotina.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
          <target state="translated">Caso contrário, o envio de uma mensagem transacional usando outro thread gerará uma exceção <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
          <target state="translated">Aplicar o <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> usando o seguinte fragmento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo é thread-safe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.#ctor">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> property to <ph id="ph2">`Initialized`</ph>.</source>
          <target state="translated">Esse construtor define o <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> propriedade <ph id="ph2">`Initialized`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>Rolls back the pending internal transaction.</source>
          <target state="translated">Reverte a transação interna pendente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> marks the unsuccessful completion of a process begun at a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> marca a conclusão bem-sucedida de um processo iniciado em uma chamada para <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>Typically, one makes a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> within a <ph id="ph2">`Try...Catch`</ph> exception-handling block, putting a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> in the <ph id="ph4">`Try`</ph> clause, and a call to <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> in the <ph id="ph6">`Catch`</ph> clause.</source>
          <target state="translated">Normalmente, um faz uma chamada para <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> dentro de um <ph id="ph2">`Try...Catch`</ph> bloco de tratamento de exceções, colocando uma chamada para <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> no <ph id="ph4">`Try`</ph> cláusula e uma chamada para <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> no <ph id="ph6">`Catch`</ph> cláusula.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> rolls back the entire transaction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> Reverte a transação inteira.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>This includes all messages sent or received after the call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated">Isso inclui todas as mensagens enviadas ou recebidas após a chamada a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>The internal transaction you are attempting to roll back has not started.</source>
          <target state="translated">A transação interna que você está tentando reverter não foi iniciada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>An internal Message Queuing error occurs.</source>
          <target state="translated">Ocorre um erro interno do Enfileiramento de Mensagens.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>Begins a new Message Queuing internal transaction.</source>
          <target state="translated">Inicia uma nova transação interna do Enfileiramento de Mensagens.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> marks the start of processing that will be committed or rolled back, depending on the success of the transaction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> marca o início do processamento que será confirmado ou revertido, dependendo o sucesso da transação.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>If an exception occurs during processing, the entire transaction is rolled back.</source>
          <target state="translated">Se ocorrer uma exceção durante o processamento, a transação inteira é revertida.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>This includes all messages sent or received after the call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated">Isso inclui todas as mensagens enviadas ou recebidas após a chamada a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>Typically, one makes a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> within a <ph id="ph2">`Try...Catch`</ph> exception-handling block, putting a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> in the <ph id="ph4">`Try`</ph> clause, and a call to <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> in the <ph id="ph6">`Catch`</ph> clause.</source>
          <target state="translated">Normalmente, um faz uma chamada para <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> dentro de um <ph id="ph2">`Try...Catch`</ph> bloco de tratamento de exceções, colocando uma chamada para <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> no <ph id="ph4">`Try`</ph> cláusula e uma chamada para <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> no <ph id="ph6">`Catch`</ph> cláusula.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>The transaction has already been started.</source>
          <target state="translated">A transação já foi iniciada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>An internal Message Queuing error occurs.</source>
          <target state="translated">Ocorre um erro interno do Enfileiramento de Mensagens.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>Commits a pending internal transaction.</source>
          <target state="translated">Confirma uma transação interna pendente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> marks the successful completion of processing begun at a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> marca a conclusão bem-sucedida de processamento iniciado em uma chamada para <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>If an exception occurs between the call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> and the call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, the entire transaction is rolled back.</source>
          <target state="translated">Se uma exceção ocorrer entre a chamada a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> e a chamada para <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, a transação inteira é revertida.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>This includes all messages sent or received after the call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated">Isso inclui todas as mensagens enviadas ou recebidas após a chamada a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>Typically, one makes a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> within a <ph id="ph2">`Try...Catch`</ph> exception-handling block, putting a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> in the <ph id="ph4">`Try`</ph> clause, and a call to <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> in the <ph id="ph6">`Catch`</ph> clause.</source>
          <target state="translated">Normalmente, um faz uma chamada para <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> dentro de um <ph id="ph2">`Try...Catch`</ph> bloco de tratamento de exceções, colocando uma chamada para <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> no <ph id="ph4">`Try`</ph> cláusula e uma chamada para <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> no <ph id="ph6">`Catch`</ph> cláusula.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>The transaction you are trying to commit has not started.</source>
          <target state="translated">A transação que você está tentando confirmar não foi iniciada.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>An internal Message Queuing error occurs.</source>
          <target state="translated">Ocorre um erro interno do Enfileiramento de Mensagens.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> permite que os recursos usados pelo <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> para ser realocada para outros fins.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`Dispose`</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>Any pending internal transactions are rolled back by <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Quaisquer transações internas pendentes serão revertidas por <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> e pelo método <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> invoca o método <ph id="ph2">`Dispose(Boolean)`</ph> protegido com o parâmetro <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>substituindo o método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>Releases the resources held by the current instance.</source>
          <target state="translated">Libera os recursos mantidos pela instância atual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método substitui <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">O código do aplicativo não deve chamar este método; o método <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Finalize%2A&gt;</ph> de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o método <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>métodos Finalize e destruidores<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>limpeza de recursos não gerenciados<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, e <bpt id="p3">[</bpt>substituindo o método Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>Gets the status of the transaction.</source>
          <target state="translated">Obtém o status da transação.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionStatus" /&gt;</ph> values that indicates whether the transaction has been committed, aborted, initialized, or is pending.</source>
          <target state="translated">Uma da <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionStatus" /&gt;</ph> valores que indica se a transação foi confirmada, anulada, inicializado, ou se está pendente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>When an instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> class has been created, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> is set by the constructor to <ph id="ph3">`Initialized`</ph>.</source>
          <target state="translated">Quando uma instância do <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> classe tiver sido criada, o <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> é definido pelo construtor para <ph id="ph3">`Initialized`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>After a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> but before a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>, the <ph id="ph4">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> is <ph id="ph5">`Pending`</ph>.</source>
          <target state="translated">Após uma chamada para <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> , mas antes de uma chamada para <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>, o <ph id="ph4">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> é <ph id="ph5">`Pending`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>