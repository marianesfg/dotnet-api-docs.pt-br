<Type Name="FragmentState" FullName="System.Speech.Synthesis.TtsEngine.FragmentState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90aa0a6e7e04ad5dbbbae06ced078b864375e90f" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53297249" /></Metadata><TypeSignature Language="C#" Value="public struct FragmentState : IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FragmentState extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
  <TypeSignature Language="VB.NET" Value="Public Structure FragmentState&#xA;Implements IEquatable(Of FragmentState)" />
  <TypeSignature Language="C++ CLI" Value="public value class FragmentState : IEquatable&lt;System::Speech::Synthesis::TtsEngine::FragmentState&gt;" />
  <TypeSignature Language="F#" Value="type FragmentState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece informações detalhadas sobre um <see langword="TextFragment" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instâncias são obtidas a partir de <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> em <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objetos.  
  
 As informações no <xref:System.Speech.Synthesis.TtsEngine.FragmentState> é obtida ao analisar os decoração de texto de fala no sintetizador de fala Markup Language (SSML) usado como uma entrada para um mecanismo de síntese de atributos.  
  
 Um <xref:System.Speech.Synthesis.TtsEngine.FragmentState> objeto pode existir para qualquer solicitação de ação de sintetizador conforme especificado pelo seu <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriedade. No entanto, o significado de seus membros pode ser alterado para ações diferentes. Para obter mais informações sobre sintetizador de ações, consulte <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> para obter mais informações sobre como especificar ações do sintetizador.  
  
-   Especificação e controle sobre a qualidade da saída falada em grande parte é tratada por meio de <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A>, e <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Duration%2A>  
  
-   Informações de estrutura fonético, idioma e analisou estão disponíveis por meio <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A>, e <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int32 langId, int32 emphasis, int32 duration, class System.Speech.Synthesis.TtsEngine.SayAs sayAs, class System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FragmentState(System::Speech::Synthesis::TtsEngine::TtsEngineAction action, int langId, int emphasis, int duration, System::Speech::Synthesis::TtsEngine::SayAs ^ sayAs, System::Speech::Synthesis::TtsEngine::Prosody ^ prosody, cli::array &lt;char&gt; ^ phonemes);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.FragmentState : System.Speech.Synthesis.TtsEngine.TtsEngineAction * int * int * int * System.Speech.Synthesis.TtsEngine.SayAs * System.Speech.Synthesis.TtsEngine.Prosody * char[] -&gt; System.Speech.Synthesis.TtsEngine.FragmentState" Usage="new System.Speech.Synthesis.TtsEngine.FragmentState (action, langId, emphasis, duration, sayAs, prosody, phonemes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="action" Type="System.Speech.Synthesis.TtsEngine.TtsEngineAction" />
        <Parameter Name="langId" Type="System.Int32" />
        <Parameter Name="emphasis" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.TtsEngine.SayAs" />
        <Parameter Name="prosody" Type="System.Speech.Synthesis.TtsEngine.Prosody" />
        <Parameter Name="phonemes" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="action">Um membro da enumeração <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> que especifica uma ação de síntese de fala.</param>
        <param name="langId">A ID da linguagem que está sendo usada. Corresponde ao atributo <c>xml:lang</c> XML.</param>
        <param name="emphasis">A ênfase a ser aplicada à saída de fala ou a pausas.</param>
        <param name="duration">O tempo alocado para falar o texto do <see langword="TextFragment" />.</param>
        <param name="sayAs">Um membro da classe <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" />, que indica o tipo de texto do <see langword="TextFragment" /> e o nível de detalhe necessário para a renderização precisa do texto contido.  
  
Corresponde à marca XML <c>&lt;say-as&gt;</c> na especificação SSML 
O argumento pode ser <see langword="null." /></param>
        <param name="prosody">Um objeto <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> que indica as características da saída de fala como o tom, a velocidade da fala e o volume.  
  
Corresponde à marca XML <c>&lt;prosody&gt;</c> na especificação SSML</param>
        <param name="phonemes">Uma matriz de objetos <see langword="char" /> que fornece a pronúncia fonética do texto contido no <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, usando a especificação IPA (Alfabeto Fonético Internacional).  
  
Corresponde à marca XML <c>&lt;phoneme&gt;</c> na especificação SSML.  
  
Este argumento pode ser <see langword="null" />.</param>
        <summary>Constrói uma nova instância de <see langword="FragmentState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, aplicativos não diretamente construa <xref:System.Speech.Synthesis.TtsEngine.FragmentState> objetos. Em vez disso, <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instâncias são criadas por aplicativos que usam os membros do <xref:System.Speech.Synthesis> para nome.  
  
 Se o <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valor especificado pela `action` argumento é <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>, o valor fornecido pelo `emphasis` argumento é:  
  
-   Se positivo, o tempo em milissegundos para pausar  
  
-   Se negativo de um membro do <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak> enumeração  
  
 Se o <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valor especificado pela `action` argumento não é <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> `emphasis` argumento deve ser do tipo <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
 Se o valor da `duration` argumento e o <xref:System.Speech.Synthesis.TtsEngine.Prosody.Duration%2A> propriedade ou o <xref:System.Speech.Synthesis.TtsEngine.Prosody> objeto especificado pelo `prosody` argumento forem diferentes, o valor no <xref:System.Speech.Synthesis.TtsEngine.Prosody> objeto é usado.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">Alfabeto fonético internacional</related>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As TtsEngineAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::TtsEngineAction Action { System::Speech::Synthesis::TtsEngine::TtsEngineAction get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Speech.Synthesis.TtsEngine.TtsEngineAction" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna a ação de sintetizador de voz solicitada.</summary>
        <value>Um membro do <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> que indica a ação de síntese de fala solicitada pela entrada SSML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna a hora desejada para renderizar um <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></summary>
        <value>Retorna um <see langword="int" /> que contém um valor em milissegundos de tempo desejado para a renderização um <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emphasis">
      <MemberSignature Language="C#" Value="public int Emphasis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Emphasis" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Emphasis As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Emphasis { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Emphasis : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna as instruções sobre como enfatizar um <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
        <value>Retorna um <see langword="int" /> valor que indica como enfatizar um <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A interpretação do valor retornado por <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> depende do <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> valor retornado pela <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propriedade atuais <xref:System.Speech.Synthesis.TtsEngine.FragmentState>.  
  
1.  Se o valor de <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> é <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>  
  
    -   Se <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> for positivo, o valor retornado deve ser interpretado como o comprimento da latência em milissegundos.  
  
    -   Se <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> for negativo, o valor retornado deve ser interpretado como um membro do <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak>.  
  
     Informações de ênfase retornadas por <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> quando a propriedade <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> é <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> corresponde aos atributos do `<break>` elemento de entrada SSML a um mecanismo sintetizador de fala.  
  
2.  Para todos os outros valores de <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>, o <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> valores devem ser interpretados como sendo do <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
     Informações de ênfase retornadas por <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> palavras faladas corresponde aos atributos do `<emphasis>` elemento de entrada SSML a um mecanismo sintetizador de fala.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se a instância atual do <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> descreve o mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> como outra instância <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> ou um [Objeto](https://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) que pode ser convertido em <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fragmentState.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Um objeto que pode ser convertido em uma instância de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></param>
        <summary>Determina se um dado objeto é uma instância <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> igual à instância atual de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</summary>
        <returns>Retornará <see langword="true" />, se a instância atual de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> e a obtida do <see cref="T:System.Object" /> fornecido pelo argumento <paramref name="obj" /> descreverem o mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />. Retornará <see langword="false" /> se o <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> atual e o argumento <paramref name="obj" /> não derem suporte ao mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O se falso retorno do método as [objeto](https://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) fornecidas pelo `obj` argumento não pode ser convertido em <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.FragmentState other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::FragmentState other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="fragmentState.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="other">Uma instância de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> que</param>
        <summary>Determina se uma dada instância de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> é igual à instância atual de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</summary>
        <returns>Retornará <see langword="true" />, se a instância atual de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> e a fornecida por meio do argumento <paramref name="other" /> descreverem o mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />. Retornará <see langword="false" /> se o <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> atual e o argumento <paramref name="other" /> não derem suporte ao mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fragmentState.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o código hash para essa instância.</summary>
        <returns>Um inteiro com sinal de 32 bits que é o código hash para esta instância.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="LangId">
      <MemberSignature Language="C#" Value="public int LangId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LangId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LangId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LangId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LangId : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna a linguagem compatível pelo <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> atual.</summary>
        <value>Retorna um <see langword="int" /> que contém um identificador para o idioma usado pela atual <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A> são os usados com a API de fala do Windows (SAPI) e são gerados a partir de "`xml:lang`" atributo na entrada SSML a um mecanismo sintetizador de fala.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="state1 = state2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Uma instância de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> cujo estado descrito é comparado com a instância do <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> fornecida pelo argumento <paramref name="state2" />.</param>
        <param name="state2">Uma instância de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> cujo estado descrito é comparado com a instância do <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> fornecida pelo argumento <paramref name="state1" />.</param>
        <summary>Determina se duas instâncias de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> descrevem o mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
        <returns>Retornará <see langword="true" /> se as instâncias de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />, <paramref name="state1" /> e <paramref name="state2" /> descreverem o mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, caso contrário será retornado <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[O método equivalente para esse operador é <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality (state1, state2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Uma instância de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> cujo estado descrito é comparado com a instância do <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> fornecida pelo argumento <paramref name="state2" />.</param>
        <param name="state2">Uma instância de <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> cujo estado descrito é comparado com a instância do <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> fornecida pelo argumento <paramref name="state1" />.</param>
        <summary>Determina se duas instâncias de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> descrevem o estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> diferente.</summary>
        <returns>Retornará <see langword="true" /> se as instâncias de <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />, <paramref name="state1" /> e <paramref name="state2" /> não descreverem o mesmo estado <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, caso contrário será retornado <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[O método equivalente para esse operador é <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phoneme">
      <MemberSignature Language="C#" Value="public char[] Phoneme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char[] Phoneme" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phoneme As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;char&gt; ^ Phoneme { cli::array &lt;char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Phoneme : char[]" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna informações fonéticas para um <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As informações retornadas pela <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> propriedade corresponde à `<phoneme>` marca XML de entrada SSML a um mecanismo de síntese de voz.  
  
 A matriz de `char` objetos retornados por <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> propriedade expressa pronúncia usando o alfabeto fonético internacional (IPA).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">Alfabeto fonético internacional</related>
      </Docs>
    </Member>
    <Member MemberName="Prosody">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.Prosody Prosody" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prosody As Prosody" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::Prosody ^ Prosody { System::Speech::Synthesis::TtsEngine::Prosody ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prosody : System.Speech.Synthesis.TtsEngine.Prosody" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.Prosody</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna informações detalhadas sobre o tom, a velocidade da fala e o volume da saída de fala.</summary>
        <value>Retorna uma instância válida de <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> que contém o tom, a velocidade da fala e as configurações de volume e as alterações para essas configurações para a saída de fala.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As informações retornadas por <xref:System.Speech.Synthesis.TtsEngine.Prosody> corresponde à `<prosody>` marca XML na especificação SSML  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SayAs">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.SayAs SayAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SayAs As SayAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::SayAs ^ SayAs { System::Speech::Synthesis::TtsEngine::SayAs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SayAs : System.Speech.Synthesis.TtsEngine.SayAs" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.SayAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna informações sobre o contexto para a geração de fala com base no texto.</summary>
        <value>Retorna um valor <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> da instância se o SSML usado por um mecanismo de síntese de fala contém informações detalhadas sobre o contexto a ser usado para gerar fala, caso contrário, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As informações retornadas por <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> corresponde à `<say-as>` marca e seus atributos na especificação SSML e pode especificam:  
  
-   O tipo de conteúdo (como moeda, data ou endereço) ou a construção de linguagem representada por <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> propriedade de um <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
-   Opcional informações de formatação para lidar com o tipo de conteúdo representado por <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> propriedade de um <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, por exemplo, uma sintaxe de data.  
  
-   O detalhe a ser usado na geração de fala a partir de <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> propriedade de um <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, por exemplo, se deve processar explicitamente a pontuação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>