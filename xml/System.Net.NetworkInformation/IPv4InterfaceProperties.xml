<Type Name="IPv4InterfaceProperties" FullName="System.Net.NetworkInformation.IPv4InterfaceProperties">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6ee70377e1654b52f01efebfbe3b155c943f302" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IPv4InterfaceProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPv4InterfaceProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPv4InterfaceProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPv4InterfaceProperties abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ed8fc-101">Fornece informações sobre os adaptadores de rede que dão suporte ao IPv4 (protocolo IP versão 4).</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed8fc-101">Provides information about network interfaces that support Internet Protocol version 4 (IPv4).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-102">Essa classe fornece acesso às informações de endereço e configuração para interfaces de rede que oferecem suporte a IPv4.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-102">This class provides access to configuration and address information for network interfaces that support IPv4.</span></span> <span data-ttu-id="ed8fc-103">Você não criar instâncias dessa classe; eles são retornados pelo <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-103">You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.</span></span>  
  
 <span data-ttu-id="ed8fc-104">Para propriedades de IPV6, consulte <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-104">For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-105">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-105">The following code example gets an <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPv4InterfaceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPv4InterfaceProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-106">Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-106">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.IPv4InterfaceProperties" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-107">Este construtor pode ser chamado somente por classes que derivam de <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-107">This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public abstract int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-108">Obtém o índice do adaptador de rede associado com o endereço IPv4 (protocolo IP versão 4).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-108">Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-109">Um <see cref="T:System.Int32" /> que contém o índice da interface IPv4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-109">An <see cref="T:System.Int32" /> that contains the index of the IPv4 interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-110">Se o valor dessa propriedade é zero, IPv4 não é suportada por esta interface.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-110">If the value of this property is zero, IPv4 is not supported by this interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-111">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-111">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingActive">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-112">Obtém um valor <see cref="T:System.Boolean" /> que indica se essa interface tem um endereço APIPA (endereçamento APIPA).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-112">Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-113">
            <see langword="true" /> se a interface usar um endereço APIPA; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-113">
              <see langword="true" /> if the interface uses an APIPA address; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-114">Endereçamento IP privado automático permite que os computadores que não têm acesso a um servidor de protocolo de configuração de Host dinâmico (DHCP) a ser atribuído automaticamente um endereço IP que não está em conflito com endereços públicos.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-114">Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses.</span></span> <span data-ttu-id="ed8fc-115">Esses endereços estão no intervalo 169.254.0.0 a 169.254.255.255.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-115">These addresses are in the range 169.254.0.0 to 169.254.255.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-116">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-116">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutomaticPrivateAddressingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsAutomaticPrivateAddressingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAutomaticPrivateAddressingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAutomaticPrivateAddressingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-117">Obtém um valor <see cref="T:System.Boolean" /> que indica se essa interface tem endereçamento de IP privado automático (endereçamento APIPA) habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-117">Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-118">
            <see langword="true" /> Se a interface usa APIPA; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-118">
              <see langword="true" /> if the interface uses APIPA; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-119">Endereçamento IP privado automático permite que os computadores que não têm acesso a um servidor de protocolo de configuração de Host dinâmico (DHCP) a ser atribuído automaticamente um endereço IP que não está em conflito com endereços públicos.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-119">Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses.</span></span> <span data-ttu-id="ed8fc-120">Esses endereços estão no intervalo 169.254.0.0 a 169.254.255.255.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-120">These addresses are in the range 169.254.0.0 to 169.254.255.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-121">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-121">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDhcpEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsDhcpEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDhcpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDhcpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDhcpEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-122">Obtém um valor <see cref="T:System.Boolean" /> que indica se a interface está configurada para usar um servidor DHCP para obter um endereço IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-122">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-123">
            <see langword="true" /> se a interface está configurada para obter um endereço IP de um servidor DHCP. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-123">
              <see langword="true" /> if the interface is configured to obtain an IP address from a DHCP server; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-124">Quando essa propriedade é `true`, um servidor DHCP atribui o endereço IP para a interface quando o computador estabelece suas conexões de rede.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-124">When this property is `true`, a DHCP server assigns the IP address to the interface when the computer establishes its network connections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-125">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-125">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForwardingEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsForwardingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForwardingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsForwardingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsForwardingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-126">Obtém um valor <see cref="T:System.Boolean" /> que indica se essa interface pode encaminhar (rotear) pacotes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-126">Gets a <see cref="T:System.Boolean" /> value that indicates whether this interface can forward (route) packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-127">
            <see langword="true" /> Se essa interface encaminha pacotes; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-127">
              <see langword="true" /> if this interface routes packets; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-128">Se o roteamento estiver desabilitado, os pacotes recebidos pela interface com um endereço de destino que não é mantido pela interface são descartados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-128">If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-129">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-129">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mtu">
      <MemberSignature Language="C#" Value="public abstract int Mtu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Mtu" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Mtu As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Mtu { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-130">Obtém a MTU (unidade de transmissão máxima) desse adaptador de rede.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-130">Gets the maximum transmission unit (MTU) for this network interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-131">Um valor <see cref="T:System.Int64" /> que especifica a MTU.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-131">An <see cref="T:System.Int64" /> value that specifies the MTU.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-132">A MTU de uma interface de rede é o maior pacote que pode ser transmitido.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-132">The MTU of a network interface is the largest packet that can be transmitted.</span></span> <span data-ttu-id="ed8fc-133">Ele é medido em octetos (bytes de 8 bits).</span><span class="sxs-lookup"><span data-stu-id="ed8fc-133">It is measured in octets (8-bit bytes).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-134">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-134">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesWins">
      <MemberSignature Language="C#" Value="public abstract bool UsesWins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesWins" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UsesWins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool UsesWins { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed8fc-135">Obtém um valor <see cref="T:System.Boolean" /> que indica se uma interface usa o WINS (Serviço de Cadastramento na Internet do Windows).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-135">Gets a <see cref="T:System.Boolean" /> value that indicates whether an interface uses Windows Internet Name Service (WINS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed8fc-136">
            <see langword="true" /> Se a interface usa o WINS; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed8fc-136">
              <see langword="true" /> if the interface uses WINS; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed8fc-137">O WINS fornece um banco de dados distribuído para registrar e consultar os nomes de NetBIOS dinâmicos para mapeamentos de endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-137">WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed8fc-138">O código a seguir exemplo obtém um <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> do objeto e exibe seus dados.</span><span class="sxs-lookup"><span data-stu-id="ed8fc-138">The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.</span></span>  
  
 [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>