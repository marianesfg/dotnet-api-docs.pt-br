<Type Name="IPGlobalProperties" FullName="System.Net.NetworkInformation.IPGlobalProperties">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1322796a8046282ca8cdd212dd485f6ba38204e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39958955" /></Metadata><TypeSignature Language="C#" Value="public abstract class IPGlobalProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPGlobalProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPGlobalProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPGlobalProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPGlobalProperties abstract" />
  <TypeSignature Language="F#" Value="type IPGlobalProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece informações sobre a conectividade de rede do computador local.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe fornece configuração e informações estatísticas sobre os adaptadores de rede e conexões de rede do computador local.  
  
 As informações fornecidas por essa classe são semelhantes àquela fornecida pelas funções de API do auxiliar de protocolo de Internet. Para obter informações sobre o auxiliar de protocolo de Internet, consulte a documentação na biblioteca MSDN.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações sobre o computador local usando uma instância dessa classe.  
  
 [!code-cpp[NclNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NclNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NclNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPGlobalProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPGlobalProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse construtor pode ser chamado apenas por classes derivadas de <xref:System.Net.NetworkInformation.IPGlobalProperties>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetUnicastAddresses (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetUnicastAddresses(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetUnicastAddresses (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetUnicastAddresses(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetUnicastAddresses : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetUnicastAddresses : AsyncCallback * obj -&gt; IAsyncResult" Usage="iPGlobalProperties.BeginGetUnicastAddresses (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Um objeto que contém informações de estado para essa solicitação.</param>
        <summary>Começa uma solicitação assíncrona para recuperar a tabela de endereços IP unicast estáveis no computador local.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que faz referência à solicitação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para dar suporte a conexões de saída ou para aceitar conexões de entrada em uma interface Teredo, aplicativos precisam garantir que a interface Teredo está ativo e pronto para uso. Isso ocorre porque o Teredo pode entrar em um estado inativo quando não é usado por um certo período de tempo.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> método permite que um aplicativo para recuperar a lista de endereços IP unicast estáveis. O <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriedade pode ser usada para determinar se um endereço IP é um endereço IPv6 Teredo com o prefixo de 2001::/ / 32.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> método também retornará não Teredo aborda e fornece uma maneira mais conveniente para obter o unicast endereços IP para um sistema que enumerar todas as <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objetos em um computador local e consultar os endereços IP associados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Este método não está implementado na plataforma. Esse método usa a função <see langword="NotifyStableUnicastIpAddressTable" /> nativa que tem suporte no Windows Vista e posterior.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A chamada para a função <see langword="NotifyStableUnicastIpAddressTable" /> nativa falhou.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="DhcpScopeName">
      <MemberSignature Language="C#" Value="public abstract string DhcpScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DhcpScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DhcpScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DhcpScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DhcpScopeName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do escopo do DHCP (Dynamic Host Configuration Protocol).</summary>
        <value>Um <see cref="T:System.String" /> instância que contém o nome de escopo do DHCP do computador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um escopo DHCP é um agrupamento administrativo de computadores em rede que estão na mesma sub-rede.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de rede para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Falha em uma chamada de função do Win32.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public abstract string DomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.DomainName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DomainName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.DomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o domínio em que o computador local está registrado.</summary>
        <value>Uma instância <see cref="T:System.String" /> que contém o nome de domínio do computador. Se o computador não pertence a um domínio, retorna <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir exibe informações de rede para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Falha em uma chamada de função do Win32.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetUnicastAddresses (asyncResult As IAsyncResult) As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ EndGetUnicastAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetUnicastAddresses : IAsyncResult -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection&#xA;override this.EndGetUnicastAddresses : IAsyncResult -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="iPGlobalProperties.EndGetUnicastAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Um <see cref="T:System.IAsyncResult" /> que faz referência à solicitação assíncrona.</param>
        <summary>Encerra uma solicitação assíncrona pendente para recuperar a tabela de endereços IP unicast estáveis no computador local.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que armazena informações de estado e dados definidos pelo usuário para essa operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para dar suporte a conexões de saída ou para aceitar conexões de entrada em uma interface Teredo, aplicativos precisam garantir que a interface Teredo está ativo e pronto para uso. Isso ocorre porque o Teredo pode entrar em um estado inativo quando não é usado por um certo período de tempo.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> método permite que um aplicativo para recuperar a lista de endereços IP unicast estáveis. O <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriedade pode ser usada para determinar se um endereço IP é um endereço IPv6 Teredo com o prefixo de 2001::/ / 32.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> método termina uma solicitação assíncrona pendente para recuperar a tabela de endereços IP unicast estáveis.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> método também retornará não Teredo aborda e fornece uma maneira mais conveniente para obter o unicast endereços IP para um sistema que enumerar todas as <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objetos em um computador local e consultar os endereços IP associados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetAdaptersAddresses" /> nativa falhou.</exception>
        <exception cref="T:System.NotImplementedException">Este método não está implementado na plataforma. Esse método usa a função <see langword="NotifyStableUnicastIpAddressTable" /> nativa que tem suporte no Windows Vista e posterior.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> necessária.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="GetActiveTcpConnections">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveTcpConnections () As TcpConnectionInformation()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::NetworkInformation::TcpConnectionInformation ^&gt; ^ GetActiveTcpConnections();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveTcpConnections : unit -&gt; System.Net.NetworkInformation.TcpConnectionInformation[]" Usage="iPGlobalProperties.GetActiveTcpConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpConnectionInformation[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna informações sobre as conexões do protocolo TCP IPv4 (Protocolo IP versão 4) e IPv6 no computador local.</summary>
        <returns>Uma matriz <see cref="T:System.Net.NetworkInformation.TcpConnectionInformation" /> que contém objetos que descrevem as conexões TCP ativas ou uma matriz vazia se não houver conexões TCP ativas detectadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os objetos retornados por esse método incluem conexões em todos os estados TCP, exceto o <xref:System.Net.NetworkInformation.TcpState.Listen> estado. Você pode verificar o estado de uma conexão chamando <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.  
  
 O protocolo TCP é definido no IETF RFC 793. Observe que os objetos retornados por esse método refletem as conexões a partir da hora em que a matriz é criada. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe informações de ponto de extremidade para conexões TCP ativas.  
  
 [!code-cpp[NCLNetInfoReport#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#17)]
 [!code-csharp[NCLNetInfoReport#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A função Win32 <see langword="GetTcpTable" /> falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveTcpListeners">
      <MemberSignature Language="C#" Value="public abstract System.Net.IPEndPoint[] GetActiveTcpListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.IPEndPoint[] GetActiveTcpListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveTcpListeners () As IPEndPoint()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::IPEndPoint ^&gt; ^ GetActiveTcpListeners();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveTcpListeners : unit -&gt; System.Net.IPEndPoint[]" Usage="iPGlobalProperties.GetActiveTcpListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna informações de ponto de extremidade sobre os ouvintes TCP (Transmission Control Protocol) IPv4 e IPv6 no computador local.</summary>
        <returns>Uma matriz <see cref="T:System.Net.IPEndPoint" /> que contém objetos que descrevem os ouvintes TCP ativos ou uma matriz vazia se não houver ouvintes TCP ativos detectados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os objetos retornados por esse método incluem ouvintes em todos os estados TCP, exceto o <xref:System.Net.NetworkInformation.TcpState.Listen> estado.  
  
 O protocolo TCP é definido no IETF RFC 793. Observe que os objetos retornados por esse método refletem as conexões a partir da hora em que a matriz é criada. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de ponto de extremidade para ouvintes TCP ativos.  
  
 [!code-cpp[NCLNetInfoReport#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#18)]
 [!code-csharp[NCLNetInfoReport#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A função Win32 <see langword="GetTcpTable" /> falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUdpListeners">
      <MemberSignature Language="C#" Value="public abstract System.Net.IPEndPoint[] GetActiveUdpListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.IPEndPoint[] GetActiveUdpListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveUdpListeners () As IPEndPoint()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::IPEndPoint ^&gt; ^ GetActiveUdpListeners();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveUdpListeners : unit -&gt; System.Net.IPEndPoint[]" Usage="iPGlobalProperties.GetActiveUdpListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna informações sobre os ouvintes do IPv4 (protocolo IP versão 4) e do UDP (protocolo UDP) IPv6 no computador local.</summary>
        <returns>Uma matriz <see cref="T:System.Net.IPEndPoint" /> que contém objetos que descrevem os ouvintes UDP ou uma matriz vazia se nenhum ouvinte UDP for detectado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O UDP é um protocolo de camada de transporte sem conexão que é responsável por enviar e receber datagramas. Ele é definido no IETF RFC 768.  
  
 Um ouvinte UDP é um soquete aberto que aguarda e recebe datagramas UDP. Como o UDP é um protocolo sem conexão, o ouvinte não mantém uma conexão para um ponto de extremidade remoto.  
  
   
  
## Examples  
 O exemplo a seguir exibe os ouvintes UDP ativos.  
  
 [!code-cpp[NCLNetInfoReport#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#19)]
 [!code-csharp[NCLNetInfoReport#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetUdpTable" /> do Win32 falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIcmpV4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIcmpV4Statistics () As IcmpV4Statistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IcmpV4Statistics ^ GetIcmpV4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIcmpV4Statistics : unit -&gt; System.Net.NetworkInformation.IcmpV4Statistics" Usage="iPGlobalProperties.GetIcmpV4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IcmpV4Statistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece dados estatísticos do protocolo ICMP versão 4 para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.IcmpV4Statistics" /> que fornece estatísticas de tráfego de ICMP versão 4 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ICMP é um conjunto de mensagens para uso com o protocolo IP versão 4 (IPv4). ICMP é usado por nós de IPv4 para relatar erros encontrados no processamento de pacotes de dados e executar outras funções de camada de Internet. ICMP versão 4 é definido no IETF RFC 792.  
  
 Para obter detalhes sobre as estatísticas de tráfego do ICMP versão 4 que estão disponíveis para aplicativos, consulte o <xref:System.Net.NetworkInformation.IcmpV4Statistics> documentação da classe. Observe que o <xref:System.Net.NetworkInformation.IcmpV4Statistics> objeto retornado por esse método reflete as estatísticas a partir da hora em que o objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe as estatísticas de ICMPv4 atuais.  
  
 [!code-cpp[NCLNetInfoReport#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#6)]
 [!code-csharp[NCLNetInfoReport#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A função Win32 <see langword="GetIcmpStatistics" /> falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIcmpV6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIcmpV6Statistics () As IcmpV6Statistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IcmpV6Statistics ^ GetIcmpV6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIcmpV6Statistics : unit -&gt; System.Net.NetworkInformation.IcmpV6Statistics" Usage="iPGlobalProperties.GetIcmpV6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IcmpV6Statistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece dados estatísticos do protocolo ICMP versão 6 para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.IcmpV6Statistics" /> que fornece estatísticas de tráfego de ICMP versão 6 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ICMP versão 6 é um conjunto de mensagens para uso com o protocolo IP versão 6 (IPv6). ICMP é usado por nós de IPv6 para relatar erros encontrados no processamento de pacotes de dados e executar outras funções de camada de Internet. ICMP versão 6 está definido no IETF RFC 1885.  
  
 Não há suporte para o protocolo IPv6 para computadores com Windows 2000 ou sistemas operacionais anteriores.  
  
 Para obter detalhes sobre as estatísticas de tráfego do ICMP versão 6 disponíveis para aplicativos, consulte o <xref:System.Net.NetworkInformation.IcmpV6Statistics> documentação da classe. Observe que o <xref:System.Net.NetworkInformation.IcmpV6Statistics> objeto retornado por esse método reflete as estatísticas a partir da hora em que o objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe as estatísticas atuais do ICMPv6.  
  
 [!code-cpp[NCLNetInfoReport#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#7)]
 [!code-csharp[NCLNetInfoReport#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A função Win32 <see langword="GetIcmpStatisticsEx" /> falhou.</exception>
        <exception cref="T:System.PlatformNotSupportedException">O sistema operacional do computador local não é o Windows XP ou posterior.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIPGlobalProperties">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIPGlobalProperties () As IPGlobalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::NetworkInformation::IPGlobalProperties ^ GetIPGlobalProperties();" />
      <MemberSignature Language="F#" Value="static member GetIPGlobalProperties : unit -&gt; System.Net.NetworkInformation.IPGlobalProperties" Usage="System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um objeto que fornece informações sobre as estatísticas de tráfego e conectividade de rede do computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> que contém informações sobre o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O objeto retornado por esse método é um tipo fornecido pelo sistema que deriva de <xref:System.Net.NetworkInformation.IPGlobalProperties> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações sobre o computador local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4GlobalStatistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv4GlobalStatistics () As IPGlobalStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPGlobalStatistics ^ GetIPv4GlobalStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv4GlobalStatistics : unit -&gt; System.Net.NetworkInformation.IPGlobalStatistics" Usage="iPGlobalProperties.GetIPv4GlobalStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece dados estatísticos de protocolo IP versão 4 (IPv4) para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> que fornece estatísticas de tráfego IPv4 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IPv4 é um protocolo de camada de rede que é responsável pelo roteamento de pacotes de dados do seu computador de origem para seu destino.  
  
 Para obter detalhes sobre as estatísticas de tráfego IP disponíveis para os aplicativos, consulte o <xref:System.Net.NetworkInformation.IPGlobalStatistics> documentação da classe. Observe que o objeto retornado por esse método reflete as estatísticas a partir da hora de <xref:System.Net.NetworkInformation.IPGlobalStatistics> objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe as estatísticas IP para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetIpStatistics" /> do Win32 falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6GlobalStatistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv6GlobalStatistics () As IPGlobalStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPGlobalStatistics ^ GetIPv6GlobalStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv6GlobalStatistics : unit -&gt; System.Net.NetworkInformation.IPGlobalStatistics" Usage="iPGlobalProperties.GetIPv6GlobalStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece dados estatísticos de protocolo IP versão 6 (IPv6) para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> que fornece estatísticas de tráfego IPv6 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O IPv6 é um protocolo de camada de rede responsável pelo roteamento de pacotes de dados do seu computador de origem para seu destino. Não há suporte para o protocolo IPv6 em computadores com Windows 2000 ou sistemas operacionais anteriores.  
  
 Para obter detalhes sobre as estatísticas de tráfego IP disponíveis para os aplicativos, consulte o <xref:System.Net.NetworkInformation.IPGlobalStatistics> documentação da classe. Observe que o objeto retornado por esse método reflete as estatísticas a partir da hora de <xref:System.Net.NetworkInformation.IPGlobalStatistics> objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe as estatísticas IP para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetIpStatistics" /> do Win32 falhou.</exception>
        <exception cref="T:System.PlatformNotSupportedException">O computador local não está executando um sistema operacional que dá suporte a IPv6.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetTcpIPv4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTcpIPv4Statistics () As TcpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::TcpStatistics ^ GetTcpIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetTcpIPv4Statistics : unit -&gt; System.Net.NetworkInformation.TcpStatistics" Usage="iPGlobalProperties.GetTcpIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece os dados estatísticos do TCP/IPv4 (protocolo TCP/protocolo IP versão 4) para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> que fornece estatísticas de tráfego TCP/IPv4 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O TCP é um protocolo de camada de transporte é responsável por enviar e receber pacotes de dados de forma confiável. Ele é definido no IETF RFC 793.  
  
 Para obter detalhes sobre as estatísticas de tráfego TCP disponíveis para aplicativos, consulte o <xref:System.Net.NetworkInformation.TcpStatistics> documentação da classe. Observe que o objeto retornado por esse método reflete as estatísticas a partir da hora de <xref:System.Net.NetworkInformation.TcpStatistics> objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe as estatísticas de TCP/IP para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]
 [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetTcpStatistics" /> do Win32 falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetTcpIPv6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTcpIPv6Statistics () As TcpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::TcpStatistics ^ GetTcpIPv6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetTcpIPv6Statistics : unit -&gt; System.Net.NetworkInformation.TcpStatistics" Usage="iPGlobalProperties.GetTcpIPv6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece os dados estatísticos do TCP/IPv6 (protocolo TCP/protocolo IP versão 6) para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> que fornece estatísticas de tráfego TCP/IPv6 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O TCP é um protocolo de camada de transporte responsável por enviar e receber pacotes de dados de forma confiável. Ele é definido no IETF RFC 793.  
  
 Para obter detalhes sobre as estatísticas de tráfego TCP que estão disponíveis para aplicativos, consulte o <xref:System.Net.NetworkInformation.TcpStatistics> documentação da classe. Observe que o objeto retornado por esse método reflete as estatísticas a partir da hora de <xref:System.Net.NetworkInformation.TcpStatistics> objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe as estatísticas de TCP/IP para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]
 [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetTcpStatistics" /> do Win32 falhou.</exception>
        <exception cref="T:System.PlatformNotSupportedException">O computador local não está executando um sistema operacional que dá suporte a IPv6.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetUdpIPv4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUdpIPv4Statistics () As UdpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::UdpStatistics ^ GetUdpIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetUdpIPv4Statistics : unit -&gt; System.Net.NetworkInformation.UdpStatistics" Usage="iPGlobalProperties.GetUdpIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UdpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece os dados estatísticos do UDP/IPv4 (protocolo UDP/protocolo IP versão 4) para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> que fornece estatísticas de tráfego UDP/IPv4 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O UDP é um protocolo de camada de transporte sem conexão que é responsável por enviar e receber datagramas. Ele é definido no IETF RFC 768.  
  
 Para obter detalhes sobre as estatísticas de tráfego UDP que estão disponíveis para aplicativos, consulte o <xref:System.Net.NetworkInformation.UdpStatistics> documentação da classe. Observe que o objeto retornado por esse método reflete as estatísticas a partir da hora de <xref:System.Net.NetworkInformation.UdpStatistics> objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe as estatísticas UDP/IP para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]
 [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função GetUdpStatistics do Win32 falhou.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetUdpIPv6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUdpIPv6Statistics () As UdpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::UdpStatistics ^ GetUdpIPv6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetUdpIPv6Statistics : unit -&gt; System.Net.NetworkInformation.UdpStatistics" Usage="iPGlobalProperties.GetUdpIPv6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UdpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornece os dados estatísticos do UDP/IPv6 (protocolo UDP/protocolo IP versão 6) para o computador local.</summary>
        <returns>Um objeto <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> que fornece estatísticas de tráfego UDP/IPv6 para o computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O UDP é um protocolo de camada de transporte sem conexão que é responsável por enviar e receber datagramas. Ele é definido no IETF RFC 768.  
  
 Para obter detalhes sobre as estatísticas de tráfego UDP que estão disponíveis para aplicativos, consulte o <xref:System.Net.NetworkInformation.UdpStatistics> documentação da classe. Observe que o objeto retornado por esse método reflete as estatísticas a partir da hora de <xref:System.Net.NetworkInformation.UdpStatistics> objeto é criado. Essas informações não são atualizadas dinamicamente.  
  
   
  
## Examples  
 O exemplo a seguir exibe as estatísticas UDP/IP para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]
 [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetUdpStatistics" /> do Win32 falhou.</exception>
        <exception cref="T:System.PlatformNotSupportedException">O computador local não está executando um sistema operacional que dá suporte a IPv6.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnicastAddresses () As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ GetUnicastAddresses();" />
      <MemberSignature Language="F#" Value="abstract member GetUnicastAddresses : unit -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection&#xA;override this.GetUnicastAddresses : unit -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="iPGlobalProperties.GetUnicastAddresses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera a tabela de endereços IP unicast estáveis no computador local.</summary>
        <returns>Um <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> que contém uma lista de endereços IP unicast estáveis no computador local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para dar suporte a conexões de saída ou para aceitar conexões de entrada em uma interface Teredo, aplicativos precisam garantir que a interface Teredo está ativo e pronto para uso. Isso ocorre porque o Teredo pode entrar em um estado inativo quando não é usado por um certo período de tempo.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> método permitirá que um aplicativo recupere a lista de endereços IP unicast estáveis. O <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriedade pode ser usada para determinar se um endereço IP é um endereço IPv6 Teredo com o prefixo de 2001::/ / 32.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> método também retornará não Teredo aborda e fornece uma maneira mais conveniente para obter o unicast endereços IP para um sistema que enumerar todas as <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objetos em um computador local e consultar os endereços IP associados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetAdaptersAddresses" /> nativa falhou.</exception>
        <exception cref="T:System.NotImplementedException">Este método não está implementado na plataforma. Esse método usa a função <see langword="NotifyStableUnicastIpAddressTable" /> nativa que tem suporte no Windows Vista e posterior.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> necessária.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A chamada para a função <see langword="NotifyStableUnicastIpAddressTable" /> nativa falhou.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicastAddressesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnicastAddressesAsync () As Task(Of UnicastIPAddressInformationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^&gt; ^ GetUnicastAddressesAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetUnicastAddressesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;&#xA;override this.GetUnicastAddressesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;" Usage="iPGlobalProperties.GetUnicastAddressesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera a tabela de endereços IP unicast estáveis no computador local como uma solicitação assíncrona.</summary>
        <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.  
  
O objeto de tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para dar suporte a conexões de saída ou para aceitar conexões de entrada em uma interface Teredo, aplicativos precisam garantir que a interface Teredo está ativo e pronto para uso. Isso ocorre porque o Teredo pode entrar em um estado inativo quando não é usado por um certo período de tempo.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> método permitirá que um aplicativo recupere a lista de endereços IP unicast estáveis como operação assíncrona. O <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriedade pode ser usada para determinar se um endereço IP é um endereço IPv6 Teredo com o prefixo de 2001::/ / 32.  
  
 O <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> método também retornará não Teredo aborda e fornece uma maneira mais conveniente para obter o unicast endereços IP para um sistema que enumerar todas as <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objetos em um computador local e consultar os endereços IP associados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">A chamada para a função <see langword="GetAdaptersAddresses" /> nativa falhou.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> necessária.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A chamada para a função <see langword="NotifyStableUnicastIpAddressTable" /> nativa falhou.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public abstract string HostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.HostName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ HostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do host do computador local.</summary>
        <value>Uma instância de <see cref="T:System.String" /> que contém o nome NetBIOS do computador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propriedade chama a função nativa do auxiliar de IP, GetNetworkParams, que retorna uma estrutura FIXED_INFO que contém o host de NetBIOS cadeia de caracteres de nome. A cadeia de caracteres de nome de host será truncada quando ele excede 15 caracteres.  
  
 Um nome de computador NetBIOS deve ser exclusivo em uma rede e não é totalmente qualificado pelo nome de domínio.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de rede para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Falha em uma chamada de função do Win32.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsWinsProxy">
      <MemberSignature Language="C#" Value="public abstract bool IsWinsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWinsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsWinsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsWinsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWinsProxy : bool" Usage="System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor <see cref="T:System.Boolean" /> que especifica se o computador local está agindo como um proxy de WINS (Serviço de Cadastramento na Internet do Windows).</summary>
        <value><see langword="true" /> Se o computador local é um proxy de WINS; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WINS fornece um banco de dados distribuído para registrar e consultar dinâmicos nomes de NetBIOS em mapeamentos de endereços IP.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de rede para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Falha em uma chamada de função do Win32.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.NetBiosNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetBiosNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As NetBiosNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::NetBiosNodeType NodeType { System::Net::NetworkInformation::NetBiosNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Net.NetworkInformation.NetBiosNodeType" Usage="System.Net.NetworkInformation.IPGlobalProperties.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetBiosNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de nó do NetBIOS (sistema de entrada/saída básico de rede) do computador local.</summary>
        <value>Um valor <see cref="T:System.Net.NetworkInformation.NetBiosNodeType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo de nó determina a maneira na qual os nomes NetBIOS são resolvidos para endereços IP. Para obter mais informações, consulte o <xref:System.Net.NetworkInformation.NetBiosNodeType> visão geral da classe.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe informações de rede para o computador local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Falha em uma chamada de função do Win32.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">para ler as informações de rede. Enumeração associada: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>