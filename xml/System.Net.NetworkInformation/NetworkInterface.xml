<Type Name="NetworkInterface" FullName="System.Net.NetworkInformation.NetworkInterface">
  <TypeSignature Language="C#" Value="public abstract class NetworkInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NetworkInterface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.NetworkInterface" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NetworkInterface" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkInterface abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55dca-101">Fornece informações de configuração e estatísticas para uma interface de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-101">Provides configuration and statistical information for a network interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-102">Essa classe encapsula dados para interfaces de rede, também conhecido como adaptadores, no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-102">This class encapsulates data for network interfaces, also known as adapters, on the local computer.</span></span> <span data-ttu-id="55dca-103">Você não criar instâncias dessa classe; o <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> método retorna uma matriz que contém uma instância dessa classe para cada interface de rede no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-103">You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-104">O exemplo de código a seguir exibe informações sobre as interfaces.</span><span class="sxs-lookup"><span data-stu-id="55dca-104">The following code example displays information about interfaces.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]
 [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="55dca-105">para executar código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="55dca-105">for executing unmanaged code.</span></span> <span data-ttu-id="55dca-106">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="55dca-106">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NetworkInterface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-107">Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-107">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-108">Este construtor pode ser chamado somente por classes que derivam de <xref:System.Net.NetworkInformation.NetworkInterface> classe.</span><span class="sxs-lookup"><span data-stu-id="55dca-108">This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-109">Obtém a descrição da interface.</span><span class="sxs-lookup"><span data-stu-id="55dca-109">Gets the description of the interface.</span></span></summary>
        <value><span data-ttu-id="55dca-110">Um <see cref="T:System.String" /> que descreve esta interface.</span><span class="sxs-lookup"><span data-stu-id="55dca-110">A <see cref="T:System.String" /> that describes this interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-111">A descrição é texto legível que descreve a interface de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-111">The description is human-readable text that describes the network interface.</span></span> <span data-ttu-id="55dca-112">As informações incluídas na descrição dependem dos recursos do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="55dca-112">The information included in the description depends on the capabilities of the operating system.</span></span>  <span data-ttu-id="55dca-113">No Windows, ele normalmente descreve o fornecedor de interface, tipo (por exemplo, Ethernet), marca e modelo.</span><span class="sxs-lookup"><span data-stu-id="55dca-113">On Windows, it typically describes the interface vendor, type (for example, Ethernet), brand, and model.</span></span> <span data-ttu-id="55dca-114">Em outras plataformas, pode ser tão breve quanto o nome da interface, como `eth0`.</span><span class="sxs-lookup"><span data-stu-id="55dca-114">On other platforms, it may be as brief as the name of the interface, such as `eth0`.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="55dca-115">O exemplo de código a seguir exibe um resumo de todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-115">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNetworkInterfaces">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllNetworkInterfaces () As NetworkInterface()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::NetworkInformation::NetworkInterface ^&gt; ^ GetAllNetworkInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterface[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-116">Retorna objetos que descrevem as interfaces de rede no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-116">Returns objects that describe the network interfaces on the local computer.</span></span></summary>
        <returns><span data-ttu-id="55dca-117">Uma matriz <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> que contém objetos que descrevem as interfaces de rede disponível ou uma matriz vazia se nenhuma interface for detectada.</span><span class="sxs-lookup"><span data-stu-id="55dca-117">A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-118">As interfaces de rede em um computador fornecem conectividade de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-118">The network interfaces on a computer provide network connectivity.</span></span> <span data-ttu-id="55dca-119">Interfaces de rede também são conhecidos como adaptadores de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-119">Network interfaces are also known as network adapters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-120">O exemplo de código a seguir exibe informações de configuração do serviço de nome de domínio (DNS) para adaptadores de rede do computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-120">The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.</span></span>  
  
 [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="55dca-121">Falha de uma chamada de função de sistema do Windows.</span><span class="sxs-lookup"><span data-stu-id="55dca-121">A Windows system function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPProperties">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPProperties () As IPInterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceProperties ^ GetIPProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-122">Retorna um objeto que descreve a configuração desta interface de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-122">Returns an object that describes the configuration of this network interface.</span></span></summary>
        <returns><span data-ttu-id="55dca-123">Um objeto <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> que descreve esta interface de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-123">An <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> object that describes this network interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-124">Observe que as informações no objeto retornado por esse método refletem as interfaces a partir da hora em que a matriz é criada.</span><span class="sxs-lookup"><span data-stu-id="55dca-124">Note that the information in the object returned by this method reflects the interfaces as of the time the array is created.</span></span> <span data-ttu-id="55dca-125">Essas informações não são atualizadas dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="55dca-125">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-126">O exemplo de código a seguir exibe informações para os adaptadores de rede do computador local que dão suporte a IPv4.</span><span class="sxs-lookup"><span data-stu-id="55dca-126">The following code example displays information for the local computer's network adapters that support IPv4.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPStatistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPStatistics () As IPInterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceStatistics ^ GetIPStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-127">Obtém as estatísticas de IP para essa instância <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-127">Gets the IP statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="55dca-128">Retorna <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-128">Returns <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span></span>  
  
 <span data-ttu-id="55dca-129">As estatísticas de IP.</span><span class="sxs-lookup"><span data-stu-id="55dca-129">The IP statistics.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Statistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv4Statistics () As IPv4InterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPv4InterfaceStatistics ^ GetIPv4Statistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-130">Obtém as estatísticas de IPv4 para esta instância de <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-130">Gets the IPv4 statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="55dca-131">Um objeto <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-131">An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsNetworkAvailable">
      <MemberSignature Language="C#" Value="public static bool GetIsNetworkAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsNetworkAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsNetworkAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsNetworkAvailable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-132">Indica se há alguma conexão de rede disponível.</span><span class="sxs-lookup"><span data-stu-id="55dca-132">Indicates whether any network connection is available.</span></span></summary>
        <returns>
          <span data-ttu-id="55dca-133"><see langword="true" /> se houver uma conexão de rede disponível; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-133"><see langword="true" /> if a network connection is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-134">Uma conexão de rede é considerado disponível se qualquer interface de rede é marcado como "backup" e não é uma interface de loopback ou túnel.</span><span class="sxs-lookup"><span data-stu-id="55dca-134">A network connection is considered to be available if any network interface is marked "up" and is not a loopback or tunnel interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhysicalAddress">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPhysicalAddress () As PhysicalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::PhysicalAddress ^ GetPhysicalAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PhysicalAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55dca-135">Retorna o MAC (Controle de Acesso à Mídia) ou o endereço físico desse adaptador.</span><span class="sxs-lookup"><span data-stu-id="55dca-135">Returns the Media Access Control (MAC) or physical address for this adapter.</span></span></summary>
        <returns><span data-ttu-id="55dca-136">Um objeto <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> que contém o endereço físico.</span><span class="sxs-lookup"><span data-stu-id="55dca-136">A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object that contains the physical address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-137">O objeto retornado por este método contém um endereço que é apropriado para a mídia usada para transportar dados na camada de link de dados.</span><span class="sxs-lookup"><span data-stu-id="55dca-137">The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer.</span></span> <span data-ttu-id="55dca-138">Por exemplo, em uma rede Ethernet, esse método retorna o endereço de hardware Ethernet.</span><span class="sxs-lookup"><span data-stu-id="55dca-138">For example, on an Ethernet network, this method returns the Ethernet hardware address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-139">O exemplo de código a seguir exibe os endereços físicos de todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-139">The following code example displays the physical addresses of all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-140">Obtém o identificador do adaptador de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-140">Gets the identifier of the network adapter.</span></span></summary>
        <value><span data-ttu-id="55dca-141">Uma <see cref="T:System.String" /> que contém o identificador.</span><span class="sxs-lookup"><span data-stu-id="55dca-141">A <see cref="T:System.String" /> that contains the identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPv6LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int IPv6LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IPv6LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IPv6LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-142">Obtém o índice da interface de loopback do IPv6.</span><span class="sxs-lookup"><span data-stu-id="55dca-142">Gets the index of the IPv6 loopback interface.</span></span></summary>
        <value><span data-ttu-id="55dca-143">Retorna <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-143">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="55dca-144">O índice da interface de loopback de IPv6.</span><span class="sxs-lookup"><span data-stu-id="55dca-144">The index for the IPv6 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-145">Uma interface de rede pode ter índices de interface diferente para a interface de loopback IPv4 e IPv6.</span><span class="sxs-lookup"><span data-stu-id="55dca-145">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="55dca-146">A propriedade P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex retorna apenas a interface de loopback de IPv6.</span><span class="sxs-lookup"><span data-stu-id="55dca-146">The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="IsReceiveOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReceiveOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReceiveOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReceiveOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReceiveOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-147">Obtém um valor <see cref="T:System.Boolean" /> que indica se o adaptador de rede está configurado para receber apenas pacotes de dados.</span><span class="sxs-lookup"><span data-stu-id="55dca-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is set to only receive data packets.</span></span></summary>
        <value>
          <span data-ttu-id="55dca-148"><see langword="true" /> Se a interface só recebe tráfego de rede; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-148"><see langword="true" /> if the interface only receives network traffic; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55dca-149">O exemplo de código a seguir exibe um resumo de todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-149">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="55dca-150">Essa propriedade não é válida em computadores que executam sistemas operacionais anteriores ao Windows XP.</span><span class="sxs-lookup"><span data-stu-id="55dca-150">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-151">Obtém o índice da interface de loopback do IPv4.</span><span class="sxs-lookup"><span data-stu-id="55dca-151">Gets the index of the IPv4 loopback interface.</span></span></summary>
        <value><span data-ttu-id="55dca-152">Um <see cref="T:System.Int32" /> que contém o índice da interface de loopback do IPv4.</span><span class="sxs-lookup"><span data-stu-id="55dca-152">A <see cref="T:System.Int32" /> that contains the index for the IPv4 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-153">O índice da interface de loopback é geralmente 1, mas você não pode confiar nisso.</span><span class="sxs-lookup"><span data-stu-id="55dca-153">The index of the loopback interface is usually 1, but you cannot rely on this.</span></span> <span data-ttu-id="55dca-154">Use o <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> propriedade para obter o valor correto.</span><span class="sxs-lookup"><span data-stu-id="55dca-154">Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.</span></span>  
  
 <span data-ttu-id="55dca-155">Uma interface de rede pode ter índices de interface diferente para a interface de loopback IPv4 e IPv6.</span><span class="sxs-lookup"><span data-stu-id="55dca-155">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="55dca-156">O <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> propriedade retorna apenas a interface de loopback do IPv4.</span><span class="sxs-lookup"><span data-stu-id="55dca-156">The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="55dca-157">Essa propriedade é inválida em computadores que executam apenas o Ipv6.</span><span class="sxs-lookup"><span data-stu-id="55dca-157">This property is not valid on computers running only Ipv6.</span></span></exception>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-158">Obtém o nome do adaptador de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-158">Gets the name of the network adapter.</span></span></summary>
        <value><span data-ttu-id="55dca-159">Um <see cref="T:System.String" /> que contém o nome do adaptador.</span><span class="sxs-lookup"><span data-stu-id="55dca-159">A <see cref="T:System.String" /> that contains the adapter name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55dca-160">O exemplo de código a seguir exibe um resumo de todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-160">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaceType">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NetworkInterfaceType As NetworkInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::NetworkInterfaceType NetworkInterfaceType { System::Net::NetworkInformation::NetworkInterfaceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-161">Obtém o tipo de interface.</span><span class="sxs-lookup"><span data-stu-id="55dca-161">Gets the interface type.</span></span></summary>
        <value><span data-ttu-id="55dca-162">Um valor de <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> que especifica o tipo da interface de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-162">An <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> value that specifies the network interface type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-163">Os tipos de interface são descritos detalhadamente o <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> documentação de enumeração.</span><span class="sxs-lookup"><span data-stu-id="55dca-163">The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> enumeration documentation.</span></span>  

 <span data-ttu-id="55dca-164">Em princípio, essa propriedade pode retornar qualquer membro do <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeração.</span><span class="sxs-lookup"><span data-stu-id="55dca-164">In principle, this property can return any member of the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration.</span></span> <span data-ttu-id="55dca-165">O valor específico que retornam depende das condições de tempo de execução da topologia de rede subjacente.</span><span class="sxs-lookup"><span data-stu-id="55dca-165">The specific value that it does return is dependent on the runtime conditions of the underlying network topology.</span></span> <span data-ttu-id="55dca-166">Isso significa que:</span><span class="sxs-lookup"><span data-stu-id="55dca-166">This means that:</span></span>
 
 - <span data-ttu-id="55dca-167">Não é possível determinar com antecedência qual valor de propriedade retorna para uma determinada rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-167">It is not possible to determine in advance which value the property returns for a particular network.</span></span>
 
 - <span data-ttu-id="55dca-168">É possível que prática em uma rede específica, o intervalo completo de valores de enumeração não está disponível.</span><span class="sxs-lookup"><span data-stu-id="55dca-168">It is possible that in practice on a particular network, the full range of enumeration values is not available.</span></span> <span data-ttu-id="55dca-169">Por exemplo, em uma rede gigabit Ethernet, é possível que a propriedade retorna <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> em vez de <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55dca-169">For example, on a gigabit Ethernet network, it is possible that the property returns <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> rather than <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span></span>

## Examples  
 <span data-ttu-id="55dca-170">O exemplo a seguir exibe informações de tipo para todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-170">The following example displays type information for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationalStatus">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.OperationalStatus OperationalStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OperationalStatus As OperationalStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::OperationalStatus OperationalStatus { System::Net::NetworkInformation::OperationalStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.OperationalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-171">Obtém o estado operacional atual da conexão de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-171">Gets the current operational state of the network connection.</span></span></summary>
        <value><span data-ttu-id="55dca-172">Um dos valores de <see cref="T:System.Net.NetworkInformation.OperationalStatus" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-172">One of the <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-173">Os valores de status operacional são descritos detalhadamente o <xref:System.Net.NetworkInformation.OperationalStatus> documentação de enumeração.</span><span class="sxs-lookup"><span data-stu-id="55dca-173">The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-174">O exemplo de código a seguir exibe um resumo de todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-174">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual long Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Speed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Speed { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-175">Obtém a velocidade do adaptador de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-175">Gets the speed of the network interface.</span></span></summary>
        <value><span data-ttu-id="55dca-176">Um valor <see cref="T:System.Int64" /> que especifica a velocidade em bits por segundo.</span><span class="sxs-lookup"><span data-stu-id="55dca-176">A <see cref="T:System.Int64" /> value that specifies the speed in bits per second.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-177">O valor retornado por essa propriedade é relatado pela interface de rede.</span><span class="sxs-lookup"><span data-stu-id="55dca-177">The value returned by this property is reported by the network interface.</span></span> <span data-ttu-id="55dca-178">Ele não é calculado dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="55dca-178">It is not computed dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-179">O exemplo de código a seguir demonstra como exibir a velocidade das interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-179">The following code example demonstrates displaying the speed of interfaces on the local computer.</span></span>  
  
 [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]
 [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]
 [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceComponent"><span data-ttu-id="55dca-180">Um valor <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-180">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> value.</span></span></param>
        <summary><span data-ttu-id="55dca-181">Obtém um valor <see cref="T:System.Boolean" /> que indica se a interface dá suporte ao protocolo especificado.</span><span class="sxs-lookup"><span data-stu-id="55dca-181">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface supports the specified protocol.</span></span></summary>
        <returns>
          <span data-ttu-id="55dca-182"><see langword="true" /> se houver suporte para o protocolo especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-182"><see langword="true" /> if the specified protocol is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55dca-183">O exemplo de código a seguir exibe as estatísticas para as interfaces IPV4 no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-183">The following code example displays statistics for IPV4 interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55dca-184">Obtém um valor <see cref="T:System.Boolean" /> que indica se o adaptador de rede está habilitado para receber pacotes multicast.</span><span class="sxs-lookup"><span data-stu-id="55dca-184">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is enabled to receive multicast packets.</span></span></summary>
        <value>
          <span data-ttu-id="55dca-185"><see langword="true" /> Se a interface receber pacotes de difusão seletiva; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55dca-185"><see langword="true" /> if the interface receives multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55dca-186">Multicast é o ato de enviar um pacote de dados para vários destinos simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="55dca-186">Multicasting is the act of sending a data packet to multiple destinations simultaneously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55dca-187">O exemplo de código a seguir exibe um resumo de todas as interfaces no computador local.</span><span class="sxs-lookup"><span data-stu-id="55dca-187">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="55dca-188">Essa propriedade não é válida em computadores que executam sistemas operacionais anteriores ao Windows XP.</span><span class="sxs-lookup"><span data-stu-id="55dca-188">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>