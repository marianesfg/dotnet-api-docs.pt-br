<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02658955cbcea15b85a8fddda92f34a0084c05ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39987614" /></Metadata><TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="15ff8-101">Fornece informações sobre o status e os dados resultantes de uma operação <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> ou <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</span><span class="sxs-lookup"><span data-stu-id="15ff8-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ff8-102">O <xref:System.Net.NetworkInformation.Ping> classe tenta enviar uma solicitação de eco do ICMP Internet Control Message Protocol () para um computador remoto e receber informações do computador por meio de uma mensagem de resposta de eco do ICMP.</span><span class="sxs-lookup"><span data-stu-id="15ff8-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="15ff8-103">O <xref:System.Net.NetworkInformation.Ping> classe usa instâncias da <xref:System.Net.NetworkInformation.PingReply> classe para retornar informações sobre a operação, como seu status e o tempo necessário para enviar a solicitação e receber a resposta.</span><span class="sxs-lookup"><span data-stu-id="15ff8-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="15ff8-104">O <xref:System.Net.NetworkInformation.Ping.Send%2A> métodos retornam instâncias da <xref:System.Net.NetworkInformation.PingReply> classe diretamente.</span><span class="sxs-lookup"><span data-stu-id="15ff8-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="15ff8-105">O <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> métodos retornam uma <xref:System.Net.NetworkInformation.PingReply> na <xref:System.Net.NetworkInformation.PingCompletedEventHandler> do método <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="15ff8-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="15ff8-106">O <xref:System.Net.NetworkInformation.PingReply> é acessado por meio de <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="15ff8-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="15ff8-107">Se o valor de <xref:System.Net.NetworkInformation.PingReply.Status%2A> não é <xref:System.Net.NetworkInformation.IPStatus.Success>, você não deve usar os valores retornados pelo <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> ou <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="15ff8-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="15ff8-108">O <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> propriedade retornará zero, o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propriedade retornará uma matriz vazia e o <xref:System.Net.NetworkInformation.PingReply.Options%2A> propriedade retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="15ff8-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ff8-109">O exemplo de código a seguir demonstra como usar <xref:System.Net.NetworkInformation.Ping> classe para enviar uma solicitação de eco do ICMP de forma síncrona e exibir a resposta.</span><span class="sxs-lookup"><span data-stu-id="15ff8-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15ff8-110">Obtém o endereço do host que envia a resposta de eco do protocolo ICMP.</span><span class="sxs-lookup"><span data-stu-id="15ff8-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span></span></summary>
        <value><span data-ttu-id="15ff8-111">Um <see cref="T:System.Net.IPAddress" /> que contém o destino da mensagem de eco do protocolo ICMP.</span><span class="sxs-lookup"><span data-stu-id="15ff8-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ff8-112">O <xref:System.Net.NetworkInformation.PingReply.Address%2A> retornados por qualquer uma da <xref:System.Net.NetworkInformation.Ping.Send%2A> sobrecargas podem se originar de um computador remoto mal-intencionado.</span><span class="sxs-lookup"><span data-stu-id="15ff8-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="15ff8-113">Não se conecte ao computador remoto usando esse endereço.</span><span class="sxs-lookup"><span data-stu-id="15ff8-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="15ff8-114">Use o DNS para determinar o endereço IP da máquina para o qual você deseja se conectar.</span><span class="sxs-lookup"><span data-stu-id="15ff8-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ff8-115">O exemplo de código a seguir envia uma solicitação de eco do ICMP de forma síncrona e exibe o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="15ff8-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15ff8-116">Obtém o buffer de dados recebidos em uma mensagem de resposta de eco do protocolo ICMP.</span><span class="sxs-lookup"><span data-stu-id="15ff8-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span></span></summary>
        <value><span data-ttu-id="15ff8-117">Uma matriz <see cref="T:System.Byte" /> que contém os dados recebidos em uma mensagem de resposta de eco ICMP ou uma matriz vazia se nenhuma resposta foi recebida.</span><span class="sxs-lookup"><span data-stu-id="15ff8-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ff8-118">O buffer de dados enviado com a solicitação de eco do ICMP é retornado ao remetente na resposta de eco para que o tempo de viagem de ida e volta para um pacote de um tamanho conhecido pode ser computado.</span><span class="sxs-lookup"><span data-stu-id="15ff8-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="15ff8-119">O buffer de dados, combinados com o <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> opção, pode ser usado para descobrir a unidade de transmissão máxima para o caminho de rede entre os computadores de origem e de destino.</span><span class="sxs-lookup"><span data-stu-id="15ff8-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="15ff8-120">Para obter mais informações, consulte "Traceroute" no RFC 1574, seção 3.2, disponível em [ https://www.ietf.org ](https://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="15ff8-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="15ff8-121">O buffer de padrão usado com <xref:System.Net.NetworkInformation.Ping.Send%2A> e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contém 32 bytes de dados.</span><span class="sxs-lookup"><span data-stu-id="15ff8-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ff8-122">O exemplo de código a seguir envia uma solicitação de eco do ICMP de forma síncrona e exibe o tamanho do buffer retornado por essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="15ff8-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15ff8-123">Obtém as opções usadas para transmitir a resposta a uma solicitação de eco no protocolo ICMP.</span><span class="sxs-lookup"><span data-stu-id="15ff8-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span></span></summary>
        <value><span data-ttu-id="15ff8-124">Um objeto <see cref="T:System.Net.NetworkInformation.PingOptions" /> que contém o TTL (vida útil) e a diretiva de fragmentação usada para transmitir a resposta se <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> for <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15ff8-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ff8-125">O TTL define o número de vezes que nós podem encaminhar um pacote enquanto trafegam entre sua origem e destino.</span><span class="sxs-lookup"><span data-stu-id="15ff8-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="15ff8-126">Se o número de encaminhamentos, também conhecido como saltos, exceder o valor especificado para o TTL, o pacote é considerado não entregue e é descartado.</span><span class="sxs-lookup"><span data-stu-id="15ff8-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="15ff8-127">O <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> valor especificado na fragmentação de pacotes de controles de solicitação para eco de ICMP.</span><span class="sxs-lookup"><span data-stu-id="15ff8-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="15ff8-128">Se <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> está `true` e o tamanho do pacote excede a unidade de transmissão máxima do caminho de rede executada pelo pacote, o pacote será descartado e o <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> erro será retornado.</span><span class="sxs-lookup"><span data-stu-id="15ff8-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ff8-129">O exemplo de código a seguir envia uma solicitação de eco do ICMP de forma síncrona e exibe os valores armazenados no <xref:System.Net.NetworkInformation.PingOptions> objeto retornado por essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="15ff8-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15ff8-130">Obtém o número de milissegundos necessários para enviar uma solicitação de eco do protocolo ICMP e receber a mensagem de resposta de eco ICMP correspondente.</span><span class="sxs-lookup"><span data-stu-id="15ff8-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="15ff8-131">Um <see cref="T:System.Int64" /> que especifica o tempo da viagem de ida e volta em milissegundos.</span><span class="sxs-lookup"><span data-stu-id="15ff8-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ff8-132">Se a solicitação de eco falhar, o <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> que será relatado como 0, que também é um valor válido quando a solicitação for bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="15ff8-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="15ff8-133">Você deve verificar o <xref:System.Net.NetworkInformation.PingReply.Status%2A> para determinar se o valor retornado por essa propriedade deve ser ignorado.</span><span class="sxs-lookup"><span data-stu-id="15ff8-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ff8-134">O exemplo de código a seguir envia uma solicitação de eco do ICMP de forma síncrona e exibe o tamanho do buffer retornado por essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="15ff8-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15ff8-135">Obtém o status de uma tentativa de enviar uma solicitação de eco do protocolo ICMP e receber a mensagem de resposta de eco ICMP correspondente.</span><span class="sxs-lookup"><span data-stu-id="15ff8-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="15ff8-136">Um valor <see cref="T:System.Net.NetworkInformation.IPStatus" /> que indica o resultado da solicitação.</span><span class="sxs-lookup"><span data-stu-id="15ff8-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15ff8-137">Se o valor de <xref:System.Net.NetworkInformation.PingReply.Status%2A> não é <xref:System.Net.NetworkInformation.IPStatus.Success>, você não deve usar os valores retornados pelo <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> ou <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="15ff8-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="15ff8-138">O <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> e <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propriedades retornará zero e o <xref:System.Net.NetworkInformation.PingReply.Options%2A> propriedade retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="15ff8-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15ff8-139">O exemplo de código a seguir demonstra como usar <xref:System.Net.NetworkInformation.Ping> classe para enviar uma solicitação de eco do ICMP de forma síncrona e exibir a resposta.</span><span class="sxs-lookup"><span data-stu-id="15ff8-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>