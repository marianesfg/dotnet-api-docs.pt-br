<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c035670b6a5acf3a4bb5bd86c113e7784448fdd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399620" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="332de-101">Fornece um conjunto de métodos e propriedades que você pode usar para medir com precisão o tempo decorrido.</span>
      <span class="sxs-lookup">
        <span data-stu-id="332de-101">Provides a set of methods and properties that you can use to accurately measure elapsed time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-102">Um <xref:System.Diagnostics.Stopwatch> instância pode medir o tempo decorrido para um intervalo ou o total de tempo decorrido em vários intervalos.</span><span class="sxs-lookup"><span data-stu-id="332de-102">A <xref:System.Diagnostics.Stopwatch> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</span></span> <span data-ttu-id="332de-103">Em um típico <xref:System.Diagnostics.Stopwatch> cenário, você chama o <xref:System.Diagnostics.Stopwatch.Start%2A> método, chame eventualmente o <xref:System.Diagnostics.Stopwatch.Stop%2A> método e, em seguida, verifique o tempo decorrido usando o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="332de-103">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="332de-104">Um <xref:System.Diagnostics.Stopwatch> instância está em execução ou parado; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> para determinar o estado atual de um <xref:System.Diagnostics.Stopwatch>.</span><span class="sxs-lookup"><span data-stu-id="332de-104">A <xref:System.Diagnostics.Stopwatch> instance is either running or stopped; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> to determine the current state of a <xref:System.Diagnostics.Stopwatch>.</span></span> <span data-ttu-id="332de-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> para começar a medir o tempo decorrido; use <xref:System.Diagnostics.Stopwatch.Stop%2A> para interromper a medir o tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> to begin measuring elapsed time; use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop measuring elapsed time.</span></span> <span data-ttu-id="332de-106">O valor de tempo decorrido através das propriedades de consulta <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, ou <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span><span class="sxs-lookup"><span data-stu-id="332de-106">Query the elapsed time value through the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span></span> <span data-ttu-id="332de-107">Você pode consultar as propriedades de tempo decorrido, enquanto a instância está em execução ou parado.</span><span class="sxs-lookup"><span data-stu-id="332de-107">You can query the elapsed time properties while the instance is running or stopped.</span></span> <span data-ttu-id="332de-108">Durante o tempo decorrido propriedades aumentarem continuamente o <xref:System.Diagnostics.Stopwatch> está em execução; eles permanecem constantes quando a instância é interrompida.</span><span class="sxs-lookup"><span data-stu-id="332de-108">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="332de-109">Por padrão, o valor de tempo decorrido de um <xref:System.Diagnostics.Stopwatch> instância é igual ao total de todos os intervalos de tempo medido.</span><span class="sxs-lookup"><span data-stu-id="332de-109">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="332de-110">Cada chamada para <xref:System.Diagnostics.Stopwatch.Start%2A> começa a contar ao tempo decorrido cumulativo; cada chamada para <xref:System.Diagnostics.Stopwatch.Stop%2A> termina a medição de intervalo atual e congela o valor de tempo decorrido cumulativo.</span><span class="sxs-lookup"><span data-stu-id="332de-110">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="332de-111">Use o <xref:System.Diagnostics.Stopwatch.Reset%2A> método para limpar o tempo decorrido cumulativo em existente <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-111">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
 <span data-ttu-id="332de-112">O <xref:System.Diagnostics.Stopwatch> mede o tempo decorrido pela contagem de tiques de timer no mecanismo de temporizador subjacente.</span><span class="sxs-lookup"><span data-stu-id="332de-112">The <xref:System.Diagnostics.Stopwatch> measures elapsed time by counting timer ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="332de-113">Se o hardware instalado e o sistema operacional de um contador de desempenho de alta resolução, oferecer suporte a <xref:System.Diagnostics.Stopwatch> classe usa esse contador para medir o tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-113">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch> class uses that counter to measure elapsed time.</span></span> <span data-ttu-id="332de-114">Caso contrário, o <xref:System.Diagnostics.Stopwatch> classe usa o timer do sistema para medir o tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-114">Otherwise, the <xref:System.Diagnostics.Stopwatch> class uses the system timer to measure elapsed time.</span></span> <span data-ttu-id="332de-115">Use o <xref:System.Diagnostics.Stopwatch.Frequency> e <xref:System.Diagnostics.Stopwatch.IsHighResolution> campos para determinar a precisão e a resolução do <xref:System.Diagnostics.Stopwatch> implementação de tempo.</span><span class="sxs-lookup"><span data-stu-id="332de-115">Use the <xref:System.Diagnostics.Stopwatch.Frequency> and <xref:System.Diagnostics.Stopwatch.IsHighResolution> fields to determine the precision and resolution of the <xref:System.Diagnostics.Stopwatch> timing implementation.</span></span>  
  
 <span data-ttu-id="332de-116">O <xref:System.Diagnostics.Stopwatch> classe auxilia a manipulação de contadores de desempenho relacionado à temporização do código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="332de-116">The <xref:System.Diagnostics.Stopwatch> class assists the manipulation of timing-related performance counters within managed code.</span></span> <span data-ttu-id="332de-117">Especificamente, o <xref:System.Diagnostics.Stopwatch.Frequency> campo e <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> método pode ser usado no lugar das APIs do Win32 não gerenciado `QueryPerformanceFrequency` e `QueryPerformanceCounter`.</span><span class="sxs-lookup"><span data-stu-id="332de-117">Specifically, the <xref:System.Diagnostics.Stopwatch.Frequency> field and <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method can be used in place of the unmanaged Win32 APIs `QueryPerformanceFrequency` and `QueryPerformanceCounter`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="332de-118">Em um computador multiprocessador, não importa qual processador que o thread é executado no.</span><span class="sxs-lookup"><span data-stu-id="332de-118">On a multiprocessor computer, it does not matter which processor the thread runs on.</span></span> <span data-ttu-id="332de-119">No entanto, devido a erros no BIOS ou a camada de abstração de Hardware (HAL), você pode obter resultados diferentes em processadores diferentes.</span><span class="sxs-lookup"><span data-stu-id="332de-119">However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</span></span> <span data-ttu-id="332de-120">Para especificar a afinidade do processador para um segmento, use o <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="332de-120">To specify processor affinity for a thread, use the <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-121">O exemplo a seguir demonstra como usar o <xref:System.Diagnostics.Stopwatch> classe para determinar o tempo de execução para um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="332de-121">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch> class to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 <span data-ttu-id="332de-122">O exemplo a seguir demonstra o uso da <xref:System.Diagnostics.Stopwatch> classe para calcular os dados de desempenho.</span><span class="sxs-lookup"><span data-stu-id="332de-122">The following example demonstrates the use of the <xref:System.Diagnostics.Stopwatch> class to calculate performance data.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-123">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Stopwatch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-123">Initializes a new instance of the <see cref="T:System.Diagnostics.Stopwatch" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-124">Retornado <xref:System.Diagnostics.Stopwatch> instância é interrompida e a propriedade de tempo decorrido da instância é zero.</span><span class="sxs-lookup"><span data-stu-id="332de-124">The returned <xref:System.Diagnostics.Stopwatch> instance is stopped, and the elapsed time property of the instance is zero.</span></span>  
  
 <span data-ttu-id="332de-125">Use o <xref:System.Diagnostics.Stopwatch.Start%2A> método para começar a medir o tempo decorrido com o novo <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-125">Use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to begin measuring elapsed time with the new <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="332de-126">Use o <xref:System.Diagnostics.Stopwatch.StartNew%2A> método para inicializar uma nova <xref:System.Diagnostics.Stopwatch> instância e inicie-o imediatamente.</span><span class="sxs-lookup"><span data-stu-id="332de-126">Use the <xref:System.Diagnostics.Stopwatch.StartNew%2A> method to initialize a new <xref:System.Diagnostics.Stopwatch> instance and immediately start it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-127">O exemplo a seguir inicializa um <xref:System.Diagnostics.Stopwatch> instância usando o construtor de classe simples.</span><span class="sxs-lookup"><span data-stu-id="332de-127">The following example initializes a <xref:System.Diagnostics.Stopwatch> instance by using a simple class constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332de-128">Obtém o tempo total decorrido, medido pela instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-128">Gets the total elapsed time measured by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332de-129">Um <see cref="T:System.TimeSpan" /> somente leitura que representa o tempo total decorrido, medido pela instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-129">A read-only <see cref="T:System.TimeSpan" /> representing the total elapsed time measured by the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-130">Em um típico <xref:System.Diagnostics.Stopwatch> cenário, você chama o <xref:System.Diagnostics.Stopwatch.Start%2A> método, chame eventualmente o <xref:System.Diagnostics.Stopwatch.Stop%2A> método e, em seguida, verifique o tempo decorrido usando o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="332de-130">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="332de-131">Use o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> valor de propriedade para recuperar o tempo decorrido usando <xref:System.TimeSpan> métodos e propriedades.</span><span class="sxs-lookup"><span data-stu-id="332de-131">Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties.</span></span> <span data-ttu-id="332de-132">Por exemplo, você pode formatar retornado <xref:System.TimeSpan> instância em uma representação de texto ou passá-lo para outra classe que requer um <xref:System.TimeSpan> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="332de-132">For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.</span></span>  
  
 <span data-ttu-id="332de-133">Você pode consultar as propriedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, e <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> enquanto o <xref:System.Diagnostics.Stopwatch> instância está em execução ou parado.</span><span class="sxs-lookup"><span data-stu-id="332de-133">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="332de-134">Durante o tempo decorrido propriedades aumentarem continuamente o <xref:System.Diagnostics.Stopwatch> está em execução; eles permanecem constantes quando a instância é interrompida.</span><span class="sxs-lookup"><span data-stu-id="332de-134">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="332de-135">Por padrão, o valor de tempo decorrido de um <xref:System.Diagnostics.Stopwatch> instância é igual ao total de todos os intervalos de tempo medido.</span><span class="sxs-lookup"><span data-stu-id="332de-135">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="332de-136">Cada chamada para <xref:System.Diagnostics.Stopwatch.Start%2A> começa a contar ao tempo decorrido cumulativo; cada chamada para <xref:System.Diagnostics.Stopwatch.Stop%2A> termina a medição de intervalo atual e congela o valor de tempo decorrido cumulativo.</span><span class="sxs-lookup"><span data-stu-id="332de-136">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="332de-137">Use o <xref:System.Diagnostics.Stopwatch.Reset%2A> método para limpar o tempo decorrido cumulativo em existente <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-137">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-138">O exemplo a seguir demonstra como usar o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> para determinar o tempo de execução para um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="332de-138">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332de-139">Obtém o tempo total decorrido, medido pela instância atual, em milissegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-139">Gets the total elapsed time measured by the current instance, in milliseconds.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332de-140">Um inteiro longo somente leitura que representa o número total de milissegundos medidos pela instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-140">A read-only long integer representing the total number of milliseconds measured by the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-141">Esta propriedade representa o tempo decorrido arredondado para baixo para o valor de milissegundo inteiro mais próximo.</span><span class="sxs-lookup"><span data-stu-id="332de-141">This property represents elapsed time rounded down to the nearest whole millisecond value.</span></span> <span data-ttu-id="332de-142">Para medidas de precisão mais altas, use o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> ou <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="332de-142">For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.</span></span>  
  
 <span data-ttu-id="332de-143">Você pode consultar as propriedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, e <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> enquanto o <xref:System.Diagnostics.Stopwatch> instância está em execução ou parado.</span><span class="sxs-lookup"><span data-stu-id="332de-143">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="332de-144">Durante o tempo decorrido propriedades aumentarem continuamente o <xref:System.Diagnostics.Stopwatch> está em execução; eles permanecem constantes quando a instância é interrompida.</span><span class="sxs-lookup"><span data-stu-id="332de-144">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="332de-145">Por padrão, o valor de tempo decorrido de um <xref:System.Diagnostics.Stopwatch> instância é igual ao total de todos os intervalos de tempo medido.</span><span class="sxs-lookup"><span data-stu-id="332de-145">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="332de-146">Cada chamada para <xref:System.Diagnostics.Stopwatch.Start%2A> começa a contar ao tempo decorrido cumulativo; cada chamada para <xref:System.Diagnostics.Stopwatch.Stop%2A> termina a medição de intervalo atual e congela o valor de tempo decorrido cumulativo.</span><span class="sxs-lookup"><span data-stu-id="332de-146">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="332de-147">Use o <xref:System.Diagnostics.Stopwatch.Reset%2A> método para limpar o tempo decorrido cumulativo em existente <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-147">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-148">O exemplo a seguir usa a <xref:System.Diagnostics.Stopwatch> classe para medir o desempenho de quatro implementações diferentes para analisar um número inteiro de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="332de-148">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="332de-149">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="332de-149">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332de-150">Obtém o tempo total decorrido, medido pela instância atual, em tiques do temporizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-150">Gets the total elapsed time measured by the current instance, in timer ticks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332de-151">Um inteiro longo somente leitura que representa o número total de tiques do temporizador medidos pela instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-151">A read-only long integer representing the total number of timer ticks measured by the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-152">Esta propriedade representa o número de tiques decorridos em que o mecanismo subjacente do timer.</span><span class="sxs-lookup"><span data-stu-id="332de-152">This property represents the number of elapsed ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="332de-153">Um tique é a menor unidade de tempo que o <xref:System.Diagnostics.Stopwatch> timer pode medir.</span><span class="sxs-lookup"><span data-stu-id="332de-153">A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure.</span></span> <span data-ttu-id="332de-154">Use o <xref:System.Diagnostics.Stopwatch.Frequency> campo para converter o <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valor em um número de segundos.</span><span class="sxs-lookup"><span data-stu-id="332de-154">Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.</span></span>  
  
 <span data-ttu-id="332de-155">Você pode consultar as propriedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, e <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> enquanto o <xref:System.Diagnostics.Stopwatch> instância está em execução ou parado.</span><span class="sxs-lookup"><span data-stu-id="332de-155">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="332de-156">Durante o tempo decorrido propriedades aumentarem continuamente o <xref:System.Diagnostics.Stopwatch> está em execução; eles permanecem constantes quando a instância é interrompida.</span><span class="sxs-lookup"><span data-stu-id="332de-156">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="332de-157">Por padrão, o valor de tempo decorrido de um <xref:System.Diagnostics.Stopwatch> instância é igual ao total de todos os intervalos de tempo medido.</span><span class="sxs-lookup"><span data-stu-id="332de-157">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="332de-158">Cada chamada para <xref:System.Diagnostics.Stopwatch.Start%2A> começa a contar ao tempo decorrido cumulativo; cada chamada para <xref:System.Diagnostics.Stopwatch.Stop%2A> termina a medição de intervalo atual e congela o valor de tempo decorrido cumulativo.</span><span class="sxs-lookup"><span data-stu-id="332de-158">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="332de-159">Use o <xref:System.Diagnostics.Stopwatch.Reset%2A> método para limpar o tempo decorrido cumulativo em existente <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-159">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="332de-160"><xref:System.Diagnostics.Stopwatch> tiques são diferentes das <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="332de-160"><xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="332de-161">Cada tique no <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> valor representa um intervalo de 100 nanossegundos.</span><span class="sxs-lookup"><span data-stu-id="332de-161">Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> value represents one 100-nanosecond interval.</span></span> <span data-ttu-id="332de-162">Cada tique no <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valor representa o intervalo de tempo igual a 1 segundo dividido pelo <xref:System.Diagnostics.Stopwatch.Frequency>.</span><span class="sxs-lookup"><span data-stu-id="332de-162">Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-163">O exemplo a seguir usa a <xref:System.Diagnostics.Stopwatch> classe para medir o desempenho de quatro implementações diferentes para analisar um número inteiro de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="332de-163">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="332de-164">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="332de-164">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332de-165">Obtém a frequência do temporizador como o número de tiques por segundo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-165">Gets the frequency of the timer as the number of ticks per second.</span>
          </span>
          <span data-ttu-id="332de-166">Este campo é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-166">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-167">A frequência de timer indica a precisão de timer e resolução.</span><span class="sxs-lookup"><span data-stu-id="332de-167">The timer frequency indicates the timer precision and resolution.</span></span> <span data-ttu-id="332de-168">Por exemplo, uma frequência de timer de 2 milhões tiques por segundo é igual a uma resolução do timer de 500 nanossegundos por tique.</span><span class="sxs-lookup"><span data-stu-id="332de-168">For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</span></span> <span data-ttu-id="332de-169">Em outras palavras, como um segundo é igual a 1 bilhão nanossegundos, uma frequência de timer de 2 milhões de tiques por segundo é equivalente a 2 milhões de tiques por 1 bilhão nanossegundos, que podem ser simplificados para 1 tique por 500 nanossegundos.</span><span class="sxs-lookup"><span data-stu-id="332de-169">In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</span></span>  
  
 <span data-ttu-id="332de-170">O <xref:System.Diagnostics.Stopwatch.Frequency> valor depende da resolução do mecanismo de tempo subjacente.</span><span class="sxs-lookup"><span data-stu-id="332de-170">The <xref:System.Diagnostics.Stopwatch.Frequency> value depends on the resolution of the underlying timing mechanism.</span></span> <span data-ttu-id="332de-171">Se o hardware instalado e o sistema operacional de um contador de desempenho de alta resolução, oferecer suporte a <xref:System.Diagnostics.Stopwatch.Frequency> valor reflete a frequência de contador.</span><span class="sxs-lookup"><span data-stu-id="332de-171">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch.Frequency> value reflects the frequency of that counter.</span></span> <span data-ttu-id="332de-172">Caso contrário, o <xref:System.Diagnostics.Stopwatch.Frequency> valor é baseado na frequência de timer de sistema.</span><span class="sxs-lookup"><span data-stu-id="332de-172">Otherwise, the <xref:System.Diagnostics.Stopwatch.Frequency> value is based on the system timer frequency.</span></span>  
  
 <span data-ttu-id="332de-173">Porque o <xref:System.Diagnostics.Stopwatch> frequência depende do hardware instalado e o sistema operacional, o <xref:System.Diagnostics.Stopwatch.Frequency> valor permanece constante enquanto o sistema está em execução.</span><span class="sxs-lookup"><span data-stu-id="332de-173">Because the <xref:System.Diagnostics.Stopwatch> frequency depends on the installed hardware and operating system, the <xref:System.Diagnostics.Stopwatch.Frequency> value remains constant while the system is running.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-174">O exemplo a seguir exibe a frequência e a resolução de um <xref:System.Diagnostics.Stopwatch> timer.</span><span class="sxs-lookup"><span data-stu-id="332de-174">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="332de-175">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="332de-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-176">Obtém o número de tiques atual no mecanismo de temporizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-176">Gets the current number of ticks in the timer mechanism.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="332de-177">Um inteiro longo que representa o valor do contador de tiques do mecanismo de temporizador subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-177">A long integer representing the tick counter value of the underlying timer mechanism.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-178">Se o <xref:System.Diagnostics.Stopwatch> classe usa um contador de desempenho de alta resolução, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> retorna o valor atual do contador.</span><span class="sxs-lookup"><span data-stu-id="332de-178">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="332de-179">Se o <xref:System.Diagnostics.Stopwatch> classe usa o timer do sistema, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> retorna atual <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> propriedade o <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-179">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-180">O exemplo a seguir ilustra o uso do <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> para atualizar um contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="332de-180">The following example illustrates the use of the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method to update a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332de-181">Indica se o temporizador é baseado em um contador de desempenho de alta resolução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-181">Indicates whether the timer is based on a high-resolution performance counter.</span>
          </span>
          <span data-ttu-id="332de-182">Este campo é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-182">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-183">O timer usado pela <xref:System.Diagnostics.Stopwatch> classe depende do hardware do sistema e o sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="332de-183">The timer used by the <xref:System.Diagnostics.Stopwatch> class depends on the system hardware and operating system.</span></span> <span data-ttu-id="332de-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> é `true` se o <xref:System.Diagnostics.Stopwatch> timer baseia-se em um contador de desempenho de alta resolução.</span><span class="sxs-lookup"><span data-stu-id="332de-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> is `true` if the <xref:System.Diagnostics.Stopwatch> timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="332de-185">Caso contrário, <xref:System.Diagnostics.Stopwatch.IsHighResolution> é `false`, que indica que o <xref:System.Diagnostics.Stopwatch> timer se baseia o timer do sistema.</span><span class="sxs-lookup"><span data-stu-id="332de-185">Otherwise, <xref:System.Diagnostics.Stopwatch.IsHighResolution> is `false`, which indicates that the <xref:System.Diagnostics.Stopwatch> timer is based on the system timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-186">O exemplo a seguir exibe a frequência e a resolução de um <xref:System.Diagnostics.Stopwatch> timer.</span><span class="sxs-lookup"><span data-stu-id="332de-186">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="332de-187">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="332de-187">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332de-188">Obtém um valor que indica se o temporizador de <see cref="T:System.Diagnostics.Stopwatch" /> está em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-188">Gets a value indicating whether the <see cref="T:System.Diagnostics.Stopwatch" /> timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332de-189">
            <see langword="true" /> se a instância de <see cref="T:System.Diagnostics.Stopwatch" /> estiver em execução e medindo o tempo decorrido com relação a um intervalo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-189">
              <see langword="true" /> if the <see cref="T:System.Diagnostics.Stopwatch" /> instance is currently running and measuring elapsed time for an interval; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-190">Um <xref:System.Diagnostics.Stopwatch> instância começa a execução com uma chamada para <xref:System.Diagnostics.Stopwatch.Start%2A> ou <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="332de-190">A <xref:System.Diagnostics.Stopwatch> instance begins running with a call to <xref:System.Diagnostics.Stopwatch.Start%2A> or <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span></span> <span data-ttu-id="332de-191">As paradas de instância em execução com uma chamada para <xref:System.Diagnostics.Stopwatch.Stop%2A> ou <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="332de-191">The instance stops running with a call to <xref:System.Diagnostics.Stopwatch.Stop%2A> or <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-192">Interrompe a medida de intervalo de tempo e redefine o tempo decorrido para zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-192">Stops time interval measurement and resets the elapsed time to zero.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-193">Um <xref:System.Diagnostics.Stopwatch> instância calcula e retém o tempo decorrido cumulativo em vários intervalos de tempo, até que a instância seja redefinida.</span><span class="sxs-lookup"><span data-stu-id="332de-193">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="332de-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> para interromper a medição de intervalo atual e mantenha o valor de tempo decorrido cumulativo.</span><span class="sxs-lookup"><span data-stu-id="332de-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="332de-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> parar qualquer medida de intervalo em andamento e limpar o valor de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-196">Interrompe a medida de tempo de intervalo, redefine o tempo decorrido para zero e começa a medir o tempo decorrido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-196">Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-197">Um <xref:System.Diagnostics.Stopwatch> instância calcula e retém o tempo decorrido cumulativo em vários intervalos de tempo, até que a instância seja redefinida ou reiniciada.</span><span class="sxs-lookup"><span data-stu-id="332de-197">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</span></span> <span data-ttu-id="332de-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> para interromper a medição de intervalo atual e mantenha o valor de tempo decorrido cumulativo.</span><span class="sxs-lookup"><span data-stu-id="332de-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="332de-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> parar qualquer medida de intervalo em andamento e limpar o valor de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span> <span data-ttu-id="332de-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> para interromper a medição de intervalo atual e iniciar uma nova medida de intervalo.</span><span class="sxs-lookup"><span data-stu-id="332de-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> to stop current interval measurement and start a new interval measurement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-201">Inicia ou retoma a medição do tempo decorrido de um intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-201">Starts, or resumes, measuring elapsed time for an interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-202">Em um típico <xref:System.Diagnostics.Stopwatch> cenário, você chama o <xref:System.Diagnostics.Stopwatch.Start%2A> método, chame eventualmente o <xref:System.Diagnostics.Stopwatch.Stop%2A> método e, em seguida, verifique o tempo decorrido usando o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="332de-202">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="332de-203">Uma vez iniciada, um <xref:System.Diagnostics.Stopwatch> timer mede o intervalo atual, em tiques de timer decorrido, até que a instância é interrompida ou redefinir.</span><span class="sxs-lookup"><span data-stu-id="332de-203">Once started, a <xref:System.Diagnostics.Stopwatch> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</span></span> <span data-ttu-id="332de-204">Iniciando um <xref:System.Diagnostics.Stopwatch> que é já em execução não alterar o estado do temporizador ou redefinir as propriedades de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-204">Starting a <xref:System.Diagnostics.Stopwatch> that is already running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="332de-205">Quando um <xref:System.Diagnostics.Stopwatch> instância medidas mais de um intervalo, o <xref:System.Diagnostics.Stopwatch.Start%2A> método retoma a medição de tempo do valor atual de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-205">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Start%2A> method resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="332de-206">Um <xref:System.Diagnostics.Stopwatch> instância calcula e retém o tempo decorrido cumulativo em vários intervalos de tempo, até que a instância seja redefinida.</span><span class="sxs-lookup"><span data-stu-id="332de-206">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="332de-207">Use o <xref:System.Diagnostics.Stopwatch.Reset%2A> método antes de chamar <xref:System.Diagnostics.Stopwatch.Start%2A> para limpar o tempo decorrido cumulativo em um <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-207">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method before calling <xref:System.Diagnostics.Stopwatch.Start%2A> to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="332de-208">Use o <xref:System.Diagnostics.Stopwatch.Restart%2A> método <xref:System.Diagnostics.Stopwatch.Reset%2A> e <xref:System.Diagnostics.Stopwatch.Start%2A> o <xref:System.Diagnostics.Stopwatch> com um único comando.</span><span class="sxs-lookup"><span data-stu-id="332de-208">Use the <xref:System.Diagnostics.Stopwatch.Restart%2A> method to <xref:System.Diagnostics.Stopwatch.Reset%2A> and <xref:System.Diagnostics.Stopwatch.Start%2A> the <xref:System.Diagnostics.Stopwatch> with a single command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-209">O exemplo a seguir demonstra como usar o <xref:System.Diagnostics.Stopwatch.Start%2A> método para iniciar um temporizador que mede o tempo de execução de um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="332de-209">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to start a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-210">Inicializa uma nova instância <see cref="T:System.Diagnostics.Stopwatch" />, define a propriedade de tempo decorrido como zero e começa a medir o tempo decorrido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-210">Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="332de-211">Um <see cref="T:System.Diagnostics.Stopwatch" /> que acabou de iniciar a medição de tempo decorrido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-211">A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-212">Esse método é equivalente a chamar o <xref:System.Diagnostics.Stopwatch> construtor e, em seguida, chamar <xref:System.Diagnostics.Stopwatch.Start%2A> na nova instância.</span><span class="sxs-lookup"><span data-stu-id="332de-212">This method is equivalent to calling the <xref:System.Diagnostics.Stopwatch> constructor and then calling <xref:System.Diagnostics.Stopwatch.Start%2A> on the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-213">O exemplo a seguir usa a <xref:System.Diagnostics.Stopwatch> classe para medir o desempenho de quatro implementações diferentes para analisar um número inteiro de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="332de-213">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="332de-214">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Diagnostics.Stopwatch> classe.</span><span class="sxs-lookup"><span data-stu-id="332de-214">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332de-215">Para a medição do tempo decorrido de um intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332de-215">Stops measuring elapsed time for an interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332de-216">Em um típico <xref:System.Diagnostics.Stopwatch> cenário, você chama o <xref:System.Diagnostics.Stopwatch.Start%2A> método, chame eventualmente o <xref:System.Diagnostics.Stopwatch.Stop%2A> método e, em seguida, verifique o tempo decorrido usando o <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="332de-216">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="332de-217">O <xref:System.Diagnostics.Stopwatch.Stop%2A> método termina a medição de intervalo de tempo atual.</span><span class="sxs-lookup"><span data-stu-id="332de-217">The <xref:System.Diagnostics.Stopwatch.Stop%2A> method ends the current time interval measurement.</span></span> <span data-ttu-id="332de-218">Interrompendo um <xref:System.Diagnostics.Stopwatch> que é não está em execução não alterar o estado do temporizador ou redefinir as propriedades de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-218">Stopping a <xref:System.Diagnostics.Stopwatch> that is not running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="332de-219">Quando um <xref:System.Diagnostics.Stopwatch> instância medidas mais de um intervalo, o <xref:System.Diagnostics.Stopwatch.Stop%2A> método é equivalente ao pausar a medida de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-219">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Stop%2A> method is equivalent to pausing the elapsed time measurement.</span></span> <span data-ttu-id="332de-220">Uma chamada subsequente para <xref:System.Diagnostics.Stopwatch.Start%2A> retoma a medição de tempo do valor atual de tempo decorrido.</span><span class="sxs-lookup"><span data-stu-id="332de-220">A subsequent call to <xref:System.Diagnostics.Stopwatch.Start%2A> resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="332de-221">Use o <xref:System.Diagnostics.Stopwatch.Reset%2A> método para limpar o tempo decorrido cumulativo em um <xref:System.Diagnostics.Stopwatch> instância.</span><span class="sxs-lookup"><span data-stu-id="332de-221">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332de-222">O exemplo a seguir demonstra como usar o <xref:System.Diagnostics.Stopwatch.Stop%2A> método para interromper um temporizador que mede o tempo de execução de um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="332de-222">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Stop%2A> method to stop a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>