<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceListener.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57ab493708b37c872292a904f7d2d2ca516ab41df.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ab493708b37c872292a904f7d2d2ca516ab41df</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for the listeners who monitor trace and debug output.</source>
          <target state="translated">Fornece a classe base <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> para os ouvintes que monitoram o rastreamento e a saída da depuração.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>For examples of how to implement a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> and the <ph id="ph4">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> classes.</source>
          <target state="translated">Para obter exemplos de como implementar um <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, consulte o <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> e <ph id="ph4">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">Você deve habilitar o rastreamento ou a depuração para usar um ouvinte de rastreamento.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">A sintaxe a seguir é específico do compilador.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">Se você usar compiladores que não seja o c# ou Visual Basic, consulte a documentação para o compilador.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Para habilitar a depuração em c#, adicione o <ph id="ph1">`/d:DEBUG`</ph> sinalizador para a linha de comando do compilador quando você compila o código, ou você pode adicionar <ph id="ph2">`#define DEBUG`</ph> à parte superior do seu arquivo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">No Visual Basic, adicione o <ph id="ph1">`/d:DEBUG=True`</ph> sinalizador para a linha de comando do compilador.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Para habilitar o rastreamento em c#, adicione o <ph id="ph1">`/d:TRACE`</ph> sinalizador para a linha de comando do compilador quando você compila o código ou adiciona <ph id="ph2">`#define TRACE`</ph> à parte superior do seu arquivo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">No Visual Basic, adicione o <ph id="ph1">`/d:TRACE=True`</ph> sinalizador para a linha de comando do compilador.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">Para adicionar um ouvinte de rastreamento, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">Nesse arquivo, você pode adicionar um ouvinte, defina seu tipo e definir seu parâmetro, remover um ouvinte ou limpar todos os ouvintes anteriormente definidos pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>The configuration file should be formatted similar to the following example.</source>
          <target state="translated">O arquivo de configuração deve ser formatado semelhante ao exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>For more information on using configuration files for tracing, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.diagnostics<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como usar arquivos de configuração de rastreamento, consulte <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>System. Diagnostics<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo é thread-safe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Inherit from this class to implement a custom listener for the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Debug" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Diagnostics.Trace" /&gt;</ph> classes.</source>
          <target state="translated">Herdar desta classe para implementar um ouvinte personalizado para o <ph id="ph1">&lt;see cref="T:System.Diagnostics.Debug" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Diagnostics.Trace" /&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>At a minimum, you must implement the <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /&gt;</ph> methods.</source>
          <target state="translated">No mínimo, você deve implementar o <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Additionally, you can implement the <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.Close" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Diagnostics.TraceListener.Flush" /&gt;</ph> methods.</source>
          <target state="translated">Além disso, você pode implementar o <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.Close" /&gt;</ph> e <ph id="ph3">&lt;see cref="M:System.Diagnostics.TraceListener.Flush" /&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</source>
          <target state="translated">A tabela a seguir mostra os valores de propriedade inicial para uma instância do <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Property</source>
          <target state="translated">Propriedade</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Default Value</source>
          <target state="translated">Valor padrão</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Name</source>
          <target state="translated">Nome</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">A cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Indent</source>
          <target state="translated">Recuar</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Zero.</source>
          <target state="translated">Zero.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>IndentSize</source>
          <target state="translated">IndentSize</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Four spaces.</source>
          <target state="translated">Quatro espaços.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">O nome do <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class using the specified name as the listener.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> usando o nome especificado como ouvinte.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Gets the custom trace listener attributes defined in the application configuration file.</source>
          <target state="translated">Obtém os atributos do ouvinte de rastreamento personalizados definidos no arquivo de configuração de aplicativo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> containing the custom attributes for the trace listener.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> que contém os atributos personalizados para o ouvinte de rastreamento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class can add custom attributes by overriding the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method and returning a string array of custom attribute names.</source>
          <target state="translated">Classes que herdam o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> classe pode adicionar atributos personalizados, substituindo o <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> método e retornar uma matriz de cadeia de caracteres de nomes de atributo personalizado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> property identifies the custom attributes that are referenced in the application's configuration file.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> propriedade identifica os atributos personalizados que são referenciados no arquivo de configuração do aplicativo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>For example, in the following configuration file excerpt the <ph id="ph1">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> custom attribute "delimiter" is referenced.</source>
          <target state="translated">Por exemplo, no seguinte trecho do arquivo de configuração o <ph id="ph1">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> atributo personalizado "delimitador" é referenciado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> containing the string "delimiter".</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> propriedade retorna um <ph id="ph2">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> que contém a cadeia de caracteres "delimitador".</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Unreferenced custom attributes are not enumerated.</source>
          <target state="translated">Atributos personalizados não referenciados não são enumerados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Para obter mais informações, consulte o método <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Close">
          <source>When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</source>
          <target state="translated">Quando substituído em uma classe derivada, fecha o fluxo de saída para que ele não receba mais saídas de rastreamento ou depuração.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Close">
          <source>Use this method when the output is going to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">Use este método quando a saída vai para um arquivo, como o <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Close">
          <source>After a call to this method, you must reinitialize the object.</source>
          <target state="translated">Após uma chamada para esse método, você deve reinicializar o objeto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> permite que os recursos usados pelo <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> para ser realocada para outros fins.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> e pelo método <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> invoca o método <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> protegido com o parâmetro <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir esse método, tenha cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Emits error messages to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Emite mensagens de erro para o ouvinte criado ao implementar a classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">Uma mensagem a ser emitida.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>Emits an error message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Emite uma mensagem de erro para o ouvinte criado ao implementar a classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in a <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">O comportamento padrão é exibir a mensagem especificada em uma caixa de mensagem quando o aplicativo é executado em um modo de interface do usuário e para o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instâncias em um <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection has an instance of a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Por padrão, o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> coleta tem uma instância de um <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to or removing one from the collection.</source>
          <target state="translated">Você pode personalizar esse comportamento adicionando um <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a ou remover uma da coleção.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">Uma mensagem a ser emitida.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">Uma mensagem detalhada a ser emitida.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Emite uma mensagem de erro e uma mensagem de erro detalhada para o ouvinte criado ao implementar a classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in a <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">O comportamento padrão é exibir a mensagem e a mensagem detalhada em uma caixa de mensagem quando o aplicativo é executado em um modo de interface do usuário e para o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instâncias em um <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection has an instance of a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Por padrão, o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> coleta tem uma instância de um <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to or removing one from the collection.</source>
          <target state="translated">Você pode personalizar esse comportamento adicionando um <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> a ou remover uma da coleção.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>Gets and sets the trace filter for the trace listener.</source>
          <target state="translated">Obtém e define o filtro de rastreamento para o ouvinte de rastreamento.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceFilter" /&gt;</ph> base class.</source>
          <target state="translated">Um objeto derivado da classe base <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceFilter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</source>
          <target state="translated">Um filtro de rastreamento pode ser adicionado a um ouvinte de rastreamento para fornecer uma camada de triagem além do fornecido para a origem de rastreamento por comutadores.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph> can be added to a trace listener to control the event types that are output by the listener.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph> pode ser adicionado a um ouvinte de rastreamento para controlar os tipos de eventos que são produzidas pelo ouvinte.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</source>
          <target state="translated">Os ouvintes que são chamados, porque os comutador critérios são atendidos podem consultar seus filtros, se estiver presente, para determinar se um rastreamento deve ser enviado para a saída.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property to add a source filter to a console trace listener.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> propriedade para adicionar um filtro de origem para um ouvinte de rastreamento do console.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Flush">
          <source>When overridden in a derived class, flushes the output buffer.</source>
          <target state="translated">Quando substituído em uma classe derivada, libera o buffer de saída.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>Gets the custom attributes supported by the trace listener.</source>
          <target state="translated">Obtém os atributos personalizados com suporte no ouvinte de rastreamento.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>A string array naming the custom attributes supported by the trace listener, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there are no custom attributes.</source>
          <target state="translated">Uma matriz de cadeia de caracteres que nomeia os atributos personalizados com suporte no ouvinte de rastreamento ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se não houver nenhum atributo personalizado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>The default implementation for <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">A implementação padrão para <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> retorna <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>The following code sample shows an override of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method for a custom trace listener.</source>
          <target state="translated">O exemplo de código a seguir mostra uma substituição do <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> método para um ouvinte de rastreamento personalizada.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>When inheriting from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class or a derived class, you can override the <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /&gt;</ph> method to provide custom attributes for your class.</source>
          <target state="translated">Ao herdar do <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> classe ou uma classe derivada, você pode substituir o <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /&gt;</ph> método para fornecer atributos personalizados para sua classe.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">Obtém ou define o nível de recuo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">O nível de recuo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The default is zero.</source>
          <target state="translated">O padrão é zero.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> property represents the number of times that the indent specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> property is applied.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> propriedade representa o número de vezes que o recuo especificado pelo <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> propriedade é aplicada.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">Essa propriedade é armazenada em cada thread/por-solicitação.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">Obtém ou define o número de espaços em um recuo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">O número de espaços em um recuo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The default is four spaces.</source>
          <target state="translated">O padrão é quatro espaços.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The property is stored on per-thread/per-request basis.</source>
          <target state="translated">A propriedade é armazenada em cada thread/por-solicitação.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>Set operation failed because the value is less than zero.</source>
          <target state="translated">A operação de conjuntos falhou porque o valor e menor que zero.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">Obtém um valor que indica se o ouvinte de rastreamento é thread-safe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the trace listener is thread safe; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ouvinte de rastreamento for thread-safe; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is used to determine whether to use a global lock when writing to the listener.</source>
          <target state="translated">O valor de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> é usado para determinar se deve usar um bloqueio global ao gravar o ouvinte.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>If the value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the global lock is used regardless of the value of <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</source>
          <target state="translated">Se o valor de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> é <ph id="ph2">`false`</ph>, o bloqueio global é usado, independentemente do valor de <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The global lock is not used only if the value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the value of <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O bloqueio global não é usado somente se o valor de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> é <ph id="ph2">`true`</ph> e o valor de <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> é <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The default behavior is to use the global lock whenever writing to the listener.</source>
          <target state="translated">O comportamento padrão é usar global sempre que a gravação para o ouvinte de bloqueio.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Name">
          <source>Gets or sets a name for this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define um nome para este <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>A name for this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">Um nome para este <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>The default is an empty string ("").</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>The name can be used to organize and access listeners in a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">O nome pode ser usado para organizar e acessar ouvintes em um <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source>Gets or sets a value indicating whether to indent the output.</source>
          <target state="translated">Obtém ou define um valor que indica se a saída deve ser recuada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output should be indented; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a saída deve ser recuada; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</ph> method, called by the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes, sets the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property value to <ph id="ph5">`false`</ph> to prevent later, unnecessary indents.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</ph> método, chamado pelo <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> e <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes, define o <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> valor da propriedade <ph id="ph5">`false`</ph> para evitar mais tarde, recuos desnecessários.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph> each time you wish to indent trace output.</source>
          <target state="translated">Você deve definir o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph> cada vez que você deseja recuar a saída de rastreamento.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes trace data to the listener specific output.</source>
          <target state="translated">Grava dados de rastreamento na saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> que especifica o tipo do evento que causou o rastreamento.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">Os dados de rastreamento a serem emitidos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object and event information to the listener specific output.</source>
          <target state="translated">Grava as informações de rastreamento, um objeto de dados e informações de evento para a saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The default implementation writes the <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> and <ph id="ph4">`id`</ph> parameters in the header and footer of the trace.</source>
          <target state="translated">As gravações de implementação padrão de <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> e <ph id="ph4">`id`</ph> parâmetros no cabeçalho e rodapé do rastreamento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`data`</ph> parameter is written as the body of the trace message.</source>
          <target state="translated">O <ph id="ph1">`data`</ph> parâmetro é escrito como o corpo da mensagem de rastreamento.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`ToString`</ph> método do objeto de dados é usado para converter o objeto para um <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> que especifica o tipo do evento que causou o rastreamento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">Uma matriz de objetos a ser emitidos como dados.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects and event information to the listener specific output.</source>
          <target state="translated">Grava informações de rastreamento, uma matriz de objetos de dados e informações de evento na saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">A implementação padrão grava os valores de <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> e <ph id="ph3">`id`</ph> parâmetros como um cabeçalho.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The data objects are converted to strings using the <ph id="ph1">`ToString`</ph> method of each object.</source>
          <target state="translated">Os objetos de dados são convertidos em cadeias de caracteres usando o <ph id="ph1">`ToString`</ph> método de cada objeto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`eventCache`</ph> dados são gravados como um rodapé, a natureza dos dados de saída seja dependente do valor da <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">Grava as informações de rastreamento e evento para a saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> que especifica o tipo do evento que causou o rastreamento.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">Grava as informações de rastreamento e evento para a saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">A implementação padrão grava os valores de <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> e <ph id="ph3">`id`</ph> parâmetros como um cabeçalho.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`eventCache`</ph> dados são gravados como um rodapé, a natureza dos dados de saída seja dependente do valor da <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> que especifica o tipo do evento que causou o rastreamento.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message, and event information to the listener specific output.</source>
          <target state="translated">Grava informações de rastreamento, uma mensagem e informações de evento na saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header, followed by the <ph id="ph4">`message`</ph> data.</source>
          <target state="translated">A implementação padrão grava os valores da <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> e <ph id="ph3">`id`</ph> parâmetros como um cabeçalho, seguido de <ph id="ph4">`message`</ph> dados.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`eventCache`</ph> dados são gravados como um rodapé, a natureza dos dados de saída seja dependente do valor da <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> que especifica o tipo do evento que causou o rastreamento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma cadeia de caracteres de formato que contém zero ou mais itens de formato, que correspondem aos objetos na matriz <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Uma matriz <ph id="ph1">&lt;see langword="object" /&gt;</ph> que contém zero ou mais objetos a serem formatados.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects and event information to the listener specific output.</source>
          <target state="translated">Grava informações de rastreamento, uma matriz de objetos formatada e informações de evento na saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">A implementação padrão grava os valores de <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> e <ph id="ph3">`id`</ph> parâmetros como um cabeçalho.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array to format the string as the message portion of the trace.</source>
          <target state="translated">O <ph id="ph1">`args`</ph> matriz de objeto é convertido em uma cadeia de caracteres usando o <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> método, passando o <ph id="ph3">`format`</ph> cadeia de caracteres e <ph id="ph4">`args`</ph> matriz para a cadeia de caracteres de formato como a parte de mensagem de rastreamento.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">`eventCache`</ph> dados são gravados como um rodapé, a natureza dos dados de saída seja dependente do valor da <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>Gets or sets the trace output options.</source>
          <target state="translated">Obtém ou define as opções de saída de rastreamento.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">Um combinação bit a bit dos valores de enumeração.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceOptions.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceOptions.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property determines the optional content of trace output.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade determina o conteúdo opcional de saída de rastreamento.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</source>
          <target state="translated">A propriedade pode ser definida no arquivo de configuração ou por meio de programação durante a execução para incluir dados adicionais especificamente para uma seção de código.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>For example, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for the console trace listener to <ph id="ph2">&lt;xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType&gt;</ph> to add call stack information to the trace output.</source>
          <target state="translated">Por exemplo, você pode definir o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade para o ouvinte de rastreamento do console para <ph id="ph2">&lt;xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType&gt;</ph> para adicionar informações de pilha de chamadas para a saída de rastreamento.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> enumeration is not used by the following classes and methods:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> enumeração não é usada pelas seguintes classes e métodos:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> de classe, porque isso pode causar um grande volume de dados a serem gravados no log.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated">O <ph id="ph1">`Write`</ph> e <ph id="ph2">`WriteLine`</ph> métodos do <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, e <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class when they are not overridden in a derived class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> métodos de <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> classe quando eles não são substituídos em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The following example shows the setting of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for a console trace listener.</source>
          <target state="translated">O exemplo a seguir mostra a configuração do <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> propriedade para um ouvinte de rastreamento do console.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The console trace listener is one of the listeners enumerated in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> property of a trace source.</source>
          <target state="translated">O ouvinte de rastreamento do console é um dos ouvintes enumerados no <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> propriedade de uma origem de rastreamento.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>Set operation failed because the value is invalid.</source>
          <target state="translated">A operação de conjuntos falhou porque o valor é inválido.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Um identificador numérico do evento.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object identifying a related activity.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> que identifica uma atividade relacionada.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>Writes trace information, a message, a related activity identity and event information to the listener specific output.</source>
          <target state="translated">Grava informações de rastreamento, uma mensagem, uma identidade de atividade relacionada e informações de evento na saída específica do ouvinte.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros do <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes para gravar dados de rastreamento de saída.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> method is used for the correlation of related traces.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> método é usado para a correlação de rastreamento relacionado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> method to process the call, with the eventType level set to <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> and the <ph id="ph4">`relatedActivityId`</ph><ph id="ph5">&lt;xref:System.Guid&gt;</ph> as a string appended to the message.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> chamadas de método de <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> método para processar a chamada com o nível de eventType definido como <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> e o <ph id="ph4">`relatedActivityId`</ph> <ph id="ph5">&lt;xref:System.Guid&gt;</ph> como uma cadeia de caracteres anexada à mensagem.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes a message, category name, or the value of an object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Grava uma mensagem, um nome de categoria ou o valor do método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> do objeto no ouvinte criado ao implementar a classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cujo nome de classe totalmente qualificado você deseja gravar.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Grava o valor do método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> do objeto no ouvinte criado ao implementar a classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>When overridden in a derived class, writes the specified message to the listener you create in the derived class.</source>
          <target state="translated">Quando substituído em uma classe derivada, grava a mensagem especificada no ouvinte criado na classe derivada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>When inheriting from this class, you must implement this method.</source>
          <target state="translated">Ao herdar desta classe, você deve implementar esse método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>To support an indentation, you should call <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Para dar suporte a um recuo, você deve chamar <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> se <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> é <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>If you need to indent the following line, you must reset <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Se você precisar recuar a linha a seguir, você deve redefinir <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> para <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cujo nome de classe totalmente qualificado você deseja gravar.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Um nome de categoria usado para organizar a saída.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Grava um nome de categoria e o valor do método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> do objeto no ouvinte criado ao implementar a classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Um nome de categoria usado para organizar a saída.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>Writes a category name and a message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">Grava um nome de categoria e uma mensagem no ouvinte criado ao implementar a classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>Writes the indent to the listener you create when you implement this class, and resets the <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Grava o recuo para o ouvinte criar durante a implementação dessa classe e redefine a propriedade <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> para <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>This method writes the indent and resets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Esse método grava o recuo e redefine o <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> propriedade <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>Call this method if <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> is <ph id="ph2">`true`</ph> when you are overriding the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">Chame este método se <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> é <ph id="ph2">`true`</ph> quando você está substituindo o <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>By default, this method uses blank spaces for indentation.</source>
          <target state="translated">Por padrão, esse método usa espaços em branco para recuo.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>The size of the indent is determined by the values of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> properties.</source>
          <target state="translated">O tamanho do recuo é determinado pelos valores de <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> property represents the number of times the indent of the size specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> property is applied.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> propriedade representa o número de vezes que o recuo do tamanho especificado pelo <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> propriedade é aplicada.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated">Este método é chamado pelo <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes a message, category name, or the value of an object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Grava uma mensagem, um nome de categoria ou o valor do método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> do objeto no ouvinte criado ao implementar a classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, seguido por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cujo nome de classe totalmente qualificado você deseja gravar.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Grava o valor do método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> do objeto no ouvinte criado ao implementar a classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, seguido por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">O terminador de linha típicas que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</source>
          <target state="translated">Quando substituído em uma classe derivada, grava uma mensagem no ouvinte criado na classe derivada, seguida por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">O terminador de linha típicas que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>When inheriting from this class, you must implement this method.</source>
          <target state="translated">Ao herdar desta classe, você deve implementar esse método.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>To support an indentation, call <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Para dar suporte a um recuo, chame <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> se <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> é <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>To indent the following line, you must reset <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Para recuar a linha a seguir, você deve redefinir <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> para <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> cujo nome de classe totalmente qualificado você deseja gravar.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Um nome de categoria usado para organizar a saída.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Grava um nome de categoria e o valor do método <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> do objeto no ouvinte criado ao implementar a classe <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, seguido por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">O terminador de linha típicas que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Uma mensagem a ser gravada.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Um nome de categoria usado para organizar a saída.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>Writes a category name and a message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">Grava um nome de categoria e uma mensagem no ouvinte criado ao implementar a classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>, seguido por um terminador de linha.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">O terminador de linha típicas que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>