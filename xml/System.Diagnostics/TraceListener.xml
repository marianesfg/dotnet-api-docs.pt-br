<Type Name="TraceListener" FullName="System.Diagnostics.TraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dab7ee5ede967670b880cdddd18a244dc904744" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51939532" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceListener : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceListener extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceListener&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceListener abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TraceListener = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0ce59-101">Fornece a classe base <see langword="abstract" /> para os ouvintes que monitoram o rastreamento e a saída da depuração.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ce59-101">Provides the <see langword="abstract" /> base class for the listeners who monitor trace and debug output.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-102">Para obter exemplos de como implementar uma <xref:System.Diagnostics.TraceListener>, consulte o <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> e o <xref:System.Diagnostics.EventLogTraceListener> classes.</span><span class="sxs-lookup"><span data-stu-id="0ce59-102">For examples of how to implement a <xref:System.Diagnostics.TraceListener>, see the <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> and the <xref:System.Diagnostics.EventLogTraceListener> classes.</span></span>  
  
 <span data-ttu-id="0ce59-103">Você deve habilitar o rastreamento ou depuração para usar um ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-103">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="0ce59-104">A sintaxe a seguir é específica do compilador.</span><span class="sxs-lookup"><span data-stu-id="0ce59-104">The following syntax is compiler specific.</span></span> <span data-ttu-id="0ce59-105">Se você usar compiladores diferentes de c# ou Visual Basic, consulte a documentação do seu compilador.</span><span class="sxs-lookup"><span data-stu-id="0ce59-105">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="0ce59-106">Para habilitar a depuração em c#, adicione a `/d:DEBUG` sinalizador à linha de comando do compilador quando você compila seu código, ou você pode adicionar `#define DEBUG` na parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="0ce59-106">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="0ce59-107">No Visual Basic, adicione o `/d:DEBUG=True` sinalizador à linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="0ce59-107">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="0ce59-108">Para habilitar o rastreamento em c#, adicione a `/d:TRACE` sinalizador à linha de comando do compilador quando você compila seu código, ou adiciona `#define TRACE` na parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="0ce59-108">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="0ce59-109">No Visual Basic, adicione o `/d:TRACE=True` sinalizador à linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="0ce59-109">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="0ce59-110">Para adicionar um ouvinte de rastreamento, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0ce59-110">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0ce59-111">Nesse arquivo, você pode adicionar um ouvinte, defina seu tipo e defina seu parâmetro, remover um ouvinte ou limpar todos os ouvintes anteriormente definidos pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0ce59-111">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="0ce59-112">O arquivo de configuração deve ser formatado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="0ce59-112">The configuration file should be formatted similar to the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="0ce59-113">Para obter mais informações sobre como usar arquivos de configuração para o rastreamento, consulte [ &lt;System. Diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span><span class="sxs-lookup"><span data-stu-id="0ce59-113">For more information on using configuration files for tracing, see [&lt;system.diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0ce59-114">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ce59-114">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0ce59-115">Herdar desta classe para implementar um ouvinte personalizado para o <see cref="T:System.Diagnostics.Debug" /> e <see cref="T:System.Diagnostics.Trace" /> classes.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0ce59-115">Inherit from this class to implement a custom listener for the <see cref="T:System.Diagnostics.Debug" /> and <see cref="T:System.Diagnostics.Trace" /> classes.</span>
        </span>
        <span data-ttu-id="0ce59-116">No mínimo, você deve implementar o <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> e <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0ce59-116">At a minimum, you must implement the <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> and <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> methods.</span>
        </span>
        <span data-ttu-id="0ce59-117">Além disso, você pode implementar o <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> e <see cref="M:System.Diagnostics.TraceListener.Flush" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0ce59-117">Additionally, you can implement the <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> and <see cref="M:System.Diagnostics.TraceListener.Flush" /> methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <related type="Article" href="https://msdn.microsoft.com/library/3f348f42-fa72-4ff2-aa1c-bb9eecad4bb2">
      <span data-ttu-id="0ce59-118">&lt;System. Diagnostics&gt; elemento</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ce59-118">&lt;system.diagnostics&gt; Element</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-119">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-119">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-120">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-120">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-121">A tabela a seguir mostra os valores de propriedade inicial para uma instância do <xref:System.Diagnostics.TraceListener>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-121">The following table shows initial property values for an instance of <xref:System.Diagnostics.TraceListener>.</span></span>  
  
|<span data-ttu-id="0ce59-122">Propriedade</span><span class="sxs-lookup"><span data-stu-id="0ce59-122">Property</span></span>|<span data-ttu-id="0ce59-123">Valor padrão</span><span class="sxs-lookup"><span data-stu-id="0ce59-123">Default Value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="0ce59-124">Nome</span><span class="sxs-lookup"><span data-stu-id="0ce59-124">Name</span></span>|<span data-ttu-id="0ce59-125">A cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="0ce59-125">The empty string ("").</span></span>|  
|<span data-ttu-id="0ce59-126">Recuar</span><span class="sxs-lookup"><span data-stu-id="0ce59-126">Indent</span></span>|<span data-ttu-id="0ce59-127">Zero.</span><span class="sxs-lookup"><span data-stu-id="0ce59-127">Zero.</span></span>|  
|<span data-ttu-id="0ce59-128">IndentSize</span><span class="sxs-lookup"><span data-stu-id="0ce59-128">IndentSize</span></span>|<span data-ttu-id="0ce59-129">Quatro espaços.</span><span class="sxs-lookup"><span data-stu-id="0ce59-129">Four spaces.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceListener : string -&gt; System.Diagnostics.TraceListener" Usage="new System.Diagnostics.TraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0ce59-130">O nome do <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-130">The name of the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-131">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TraceListener" /> usando o nome especificado como ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-131">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class using the specified name as the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceListener.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-132">Obtém os atributos do ouvinte de rastreamento personalizados definidos no arquivo de configuração de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-132">Gets the custom trace listener attributes defined in the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-133">Um <see cref="T:System.Collections.Specialized.StringDictionary" /> que contém os atributos personalizados para o ouvinte de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-133">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the custom attributes for the trace listener.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-134">Classes que herdam de <xref:System.Diagnostics.TraceListener> classe pode adicionar atributos personalizados, substituindo o <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> método e retornar uma matriz de cadeia de caracteres de nomes de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="0ce59-134">Classes that inherit from the <xref:System.Diagnostics.TraceListener> class can add custom attributes by overriding the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span> <span data-ttu-id="0ce59-135">O <xref:System.Diagnostics.TraceListener.Attributes%2A> propriedade identifica os atributos personalizados que são referenciados no arquivo de configuração do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="0ce59-135">The <xref:System.Diagnostics.TraceListener.Attributes%2A> property identifies the custom attributes that are referenced in the application's configuration file.</span></span> <span data-ttu-id="0ce59-136">Por exemplo, no seguinte trecho de arquivo de configuração o <xref:System.Diagnostics.DelimitedListTraceListener> "delimitador" do atributo personalizado é referenciado.</span><span class="sxs-lookup"><span data-stu-id="0ce59-136">For example, in the following configuration file excerpt the <xref:System.Diagnostics.DelimitedListTraceListener> custom attribute "delimiter" is referenced.</span></span> <span data-ttu-id="0ce59-137">Nesse caso, o <xref:System.Diagnostics.TraceListener.Attributes%2A> propriedade retorna um <xref:System.Collections.Specialized.StringDictionary> que contém a cadeia de caracteres "delimitador".</span><span class="sxs-lookup"><span data-stu-id="0ce59-137">In this case, the <xref:System.Diagnostics.TraceListener.Attributes%2A> property returns a <xref:System.Collections.Specialized.StringDictionary> containing the string "delimiter".</span></span>  
  
```xml  
<listeners>  
  <add name="delimitedListener"   
    type="System.Diagnostics.DelimitedListTraceListener"   
    delimiter=":"   
    initializeData="delimitedOutput.txt"   
    traceOutputOptions="ProcessId, DateTime" />  
  <remove name="Default" />  
</listeners>  
```  
  
 <span data-ttu-id="0ce59-138">Atributos personalizados não referenciados não são enumerados.</span><span class="sxs-lookup"><span data-stu-id="0ce59-138">Unreferenced custom attributes are not enumerated.</span></span>  <span data-ttu-id="0ce59-139">Para obter mais informações, consulte o método <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-139">For more information, see the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="traceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-140">Quando substituído em uma classe derivada, fecha o fluxo de saída para que ele não receba mais saídas de rastreamento ou depuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-140">When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-141">Use este método quando a saída vai para um arquivo, como o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-141">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span> <span data-ttu-id="0ce59-142">Após uma chamada para esse método, você deve reinicializar o objeto.</span><span class="sxs-lookup"><span data-stu-id="0ce59-142">After a call to this method, you must reinitialize the object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-143">Libera os recursos usados pelo <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-143">Releases the resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="traceListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-144">Libera todos os recursos usados pelo <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-144">Releases all resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-145">Chamando <xref:System.Diagnostics.TraceListener.Dispose%2A> permite que os recursos usados pelo <xref:System.Diagnostics.TraceListener> para ser realocados para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="0ce59-145">Calling <xref:System.Diagnostics.TraceListener.Dispose%2A> allows the resources used by the <xref:System.Diagnostics.TraceListener> to be reallocated for other purposes.</span></span> <span data-ttu-id="0ce59-146">Para obter mais informações sobre <xref:System.Diagnostics.TraceListener.Dispose%2A>, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="0ce59-146">For more information about <xref:System.Diagnostics.TraceListener.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="0ce59-147">Limpando recursos não gerenciados</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-147">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="traceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0ce59-148">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-148">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-149">Libera os recursos não gerenciados usados pelo <see cref="T:System.Diagnostics.TraceListener" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-149">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.TraceListener" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-150">Este método é chamado pelo método público <xref:System.Diagnostics.TraceListener.Dispose%2A> e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-150">This method is called by the public <xref:System.Diagnostics.TraceListener.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="0ce59-151">`Dispose` invoca o método <xref:System.Diagnostics.TraceListener.Dispose%2A> protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="0ce59-151">`Dispose` invokes the protected <xref:System.Diagnostics.TraceListener.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0ce59-152"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="0ce59-152"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0ce59-153">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Diagnostics.TraceListener> referências.</span><span class="sxs-lookup"><span data-stu-id="0ce59-153">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.TraceListener> references.</span></span> <span data-ttu-id="0ce59-154">Este método invoca o método `Dispose` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="0ce59-154">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ce59-155">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-155">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="0ce59-156">Ao substituir esse método, tenha cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-156">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="0ce59-157">Para obter mais informações sobre como implementar <see langword="Dispose" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-157">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="0ce59-158">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-158">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">
          <span data-ttu-id="0ce59-159">Como implementar um método Dispose</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-159">Implementing a Dispose method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="0ce59-160">Limpando recursos não gerenciados</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-160">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-161">Emite mensagens de erro para o ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-161">Emits error messages to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string -&gt; unit&#xA;override this.Fail : string -&gt; unit" Usage="traceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0ce59-162">Uma mensagem a ser emitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-162">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-163">Emite uma mensagem de erro para o ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-163">Emits an error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-164">O comportamento padrão é exibir a mensagem especificada em uma caixa de mensagem quando o aplicativo está em execução em um modo de interface do usuário e para o <xref:System.Diagnostics.TraceListener> instâncias em um <xref:System.Diagnostics.TraceListenerCollection> coleção.</span><span class="sxs-lookup"><span data-stu-id="0ce59-164">The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="0ce59-165">Por padrão, o <xref:System.Diagnostics.TraceListenerCollection> coleção tem uma instância de um <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-165">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0ce59-166">Você pode personalizar esse comportamento adicionando uma <xref:System.Diagnostics.TraceListener> a ou remover uma da coleção.</span><span class="sxs-lookup"><span data-stu-id="0ce59-166">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string * string -&gt; unit&#xA;override this.Fail : string * string -&gt; unit" Usage="traceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0ce59-167">Uma mensagem a ser emitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-167">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="0ce59-168">Uma mensagem detalhada a ser emitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-168">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-169">Emite uma mensagem de erro e uma mensagem de erro detalhada para o ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-169">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-170">O comportamento padrão é exibir a mensagem e a mensagem detalhada em uma caixa de mensagem quando o aplicativo está em execução em um modo de interface do usuário e para o <xref:System.Diagnostics.TraceListener> instâncias em um <xref:System.Diagnostics.TraceListenerCollection> coleção.</span><span class="sxs-lookup"><span data-stu-id="0ce59-170">The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="0ce59-171">Por padrão, o <xref:System.Diagnostics.TraceListenerCollection> coleção tem uma instância de um <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-171">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0ce59-172">Você pode personalizar esse comportamento adicionando uma <xref:System.Diagnostics.TraceListener> a ou remover uma da coleção.</span><span class="sxs-lookup"><span data-stu-id="0ce59-172">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceFilter Filter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As TraceFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceFilter ^ Filter { System::Diagnostics::TraceFilter ^ get(); void set(System::Diagnostics::TraceFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Diagnostics.TraceFilter with get, set" Usage="System.Diagnostics.TraceListener.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-173">Obtém e define o filtro de rastreamento para o ouvinte de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-173">Gets and sets the trace filter for the trace listener.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-174">Um objeto derivado da classe base <see cref="T:System.Diagnostics.TraceFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-174">An object derived from the <see cref="T:System.Diagnostics.TraceFilter" /> base class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-175">Um filtro de rastreamento pode ser adicionado a um ouvinte de rastreamento para fornecer uma camada de triagem além daquelas já fornecidas para a origem de rastreamento por comutadores.</span><span class="sxs-lookup"><span data-stu-id="0ce59-175">A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</span></span> <span data-ttu-id="0ce59-176">Por exemplo, o <xref:System.Diagnostics.EventTypeFilter> podem ser adicionados a um ouvinte de rastreamento para controlar os tipos de evento que são produzidas pelo ouvinte.</span><span class="sxs-lookup"><span data-stu-id="0ce59-176">For example, the <xref:System.Diagnostics.EventTypeFilter> can be added to a trace listener to control the event types that are output by the listener.</span></span>  <span data-ttu-id="0ce59-177">Os ouvintes que são chamados, porque os comutador critérios forem atendidos podem consultar seus filtros, se estiver presente, para determinar se um rastreamento deve ser enviada para a saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-177">Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce59-178">O exemplo de código a seguir mostra como usar o <xref:System.Diagnostics.TraceListener.Filter%2A> propriedade para adicionar um filtro de origem para um ouvinte de rastreamento do console.</span><span class="sxs-lookup"><span data-stu-id="0ce59-178">The following code example shows how to use the <xref:System.Diagnostics.TraceListener.Filter%2A> property to add a source filter to a console trace listener.</span></span> <span data-ttu-id="0ce59-179">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Diagnostics.TraceSource> classe.</span><span class="sxs-lookup"><span data-stu-id="0ce59-179">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="traceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-180">Quando substituído em uma classe derivada, libera o buffer de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-180">When overridden in a derived class, flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-181">Obtém os atributos personalizados com suporte no ouvinte de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-181">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ce59-182">Uma matriz de cadeia de caracteres que nomeia os atributos personalizados com suporte no ouvinte de rastreamento ou <see langword="null" /> se não houver nenhum atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-182">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-183">A implementação padrão para <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="0ce59-183">The default implementation for <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce59-184">O exemplo de código a seguir mostra uma substituição do <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> método para um ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-184">The following code sample shows an override of the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method for a custom trace listener.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ce59-185">Ao herdar do <see cref="T:System.Diagnostics.TraceListener" /> classe ou uma classe derivada, você pode substituir o <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> método para fornecer atributos personalizados para sua classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-185">When inheriting from the <see cref="T:System.Diagnostics.TraceListener" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> method to provide custom attributes for your class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.TraceListener.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-186">Obtém ou define o nível de recuo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-186">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-187">O nível de recuo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-187">The indent level.</span>
          </span>
          <span data-ttu-id="0ce59-188">O padrão é zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-188">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-189">O <xref:System.Diagnostics.TraceListener.IndentLevel%2A> propriedade representa o número de vezes que o recuo especificado pelo <xref:System.Diagnostics.TraceListener.IndentSize%2A> propriedade é aplicada.</span><span class="sxs-lookup"><span data-stu-id="0ce59-189">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times that the indent specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="0ce59-190">Essa propriedade é armazenada no thread/por-base por solicitação.</span><span class="sxs-lookup"><span data-stu-id="0ce59-190">This property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.TraceListener.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-191">Obtém ou define o número de espaços em um recuo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-191">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-192">O número de espaços em um recuo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-192">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="0ce59-193">O padrão é quatro espaços.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-193">The default is four spaces.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-194">A propriedade é armazenada no thread/por-base por solicitação.</span><span class="sxs-lookup"><span data-stu-id="0ce59-194">The property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0ce59-195">A operação de conjuntos falhou porque o valor e menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-195">Set operation failed because the value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public virtual bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-196">Obtém um valor que indica se o ouvinte de rastreamento é thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-196">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-197">
            <see langword="true" /> se o ouvinte de rastreamento for thread-safe; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-197">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0ce59-198">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-198">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-199">O valor de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> é usado para determinar se deve usar um bloqueio global ao escrever para o ouvinte.</span><span class="sxs-lookup"><span data-stu-id="0ce59-199">The value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is used to determine whether to use a global lock when writing to the listener.</span></span> <span data-ttu-id="0ce59-200">Se o valor de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> está `false`, o bloqueio global é usado, independentemente do valor de <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-200">If the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `false`, the global lock is used regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="0ce59-201">O bloqueio global não é usado somente se o valor de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> está `true` e o valor de <xref:System.Diagnostics.Trace.UseGlobalLock%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="0ce59-201">The global lock is not used only if the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true` and the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false`.</span></span> <span data-ttu-id="0ce59-202">O comportamento padrão é usar global sempre que for gravar para o ouvinte de bloqueio.</span><span class="sxs-lookup"><span data-stu-id="0ce59-202">The default behavior is to use the global lock whenever writing to the listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Diagnostics.TraceListener.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-203">Obtém ou define um nome para este <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-203">Gets or sets a name for this <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-204">Um nome para este <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-204">A name for this <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
          <span data-ttu-id="0ce59-205">O padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-205">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-206">O nome pode ser usado para organizar e acessar os ouvintes de um <xref:System.Diagnostics.TraceListenerCollection> coleção.</span><span class="sxs-lookup"><span data-stu-id="0ce59-206">The name can be used to organize and access listeners in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="NeedIndent">
      <MemberSignature Language="C#" Value="protected bool NeedIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedIndent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.NeedIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Property NeedIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool NeedIndent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NeedIndent : bool with get, set" Usage="System.Diagnostics.TraceListener.NeedIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-207">Obtém ou define um valor que indica se a saída deve ser recuada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-207">Gets or sets a value indicating whether to indent the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-208">
            <see langword="true" /> Se a saída deve ser recuada; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-208">
              <see langword="true" /> if the output should be indented; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-209">**Observação** o <xref:System.Diagnostics.TraceListener.WriteIndent%2A> método, chamado pela <xref:System.Diagnostics.DefaultTraceListener> e <xref:System.Diagnostics.TextWriterTraceListener> classes, conjuntos a <xref:System.Diagnostics.TraceListener.NeedIndent%2A> valor da propriedade `false` para impedir que mais tarde, recuos desnecessários.</span><span class="sxs-lookup"><span data-stu-id="0ce59-209">**Note** The <xref:System.Diagnostics.TraceListener.WriteIndent%2A> method, called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes, sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property value to `false` to prevent later, unnecessary indents.</span></span> <span data-ttu-id="0ce59-210">Você deve definir a <xref:System.Diagnostics.TraceListener.NeedIndent%2A> propriedade para `true` cada vez que você deseja recuar a saída de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-210">You must set the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true` each time you wish to indent trace output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-211">Grava dados de rastreamento na saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-211">Writes trace data to the listener specific output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="0ce59-212">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-212">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0ce59-213">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-213">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="0ce59-214">Um dos valores <see cref="T:System.Diagnostics.TraceEventType" /> que especifica o tipo do evento que causou o rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-214">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0ce59-215">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-215">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0ce59-216">Os dados de rastreamento a serem emitidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-216">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-217">Grava as informações de rastreamento, um objeto de dados e informações de evento para a saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-217">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ce59-218">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-218">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="0ce59-219">As gravações de implementação do padrão de `eventCache`, `source`, `eventType` e `id` parâmetros no cabeçalho e rodapé do rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-219">The default implementation writes the `eventCache`, `source`, `eventType` and `id` parameters in the header and footer of the trace.</span></span> <span data-ttu-id="0ce59-220">O `data` parâmetro é escrito como o corpo da mensagem de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-220">The `data` parameter is written as the body of the trace message.</span></span> <span data-ttu-id="0ce59-221">O `ToString` método do objeto de dados é usado para converter o objeto em um <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="0ce59-221">The `ToString` method of the data object is used to convert the object to a <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="0ce59-222">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-222">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0ce59-223">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-223">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="0ce59-224">Um dos valores <see cref="T:System.Diagnostics.TraceEventType" /> que especifica o tipo do evento que causou o rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-224">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0ce59-225">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-225">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0ce59-226">Uma matriz de objetos a ser emitidos como dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-226">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-227">Grava informações de rastreamento, uma matriz de objetos de dados e informações de evento na saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-227">Writes trace information, an array of data objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ce59-228">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-228">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="0ce59-229">A implementação padrão grava os valores da `source`, `eventType` e `id` parâmetros como um cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="0ce59-229">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="0ce59-230">Os objetos de dados são convertidos em cadeias de caracteres usando o `ToString` método de cada objeto.</span><span class="sxs-lookup"><span data-stu-id="0ce59-230">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="0ce59-231">O `eventCache` dados são gravados como um rodapé, a natureza dos dados de saída que está sendo dependente do valor da <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0ce59-231">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-232">Grava as informações de rastreamento e evento para a saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-232">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="0ce59-233">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-233">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0ce59-234">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-234">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="0ce59-235">Um dos valores <see cref="T:System.Diagnostics.TraceEventType" /> que especifica o tipo do evento que causou o rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-235">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0ce59-236">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-236">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-237">Grava as informações de rastreamento e evento para a saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-237">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ce59-238">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-238">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="0ce59-239">A implementação padrão grava os valores da `source`, `eventType` e `id` parâmetros como um cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="0ce59-239">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="0ce59-240">O `eventCache` dados são gravados como um rodapé, a natureza dos dados de saída que está sendo dependente do valor da <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0ce59-240">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="0ce59-241">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-241">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0ce59-242">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-242">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="0ce59-243">Um dos valores <see cref="T:System.Diagnostics.TraceEventType" /> que especifica o tipo do evento que causou o rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-243">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0ce59-244">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-244">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0ce59-245">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-245">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-246">Grava informações de rastreamento, uma mensagem e informações de evento na saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-246">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ce59-247">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-247">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="0ce59-248">A implementação padrão grava os valores da `source`, `eventType` e `id` seguido de parâmetros como um cabeçalho, o `message` dados.</span><span class="sxs-lookup"><span data-stu-id="0ce59-248">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header, followed by the `message` data.</span></span> <span data-ttu-id="0ce59-249">O `eventCache` dados são gravados como um rodapé, a natureza dos dados de saída que está sendo dependente do valor da <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0ce59-249">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="0ce59-250">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-250">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0ce59-251">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-251">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="0ce59-252">Um dos valores <see cref="T:System.Diagnostics.TraceEventType" /> que especifica o tipo do evento que causou o rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-252">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0ce59-253">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-253">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="0ce59-254">Uma cadeia de caracteres de formato que contém zero ou mais itens de formato, que correspondem aos objetos na matriz <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-254">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="0ce59-255">Uma matriz <see langword="object" /> que contém zero ou mais objetos a serem formatados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-255">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-256">Grava informações de rastreamento, uma matriz de objetos formatada e informações de evento na saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-256">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ce59-257">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-257">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="0ce59-258">A implementação padrão grava os valores da `source`, `eventType` e `id` parâmetros como um cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="0ce59-258">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="0ce59-259">O `args` matriz de objetos é convertido em uma cadeia de caracteres usando o <xref:System.String.Format%2A> método, passando a `format` cadeia de caracteres e `args` matriz para formatar a cadeia de caracteres como a parte de mensagem de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-259">The `args` object array is converted to a string using the <xref:System.String.Format%2A> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="0ce59-260">O `eventCache` dados são gravados como um rodapé, a natureza dos dados de saída que está sendo dependente do valor da <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0ce59-260">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceOutputOptions">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceOptions TraceOutputOptions" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceOutputOptions As TraceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceOptions TraceOutputOptions { System::Diagnostics::TraceOptions get(); void set(System::Diagnostics::TraceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.TraceOutputOptions : System.Diagnostics.TraceOptions with get, set" Usage="System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-261">Obtém ou define as opções de saída de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-261">Gets or sets the trace output options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0ce59-262">Um combinação bit a bit dos valores de enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-262">A bitwise combination of the enumeration values.</span>
          </span>
          <span data-ttu-id="0ce59-263">O padrão é <see cref="F:System.Diagnostics.TraceOptions.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-263">The default is <see cref="F:System.Diagnostics.TraceOptions.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-264">O <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade determina o conteúdo opcional de saída de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-264">The <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property determines the optional content of trace output.</span></span> <span data-ttu-id="0ce59-265">A propriedade pode ser definida no arquivo de configuração ou programaticamente durante a execução para incluir dados adicionais especificamente para uma seção de código.</span><span class="sxs-lookup"><span data-stu-id="0ce59-265">The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</span></span> <span data-ttu-id="0ce59-266">Por exemplo, você pode definir as <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade para o ouvinte de rastreamento do console para <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> para adicionar informações de pilha de chamadas para a saída de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-266">For example, you can set the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for the console trace listener to <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> to add call stack information to the trace output.</span></span>  
  
 <span data-ttu-id="0ce59-267">O <xref:System.Diagnostics.TraceOptions> enumeração não é usada pelas seguintes classes e métodos:</span><span class="sxs-lookup"><span data-stu-id="0ce59-267">The <xref:System.Diagnostics.TraceOptions> enumeration is not used by the following classes and methods:</span></span>  
  
-   <span data-ttu-id="0ce59-268">O <xref:System.Diagnostics.EventLogTraceListener> de classe, porque isso pode causar um grande volume de dados a serem gravados no log.</span><span class="sxs-lookup"><span data-stu-id="0ce59-268">The <xref:System.Diagnostics.EventLogTraceListener> class, because it can cause a large volume of data to be written to the log.</span></span>  
  
-   <span data-ttu-id="0ce59-269">O `Write` e `WriteLine` métodos das <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, e <xref:System.Diagnostics.TextWriterTraceListener> classes.</span><span class="sxs-lookup"><span data-stu-id="0ce59-269">The `Write` and `WriteLine` methods of the <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
-   <span data-ttu-id="0ce59-270">O <xref:System.Diagnostics.TraceListener.Write%2A> e <xref:System.Diagnostics.TraceListener.WriteLine%2A> métodos do <xref:System.Diagnostics.TraceListener> classe quando eles não sejam substituídos em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="0ce59-270">The <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods of the <xref:System.Diagnostics.TraceListener> class when they are not overridden in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ce59-271">O exemplo a seguir mostra a configuração do <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriedade para um ouvinte de rastreamento do console.</span><span class="sxs-lookup"><span data-stu-id="0ce59-271">The following example shows the setting of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for a console trace listener.</span></span> <span data-ttu-id="0ce59-272">O ouvinte de rastreamento do console é um dos ouvintes enumerados no <xref:System.Diagnostics.TraceSource.Listeners%2A> propriedade de uma origem de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="0ce59-272">The console trace listener is one of the listeners enumerated in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property of a trace source.</span></span> <span data-ttu-id="0ce59-273">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Diagnostics.TraceSource> classe.</span><span class="sxs-lookup"><span data-stu-id="0ce59-273">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#16)]
 [!code-vb[System.Diagnostics.TraceSource2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0ce59-274">A operação de conjuntos falhou porque o valor é inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-274">Set operation failed because the value is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public virtual void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="abstract member TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit&#xA;override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="traceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="0ce59-275">Um objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contém as informações atuais de ID de processo, ID de thread e rastreamento de pilha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-275">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="0ce59-276">Um nome usado para identificar a saída, geralmente o nome do aplicativo que gerou o evento de rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-276">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0ce59-277">Um identificador numérico do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-277">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0ce59-278">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-278">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="0ce59-279">Um objeto <see cref="T:System.Guid" /> que identifica uma atividade relacionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-279">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-280">Grava informações de rastreamento, uma mensagem, uma identidade de atividade relacionada e informações de evento na saída específica do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-280">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ce59-281">Esse método não se destina a ser chamado diretamente pelo código do aplicativo, mas por membros dos <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classes para gravar dados de rastreamento de saída.</span><span class="sxs-lookup"><span data-stu-id="0ce59-281">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="0ce59-282">O <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> método é usado para a correlação de rastreamentos relacionados.</span><span class="sxs-lookup"><span data-stu-id="0ce59-282">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="0ce59-283">O <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> chamadas de método de <xref:System.Diagnostics.TraceListener.TraceEvent%2A> método para processar a chamada, com o nível de eventType definido como <xref:System.Diagnostics.TraceEventType.Transfer> e o `relatedActivityId` <xref:System.Guid> como uma cadeia de caracteres acrescentada à mensagem.</span><span class="sxs-lookup"><span data-stu-id="0ce59-283">The <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method calls the <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method to process the call, with the eventType level set to <xref:System.Diagnostics.TraceEventType.Transfer> and the `relatedActivityId`<xref:System.Guid> as a string appended to the message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-284">Grava uma mensagem, um nome de categoria ou o valor do método <see cref="M:System.Object.ToString" /> do objeto no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-284">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="traceListener.Write o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="0ce59-285">Um <see cref="T:System.Object" /> cujo nome de classe totalmente qualificado você deseja gravar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-285">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-286">Grava o valor do método <see cref="M:System.Object.ToString" /> do objeto no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-286">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit" Usage="traceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0ce59-287">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-287">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-288">Quando substituído em uma classe derivada, grava a mensagem especificada no ouvinte criado na classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-288">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ce59-289">Ao herdar dessa classe, você deve implementar esse método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-289">When inheriting from this class, you must implement this method.</span>
            </span>
            <span data-ttu-id="0ce59-290">Para dar suporte a um recuo, você deve chamar <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> se <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> é <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-290">To support an indentation, you should call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />.</span>
            </span>
            <span data-ttu-id="0ce59-291">Se você precisar recuar a linha a seguir, você deve redefinir <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> para <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-291">If you need to indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj * string -&gt; unit&#xA;override this.Write : obj * string -&gt; unit" Usage="traceListener.Write (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="0ce59-292">Um <see cref="T:System.Object" /> cujo nome de classe totalmente qualificado você deseja gravar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-292">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0ce59-293">Um nome de categoria usado para organizar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-293">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-294">Grava um nome de categoria e o valor do método <see cref="M:System.Object.ToString" /> do objeto no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-294">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * string -&gt; unit&#xA;override this.Write : string * string -&gt; unit" Usage="traceListener.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0ce59-295">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-295">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0ce59-296">Um nome de categoria usado para organizar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-296">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-297">Grava um nome de categoria e uma mensagem no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-297">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteIndent">
      <MemberSignature Language="C#" Value="protected virtual void WriteIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteIndent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteIndent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteIndent();" />
      <MemberSignature Language="F#" Value="abstract member WriteIndent : unit -&gt; unit&#xA;override this.WriteIndent : unit -&gt; unit" Usage="traceListener.WriteIndent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-298">Grava o recuo para o ouvinte criar durante a implementação dessa classe e redefine a propriedade <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> para <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-298">Writes the indent to the listener you create when you implement this class, and resets the <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> property to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-299">Esse método grava o recuo e redefine o <xref:System.Diagnostics.TraceListener.NeedIndent%2A> propriedade para `false`.</span><span class="sxs-lookup"><span data-stu-id="0ce59-299">This method writes the indent and resets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `false`.</span></span> <span data-ttu-id="0ce59-300">Chame esse método se <xref:System.Diagnostics.TraceListener.NeedIndent%2A> está `true` quando você está substituindo as <xref:System.Diagnostics.TraceListener.Write%2A> e <xref:System.Diagnostics.TraceListener.WriteLine%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="0ce59-300">Call this method if <xref:System.Diagnostics.TraceListener.NeedIndent%2A> is `true` when you are overriding the <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods.</span></span> <span data-ttu-id="0ce59-301">Por padrão, esse método usa espaços em branco para recuo.</span><span class="sxs-lookup"><span data-stu-id="0ce59-301">By default, this method uses blank spaces for indentation.</span></span> <span data-ttu-id="0ce59-302">O tamanho do recuo é determinado pelos valores da <xref:System.Diagnostics.TraceListener.IndentSize%2A> e <xref:System.Diagnostics.TraceListener.IndentLevel%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="0ce59-302">The size of the indent is determined by the values of the <xref:System.Diagnostics.TraceListener.IndentSize%2A> and <xref:System.Diagnostics.TraceListener.IndentLevel%2A> properties.</span></span> <span data-ttu-id="0ce59-303">O <xref:System.Diagnostics.TraceListener.IndentLevel%2A> propriedade representa o número de vezes que o recuo de tamanho especificado pela <xref:System.Diagnostics.TraceListener.IndentSize%2A> propriedade é aplicada.</span><span class="sxs-lookup"><span data-stu-id="0ce59-303">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times the indent of the size specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="0ce59-304">Esse método é chamado o <xref:System.Diagnostics.DefaultTraceListener> e <xref:System.Diagnostics.TextWriterTraceListener> classes.</span><span class="sxs-lookup"><span data-stu-id="0ce59-304">This method is called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ce59-305">Grava uma mensagem, um nome de categoria ou o valor do método <see cref="M:System.Object.ToString" /> do objeto no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />, seguido por um terminador de linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-305">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="traceListener.WriteLine o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="0ce59-306">Um <see cref="T:System.Object" /> cujo nome de classe totalmente qualificado você deseja gravar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-306">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-307">Grava o valor do método <see cref="M:System.Object.ToString" /> do objeto no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />, seguido por um terminador de linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-307">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-308">O terminador de linha comum que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</span><span class="sxs-lookup"><span data-stu-id="0ce59-308">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public abstract void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit" Usage="traceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0ce59-309">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-309">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-310">Quando substituído em uma classe derivada, grava uma mensagem no ouvinte criado na classe derivada, seguida por um terminador de linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-310">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-311">O terminador de linha comum que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</span><span class="sxs-lookup"><span data-stu-id="0ce59-311">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0ce59-312">Ao herdar dessa classe, você deve implementar esse método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-312">When inheriting from this class, you must implement this method.</span>
            </span>
            <span data-ttu-id="0ce59-313">Para dar suporte a um recuo, chame <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> se <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> é <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-313">To support an indentation, call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />.</span>
            </span>
            <span data-ttu-id="0ce59-314">Para recuar a linha a seguir, você deve redefinir <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> para <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0ce59-314">To indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj * string -&gt; unit&#xA;override this.WriteLine : obj * string -&gt; unit" Usage="traceListener.WriteLine (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="0ce59-315">Um <see cref="T:System.Object" /> cujo nome de classe totalmente qualificado você deseja gravar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-315">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0ce59-316">Um nome de categoria usado para organizar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-316">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-317">Grava um nome de categoria e o valor do método <see cref="M:System.Object.ToString" /> do objeto no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />, seguido por um terminador de linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-317">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-318">O terminador de linha comum que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</span><span class="sxs-lookup"><span data-stu-id="0ce59-318">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * string -&gt; unit&#xA;override this.WriteLine : string * string -&gt; unit" Usage="traceListener.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0ce59-319">Uma mensagem a ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-319">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0ce59-320">Um nome de categoria usado para organizar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-320">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ce59-321">Grava um nome de categoria e uma mensagem no ouvinte criado ao implementar a classe <see cref="T:System.Diagnostics.TraceListener" />, seguido por um terminador de linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ce59-321">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ce59-322">O terminador de linha comum que você pode implementar é um retorno de carro seguido por uma alimentação de linha (\r\n).</span><span class="sxs-lookup"><span data-stu-id="0ce59-322">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>