<Type Name="StackTrace" FullName="System.Diagnostics.StackTrace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9a549114069879e60508cb07d9c0428fe7f2ab6" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53749759" /></Metadata><TypeSignature Language="C#" Value="public class StackTrace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StackTrace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackTrace" />
  <TypeSignature Language="VB.NET" Value="Public Class StackTrace" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackTrace" />
  <TypeSignature Language="F#" Value="type StackTrace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um rastreamento de pilha, que é uma coleção ordenada de um ou mais registros de ativação.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.StackTrace> as informações estarão mais informativas com configurações de build de depuração. Por padrão, compilações de depuração incluem símbolos de depuração, enquanto não builds de versão. Os símbolos de depuração contêm a maioria do arquivo, nome do método, número de linha e informações de coluna usado para construir <xref:System.Diagnostics.StackFrame> e <xref:System.Diagnostics.StackTrace> objetos.  
  
 <xref:System.Diagnostics.StackTrace> pode não relatar tantas chamadas de método conforme esperado, devido às transformações de código que ocorrem durante a otimização.  
  
   
  
## Examples  
 O aplicativo de console a seguir demonstra como criar um simples <xref:System.Diagnostics.StackTrace> e iterar por meio de seus quadros para obter informações de depuração e diagnóstico.  
  
 [!code-cpp[StackTraceSample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample1/CPP/stacktracesample1.cpp#1)]
 [!code-csharp[StackTraceSample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample1/CS/stacktracesample1.cs#1)]
 [!code-vb[StackTraceSample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample1/VB/stacktracesample1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">para a capacidade dos herdeiros acessar código não gerenciado. Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />. Esta classe não pode ser herdada pelo código parcialmente confiável.</permission>
    <altmember cref="P:System.Exception.StackTrace" />
    <altmember cref="P:System.Environment.StackTrace" />
    <altmember cref="P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> do quadro do chamador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.StackTrace> é criado com o thread do chamador atual e não contém o nome do arquivo, número de linha ou informações de coluna.  
  
 Use esse construtor padrão quando quiser que um rastreamento completo com apenas as informações de método de resumo sobre a pilha de chamadas.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe as chamadas de função e sobrenome em um rastreamento de pilha.  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace fNeedFileInfo" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fNeedFileInfo"><see langword="true" /> para capturar o nome de arquivo, o número de linha e o número de coluna; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> do quadro do chamador, capturando originalmente as informações de origem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.StackTrace> é criado com o thread do chamador atual.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra vários <xref:System.Diagnostics.StackTrace> métodos de construtor.  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Diagnostics.StackFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.StackFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (frame As StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Diagnostics::StackFrame ^ frame);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : System.Diagnostics.StackFrame -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace frame" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="System.Diagnostics.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">O quadro que o objeto <see cref="T:System.Diagnostics.StackTrace" /> deve conter.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> que contém um único quadro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você não quiser a sobrecarga de um rastreamento de pilha completo, use esse construtor.  
  
   
  
## Examples  
 As seguinte código exemplo gravações pilha informações de rastreamento para uma entrada de log de eventos.  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">O objeto de exceção do qual o rastreamento de pilha será construído.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> usando o objeto de exceção fornecido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.StackTrace> é criado com o thread do chamador atual e não contém o nome do arquivo, número de linha ou informações de coluna.  
  
 O rastreamento de pilha resultante descreve a pilha no momento da exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : int -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace skipFrames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipFrames">O número de quadros na pilha do qual o rastreamento será iniciado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> com base no quadro do chamador, ignorando o número de quadros especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.StackTrace> é criado com o thread do chamador atual e não contém o nome do arquivo, número de linha ou informações de coluna.  
  
 Se o número de quadros a serem ignorados é maior que ou igual ao número total de quadros na pilha de chamadas no momento a instância é criada, o <xref:System.Diagnostics.StackTrace> conterá sem quadros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="skipFrames" /> é negativo.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * int -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, skipFrames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">O objeto de exceção do qual o rastreamento de pilha será construído.</param>
        <param name="skipFrames">O número de quadros na pilha do qual o rastreamento será iniciado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" />, usando o objeto de exceção fornecido e ignorando o número especificado de quadros.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.StackTrace> não contém o nome do arquivo, número de linha ou informações de coluna.  
  
 O rastreamento de pilha resultante descreve a pilha no momento da exceção.  
  
 Se o número de quadros a serem ignorados é maior que ou igual ao número total de quadros na pilha de chamadas no momento a instância é criada, o <xref:System.Diagnostics.StackTrace> conterá sem quadros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="skipFrames" /> é negativo.</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : int * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (skipFrames, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipFrames">O número de quadros na pilha do qual o rastreamento será iniciado.</param>
        <param name="fNeedFileInfo"><see langword="true" /> para capturar o nome de arquivo, o número de linha e o número de coluna; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> com base no quadro do chamador, ignorando o número especificado de quadros e, opcionalmente, capturando informações de origem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o número de quadros a serem ignorados é maior que ou igual ao número total de quadros na pilha de chamadas no momento a instância é criada, o <xref:System.Diagnostics.StackTrace> conterá sem quadros.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra vários <xref:System.Diagnostics.StackTrace> métodos de construtor.  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="skipFrames" /> é negativo.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Thread targetThread, bool needFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetThread As Thread, needFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Threading::Thread ^ targetThread, bool needFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : System.Threading.Thread * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (targetThread, needFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use a constructor that does not require a Thread parameter.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetThread" Type="System.Threading.Thread" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetThread">O thread cujo rastreamento de pilha é solicitado.</param>
        <param name="needFileInfo"><see langword="true" /> para capturar o nome de arquivo, o número de linha e o número de coluna; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> para um thread específico, com a opção de capturar informações de origem.  
  
Não usar essa sobrecarga de construtor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Não use esse construtor. É obsoleto e não há nenhuma alternativa recomendada. Quando você suspende um thread, que não há como saber o que o código que ele está em execução e deadlocks pode ocorrer com muita facilidade. Por exemplo, se você suspender um thread enquanto mantém o bloqueio durante uma avaliação da permissão de segurança, outros threads no <xref:System.AppDomain> poderá ser bloqueado. Se você suspender um thread enquanto ele está em execução em um construtor de classe, outros threads no <xref:System.AppDomain> que tentar usar que a classe estão bloqueadas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">O thread <paramref name="targetThread" /> não está suspenso.</exception>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * int * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, skipFrames, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">O objeto de exceção do qual o rastreamento de pilha será construído.</param>
        <param name="skipFrames">O número de quadros na pilha do qual o rastreamento será iniciado.</param>
        <param name="fNeedFileInfo"><see langword="true" /> para capturar o nome de arquivo, o número de linha e o número de coluna; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" /> usando o objeto de exceção fornecido, ignorando o número especificado de quadros e, opcionalmente, capturando informações de origem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O rastreamento de pilha resultante descreve a pilha no momento da exceção.  
  
 Se o número de quadros a serem ignorados é maior que ou igual ao número total de quadros na pilha de chamadas no momento a instância é criada, o <xref:System.Diagnostics.StackTrace> conterá sem quadros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O parâmetro <paramref name="skipFrames" /> é negativo.</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, bool needFileInfo) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, bool fNeedFileInfo) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" FrameworkAlternate="netcore-2.0;netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="needFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      </Parameters>
      <Docs>
        <param name="e">O objeto de exceção do qual o rastreamento de pilha será construído.</param>
        <param name="fNeedFileInfo"><see langword="true" /> para capturar o nome de arquivo, o número de linha e o número de coluna; caso contrário, <see langword="false" />.</param>
        <param name="exception">O objeto de exceção do qual o rastreamento de pilha será construído.</param>
        <param name="needFileInfo"><see langword="true" /> para capturar o nome de arquivo, o número de linha e o número de coluna; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.StackTrace" />, usando o objeto de exceção fornecido e, opcionalmente, capturando as informações de origem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O rastreamento de pilha resultante descreve a pilha no momento da exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="e" /> é <see langword="null" />.</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="FrameCount">
      <MemberSignature Language="C#" Value="public virtual int FrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrameCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.StackTrace.FrameCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FrameCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FrameCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameCount : int" Usage="System.Diagnostics.StackTrace.FrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de quadros no rastreamento da pilha.</summary>
        <value>O número de quadros no rastreamento de pilha.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir exibe as chamadas de função e sobrenome em um rastreamento de pilha.  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrame (index As Integer) As StackFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::StackFrame ^ GetFrame(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetFrame : int -&gt; System.Diagnostics.StackFrame&#xA;override this.GetFrame : int -&gt; System.Diagnostics.StackFrame" Usage="stackTrace.GetFrame index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O índice do registro de ativação solicitado.</param>
        <summary>Obtém o registro de ativação especificado.</summary>
        <returns>O registro de ativação especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quadros de pilha são numerados começando em 0, o que é o último registro de ativação enviados por push.  
  
   
  
## Examples  
 O exemplo de código a seguir exibe as chamadas de função e sobrenome em um rastreamento de pilha.  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrames" />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame[] GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame[] GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrames () As StackFrame()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::StackFrame ^&gt; ^ GetFrames();" />
      <MemberSignature Language="F#" Value="abstract member GetFrames : unit -&gt; System.Diagnostics.StackFrame[]&#xA;override this.GetFrames : unit -&gt; System.Diagnostics.StackFrame[]" Usage="stackTrace.GetFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cópia de todos os quadros de pilha no rastreamento de pilha atual.</summary>
        <returns>Uma matriz do tipo <see cref="T:System.Diagnostics.StackFrame" /> que representa as chamadas de função no rastreamento de pilha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usar retornado <xref:System.Diagnostics.StackFrame> matriz para enumerar e examine a função chama no <xref:System.Diagnostics.StackTrace>. O comprimento da matriz retornada é igual ao <xref:System.Diagnostics.StackTrace.FrameCount%2A> valor da propriedade.  
  
 O <xref:System.Diagnostics.StackFrame> elementos da matriz são em ordem cronológica inversa. O <xref:System.Diagnostics.StackFrame> na matriz de índice 0 representa a chamada de função mais recente no rastreamento de pilha e o último quadro enviado por push para a pilha de chamadas. O <xref:System.Diagnostics.StackFrame> índice de matriz <xref:System.Diagnostics.StackTrace.FrameCount%2A> menos 1 representa a chamada de função mais antiga no rastreamento de pilha e o primeiro quadro enviado por push para a pilha de chamadas.  
  
 Use o <xref:System.Diagnostics.StackTrace.GetFrames%2A> método para obter todos os quadros de pilha em um rastreamento de pilha; use o <xref:System.Diagnostics.StackTrace.GetFrame%2A> método para obter um quadro de pilhas específico em um rastreamento de pilha. O <xref:System.Diagnostics.StackFrame> índices são ordenados tanto por dois métodos. Por exemplo, o <xref:System.Diagnostics.StackFrame> no índice 0 na matriz retornada por <xref:System.Diagnostics.StackTrace.GetFrames%2A> é equivalente ao <xref:System.Diagnostics.StackFrame> retornado pelo <xref:System.Diagnostics.StackTrace.GetFrame%2A> com um índice de entrada de 0.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra a enumerar os quadros em um <xref:System.Diagnostics.StackTrace>.  
  
 [!code-cpp[StackTraceSample2#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample2/CPP/stacktracesample2.cpp#3)]
 [!code-csharp[StackTraceSample2#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample2/CS/stacktracesample2.cs#3)]
 [!code-vb[StackTraceSample2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample2/VB/stacktracesample2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="METHODS_TO_SKIP">
      <MemberSignature Language="C#" Value="public const int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 METHODS_TO_SKIP = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberSignature Language="VB.NET" Value="Public Const METHODS_TO_SKIP As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="F#" Value="val mutable METHODS_TO_SKIP : int" Usage="System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Define o padrão para o número de métodos a ser omitido do rastreamento de pilha. Este campo é constante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão para o número de métodos a serem ignoradas no início do rastreamento de pilha. O valor dessa constante é 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stackTrace.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma representação legível do rastreamento de pilha.</summary>
        <returns>Uma representação legível do rastreamento de pilha.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 As seguinte código exemplo gravações pilha informações de rastreamento para uma entrada de log de eventos.  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>