<Type Name="StackFrameExtensions" FullName="System.Diagnostics.StackFrameExtensions">
  <TypeSignature Language="C#" Value="public static class StackFrameExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StackFrameExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackFrameExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module StackFrameExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackFrameExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1c14f-101">Fornece métodos de extensão para a classe <see cref="T:System.Diagnostics.StackFrame" />, que representa uma chamada de função na pilha de chamadas do thread atual.</span><span class="sxs-lookup"><span data-stu-id="1c14f-101">Provides extension methods for the <see cref="T:System.Diagnostics.StackFrame" /> class, which represents a function call on the call stack for the current thread.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNativeImageBase">
      <MemberSignature Language="C#" Value="public static IntPtr GetNativeImageBase (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetNativeImageBase(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IntPtr GetNativeImageBase(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame"><span data-ttu-id="1c14f-102">Um registro de ativação.</span><span class="sxs-lookup"><span data-stu-id="1c14f-102">A stack frame.</span></span></param>
        <summary><span data-ttu-id="1c14f-103">Retorna um ponteiro para o endereço básico da imagem nativa na qual esse registro de ativação está sendo executado.</span><span class="sxs-lookup"><span data-stu-id="1c14f-103">Returns a pointer to the base address of the native image that this stack frame is executing.</span></span></summary>
        <returns><span data-ttu-id="1c14f-104">Um ponteiro para o endereço básico da imagem nativa ou <see cref="F:System.IntPtr.Zero" /> se o destino for o .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1c14f-104">A pointer to the base address of the native image or <see cref="F:System.IntPtr.Zero" /> if you're targeting the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeIP">
      <MemberSignature Language="C#" Value="public static IntPtr GetNativeIP (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetNativeIP(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IntPtr GetNativeIP(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame"><span data-ttu-id="1c14f-105">Um registro de ativação.</span><span class="sxs-lookup"><span data-stu-id="1c14f-105">A stack frame.</span></span></param>
        <summary><span data-ttu-id="1c14f-106">Obtém um ponteiro de interface para o início do código nativo para o método que está sendo executado.</span><span class="sxs-lookup"><span data-stu-id="1c14f-106">Gets an interface pointer to the start of the native code for the method that is being executed.</span></span></summary>
        <returns><span data-ttu-id="1c14f-107">Um ponteiro de interface para o início do código nativo do método que está sendo executado ou <see cref="F:System.IntPtr.Zero" /> se o .NET Framework for o destino.</span><span class="sxs-lookup"><span data-stu-id="1c14f-107">An interface pointer to the start of the native code for the method that is being executed or <see cref="F:System.IntPtr.Zero" /> if you're targeting the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasILOffset">
      <MemberSignature Language="C#" Value="public static bool HasILOffset (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasILOffset(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasILOffset(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame"><span data-ttu-id="1c14f-108">Um registro de ativação.</span><span class="sxs-lookup"><span data-stu-id="1c14f-108">A stack frame.</span></span></param>
        <summary><span data-ttu-id="1c14f-109">Indica se um deslocamento do início do código do nível de integridade para o método que está sendo executado está disponível.</span><span class="sxs-lookup"><span data-stu-id="1c14f-109">Indicates whether an offset from the start of the IL code for the method that is executing is available.</span></span></summary>
        <returns>
          <span data-ttu-id="1c14f-110"><see langword="true" /> se a opção estiver disponível; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c14f-110"><see langword="true" /> if the offset is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrame.GetILOffset" />
      </Docs>
    </Member>
    <Member MemberName="HasMethod">
      <MemberSignature Language="C#" Value="public static bool HasMethod (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasMethod(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasMethod(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame"><span data-ttu-id="1c14f-111">Um registro de ativação.</span><span class="sxs-lookup"><span data-stu-id="1c14f-111">A stack frame.</span></span></param>
        <summary><span data-ttu-id="1c14f-112">Indica se as informações sobre o método no qual o quadro especificado está em execução estão disponíveis.</span><span class="sxs-lookup"><span data-stu-id="1c14f-112">Indicates whether information about the method in which the specified frame is executing is available.</span></span></summary>
        <returns>
          <span data-ttu-id="1c14f-113"><see langword="true" /> se as informações sobre o método no qual o quadro atual está em execução estão disponíveis; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c14f-113"><see langword="true" /> if information about the method in which the current frame is executing is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrame.GetMethod" />
      </Docs>
    </Member>
    <Member MemberName="HasNativeImage">
      <MemberSignature Language="C#" Value="public static bool HasNativeImage (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasNativeImage(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasNativeImage(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame"><span data-ttu-id="1c14f-114">Um registro de ativação.</span><span class="sxs-lookup"><span data-stu-id="1c14f-114">A stack frame.</span></span></param>
        <summary><span data-ttu-id="1c14f-115">Indica se a imagem nativa está disponível para o registro de ativação especificado.</span><span class="sxs-lookup"><span data-stu-id="1c14f-115">Indicates whether the native image is available for the specified stack frame.</span></span></summary>
        <returns>
          <span data-ttu-id="1c14f-116"><see langword="true" /> se uma imagem nativa estiver disponível para este registro de ativação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c14f-116"><see langword="true" /> if a native image is available for this stack frame; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)" />
      </Docs>
    </Member>
    <Member MemberName="HasSource">
      <MemberSignature Language="C#" Value="public static bool HasSource (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasSource(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasSource(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame"><span data-ttu-id="1c14f-117">Um registro de ativação.</span><span class="sxs-lookup"><span data-stu-id="1c14f-117">A stack frame.</span></span></param>
        <summary><span data-ttu-id="1c14f-118">Indica se o arquivo que contém o código que o registro de ativação especificado está executando está disponível.</span><span class="sxs-lookup"><span data-stu-id="1c14f-118">Indicates whether the file that contains the code that the specified stack frame is executing is available.</span></span></summary>
        <returns>
          <span data-ttu-id="1c14f-119"><see langword="true" /> se o código que o registro de ativação está executando está disponível; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c14f-119"><see langword="true" /> if the code that the specified stack frame is executing is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrame.GetFileName" />
        <altmember cref="M:System.Diagnostics.StackFrame.GetFileLineNumber" />
        <altmember cref="M:System.Diagnostics.StackFrame.GetFileColumnNumber" />
      </Docs>
    </Member>
  </Members>
</Type>