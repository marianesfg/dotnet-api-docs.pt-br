<Type Name="TextWriterTraceListener" FullName="System.Diagnostics.TextWriterTraceListener">
  <TypeSignature Language="C#" Value="public class TextWriterTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextWriterTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TextWriterTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriterTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="505f4-101">Direciona a saída do rastreamento ou da depuração para um <see cref="T:System.IO.TextWriter" /> ou um <see cref="T:System.IO.Stream" />, como <see cref="T:System.IO.FileStream" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-101">Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-102">O <xref:System.Diagnostics.TextWriterTraceListener> classe fornece a <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> propriedade para obter ou definir o gravador de texto que recebe o rastreamento ou a saída de depuração.</span><span class="sxs-lookup"><span data-stu-id="505f4-102">The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="505f4-103">Este tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="505f4-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="505f4-104">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="505f4-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="505f4-105">Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="505f4-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="505f4-106">Para descartar indiretamente dele, use uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="505f4-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="505f4-107">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico de interface.</span><span class="sxs-lookup"><span data-stu-id="505f4-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="505f4-108">Essa classe também fornece métodos para <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> o <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> para que ele não receberá mais rastreamento ou depuração da saída, a <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> o buffer de saída para o <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>e <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> uma mensagem para o <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span><span class="sxs-lookup"><span data-stu-id="505f4-108">This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span></span>  
  
 <span data-ttu-id="505f4-109">Você deve habilitar o rastreamento ou a depuração para usar um ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-109">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="505f4-110">A sintaxe a seguir é específico do compilador.</span><span class="sxs-lookup"><span data-stu-id="505f4-110">The following syntax is compiler specific.</span></span> <span data-ttu-id="505f4-111">Se você usar compiladores que não seja o c# ou Visual Basic, consulte a documentação para o compilador.</span><span class="sxs-lookup"><span data-stu-id="505f4-111">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="505f4-112">Para habilitar a depuração em c#, adicione o `/d:DEBUG` sinalizador para a linha de comando do compilador quando você compila o código, ou você pode adicionar `#define DEBUG` à parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="505f4-112">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="505f4-113">No Visual Basic, adicione o `/d:DEBUG=True` sinalizador para a linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="505f4-113">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="505f4-114">Para habilitar o rastreamento em c#, adicione o `/d:TRACE` sinalizador para a linha de comando do compilador quando você compila o código ou adiciona `#define TRACE` à parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="505f4-114">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="505f4-115">No Visual Basic, adicione o `/d:TRACE=True` sinalizador para a linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="505f4-115">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="505f4-116">Para adicionar um ouvinte de rastreamento, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="505f4-116">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="505f4-117">Nesse arquivo, você pode adicionar um ouvinte, defina seu tipo e definir seu parâmetro, remover um ouvinte ou limpar todos os ouvintes anteriormente definidos pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="505f4-117">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="505f4-118">O arquivo de configuração deve ser formatado como o exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="505f4-118">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"   
          type="System.Diagnostics.TextWriterTraceListener"   
          initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="505f4-119">Se for feita uma tentativa de gravar em um arquivo que está em uso ou indisponível, o nome de arquivo automaticamente é prefixado por um GUID.</span><span class="sxs-lookup"><span data-stu-id="505f4-119">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-120">O exemplo a seguir implementa uma instância do <xref:System.Diagnostics.TextWriterTraceListener> classe que usa um <xref:System.IO.StreamWriter> chamado `myOutputWriter` para gravar um arquivo chamado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="505f4-120">The following example implements an instance of the <xref:System.Diagnostics.TextWriterTraceListener> class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="505f4-121">Primeiro, o exemplo cria um arquivo de saída.</span><span class="sxs-lookup"><span data-stu-id="505f4-121">First the example creates a file for output.</span></span> <span data-ttu-id="505f4-122">Em seguida, ele cria o <xref:System.IO.StreamWriter> para o gravador de texto primeiro, atribui o arquivo de saída e adiciona-o para o <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="505f4-122">Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="505f4-123">Em seguida, o código gera uma linha de texto para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="505f4-123">Then, the code outputs one line of text to the file.</span></span> <span data-ttu-id="505f4-124">Por fim, o exemplo libera o buffer de saída.</span><span class="sxs-lookup"><span data-stu-id="505f4-124">Finally, the example flushes the output buffer.</span></span>  
  
 <span data-ttu-id="505f4-125">Depois de executar este exemplo, você pode abrir o `TestFile.txt` arquivo para ver a saída.</span><span class="sxs-lookup"><span data-stu-id="505f4-125">After running this sample, you can open the `TestFile.txt` file to see the output.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="505f4-126">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-126">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="505f4-127">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" /> com <see cref="T:System.IO.TextWriter" /> como o destinatário de saída.</span><span class="sxs-lookup"><span data-stu-id="505f4-127">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with <see cref="T:System.IO.TextWriter" /> as the output recipient.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-128">Este construtor usa o <xref:System.IO.TextWriter> fluxo como o destinatário do rastreamento ou a saída de depuração.</span><span class="sxs-lookup"><span data-stu-id="505f4-128">This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output.</span></span> <span data-ttu-id="505f4-129">Seu <xref:System.Diagnostics.TraceListener.Name%2A> propriedade é inicializada para uma cadeia de caracteres vazia ("", ou <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="505f4-129">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-130">O exemplo a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> construtor.</span><span class="sxs-lookup"><span data-stu-id="505f4-130">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor.</span></span> <span data-ttu-id="505f4-131">Ele define o <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> propriedade ao console de saída e, em seguida, adiciona o <xref:System.Diagnostics.TextWriterTraceListener> para o <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-131">It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-132">Ele grava uma mensagem em dois segmentos e, em seguida, fecha o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-132">It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="505f4-133">Um <see cref="T:System.IO.Stream" /> que representa o fluxo no qual o <see cref="T:System.Diagnostics.TextWriterTraceListener" /> é gravado.</span><span class="sxs-lookup"><span data-stu-id="505f4-133">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="505f4-134">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" />, usando o fluxo como o destinatário da saída de depuração e de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-134">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-135">Este construtor inicializa o <xref:System.Diagnostics.TraceListener.Name%2A> propriedade como uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="505f4-135">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-136">O exemplo de código a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> construtor e adiciona-o para o <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-136">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-137">O exemplo, em seguida, grava duas mensagens isso <xref:System.Diagnostics.TextWriterTraceListener>e grava uma mensagem a todos os <xref:System.Diagnostics.TraceListener> objetos no <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-137">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-138">Finalmente, ele libera e fecha o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-138">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstream.cs#1)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstream.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="505f4-139">O fluxo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-139">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="505f4-140">Um <see cref="T:System.IO.TextWriter" /> que recebe a saída do <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-140">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <summary><span data-ttu-id="505f4-141">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" />, usando o gravador especificado como destino da saída de depuração ou rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-141">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-142">Este construtor inicializa o <xref:System.Diagnostics.TraceListener.Name%2A> propriedade como uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="505f4-142">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-143">O exemplo de código a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="505f4-143">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor.</span></span> <span data-ttu-id="505f4-144">O exemplo cria um <xref:System.IO.StreamWriter>, depois referencia o <xref:System.IO.StreamWriter> quando ele cria o <xref:System.Diagnostics.TextWriterTraceListener>, que, em seguida, ele adiciona ao <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-144">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-145">O exemplo grava uma mensagem a todos os <xref:System.Diagnostics.TraceListener> objetos no <xref:System.Diagnostics.TraceListenerCollection>, em seguida, fecha isso <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-145">The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="505f4-146">O gravador está <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-146">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="505f4-147">O nome do arquivo no qual o <see cref="T:System.Diagnostics.TextWriterTraceListener" /> é gravado.</span><span class="sxs-lookup"><span data-stu-id="505f4-147">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="505f4-148">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" /> usando o arquivo como destinatário da saída da depuração e do rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-148">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-149">Este construtor inicializa o <xref:System.Diagnostics.TraceListener.Name%2A> propriedade como uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="505f4-149">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-150">O exemplo de código a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> construtor, em seguida, adiciona-o para o <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-150">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-151">O exemplo grava duas mensagens isso <xref:System.Diagnostics.TextWriterTraceListener>, em seguida, grava uma mensagem a todos os <xref:System.Diagnostics.TraceListener> objetos no <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-151">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-152">Finalmente, ele libera e fecha o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-152">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstring.cs#3)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstring.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="505f4-153">O arquivo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-153">The file is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="505f4-154">Um <see cref="T:System.IO.Stream" /> que representa o fluxo no qual o <see cref="T:System.Diagnostics.TextWriterTraceListener" /> é gravado.</span><span class="sxs-lookup"><span data-stu-id="505f4-154">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="505f4-155">O nome da nova instância.</span><span class="sxs-lookup"><span data-stu-id="505f4-155">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="505f4-156">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" /> com o nome especificado, usando o fluxo como o destinatário da saída de depuração e rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-156">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-157">Este construtor inicializa o <xref:System.Diagnostics.TraceListener.Name%2A> propriedade para o `name` parâmetro ou uma cadeia de caracteres vazia (""), se o `name` parâmetro é `null`.</span><span class="sxs-lookup"><span data-stu-id="505f4-157">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-158">O exemplo de código a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> construtor e adiciona-o para o <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-158">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-159">O exemplo, em seguida, grava duas mensagens isso <xref:System.Diagnostics.TextWriterTraceListener> e grava uma mensagem a todos os <xref:System.Diagnostics.TraceListener> objetos no <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-159">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-160">Finalmente, ele libera e fecha o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-160">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstreamname.cs#2)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstreamname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="505f4-161">O fluxo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-161">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="505f4-162">Um <see cref="T:System.IO.TextWriter" /> que recebe a saída do <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-162">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <param name="name"><span data-ttu-id="505f4-163">O nome da nova instância.</span><span class="sxs-lookup"><span data-stu-id="505f4-163">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="505f4-164">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" /> com o nome especificado, usando o gravador especificado como o destinatário da saída de rastreamento ou depuração.</span><span class="sxs-lookup"><span data-stu-id="505f4-164">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="505f4-165">O exemplo de código a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="505f4-165">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor.</span></span> <span data-ttu-id="505f4-166">O exemplo cria um <xref:System.IO.StreamWriter>, depois referencia o <xref:System.IO.StreamWriter> quando ele cria o <xref:System.Diagnostics.TextWriterTraceListener>, que, em seguida, ele adiciona ao <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-166">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-167">O exemplo grava duas mensagens isso <xref:System.Diagnostics.TextWriterTraceListener>, em seguida, grava uma mensagem a todos os <xref:System.Diagnostics.TraceListener> objetos no <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-167">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-168">Finalmente, ele libera e fecha o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-168">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconwritername.cs#5)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconwritername.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="505f4-169">O gravador está <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-169">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="505f4-170">O nome do arquivo no qual o <see cref="T:System.Diagnostics.TextWriterTraceListener" /> é gravado.</span><span class="sxs-lookup"><span data-stu-id="505f4-170">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="505f4-171">O nome da nova instância.</span><span class="sxs-lookup"><span data-stu-id="505f4-171">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="505f4-172">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.TextWriterTraceListener" /> com o nome especificado, usando o arquivo como o destinatário da saída de depuração e de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-172">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-173">Este construtor inicializa o <xref:System.Diagnostics.TraceListener.Name%2A> propriedade para o `name` parâmetro ou uma cadeia de caracteres vazia (""), se o `name` parâmetro é `null`.</span><span class="sxs-lookup"><span data-stu-id="505f4-173">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-174">O exemplo de código a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> usando o <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> construtor, em seguida, adiciona-o para o <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-174">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-175">O exemplo grava duas mensagens isso <xref:System.Diagnostics.TextWriterTraceListener>, em seguida, grava uma mensagem a todos os <xref:System.Diagnostics.TraceListener> objetos no <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="505f4-175">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="505f4-176">Finalmente, ele libera e fecha o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="505f4-176">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstringname.cs#4)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstringname.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="505f4-177">O fluxo é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-177">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="505f4-178">Fecha o <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> para que ele não receba mais a saída de rastreamento ou de depuração.</span><span class="sxs-lookup"><span data-stu-id="505f4-178">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-179">Chamando um <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> ou <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> método depois de chamar <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> o fluxo é reaberto automaticamente.</span><span class="sxs-lookup"><span data-stu-id="505f4-179">Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="505f4-180">O exemplo a seguir implementa um <xref:System.Diagnostics.TextWriterTraceListener> chamado `myTextListener`, que usa um <xref:System.IO.StreamWriter> chamado `myOutputWriter` para gravar um arquivo chamado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="505f4-180">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="505f4-181">O exemplo cria o gravador de arquivo, o fluxo e o texto, grava uma linha de texto para o arquivo e, em seguida, libera e fecha o fluxo.</span><span class="sxs-lookup"><span data-stu-id="505f4-181">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="505f4-182"><see langword="true" /> para liberar recursos gerenciados; se <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> não terá nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="505f4-182"><see langword="true" /> to release managed resources; if <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> has no effect.</span></span></param>
        <summary><span data-ttu-id="505f4-183">Descarta este objeto <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-183">Disposes this <see cref="T:System.Diagnostics.TextWriterTraceListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="505f4-184">Use o <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> método o <xref:System.Diagnostics.TextWriterTraceListener> classe para liberar os recursos gerenciados de um <xref:System.Diagnostics.TextWriterTraceListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="505f4-184">Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="505f4-185">Libera o buffer de saída para o <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span><span class="sxs-lookup"><span data-stu-id="505f4-185">Flushes the output buffer for the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="505f4-186">O exemplo a seguir implementa um <xref:System.Diagnostics.TextWriterTraceListener> chamado `myTextListener`, que usa um <xref:System.IO.StreamWriter> chamado `myOutputWriter` para gravar um arquivo chamado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="505f4-186">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="505f4-187">O exemplo cria o gravador de arquivo, o fluxo e o texto, grava uma linha de texto para o arquivo e, em seguida, libera e fecha o fluxo.</span><span class="sxs-lookup"><span data-stu-id="505f4-187">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="505f4-188">Uma mensagem a ser gravada.</span><span class="sxs-lookup"><span data-stu-id="505f4-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="505f4-189">Grava uma mensagem no <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> desta instância.</span><span class="sxs-lookup"><span data-stu-id="505f4-189">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="505f4-190">O exemplo a seguir implementa um <xref:System.Diagnostics.TextWriterTraceListener> chamado `myWriter` para gravar a tela do console.</span><span class="sxs-lookup"><span data-stu-id="505f4-190">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="505f4-191">O exemplo grava duas linhas para a tela do console.</span><span class="sxs-lookup"><span data-stu-id="505f4-191">The example writes two lines to the console screen.</span></span> <span data-ttu-id="505f4-192">Observe que a segunda gravação aparece na mesma linha como a primeira gravação.</span><span class="sxs-lookup"><span data-stu-id="505f4-192">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="505f4-193">O exemplo, em seguida, libera e fecha o fluxo.</span><span class="sxs-lookup"><span data-stu-id="505f4-193">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="505f4-194">Uma mensagem a ser gravada.</span><span class="sxs-lookup"><span data-stu-id="505f4-194">A message to write.</span></span></param>
        <summary><span data-ttu-id="505f4-195">Grava uma mensagem no <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> desta instância seguido por um terminador de linha.</span><span class="sxs-lookup"><span data-stu-id="505f4-195">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> followed by a line terminator.</span></span> <span data-ttu-id="505f4-196">O terminador de linha padrão é um retorno de carro seguido por uma alimentação de linha (\r\n).</span><span class="sxs-lookup"><span data-stu-id="505f4-196">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="505f4-197">O exemplo a seguir implementa um <xref:System.Diagnostics.TextWriterTraceListener> chamado `myWriter` para gravar a tela do console.</span><span class="sxs-lookup"><span data-stu-id="505f4-197">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="505f4-198">O exemplo grava duas linhas para a tela do console.</span><span class="sxs-lookup"><span data-stu-id="505f4-198">The example writes two lines to the console screen.</span></span> <span data-ttu-id="505f4-199">Observe que a segunda gravação aparece na mesma linha como a primeira gravação.</span><span class="sxs-lookup"><span data-stu-id="505f4-199">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="505f4-200">O exemplo, em seguida, libera e fecha o fluxo.</span><span class="sxs-lookup"><span data-stu-id="505f4-200">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="505f4-201">Obtém ou define o text writer que recebe a saída do rastreamento ou da depuração.</span><span class="sxs-lookup"><span data-stu-id="505f4-201">Gets or sets the text writer that receives the tracing or debugging output.</span></span></summary>
        <value><span data-ttu-id="505f4-202">Um <see cref="T:System.IO.TextWriter" /> que representa o gravador que recebe a saída do rastreamento ou da depuração.</span><span class="sxs-lookup"><span data-stu-id="505f4-202">A <see cref="T:System.IO.TextWriter" /> that represents the writer that receives the tracing or debugging output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="505f4-203">O exemplo a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> que grava a tela do console.</span><span class="sxs-lookup"><span data-stu-id="505f4-203">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen.</span></span> <span data-ttu-id="505f4-204">Em seguida, o código adiciona o novo ouvinte de rastreamento para o <xref:System.Diagnostics.Trace.Listeners%2A> na classe de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="505f4-204">Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>