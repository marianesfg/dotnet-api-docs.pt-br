<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ac9715659132f13505076f7fc97ce44d2fc96ad" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36743645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a performance object, which defines a category of performance counters.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Criar ou excluir um contador de desempenho requer sincronização de código subjacente usando um mutex nomeado. Se um aplicativo altamente privilegiado bloqueia o mutex nomeado, tenta criar ou excluir um contador de desempenho faz com que o aplicativo pare de responder até que o bloqueio seja liberado. Para evitar esse problema, conceda nunca <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permissão para código não confiável. Além disso, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permissão permite que outras permissões para ser ignorada potencialmente e só devem ser concedida para código altamente confiável.  
  
 O <xref:System.Diagnostics.PerformanceCounterCategory> da instância <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriedade é exibida no campo objeto de desempenho da caixa de diálogo Adicionar contador do aplicativo do Visualizador de desempenho.  
  
 O <xref:System.Diagnostics.PerformanceCounterCategory> classe fornece vários métodos para interagir com os contadores e categorias no computador. O <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> métodos permitem que você defina categorias personalizadas. O <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> método fornece uma maneira de remover categorias do computador. O <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> método permite que você exiba a lista de categorias, enquanto <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> recupera todos os dados de contador e instância associados a uma única categoria.  
  
 Um contador de desempenho publica dados de desempenho sobre um aplicativo. As categorias incluem componentes físicos (como processadores, discos e memória) e objetos do sistema (por exemplo, processos e threads). Contadores do sistema que estão relacionadas ao mesmo objeto de desempenho são agrupadas em uma categoria que indica o foco comuns. Quando você cria uma instância do <xref:System.Diagnostics.PerformanceCounter> classe, você primeiro indicar a categoria à qual o componente irá interagir e, em seguida, escolha um contador dessa categoria.  
  
 Por exemplo, uma categoria de contador do Windows é a categoria de memória. Contadores do sistema dessa categoria rastreiam dados de memória, como o número de bytes disponíveis e o número de bytes armazenados em cache. Se você quiser trabalhar com os bytes armazenados em cache em seu aplicativo, você precisará criar uma instância do <xref:System.Diagnostics.PerformanceCounter> componente, conecte-se a categoria de memória e, em seguida, selecione o contador apropriado (nesse caso, os Bytes armazenados em cache) dessa categoria.  
  
 Embora o sistema torna muitos mais categorias de contadores disponíveis, as categorias que você provavelmente irá interagir com mais frequência são as categorias de Cache, memória, objetos, PhysicalDisk, processo, processador, servidor, sistema e Thread.  
  
> [!IMPORTANT]
>  O <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> método o <xref:System.Diagnostics.PerformanceCounter> classe liberará o contador e, se a opção de reutilização é selecionada para essa categoria, a instância do contador será reutilizada. Isso pode causar uma condição de corrida se outro processo ou até mesmo outra parte do código está tentando gravar a instância do contador.  
  
> [!NOTE]
>  É altamente recomendável que as novas categorias de contador de desempenho ser criado durante a instalação do aplicativo, não durante a execução do aplicativo. Isso permite que o tempo para o sistema operacional atualizar sua lista de categorias de contador de desempenho registrados. Se a lista não tenha sido atualizada, a tentativa de usar a categoria falhará.  
  
> [!NOTE]
>  Categorias de contador de desempenho instaladas com o [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] usar memória compartilhada separada, com cada categoria de contador de desempenho com sua própria memória. Você pode especificar o tamanho da memória compartilhada separado, criando um DWORD chamado FileMappingSize na chave do registro HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nome da categoria >* \ Desempenho. O valor de FileMappingSize é definido como o tamanho de memória compartilhada da categoria. O tamanho padrão é 131072 decimal. Se o valor de FileMappingSize não estiver presente, o `fileMappingSize` atributo de valor para o `performanceCounters` elemento especificado no arquivo Machine. config é usado, causando uma sobrecarga adicional para o processamento do arquivo de configuração. Você pode obter uma melhoria de desempenho de inicialização do aplicativo, definindo o tamanho de arquivo de mapeamento no registro. Para obter mais informações sobre o tamanho de arquivo de mapeamento, consulte [ &lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounter> e sua <xref:System.Diagnostics.PerformanceCounterCategory> existe no computador local ou em outro computador. Se esses objetos não existirem no computador local, o exemplo, opcionalmente, cria-los. Ele usa o <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> método para determinar se o <xref:System.Diagnostics.PerformanceCounterCategory> existe.  Se o <xref:System.Diagnostics.PerformanceCounterCategory> não existir e nenhum nome de contador for especificado ou se o computador for um computador remoto, o exemplo será encerrado.  
  
 Se um <xref:System.Diagnostics.PerformanceCounter> nome for fornecido, o exemplo usa o <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> método e exibe o resultado para o usuário. Se o <xref:System.Diagnostics.PerformanceCounter> não existir, o usuário pode excluir e recriar o <xref:System.Diagnostics.PerformanceCounterCategory> com o novo <xref:System.Diagnostics.PerformanceCounter>. Se o usuário faz isso, a categoria é excluída usando o <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> método.  
  
 Se solicitado, o exemplo cria o novo <xref:System.Diagnostics.PerformanceCounterCategory> e <xref:System.Diagnostics.PerformanceCounter> usando o <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> método. Se for especificado um nome de instância, o exemplo usa o <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> método e exibe o resultado.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> class, leaves the <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property empty, and sets the <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> property to the local computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriedade deve ser definida antes de associá-isso <xref:System.Diagnostics.PerformanceCounterCategory> instância com um objeto de desempenho no servidor. Caso contrário, uma exceção será gerada.  
  
   
  
## Examples  
 O exemplo de código a seguir aceita um <xref:System.Diagnostics.PerformanceCounterCategory> nome e um nome de computador na linha de comando.  Ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> usando a sobrecarga de construtor apropriada para o número de parâmetros fornecidos, em seguida, exibe suas propriedades.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category, or performance object, with which to associate this <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> instance.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> class, sets the <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property to the specified value, and sets the <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> property to the local computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir aceita um <xref:System.Diagnostics.PerformanceCounterCategory> nome e um nome de computador na linha de comando. Ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> usando a sobrecarga de construtor apropriado para o número de parâmetros fornecidos, em seguida, exibe suas propriedades.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> is an empty string ("").</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> is <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as informações de categoria, como o nome da categoria. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category, or performance object, with which to associate this <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> instance.</param>
        <param name="machineName">The computer on which the performance counter category and its associated counters exist.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> class and sets the <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> and <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> properties to the specified values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir aceita um <xref:System.Diagnostics.PerformanceCounterCategory> nome e um nome de computador na linha de comando. Ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> usando a sobrecarga de construtor apropriado para o número de parâmetros fornecidos, em seguida, exibe suas propriedades.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> is an empty string ("").  -or-  The <paramref name="machineName" /> syntax is invalid.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> is <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as informações de categoria, como o nome do computador e categoria. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the category's help text.</summary>
        <value>Uma descrição do objeto de desempenho que mede a essa categoria.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Diagnostics.PerformanceCounterCategory> com o <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Solicita ao usuário para o <xref:System.Diagnostics.PerformanceCounterCategory> e nomes de computador, em seguida, define o <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriedades dos valores inseridos. Em seguida, exibe os valores da <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, e <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propriedades ou exibe uma mensagem de erro se o <xref:System.Diagnostics.PerformanceCounterCategory> não pode ser acessado.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property is <see langword="null" />. The category name must be set before getting the category help.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the performance object that defines this category.</summary>
        <value>O nome da categoria de contador de desempenho ou de objeto de desempenho, a ser associada a esta instância <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Diagnostics.PerformanceCounterCategory> com o <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Solicita ao usuário para o <xref:System.Diagnostics.PerformanceCounterCategory> e nomes de computador, em seguida, define o <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriedades dos valores inseridos. Em seguida, exibe os valores da <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, e <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propriedades ou exibe uma mensagem de erro se o <xref:System.Diagnostics.PerformanceCounterCategory> não pode ser acessado.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> is an empty string ("").</exception>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> is <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the performance counter category type.</summary>
        <value>Um dos valores de <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> propriedade indica se o <xref:System.Diagnostics.PerformanceCounterCategory> objeto pode ter várias instâncias. Os valores possíveis são <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, ou <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>.  
  
 Há dois tipos de categorias de contador de desempenho: instância única e várias instâncias. Por padrão, uma categoria é uma instância única quando ele é criado e torna-se várias instâncias quando é adicionada a outra instância. Categorias são criadas quando um aplicativo está configurado e instâncias são adicionadas em tempo de execução. Nas versões do .NET Framework 1.0 e 1.1, não é necessário saber se uma categoria de contador de desempenho tem várias instâncias ou de instância única. No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], o <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeração é usada para indicar se um contador de desempenho pode ter várias instâncias.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determines whether a specified counter is registered to a particular category.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">The name of the performance counter to look for.</param>
        <summary>Determines whether the specified counter is registered to this category, which is indicated by the <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> and <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> properties.</summary>
        <returns>
          <see langword="true" /> if the counter is registered to the category that is specified by the <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> and <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> properties; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve definir o <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriedade antes de chamar esse método. Caso contrário, uma exceção será gerada.  
  
 Se você não tiver configurado o <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriedade, esse método usa o computador local (".").  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounter> existe. Obtém um nome de categoria, o nome do contador e o nome do computador da linha de comando, se eles forem fornecidos. Ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> usando apropriada do objeto <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. Ele usa o <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> método para determinar se especificado <xref:System.Diagnostics.PerformanceCounter> existe e informa ao usuário.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property has not been set.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">The name of the performance counter to look for.</param>
        <param name="categoryName">The name of the performance counter category, or performance object, with which the specified performance counter is associated.</param>
        <summary>Determines whether the specified counter is registered to the specified category on the local computer.</summary>
        <returns>
          <see langword="true" />, if the counter is registered to the specified category on the local computer; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounter> existe. Obtém um nome de categoria, o nome do contador e o nome do computador da linha de comando, se eles forem fornecidos. Ele usa as sobrecargas estáticas do <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> método para determinar se especificado <xref:System.Diagnostics.PerformanceCounter> nome existe no <xref:System.Diagnostics.PerformanceCounterCategory>. A sobrecarga é selecionada com base em se um nome de computador é fornecido.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> is <see langword="null" />.  -or-  The <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> is an empty string ("").</exception>
        <exception cref="T:System.InvalidOperationException">The category name does not exist.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">The name of the performance counter to look for.</param>
        <param name="categoryName">The name of the performance counter category, or performance object, with which the specified performance counter is associated.</param>
        <param name="machineName">The name of the computer on which the performance counter category and its associated counters exist.</param>
        <summary>Determines whether the specified counter is registered to the specified category on a remote computer.</summary>
        <returns>
          <see langword="true" />, if the counter is registered to the specified category on the specified computer; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounter> existe. Obtém um nome de categoria, o nome do contador e o nome do computador da linha de comando, se eles forem fornecidos. Ele usa as sobrecargas estáticas do <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> método para determinar se especificado <xref:System.Diagnostics.PerformanceCounter> nome existe no <xref:System.Diagnostics.PerformanceCounterCategory>. A sobrecarga é selecionada com base em se um nome de computador é fornecido.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> is <see langword="null" />.  -or-  The <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> is an empty string ("").  -or-  The <paramref name="machineName" /> is invalid.</exception>
        <exception cref="T:System.InvalidOperationException">The category name does not exist.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registers a custom performance counter category and one or more counters with the system.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the custom performance counter category to create and register with the system.</param>
        <param name="categoryHelp">A description of the custom category.</param>
        <param name="counterData">A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> that specifies the counters to create as part of the new category.</param>
        <summary>Registers the custom performance counter category containing the specified counters on the local computer.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> that is associated with the new custom category, or performance object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounterCategory> objeto chamado "orders" existe. Se não, ele cria o <xref:System.Diagnostics.PerformanceCounterCategory> objeto usando um <xref:System.Diagnostics.CounterCreationDataCollection> objeto que contém dois contadores de desempenho.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A counter name that is specified within the <paramref name="counterData" /> collection is <see langword="null" /> or an empty string ("").  -or-  A counter that is specified within the <paramref name="counterData" /> collection already exists.  -or-  The <paramref name="counterName" /> parameter has invalid syntax. It might contain backslash characters ("\\") or have length greater than 80 characters.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The category already exists on the local computer.  -or-  The layout of the <paramref name="counterData" /> collection is incorrect for base counters. A counter of type <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> or <see langword="SampleCounter" /> has to be immediately followed by one of the base counter types (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" />, or <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para executar tarefas administrativas em categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the custom performance counter category to create and register with the system.</param>
        <param name="categoryHelp">A description of the custom category.</param>
        <param name="categoryType">One of the <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> values.</param>
        <param name="counterData">A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> that specifies the counters to create as part of the new category.</param>
        <summary>Registers the custom performance counter category containing the specified counters on the local computer.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> that is associated with the new custom category, or performance object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `categoryType` parâmetro especifica se a categoria do contador de desempenho é uma instância única ou várias instâncias. Por padrão, uma categoria é uma instância única quando ele é criado e torna-se várias instâncias quando é adicionada a outra instância. Categorias são criadas quando um aplicativo está configurado e instâncias são adicionadas em tempo de execução. Nas versões do .NET Framework 1.0 e 1.1, não é necessário saber se uma categoria de contador de desempenho tem várias instâncias ou de instância única. No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], o <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeração é usada para indicar se um contador de desempenho pode ter várias instâncias.  
  
 Categorias de contador de desempenho instaladas com o [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] usar memória compartilhada separada, com cada categoria de contador de desempenho com sua própria memória.  Você pode especificar o tamanho da memória compartilhada separado, criando um DWORD chamado FileMappingSize na chave do registro HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nome da categoria >* \ Desempenho. O valor de FileMappingSize é definido como o tamanho de memória compartilhada da categoria. O tamanho padrão é 131072 decimal. Se o valor de FileMappingSize não estiver presente, o `fileMappingSize` atributo de valor para o `performanceCounters` elemento especificado no arquivo Machine. config é usado, causando uma sobrecarga adicional para o processamento do arquivo de configuração. Você pode obter uma melhoria de desempenho de inicialização do aplicativo, definindo o tamanho de arquivo de mapeamento no registro.  
  
> [!NOTE]
>  É altamente recomendável que as novas categorias de contador de desempenho ser criado durante a instalação do aplicativo, não durante a execução do aplicativo. Isso permite que o tempo para o sistema operacional atualizar sua lista de categorias de contador de desempenho registrados. Se a lista não tenha sido atualizada, a tentativa de usar a categoria falhará.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o uso do <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> método. O exemplo mostra como criar um personalizado, a categoria do contador de desempenho de várias instâncias para o número de pedidos por segundo.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A counter name that is specified within the <paramref name="counterData" /> collection is <see langword="null" /> or an empty string ("").  -or-  A counter that is specified within the <paramref name="counterData" /> collection already exists.  -or-  <paramref name="counterName" /> has invalid syntax. It might contain backslash characters ("\\") or have length greater than 80 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> is <see langword="null" />.  -or-  <paramref name="counterData" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="categoryType" /> value is outside of the range of the following values: <see langword="MultiInstance" />, <see langword="SingleInstance" />, or <see langword="Unknown" />.</exception>
        <exception cref="T:System.InvalidOperationException">The category already exists on the local computer.  -or-  The layout of the <paramref name="counterData" /> collection is incorrect for base counters. A counter of type <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" />, or <see langword="SampleCounter" /> must be immediately followed by one of the base counter types (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" />, or <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para executar tarefas administrativas em categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the custom performance counter category to create and register with the system.</param>
        <param name="categoryHelp">A description of the custom category.</param>
        <param name="counterName">The name of a new counter, of type <see langword="NumberOfItems32" />, to create as part of the new category.</param>
        <param name="counterHelp">A description of the counter that is associated with the new custom category.</param>
        <summary>Registers a custom performance counter category containing a single counter of type <see langword="NumberOfItems32" /> on the local computer.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> that is associated with the new system category, or performance object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Diagnostics.PerformanceCounterCategory> e único <xref:System.Diagnostics.PerformanceCounter> com texto de ajuda para cada um, usando o <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> método.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> is <see langword="null" /> or is an empty string ("").  -or-  The counter that is specified by <paramref name="counterName" /> already exists.  -or-  <paramref name="counterName" /> has invalid syntax. It might contain backslash characters ("\\") or have length greater than 80 characters.</exception>
        <exception cref="T:System.InvalidOperationException">The category already exists on the local computer.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> is <see langword="null" />.  -or-  <paramref name="counterHelp" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para executar tarefas administrativas em categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the custom performance counter category to create and register with the system.</param>
        <param name="categoryHelp">A description of the custom category.</param>
        <param name="categoryType">One of the <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> values specifying whether the category is <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" />, or <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
        <param name="counterName">The name of a new counter to create as part of the new category.</param>
        <param name="counterHelp">A description of the counter that is associated with the new custom category.</param>
        <summary>Registers the custom performance counter category containing a single counter of type <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> on the local computer.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> that is associated with the new system category, or performance object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `categoryType` parâmetro especifica se a categoria do contador de desempenho é uma instância única ou várias instâncias. Por padrão, uma categoria é uma instância única quando ele é criado e torna-se várias instâncias quando é adicionada a outra instância. Categorias são criadas quando um aplicativo está configurado e instâncias são adicionadas em tempo de execução. Nas versões do .NET Framework 1.0 e 1.1, não é necessário saber se uma categoria de contador de desempenho tem várias instâncias ou de instância única. No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], o <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeração é usada para indicar se um contador de desempenho pode ter várias instâncias.  
  
 Categorias de contador de desempenho instaladas com o [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] usar memória compartilhada separada, com cada categoria de contador de desempenho com sua própria memória. Você pode especificar o tamanho da memória compartilhada separado, criando um DWORD chamado FileMappingSize na chave do registro HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nome da categoria >* \ Desempenho. O valor de FileMappingSize é definido como o tamanho de memória compartilhada da categoria. O tamanho padrão é 131072 decimal. Se o valor de FileMappingSize não estiver presente, o `fileMappingSize` atributo de valor para o `performanceCounters` elemento especificado no arquivo Machine. config é usado, causando uma sobrecarga adicional para o processamento do arquivo de configuração. Você pode obter uma melhoria de desempenho de inicialização do aplicativo, definindo o tamanho de arquivo de mapeamento no registro.  
  
> [!NOTE]
>  É altamente recomendável que as novas categorias de contador de desempenho ser criado durante a instalação do aplicativo, não durante a execução do aplicativo. Isso permite que o tempo para o sistema operacional atualizar sua lista de categorias de contador de desempenho registrados. Se a lista não tenha sido atualizada, a tentativa de usar a categoria falhará.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o uso do <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> método. O exemplo mostra como criar uma categoria de contador de desempenho personalizados de instância única.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> is <see langword="null" /> or is an empty string ("").  -or-  The counter that is specified by <paramref name="counterName" /> already exists.  -or-  <paramref name="counterName" /> has invalid syntax. It might contain backslash characters ("\\") or have length greater than 80 characters.</exception>
        <exception cref="T:System.InvalidOperationException">The category already exists on the local computer.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> is <see langword="null" />.  -or-  <paramref name="counterHelp" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para executar tarefas administrativas em categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the custom performance counter category to delete.</param>
        <summary>Removes the category and its associated counters from the local computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode excluir categorias de contador de desempenho personalizados somente do sistema. Você não pode excluir um contador de uma categoria. Para fazer isso, exclua a categoria e recriar a categoria com os contadores que você deseja manter. Para evitar uma exceção, confirme se a categoria existe antes de tentar excluí-lo.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> método para excluir um <xref:System.Diagnostics.PerformanceCounterCategory> e <xref:System.Diagnostics.PerformanceCounter> objetos que ele contém.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> parameter has invalid syntax. It might contain backslash characters ("\\") or have length greater than 80 characters.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.InvalidOperationException">The category cannot be deleted because it is not a custom category.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determines whether the category is registered on the system.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category to look for.</param>
        <summary>Determines whether the category is registered on the local computer.</summary>
        <returns>
          <see langword="true" /> if the category is registered; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usar o <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> método pode resultar em uma penalidade de desempenho perceptível enquanto todos os contadores de desempenho no computador são verificados quanto à disponibilidade. Se você estiver escrevendo apenas para um contador de desempenho, você pode evitar a pesquisa global para contadores de desempenho ao criar o contador de desempenho quando o aplicativo está instalado e supondo que a categoria existe ao acessar o contador. Não há nenhuma maneira de evitar a pesquisa de contador de desempenho durante a leitura de contadores de desempenho.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounterCategory> objeto chamado "orders" existe. Se não, ele cria o <xref:System.Diagnostics.PerformanceCounterCategory> objeto usando um <xref:System.Diagnostics.CounterCreationDataCollection> objeto que contém dois contadores de desempenho.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> parameter is an empty string ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category to look for.</param>
        <param name="machineName">The name of the computer to examine for the category.</param>
        <summary>Determines whether the category is registered on the specified computer.</summary>
        <returns>
          <see langword="true" /> if the category is registered; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usar o <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> método pode resultar em uma penalidade de desempenho perceptível enquanto todos os contadores de desempenho no computador são verificados quanto à disponibilidade. Se você estiver escrevendo apenas para um contador de desempenho, você pode evitar a pesquisa global para contadores de desempenho ao criar o contador de desempenho quando o aplicativo está instalado e supondo que a categoria existe ao acessar o contador. Não há nenhuma maneira de evitar a pesquisa de contador de desempenho durante a leitura de contadores de desempenho.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo a seguir determina se um <xref:System.Diagnostics.PerformanceCounterCategory> objeto chamado `Orders` existe. Se não existir, o exemplo cria o <xref:System.Diagnostics.PerformanceCounterCategory> objeto usando um <xref:System.Diagnostics.CounterCreationDataCollection> objeto que contém dois contadores de desempenho.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="categoryName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> parameter is an empty string ("").  -or-  The <paramref name="machineName" /> parameter is invalid.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.IO.IOException">The network path cannot be found.</exception>
        <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.  -or-  Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves a list of the performance counter categories that are registered on a computer.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves a list of the performance counter categories that are registered on the local computer.</summary>
        <returns>An array of <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> objects indicating the categories that are registered on the local computer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> método para retornar uma matriz de <xref:System.Diagnostics.PerformanceCounterCategory> objetos do computador local ou em um computador especificado. Ele converte o <xref:System.Diagnostics.PerformanceCounterCategory> matriz em uma matriz de nomes de categoria, que ele classifica e exibe para o usuário. O <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> sobrecarga é selecionada com base em se um nome de computador foi especificado.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">The computer to look on.</param>
        <summary>Retrieves a list of the performance counter categories that are registered on the specified computer.</summary>
        <returns>An array of <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> objects indicating the categories that are registered on the specified computer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para recuperar as categorias no computador local, use outra sobrecarga ou passe "." como o `machineName` parâmetro.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> método para retornar uma matriz de <xref:System.Diagnostics.PerformanceCounterCategory> objetos do computador local ou em um computador especificado. Ele converte o <xref:System.Diagnostics.PerformanceCounterCategory> matriz em uma matriz de nomes de categoria, que ele classifica e exibe para o usuário. O <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> sobrecarga é selecionada com base em se um nome de computador foi especificado.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter is invalid.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves a list of the counters in this performance counter category.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves a list of the counters in a performance counter category that contains exactly one instance.</summary>
        <returns>An array of <see cref="T:System.Diagnostics.PerformanceCounter" /> objects indicating the counters that are associated with this single-instance performance counter category.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre as instâncias de objeto de desempenho, consulte o <xref:System.Diagnostics.PerformanceCounter> visão geral da classe.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir obtém uma lista da <xref:System.Diagnostics.PerformanceCounter> objetos em um <xref:System.Diagnostics.PerformanceCounterCategory>. Primeiro, ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> com o construtor apropriado, com base em se um nome de computador foi especificado. Ele usa o <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> método para retornar uma matriz de <xref:System.Diagnostics.PerformanceCounter> objetos, selecionando o <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> sobrecarga com base em se um nome de instância foi especificado.  
  
 Isso <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> sobrecarga falhará a menos que ele é usado com uma categoria de instância única.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The category is not a single instance.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.InvalidOperationException">The category does not have an associated instance.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">The performance object instance for which to retrieve the list of associated counters.</param>
        <summary>Retrieves a list of the counters in a performance counter category that contains one or more instances.</summary>
        <returns>An array of <see cref="T:System.Diagnostics.PerformanceCounter" /> objects indicating the counters that are associated with the specified object instance of this performance counter category.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para representar uma categoria de instância única, passar uma cadeia de caracteres vazia ("") para o `instanceName` parâmetro.  
  
 Para obter mais informações sobre as instâncias de objeto de desempenho, consulte o <xref:System.Diagnostics.PerformanceCounter> visão geral da classe.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir obtém uma lista da <xref:System.Diagnostics.PerformanceCounter> objetos em um <xref:System.Diagnostics.PerformanceCounterCategory>. Primeiro, ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> com o construtor apropriado, com base em se um nome de computador foi especificado. Ele usa o <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> método para retornar uma matriz de <xref:System.Diagnostics.PerformanceCounter> objetos, selecionando o <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> sobrecarga com base em se um nome de instância foi especificado.  
  
 Isso <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> sobrecarga falhará a menos que ele é usado com uma categoria que contém as instâncias.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="instanceName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property for this <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> instance has not been set.  -or-  The category does not contain the instance that is specified by the <paramref name="instanceName" /> parameter.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the list of performance object instances that are associated with this category.</summary>
        <returns>An array of strings representing the performance object instance names that are associated with this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir obtém uma lista da <xref:System.Diagnostics.PerformanceCounter> objetos em um <xref:System.Diagnostics.PerformanceCounterCategory>. Primeiro, ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> do objeto, usando o construtor apropriado com base em se um nome de computador foi especificado. Ele então usa <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> para retornar os nomes de instância como uma matriz de <xref:System.String>, que ele classifica e o exibe.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property is <see langword="null" />. The property might not have been set.  -or-  The category does not have an associated instance.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determines whether the category contains the specified performance object instance.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">The performance object instance in this performance counter category to search for.</param>
        <summary>Determines whether the specified performance object instance exists in the category that is identified by this <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> object's <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property.</summary>
        <returns>
          <see langword="true" /> if the category contains the specified performance object instance; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga do <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> não é `static`. Você deve criar um <xref:System.Diagnostics.PerformanceCounterCategory> objeto e definir o <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriedade.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se um <xref:System.Diagnostics.PerformanceCounter> instância existe dentro de um <xref:System.Diagnostics.PerformanceCounterCategory>. Primeiro, ele cria um <xref:System.Diagnostics.PerformanceCounterCategory> do objeto, usando o construtor apropriado com base em se um nome de computador foi especificado. Ele então usa <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> para determinar se a instância especificada existe e, em seguida, informa ao usuário. Se nenhum nome de instância é especificado, o exemplo usa o nome de instância única do padrão.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property is <see langword="null" />. The property might not have been set.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="instanceName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">The performance object instance to search for.</param>
        <param name="categoryName">The performance counter category to search.</param>
        <summary>Determines whether a specified category on the local computer contains the specified performance object instance.</summary>
        <returns>
          <see langword="true" /> if the category contains the specified performance object instance; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não é possível determinar se uma instância do objeto de desempenho existe em um computador sem especificar uma categoria específica para examinar.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir usa as sobrecargas estáticas de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> para determinar se o determinado <xref:System.Diagnostics.PerformanceCounter> instância existe no <xref:System.Diagnostics.PerformanceCounterCategory>. A sobrecarga é selecionada com base em se um nome de computador é especificado. Se nenhum nome de instância é especificado, o exemplo usa o nome de instância única do padrão.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="instanceName" /> parameter is <see langword="null" />.  -or-  The <paramref name="categoryName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> parameter is an empty string ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">The performance object instance to search for.</param>
        <param name="categoryName">The performance counter category to search.</param>
        <param name="machineName">The name of the computer on which to look for the category instance pair.</param>
        <summary>Determines whether a specified category on a specified computer contains the specified performance object instance.</summary>
        <returns>
          <see langword="true" /> if the category contains the specified performance object instance; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não é possível determinar se uma instância do objeto de desempenho existe em um computador sem especificar uma categoria específica para examinar.  
  
 Você pode usar "." para especificar o computador local.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir usa as sobrecargas estáticas de <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> para determinar se o determinado <xref:System.Diagnostics.PerformanceCounter> instância existe no <xref:System.Diagnostics.PerformanceCounterCategory>. A sobrecarga é selecionada com base em se um nome de computador é especificado. Se nenhum nome de instância é especificado, o exemplo usa o nome de instância única do padrão.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="instanceName" /> parameter is <see langword="null" />.  -or-  The <paramref name="categoryName" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="categoryName" /> parameter is an empty string ("").  -or-  The <paramref name="machineName" /> parameter is invalid.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the computer on which this category exists.</summary>
        <value>O nome do computador no qual existem a categoria do contador de desempenho e seus contadores associados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Diagnostics.PerformanceCounterCategory> com o <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> construtor. Solicita ao usuário para o <xref:System.Diagnostics.PerformanceCounterCategory> e os nomes de computador, em seguida, define o <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> propriedades dos valores inseridos. Em seguida, exibe os valores da <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, e <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> propriedades ou exibe uma mensagem de erro se o <xref:System.Diagnostics.PerformanceCounterCategory> não pode ser acessado.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> syntax is invalid.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">para ler as categorias de contador de desempenho. Enumeração associada: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads all the counter and performance object instance data that is associated with this performance counter category.</summary>
        <returns>An <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> that contains the counter and performance object instance data for the category.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve definir o <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> propriedade antes de chamar <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>.  
  
 A categoria inteira de leitura ao mesmo tempo pode ser tão eficiente quanto a leitura de um único contador por causa da forma que o sistema permite que os dados.  
  
> [!NOTE]
>  Para ler os contadores de desempenho no Windows Vista e posterior, Windows XP Professional x64 Edition ou Windows Server 2003, você deve ser um membro do grupo usuários de Monitor de desempenho ou ter privilégios administrativos.  
>   
>  Para evitar a elevar seus privilégios para acessar os contadores de desempenho no Windows Vista e versões posteriores, se adicione ao grupo usuários de Monitor de desempenho.  
>   
>  No Windows Vista e posterior, UAC (Controle de Conta de Usuário) determina os privilégios de um usuário. Se for um membro do grupo Administradores Internos, você receberá dois tokens de acesso do tempo de execução: um token de acesso do usuário padrão e um token de acesso do administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa os contadores de desempenho, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um <xref:System.Diagnostics.PerformanceCounterCategory> para um <xref:System.Diagnostics.PerformanceCounterCategory> nome. Ele então usa <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> para retornar um <xref:System.Diagnostics.InstanceDataCollectionCollection> que contém dados de instância para todas as instâncias da <xref:System.Diagnostics.PerformanceCounter> objetos dentro de <xref:System.Diagnostics.PerformanceCounterCategory>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> property is <see langword="null" />. The property might not have been set.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>