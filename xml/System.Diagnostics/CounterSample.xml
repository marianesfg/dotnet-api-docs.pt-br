<Type Name="CounterSample" FullName="System.Diagnostics.CounterSample">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0102a8b8c17d5e7a57dd58d1dff72f589f38324e" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52914347" /></Metadata><TypeSignature Language="C#" Value="public struct CounterSample" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CounterSample extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.CounterSample" />
  <TypeSignature Language="VB.NET" Value="Public Structure CounterSample" />
  <TypeSignature Language="C++ CLI" Value="public value class CounterSample" />
  <TypeSignature Language="F#" Value="type CounterSample = struct" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6489c-101">Define uma estrutura que contém os dados brutos de um contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-101">Defines a structure that holds the raw data for a performance counter.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-102">O exemplo a seguir demonstra o uso da <xref:System.Diagnostics.CounterSample> classe para exibir dados de um contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-102">The following example demonstrates the use of the <xref:System.Diagnostics.CounterSample> class to display data for a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6489c-103">Inicializa uma nova instância da estrutura <see cref="T:System.Diagnostics.CounterSample" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-103">Initializes a new instance of the <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 rawValue, int64 baseValue, int64 counterFrequency, int64 systemFrequency, int64 timeStamp, int64 timeStamp100nSec, valuetype System.Diagnostics.PerformanceCounterType counterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawValue As Long, baseValue As Long, counterFrequency As Long, systemFrequency As Long, timeStamp As Long, timeStamp100nSec As Long, counterType As PerformanceCounterType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CounterSample(long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System::Diagnostics::PerformanceCounterType counterType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.CounterSample : int64 * int64 * int64 * int64 * int64 * int64 * System.Diagnostics.PerformanceCounterType -&gt; System.Diagnostics.CounterSample" Usage="new System.Diagnostics.CounterSample (rawValue, baseValue, counterFrequency, systemFrequency, timeStamp, timeStamp100nSec, counterType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawValue" Type="System.Int64" />
        <Parameter Name="baseValue" Type="System.Int64" />
        <Parameter Name="counterFrequency" Type="System.Int64" />
        <Parameter Name="systemFrequency" Type="System.Int64" />
        <Parameter Name="timeStamp" Type="System.Int64" />
        <Parameter Name="timeStamp100nSec" Type="System.Int64" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceCounterType" />
      </Parameters>
      <Docs>
        <param name="rawValue"><span data-ttu-id="6489c-104">O valor numérico associado à amostra do contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-104">The numeric value associated with the performance counter sample.</span></span></param>
        <param name="baseValue"><span data-ttu-id="6489c-105">Um valor bruto base opcional para o contador, para ser usado apenas se a amostra for baseada em vários contadores.</span><span class="sxs-lookup"><span data-stu-id="6489c-105">An optional, base raw value for the counter, to use only if the sample is based on multiple counters.</span></span></param>
        <param name="counterFrequency"><span data-ttu-id="6489c-106">A frequência com que o contador é lido.</span><span class="sxs-lookup"><span data-stu-id="6489c-106">The frequency with which the counter is read.</span></span></param>
        <param name="systemFrequency"><span data-ttu-id="6489c-107">A frequência com que o sistema lê do contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-107">The frequency with which the system reads from the counter.</span></span></param>
        <param name="timeStamp"><span data-ttu-id="6489c-108">O carimbo de data/hora bruto.</span><span class="sxs-lookup"><span data-stu-id="6489c-108">The raw time stamp.</span></span></param>
        <param name="timeStamp100nSec"><span data-ttu-id="6489c-109">O carimbo de data/hora bruto de alta fidelidade.</span><span class="sxs-lookup"><span data-stu-id="6489c-109">The raw, high-fidelity time stamp.</span></span></param>
        <param name="counterType"><span data-ttu-id="6489c-110">Um objeto <see cref="T:System.Diagnostics.PerformanceCounterType" /> que indica o tipo do contador para o qual esta amostra é um instantâneo.</span><span class="sxs-lookup"><span data-stu-id="6489c-110">A <see cref="T:System.Diagnostics.PerformanceCounterType" /> object that indicates the type of the counter for which this sample is a snapshot.</span></span></param>
        <summary><span data-ttu-id="6489c-111">Inicializa uma nova instância da estrutura <see cref="T:System.Diagnostics.CounterSample" /> e define a propriedade <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> como 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="6489c-111">Initializes a new instance of the <see cref="T:System.Diagnostics.CounterSample" /> structure and sets the <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> property to 0 (zero).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6489c-112">Use esse construtor para um exemplo inicial do contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-112">Use this constructor to take an initial sample of the performance counter.</span></span> <span data-ttu-id="6489c-113">O Monitor do sistema fornece valores para esses parâmetros automaticamente quando você chama o <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> método pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="6489c-113">The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType, long counterTimeStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 rawValue, int64 baseValue, int64 counterFrequency, int64 systemFrequency, int64 timeStamp, int64 timeStamp100nSec, valuetype System.Diagnostics.PerformanceCounterType counterType, int64 counterTimeStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawValue As Long, baseValue As Long, counterFrequency As Long, systemFrequency As Long, timeStamp As Long, timeStamp100nSec As Long, counterType As PerformanceCounterType, counterTimeStamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CounterSample(long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System::Diagnostics::PerformanceCounterType counterType, long counterTimeStamp);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.CounterSample : int64 * int64 * int64 * int64 * int64 * int64 * System.Diagnostics.PerformanceCounterType * int64 -&gt; System.Diagnostics.CounterSample" Usage="new System.Diagnostics.CounterSample (rawValue, baseValue, counterFrequency, systemFrequency, timeStamp, timeStamp100nSec, counterType, counterTimeStamp)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawValue" Type="System.Int64" />
        <Parameter Name="baseValue" Type="System.Int64" />
        <Parameter Name="counterFrequency" Type="System.Int64" />
        <Parameter Name="systemFrequency" Type="System.Int64" />
        <Parameter Name="timeStamp" Type="System.Int64" />
        <Parameter Name="timeStamp100nSec" Type="System.Int64" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceCounterType" />
        <Parameter Name="counterTimeStamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="rawValue"><span data-ttu-id="6489c-114">O valor numérico associado à amostra do contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-114">The numeric value associated with the performance counter sample.</span></span></param>
        <param name="baseValue"><span data-ttu-id="6489c-115">Um valor bruto base opcional para o contador, para ser usado apenas se a amostra for baseada em vários contadores.</span><span class="sxs-lookup"><span data-stu-id="6489c-115">An optional, base raw value for the counter, to use only if the sample is based on multiple counters.</span></span></param>
        <param name="counterFrequency"><span data-ttu-id="6489c-116">A frequência com que o contador é lido.</span><span class="sxs-lookup"><span data-stu-id="6489c-116">The frequency with which the counter is read.</span></span></param>
        <param name="systemFrequency"><span data-ttu-id="6489c-117">A frequência com que o sistema lê do contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-117">The frequency with which the system reads from the counter.</span></span></param>
        <param name="timeStamp"><span data-ttu-id="6489c-118">O carimbo de data/hora bruto.</span><span class="sxs-lookup"><span data-stu-id="6489c-118">The raw time stamp.</span></span></param>
        <param name="timeStamp100nSec"><span data-ttu-id="6489c-119">O carimbo de data/hora bruto de alta fidelidade.</span><span class="sxs-lookup"><span data-stu-id="6489c-119">The raw, high-fidelity time stamp.</span></span></param>
        <param name="counterType"><span data-ttu-id="6489c-120">Um objeto <see cref="T:System.Diagnostics.PerformanceCounterType" /> que indica o tipo do contador para o qual esta amostra é um instantâneo.</span><span class="sxs-lookup"><span data-stu-id="6489c-120">A <see cref="T:System.Diagnostics.PerformanceCounterType" /> object that indicates the type of the counter for which this sample is a snapshot.</span></span></param>
        <param name="counterTimeStamp"><span data-ttu-id="6489c-121">A hora em que a amostra foi realizada.</span><span class="sxs-lookup"><span data-stu-id="6489c-121">The time at which the sample was taken.</span></span></param>
        <summary><span data-ttu-id="6489c-122">Inicializa uma nova instância da estrutura <see cref="T:System.Diagnostics.CounterSample" /> e define a propriedade <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> como o valor que é passado.</span><span class="sxs-lookup"><span data-stu-id="6489c-122">Initializes a new instance of the <see cref="T:System.Diagnostics.CounterSample" /> structure and sets the <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> property to the value that is passed in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6489c-123">Use esse construtor para criar amostras depois que você já tiver tirado um exemplo inicial do contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-123">Use this constructor to take samples after you have already taken an initial sample of the performance counter.</span></span> <span data-ttu-id="6489c-124">O Monitor do sistema fornece valores para esses parâmetros automaticamente quando você chama o <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> método.</span><span class="sxs-lookup"><span data-stu-id="6489c-124">The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6489c-125">O exemplo a seguir demonstra como inicializar um novo <xref:System.Diagnostics.CounterSample> estrutura, passar valores para o `rawValue`, `baseValue`, `counterFrequency`, `systemFrequency`, `timeStamp`, `timeStamp100nSec`, `counterType`e `counterTimeStamp`parâmetros.</span><span class="sxs-lookup"><span data-stu-id="6489c-125">The following example demonstrates how to initialize a new <xref:System.Diagnostics.CounterSample> structure, passing in values for the `rawValue`, `baseValue`, `counterFrequency`, `systemFrequency`, `timeStamp`, `timeStamp100nSec`, `counterType`, and `counterTimeStamp` parameters.</span></span> <span data-ttu-id="6489c-126">Depois de criar o <xref:System.Diagnostics.CounterSample> estrutura, o exemplo exibe os valores de propriedade para o <xref:System.Diagnostics.CounterSample> na janela do console.</span><span class="sxs-lookup"><span data-stu-id="6489c-126">After creating the <xref:System.Diagnostics.CounterSample> structure, the example displays the property values for the <xref:System.Diagnostics.CounterSample> in the console window.</span></span>  
  
 [!code-cpp[CounterSample_Ctor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CounterSample_Ctor_2/CPP/countersample_ctor_2.cpp#1)]
 [!code-csharp[CounterSample_Ctor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CounterSample_Ctor_2/CS/countersample_ctor_2.cs#1)]
 [!code-vb[CounterSample_Ctor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CounterSample_Ctor_2/VB/countersample_ctor_2.vb#1)]  
[!code-cpp[CounterSample_Ctor_2#2](~/samples/snippets/cpp/VS_Snippets_CLR/CounterSample_Ctor_2/CPP/countersample_ctor_2.cpp#2)]
[!code-csharp[CounterSample_Ctor_2#2](~/samples/snippets/csharp/VS_Snippets_CLR/CounterSample_Ctor_2/CS/countersample_ctor_2.cs#2)]
[!code-vb[CounterSample_Ctor_2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CounterSample_Ctor_2/VB/countersample_ctor_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseValue">
      <MemberSignature Language="C#" Value="public long BaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.BaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BaseValue { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseValue : int64" Usage="System.Diagnostics.CounterSample.BaseValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-127">Obtém um valor bruto opcional base para o contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-127">Gets an optional, base raw value for the counter.</span></span></summary>
        <value><span data-ttu-id="6489c-128">O base valor bruto, que é usado somente se o exemplo é baseado em vários contadores.</span><span class="sxs-lookup"><span data-stu-id="6489c-128">The base raw value, which is used only if the sample is based on multiple counters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-129">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.BaseValue%2A> propriedade de um contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-129">The following example displays the value of the <xref:System.Diagnostics.CounterSample.BaseValue%2A> property for a counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Calculate">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6489c-130">Calcula os dados de desempenho usando os dados de amostra do contador especificado.</span><span class="sxs-lookup"><span data-stu-id="6489c-130">Calculates the performance data by using the specified counter sample data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public static float Calculate (System.Diagnostics.CounterSample counterSample);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Calculate(valuetype System.Diagnostics.CounterSample counterSample) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Calculate(System::Diagnostics::CounterSample counterSample);" />
      <MemberSignature Language="F#" Value="static member Calculate : System.Diagnostics.CounterSample -&gt; single" Usage="System.Diagnostics.CounterSample.Calculate counterSample" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterSample" Type="System.Diagnostics.CounterSample" />
      </Parameters>
      <Docs>
        <param name="counterSample"><span data-ttu-id="6489c-131">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser usada como um ponto base para calcular os dados de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-131">The <see cref="T:System.Diagnostics.CounterSample" /> structure to use as a base point for calculating performance data.</span></span></param>
        <summary><span data-ttu-id="6489c-132">Calcula os dados de desempenho do contador, usando um único ponto de amostra.</span><span class="sxs-lookup"><span data-stu-id="6489c-132">Calculates the performance data of the counter, using a single sample point.</span></span> <span data-ttu-id="6489c-133">Esse método é geralmente usado para tipos de contador de desempenho não calculados.</span><span class="sxs-lookup"><span data-stu-id="6489c-133">This method is generally used for uncalculated performance counter types.</span></span></summary>
        <returns><span data-ttu-id="6489c-134">O valor de desempenho calculado.</span><span class="sxs-lookup"><span data-stu-id="6489c-134">The calculated performance value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public static float Calculate (System.Diagnostics.CounterSample counterSample, System.Diagnostics.CounterSample nextCounterSample);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Calculate(valuetype System.Diagnostics.CounterSample counterSample, valuetype System.Diagnostics.CounterSample nextCounterSample) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Calculate(System::Diagnostics::CounterSample counterSample, System::Diagnostics::CounterSample nextCounterSample);" />
      <MemberSignature Language="F#" Value="static member Calculate : System.Diagnostics.CounterSample * System.Diagnostics.CounterSample -&gt; single" Usage="System.Diagnostics.CounterSample.Calculate (counterSample, nextCounterSample)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterSample" Type="System.Diagnostics.CounterSample" />
        <Parameter Name="nextCounterSample" Type="System.Diagnostics.CounterSample" />
      </Parameters>
      <Docs>
        <param name="counterSample"><span data-ttu-id="6489c-135">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser usada como um ponto base para calcular os dados de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-135">The <see cref="T:System.Diagnostics.CounterSample" /> structure to use as a base point for calculating performance data.</span></span></param>
        <param name="nextCounterSample"><span data-ttu-id="6489c-136">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser usada como um ponto final para calcular os dados de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-136">The <see cref="T:System.Diagnostics.CounterSample" /> structure to use as an ending point for calculating performance data.</span></span></param>
        <summary><span data-ttu-id="6489c-137">Calcula os dados de desempenho do contador, usando dois pontos de amostra.</span><span class="sxs-lookup"><span data-stu-id="6489c-137">Calculates the performance data of the counter, using two sample points.</span></span> <span data-ttu-id="6489c-138">Esse método é geralmente usado para tipos de contador de desempenho calculados, como médias.</span><span class="sxs-lookup"><span data-stu-id="6489c-138">This method is generally used for calculated performance counter types, such as averages.</span></span></summary>
        <returns><span data-ttu-id="6489c-139">O valor de desempenho calculado.</span><span class="sxs-lookup"><span data-stu-id="6489c-139">The calculated performance value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterFrequency">
      <MemberSignature Language="C#" Value="public long CounterFrequency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CounterFrequency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.CounterFrequency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterFrequency As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CounterFrequency { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterFrequency : int64" Usage="System.Diagnostics.CounterSample.CounterFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-140">Obtém a frequência do contador bruta.</span><span class="sxs-lookup"><span data-stu-id="6489c-140">Gets the raw counter frequency.</span></span></summary>
        <value><span data-ttu-id="6489c-141">A frequência com que o contador é lido.</span><span class="sxs-lookup"><span data-stu-id="6489c-141">The frequency with which the counter is read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-142">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.CounterFrequency%2A> propriedade de um contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-142">The following example displays the value of the <xref:System.Diagnostics.CounterSample.CounterFrequency%2A> property for a counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimeStamp">
      <MemberSignature Language="C#" Value="public long CounterTimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CounterTimeStamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.CounterTimeStamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterTimeStamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CounterTimeStamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterTimeStamp : int64" Usage="System.Diagnostics.CounterSample.CounterTimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-143">Obtém o carimbo de data/hora do contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-143">Gets the counter's time stamp.</span></span></summary>
        <value><span data-ttu-id="6489c-144">A hora em que a amostra foi realizada.</span><span class="sxs-lookup"><span data-stu-id="6489c-144">The time at which the sample was taken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-145">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.CounterTimeStamp%2A> propriedade de um contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-145">The following example displays the value of the <xref:System.Diagnostics.CounterSample.CounterTimeStamp%2A> property for a counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterType CounterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterType CounterType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.CounterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterType As PerformanceCounterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterType CounterType { System::Diagnostics::PerformanceCounterType get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterType : System.Diagnostics.PerformanceCounterType" Usage="System.Diagnostics.CounterSample.CounterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-146">Obtém o tipo de contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-146">Gets the performance counter type.</span></span></summary>
        <value><span data-ttu-id="6489c-147">Um objeto <see cref="T:System.Diagnostics.PerformanceCounterType" /> que indica o tipo do contador para o qual esta amostra é um instantâneo.</span><span class="sxs-lookup"><span data-stu-id="6489c-147">A <see cref="T:System.Diagnostics.PerformanceCounterType" /> object that indicates the type of the counter for which this sample is a snapshot.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CounterSample Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype System.Diagnostics.CounterSample Empty" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.CounterSample.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Empty As CounterSample " />
      <MemberSignature Language="C++ CLI" Value="public: static System::Diagnostics::CounterSample Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Diagnostics.CounterSample" Usage="System.Diagnostics.CounterSample.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CounterSample</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-148">Define uma amostra do contador de desempenho vazio e não inicializado do tipo <see langword="NumberOfItems32" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-148">Defines an empty, uninitialized performance counter sample of type <see langword="NumberOfItems32" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6489c-149">Indica se duas amostras do contador são iguais.</span><span class="sxs-lookup"><span data-stu-id="6489c-149">Indicates whether two counter samples are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.CounterSample sample);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Diagnostics.CounterSample sample) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (sample As CounterSample) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Diagnostics::CounterSample sample);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.CounterSample other);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Diagnostics.CounterSample other) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CounterSample) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Diagnostics::CounterSample other);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Diagnostics.CounterSample -&gt; bool" Usage="counterSample.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sample" Type="System.Diagnostics.CounterSample" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="other" Type="System.Diagnostics.CounterSample" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sample"><span data-ttu-id="6489c-150">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada com esta instância.</span><span class="sxs-lookup"><span data-stu-id="6489c-150">The <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared with this instance.</span></span></param>
        <param name="other"><span data-ttu-id="6489c-151">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada com esta instância.</span><span class="sxs-lookup"><span data-stu-id="6489c-151">The <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared with this instance.</span></span></param>
        <summary><span data-ttu-id="6489c-152">Indica se a estrutura <see cref="T:System.Diagnostics.CounterSample" /> especificada é igual à estrutura <see cref="T:System.Diagnostics.CounterSample" /> atual.</span><span class="sxs-lookup"><span data-stu-id="6489c-152">Indicates whether the specified <see cref="T:System.Diagnostics.CounterSample" /> structure is equal to the current <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></summary>
        <returns><span data-ttu-id="6489c-153"><see langword="true" /> se <paramref name="sample" /> for igual a essa instância atual, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-153"><see langword="true" /> if <paramref name="sample" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6489c-154">Dois <xref:System.Diagnostics.CounterSample> estruturas são iguais se tiverem valores de propriedade idênticas.</span><span class="sxs-lookup"><span data-stu-id="6489c-154">Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.Equals(System.Object)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="counterSample.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="6489c-155">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada com a estrutura atual.</span><span class="sxs-lookup"><span data-stu-id="6489c-155">The <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared with the current structure.</span></span></param>
        <param name="obj"><span data-ttu-id="6489c-156">A estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada com a estrutura atual.</span><span class="sxs-lookup"><span data-stu-id="6489c-156">The <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared with the current structure.</span></span></param>
        <summary><span data-ttu-id="6489c-157">Indica se a estrutura especificada é uma estrutura <see cref="T:System.Diagnostics.CounterSample" /> e é idêntica à estrutura <see cref="T:System.Diagnostics.CounterSample" /> atual.</span><span class="sxs-lookup"><span data-stu-id="6489c-157">Indicates whether the specified structure is a <see cref="T:System.Diagnostics.CounterSample" /> structure and is identical to the current <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></summary>
        <returns><span data-ttu-id="6489c-158"><see langword="true" /> se <paramref name="o" /> for uma estrutura <see cref="T:System.Diagnostics.CounterSample" /> e for idêntica à instância atual, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-158"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Diagnostics.CounterSample" /> structure and is identical to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6489c-159">Dois <xref:System.Diagnostics.CounterSample> estruturas são iguais se tiverem valores de propriedade idênticas.</span><span class="sxs-lookup"><span data-stu-id="6489c-159">Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="counterSample.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6489c-160">Obtém um código hash para a amostra do contador atual.</span><span class="sxs-lookup"><span data-stu-id="6489c-160">Gets a hash code for the current counter sample.</span></span></summary>
        <returns><span data-ttu-id="6489c-161">Um código hash para a amostra do contador atual.</span><span class="sxs-lookup"><span data-stu-id="6489c-161">A hash code for the current counter sample.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Diagnostics.CounterSample a, System.Diagnostics.CounterSample b);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Diagnostics.CounterSample a, valuetype System.Diagnostics.CounterSample b) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As CounterSample, b As CounterSample) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Diagnostics::CounterSample a, System::Diagnostics::CounterSample b);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static bool operator == (System.Diagnostics.CounterSample obj1, System.Diagnostics.CounterSample obj2);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Diagnostics.CounterSample obj1, valuetype System.Diagnostics.CounterSample obj2) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As CounterSample, obj2 As CounterSample) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Diagnostics::CounterSample obj1, System::Diagnostics::CounterSample obj2);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Diagnostics.CounterSample * System.Diagnostics.CounterSample -&gt; bool" Usage="obj1 = obj2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Diagnostics.CounterSample" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="obj1" Type="System.Diagnostics.CounterSample" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="b" Type="System.Diagnostics.CounterSample" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="obj2" Type="System.Diagnostics.CounterSample" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="6489c-162">Uma estrutura <see cref="T:System.Diagnostics.CounterSample" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-162">A <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></param>
        <param name="obj1"><span data-ttu-id="6489c-163">Uma estrutura <see cref="T:System.Diagnostics.CounterSample" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-163">A <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></param>
        <param name="b"><span data-ttu-id="6489c-164">Outra estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada à estrutura especificada pelo parâmetro <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-164">Another <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared to the structure specified by the <paramref name="a" /> parameter.</span></span></param>
        <param name="obj2"><span data-ttu-id="6489c-165">Outra estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada à estrutura especificada pelo parâmetro <paramref name="obj1" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-165">Another <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared to the structure specified by the <paramref name="obj1" /> parameter.</span></span></param>
        <summary><span data-ttu-id="6489c-166">Retorna um valor que indica se duas estruturas <see cref="T:System.Diagnostics.CounterSample" /> são iguais.</span><span class="sxs-lookup"><span data-stu-id="6489c-166">Returns a value that indicates whether two <see cref="T:System.Diagnostics.CounterSample" /> structures are equal.</span></span></summary>
        <returns><span data-ttu-id="6489c-167"><see langword="true" /> se <paramref name="a" /> e <paramref name="b" /> forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-167"><see langword="true" /> if <paramref name="a" /> and <paramref name="b" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6489c-168">Dois <xref:System.Diagnostics.CounterSample> estruturas são iguais se tiverem valores de propriedade idênticas.</span><span class="sxs-lookup"><span data-stu-id="6489c-168">Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.</span></span>  
  
 <span data-ttu-id="6489c-169">O método equivalente para esse operador é <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6489c-169">The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Diagnostics.CounterSample a, System.Diagnostics.CounterSample b);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Diagnostics.CounterSample a, valuetype System.Diagnostics.CounterSample b) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As CounterSample, b As CounterSample) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Diagnostics::CounterSample a, System::Diagnostics::CounterSample b);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static bool operator != (System.Diagnostics.CounterSample obj1, System.Diagnostics.CounterSample obj2);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Diagnostics.CounterSample obj1, valuetype System.Diagnostics.CounterSample obj2) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As CounterSample, obj2 As CounterSample) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Diagnostics::CounterSample obj1, System::Diagnostics::CounterSample obj2);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Diagnostics.CounterSample * System.Diagnostics.CounterSample -&gt; bool" Usage="System.Diagnostics.CounterSample.op_Inequality (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Diagnostics.CounterSample" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="obj1" Type="System.Diagnostics.CounterSample" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="b" Type="System.Diagnostics.CounterSample" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="obj2" Type="System.Diagnostics.CounterSample" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="6489c-170">Uma estrutura <see cref="T:System.Diagnostics.CounterSample" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-170">A <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></param>
        <param name="obj1"><span data-ttu-id="6489c-171">Uma estrutura <see cref="T:System.Diagnostics.CounterSample" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-171">A <see cref="T:System.Diagnostics.CounterSample" /> structure.</span></span></param>
        <param name="b"><span data-ttu-id="6489c-172">Outra estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada à estrutura especificada pelo parâmetro <paramref name="a" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-172">Another <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared to the structure specified by the <paramref name="a" /> parameter.</span></span></param>
        <param name="obj2"><span data-ttu-id="6489c-173">Outra estrutura <see cref="T:System.Diagnostics.CounterSample" /> a ser comparada à estrutura especificada pelo parâmetro <paramref name="obj1" />.</span><span class="sxs-lookup"><span data-stu-id="6489c-173">Another <see cref="T:System.Diagnostics.CounterSample" /> structure to be compared to the structure specified by the <paramref name="obj1" /> parameter.</span></span></param>
        <summary><span data-ttu-id="6489c-174">Retorna um valor que indica se duas estruturas <see cref="T:System.Diagnostics.CounterSample" /> não são iguais.</span><span class="sxs-lookup"><span data-stu-id="6489c-174">Returns a value that indicates whether two <see cref="T:System.Diagnostics.CounterSample" /> structures are not equal.</span></span></summary>
        <returns><span data-ttu-id="6489c-175"><see langword="true" /> se <paramref name="a" /> e <paramref name="b" /> não forem iguais, caso contrário, <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="6489c-175"><see langword="true" /> if <paramref name="a" /> and <paramref name="b" /> are not equal; otherwise, <see langword="false" /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6489c-176">Dois <xref:System.Diagnostics.CounterSample> estruturas não são iguais se qualquer um dos seus valores de propriedade são diferentes.</span><span class="sxs-lookup"><span data-stu-id="6489c-176">Two <xref:System.Diagnostics.CounterSample> structures are not equal if any of their property values are different.</span></span>  
  
 <span data-ttu-id="6489c-177">O método equivalente para esse operador é <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6489c-177">The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.RawValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RawValue { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RawValue : int64" Usage="System.Diagnostics.CounterSample.RawValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-178">Obtém o valor bruto do contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-178">Gets the raw value of the counter.</span></span></summary>
        <value><span data-ttu-id="6489c-179">O valor numérico associado à amostra do contador de desempenho.</span><span class="sxs-lookup"><span data-stu-id="6489c-179">The numeric value that is associated with the performance counter sample.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-180">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.RawValue%2A> propriedade de um contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-180">The following example displays the value of the <xref:System.Diagnostics.CounterSample.RawValue%2A> property for a counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemFrequency">
      <MemberSignature Language="C#" Value="public long SystemFrequency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SystemFrequency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.SystemFrequency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemFrequency As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long SystemFrequency { long get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemFrequency : int64" Usage="System.Diagnostics.CounterSample.SystemFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-181">Obtém a frequência do sistema bruta.</span><span class="sxs-lookup"><span data-stu-id="6489c-181">Gets the raw system frequency.</span></span></summary>
        <value><span data-ttu-id="6489c-182">A frequência com que o sistema lê do contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-182">The frequency with which the system reads from the counter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-183">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.SystemFrequency%2A> propriedade de um contador...</span><span class="sxs-lookup"><span data-stu-id="6489c-183">The following example displays the value of the <xref:System.Diagnostics.CounterSample.SystemFrequency%2A> property for a counter..</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeStamp">
      <MemberSignature Language="C#" Value="public long TimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TimeStamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.TimeStamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeStamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TimeStamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeStamp : int64" Usage="System.Diagnostics.CounterSample.TimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-184">Obtém o carimbo de data/hora bruto.</span><span class="sxs-lookup"><span data-stu-id="6489c-184">Gets the raw time stamp.</span></span></summary>
        <value><span data-ttu-id="6489c-185">O carimbo de hora do sistema.</span><span class="sxs-lookup"><span data-stu-id="6489c-185">The system time stamp.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-186">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.TimeStamp%2A> propriedade de um contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-186">The following example displays the value of the <xref:System.Diagnostics.CounterSample.TimeStamp%2A> property for a counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeStamp100nSec">
      <MemberSignature Language="C#" Value="public long TimeStamp100nSec { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TimeStamp100nSec" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CounterSample.TimeStamp100nSec" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeStamp100nSec As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TimeStamp100nSec { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeStamp100nSec : int64" Usage="System.Diagnostics.CounterSample.TimeStamp100nSec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6489c-187">Obtém o carimbo de data/hora bruto de alta fidelidade.</span><span class="sxs-lookup"><span data-stu-id="6489c-187">Gets the raw, high-fidelity time stamp.</span></span></summary>
        <value><span data-ttu-id="6489c-188">O sistema carimbo de hora, representado em milissegundos 0,1.</span><span class="sxs-lookup"><span data-stu-id="6489c-188">The system time stamp, represented within 0.1 millisecond.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6489c-189">O exemplo a seguir exibe o valor da <xref:System.Diagnostics.CounterSample.TimeStamp100nSec%2A> propriedade de um contador.</span><span class="sxs-lookup"><span data-stu-id="6489c-189">The following example displays the value of the <xref:System.Diagnostics.CounterSample.TimeStamp100nSec%2A> property for a counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>