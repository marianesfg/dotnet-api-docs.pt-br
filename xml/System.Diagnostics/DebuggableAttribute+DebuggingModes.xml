<Type Name="DebuggableAttribute+DebuggingModes" FullName="System.Diagnostics.DebuggableAttribute+DebuggingModes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01ec3e7703297298a552f50811143263bb757553" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56357661" /></Metadata><TypeSignature Language="C#" Value="public enum DebuggableAttribute.DebuggingModes" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed DebuggableAttribute/DebuggingModes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" />
  <TypeSignature Language="VB.NET" Value="Public Enum DebuggableAttribute.DebuggingModes" />
  <TypeSignature Language="C++ CLI" Value="public: enum class DebuggableAttribute::DebuggingModes" />
  <TypeSignature Language="F#" Value="type DebuggableAttribute.DebuggingModes = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica o modo de depuração para o compilador JIT (just-in-time).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes> enumeração Especifica como o tempo de execução acompanhar informações importantes para o depurador durante a geração de código. Essas informações ajudam o depurador a proporcionar uma rica experiência de depuração. Diferentemente do .NET Framework versão 1.1, versões 2.0 ou posteriores não permitem que você desativar o controle pelo compilador just-in-time (JIT). Acompanhamento JIT está sempre habilitado para arquivos depuráveis.  Na versão 2.0 e posterior, os valores de enumeração tem o seguinte efeito.  
  
|Modo de depuração|Resultado|  
|--------------------|------------|  
|Nenhum|Acompanhamento em otimizações JIT habilitado|  
|Padrão|Acompanhamento em otimizações JIT habilitado|  
|DisableOptimizations|Acompanhamento em otimizações JIT habilitado|  
|Padrão &#124; DisableOptimizations|Acompanhamento em otimizações JIT desabilitado|  
  
 Pontos de sequência são usadas para indicar locais no código Microsoft intermediate language (MSIL) que um usuário do depurador esperam poder referir-se exclusivamente, por exemplo, para definir um ponto de interrupção. Garante que o compilador JIT não compila o MSIL em dois pontos de sequência diferentes em uma única instrução nativa. Por padrão, o compilador JIT examina o repositório de símbolos no arquivo de banco de dados (PDB) de programa para obter uma lista de pontos de sequência adicional. No entanto, ao carregar o PDB do arquivo requer que o arquivo esteja disponível e tem um impacto negativo no desempenho. Começando com a versão 2.0, os compiladores podem emitir "pontos de sequência implícitos" no fluxo de código MSIL com o uso de MSIL "`nop"` instruções. Esses compiladores devem definir o sinalizador de IgnoreSymbolStoreSequencePoints para notificar o common language runtime para não carregar o arquivo PDB.  
  
> [!NOTE]
>  Essa enumeração é usada principalmente por desenvolvedores de idioma. Geralmente, ele não é usado no desenvolvimento de aplicativos. Usam ambientes de desenvolvimento <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints> com base nos parâmetros de compilador, como **/Debug** e **/Optimize**.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.DebuggableAttribute/DebuggingModes Default = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 1" Usage="System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DebuggableAttribute+DebuggingModes</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Instrui o compilador JIT (just-in-time) a usar seu comportamento padrão, que inclui habilitar as otimizações, desabilitar o suporte a Editar e Continuar e usar os pontos de sequência do repositório de símbolos se estiver presente. A partir do .NET Framework versão 2.0, as informações de acompanhamento JIT, o deslocamento do MSIL (Microsoft Intermediate Language) para o deslocamento de código nativo em um método, são sempre gerados.</summary>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizations">
      <MemberSignature Language="C#" Value="DisableOptimizations" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations" />
      <MemberSignature Language="VB.NET" Value="DisableOptimizations" />
      <MemberSignature Language="C++ CLI" Value="DisableOptimizations" />
      <MemberSignature Language="F#" Value="DisableOptimizations = 256" Usage="System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DebuggableAttribute+DebuggingModes</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Desabilita as otimizações executadas pelo compilador para tornar o arquivo de saída menor, mais rápido e mais eficiente. As otimizações resultam na reorganização de código no arquivo de saída, o que pode dificultar a depuração. Normalmente, a otimização deve ser desabilitada durante a depuração. Nas versões 2.0 ou posteriores, combine esse valor com Default (Default | DisableOptimizations) para habilitar o acompanhamento JIT e desabilitar as otimizações.</summary>
      </Docs>
    </Member>
    <Member MemberName="EnableEditAndContinue">
      <MemberSignature Language="C#" Value="EnableEditAndContinue" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue" />
      <MemberSignature Language="VB.NET" Value="EnableEditAndContinue" />
      <MemberSignature Language="C++ CLI" Value="EnableEditAndContinue" />
      <MemberSignature Language="F#" Value="EnableEditAndContinue = 4" Usage="System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DebuggableAttribute+DebuggingModes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Habilita o recurso Editar e continuar. O recurso Editar e continuar permite que você faça alterações em seu código-fonte enquanto o programa está no modo de interrupção. A capacidade de editar e continuar depende do compilador.</summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSymbolStoreSequencePoints">
      <MemberSignature Language="C#" Value="IgnoreSymbolStoreSequencePoints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints" />
      <MemberSignature Language="VB.NET" Value="IgnoreSymbolStoreSequencePoints" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSymbolStoreSequencePoints" />
      <MemberSignature Language="F#" Value="IgnoreSymbolStoreSequencePoints = 2" Usage="System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DebuggableAttribute+DebuggingModes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Use os pontos de sequência de MSIL implícitos, não os pontos de sequência de PDB (banco de dados do programa). As informações simbólicas normalmente incluem pelo menos um deslocamento do MSIL (Microsoft Intermediate Language) para cada linha de origem. Quando o compilador JIT (just-in-time) está prestes a compilar um método, ele solicita aos serviços de criação de perfil uma lista de deslocamentos do MSIL que devem ser preservados. Esses deslocamentos do MSIL são chamados de pontos de sequência.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.DebuggableAttribute/DebuggingModes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Diagnostics.DebuggableAttribute.DebuggingModes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DebuggableAttribute+DebuggingModes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A partir do .NET Framework versão 2.0, as informações de acompanhamento JIT são sempre geradas e esse sinalizador tem o mesmo efeito que <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />, exceto que ele define a propriedade <see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" /> como <see langword="false" />. No entanto, como o acompanhamento JIT está sempre habilitado, o valor da propriedade é ignorado na versão 2.0 ou posterior.  
  
Observe que, diferente do sinalizador <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations" />, o sinalizador <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None" /> não pode ser usado para desabilitar as otimizações JIT.</summary>
      </Docs>
    </Member>
  </Members>
</Type>