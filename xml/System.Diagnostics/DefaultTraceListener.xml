<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="739480e6735e978535fe7182c408602fc0ce8890" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37663986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type DefaultTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b7e06-101">Fornece os métodos de saída padrão e o comportamento do rastreamento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7e06-101">Provides the default output methods and behavior for tracing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7e06-102">Uma instância dessa classe é adicionada automaticamente para o <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> e <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleções.</span><span class="sxs-lookup"><span data-stu-id="b7e06-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="b7e06-103">Adicionar explicitamente um segundo <xref:System.Diagnostics.DefaultTraceListener> faz com que a duplicação mensagens na janela de saída do depurador e caixas de mensagem duplicada para declarações.</span><span class="sxs-lookup"><span data-stu-id="b7e06-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="b7e06-104">Por padrão, o <xref:System.Diagnostics.DefaultTraceListener.Write%2A> e <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> métodos emitem a mensagem para o Win32 `OutputDebugString` função e o <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b7e06-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b7e06-105">Para obter informações sobre o `OutputDebugString` , consulte o SDK da plataforma ou MSDN.</span><span class="sxs-lookup"><span data-stu-id="b7e06-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="b7e06-106">O <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> método, por padrão, exibe uma caixa de mensagem quando o aplicativo está em execução em um modo de interface do usuário; ele também emite a mensagem usando <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7e06-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b7e06-107">A exibição da caixa de mensagem para <xref:System.Diagnostics.Debug.Assert%2A> e <xref:System.Diagnostics.Debug.Fail%2A> chamadas de método depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b7e06-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b7e06-108">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="b7e06-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="b7e06-109">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ \<limpar > elemento](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), pelo [ \<remover > elemento](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método no <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="b7e06-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="b7e06-110">Você deve habilitar o rastreamento ou depuração para usar um ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="b7e06-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="b7e06-111">A sintaxe a seguir é específica do compilador.</span><span class="sxs-lookup"><span data-stu-id="b7e06-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="b7e06-112">Se você usar compiladores diferentes de c# ou Visual Basic, consulte a documentação do seu compilador.</span><span class="sxs-lookup"><span data-stu-id="b7e06-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="b7e06-113">Para habilitar a depuração em c#, adicione a `/d:DEBUG` sinalizador à linha de comando do compilador quando você compila seu código, ou adiciona `#define DEBUG` na parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="b7e06-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="b7e06-114">No Visual Basic, adicione o `/d:DEBUG=True` sinalizador à linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="b7e06-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="b7e06-115">Para habilitar o rastreamento em c#, adicione a `/d:TRACE` sinalizador à linha de comando do compilador quando você compila seu código, ou adiciona `#define TRACE` na parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="b7e06-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="b7e06-116">No Visual Basic, adicione o `/d:TRACE=True` sinalizador à linha de comando do compilador.</span><span class="sxs-lookup"><span data-stu-id="b7e06-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="b7e06-117">Para adicionar um ouvinte de rastreamento, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b7e06-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b7e06-118">Nesse arquivo, você pode adicionar um ouvinte, defina seu tipo e definir seus parâmetros, remover um ouvinte ou limpar todos os ouvintes anteriormente definidos pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b7e06-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="b7e06-119">O arquivo de configuração deve ser formatado semelhante ao exemplo a seguir:</span><span class="sxs-lookup"><span data-stu-id="b7e06-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```xml  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="b7e06-120">O exemplo de código a seguir calcula binomial coeficientes, que são valores usados na probabilidade e estatísticas.</span><span class="sxs-lookup"><span data-stu-id="b7e06-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="b7e06-121">Este exemplo usa um <xref:System.Diagnostics.DefaultTraceListener> para resultados de rastreamento e log de erros.</span><span class="sxs-lookup"><span data-stu-id="b7e06-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="b7e06-122">Ele cria um novo <xref:System.Diagnostics.DefaultTraceListener>, adiciona-o para o <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleção e define o <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> propriedade para o arquivo de log especificado nos argumentos de linha de comando.</span><span class="sxs-lookup"><span data-stu-id="b7e06-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="b7e06-123">Se for detectado um erro ao processar o parâmetro de entrada, ou se o `CalcBinomial` função gera uma exceção, o <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> método registra e exibe uma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="b7e06-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="b7e06-124">Se o <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> é de propriedade `false`, a mensagem de erro também é gravada no console.</span><span class="sxs-lookup"><span data-stu-id="b7e06-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="b7e06-125">Quando o resultado é calculado com êxito, o <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> e <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> métodos gravam os resultados para o arquivo de log.</span><span class="sxs-lookup"><span data-stu-id="b7e06-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="b7e06-126">O <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, e <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> métodos fazem com que as informações de rastreamento a ser gravada somente o <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b7e06-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b7e06-127">Para gravar informações de rastreamento para todos os ouvintes na <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleta, uso o <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, e <xref:System.Diagnostics.Trace.WriteLine%2A> métodos do <xref:System.Diagnostics.Trace> classe.</span><span class="sxs-lookup"><span data-stu-id="b7e06-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b7e06-128">Essa classe é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7e06-128">This class is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7e06-129">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.DefaultTraceListener" /> com “Default” como o valor da propriedade <see cref="P:System.Diagnostics.TraceListener.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7e06-130">O código a seguir exemplo remove o <xref:System.Diagnostics.DefaultTraceListener> fornecida pelo aplicativo do <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleção e, em seguida, cria um novo <xref:System.Diagnostics.DefaultTraceListener> e adiciona-o para o <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleção.</span><span class="sxs-lookup"><span data-stu-id="b7e06-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AssertUiEnabled : bool with get, set" Usage="System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7e06-131">Obtém ou define um valor que indica se o aplicativo está sendo executado no modo de interface do usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7e06-132">
            <see langword="true" /> se o modo de interface do usuário estiver habilitado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-132">
              <see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7e06-133">O exemplo de código a seguir chama uma função que chama o <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> método para registrar uma mensagem de erro se a função gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b7e06-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="b7e06-134">Se o <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> é de propriedade `false`, o método também grava a mensagem de erro no console.</span><span class="sxs-lookup"><span data-stu-id="b7e06-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7e06-135">Emite ou exibe uma mensagem e um rastreamento de pilha para uma declaração que sempre falha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-135">Emits or displays a message and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Fail : string -&gt; unit" Usage="defaultTraceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b7e06-136">A mensagem a ser emitida ou exibida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-136">The message to emit or display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7e06-137">Emite ou exibe uma mensagem e um rastreamento de pilha para uma declaração que sempre falha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-137">Emits or displays a message and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7e06-138">Por padrão, esse método envia o `message` parâmetro e um rastreamento de pilha para uma caixa de mensagem (quando o aplicativo é executado no modo de interface do usuário) e o <xref:System.Diagnostics.DefaultTraceListener> instância.</span><span class="sxs-lookup"><span data-stu-id="b7e06-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7e06-139">O exemplo de código a seguir grava uma mensagem de erro para um <xref:System.Diagnostics.DefaultTraceListener> usando o <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="b7e06-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="b7e06-140">O método também grava a mensagem no console se uma interface do usuário não estiver disponível.</span><span class="sxs-lookup"><span data-stu-id="b7e06-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="defaultTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b7e06-141">A mensagem a ser emitida ou exibida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-141">The message to emit or display.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="b7e06-142">A mensagem detalhada a ser emitida ou exibida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-142">The detailed message to emit or display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7e06-143">Emite ou exibe mensagens detalhadas e um rastreamento de pilha para uma declaração que sempre falha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7e06-144">Por padrão, esse método envia o `message` parâmetro, o `detailMessage` parâmetro e um rastreamento de pilha para uma caixa de mensagem (quando o aplicativo é executado no modo de interface do usuário) e o <xref:System.Diagnostics.DefaultTraceListener> instância.</span><span class="sxs-lookup"><span data-stu-id="b7e06-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7e06-145">O exemplo de código a seguir chama uma função que chama o <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> método para registrar uma mensagem de erro detalhadas se a função gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b7e06-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="b7e06-146">O método grava a mensagem no console se uma interface do usuário não estiver disponível.</span><span class="sxs-lookup"><span data-stu-id="b7e06-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileName : string with get, set" Usage="System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7e06-147">Obtém ou define o nome de um arquivo de log no qual as mensagens de rastreamento e depuração serão gravadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-147">Gets or sets the name of a log file to write trace or debug messages to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7e06-148">O nome de um arquivo de log no qual as mensagens de rastreamento e depuração serão gravadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-148">The name of a log file to write trace or debug messages to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7e06-149">O exemplo de código a seguir cria um novo <xref:System.Diagnostics.DefaultTraceListener>, adiciona-o para o <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> coleção e define o <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> propriedade para o arquivo de log especificado nos argumentos de linha de comando.</span><span class="sxs-lookup"><span data-stu-id="b7e06-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="defaultTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b7e06-150">A mensagem a ser gravada em <see langword="OutputDebugString" /> e <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7e06-151">Grava a saída na função <see langword="OutputDebugString" /> e no método <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7e06-152">Para obter informações sobre o Win32 `OutputDebugString` depuração da função, consulte "OutputDebugString" no MSDN ou do SDK da plataforma.</span><span class="sxs-lookup"><span data-stu-id="b7e06-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7e06-153">O exemplo de código a seguir formata os resultados de uma função e usa o <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> método para gravar a primeira parte da mensagem a um <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b7e06-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="defaultTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b7e06-154">A mensagem a ser gravada em <see langword="OutputDebugString" /> e <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7e06-155">Grava a saída para a função <see langword="OutputDebugString" /> e o método <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />, seguido por um retorno de carro e alimentação de linha (\r\n).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7e06-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7e06-156">O terminador de linha padrão é um retorno de carro seguido por uma alimentação de linha (\r\n).</span><span class="sxs-lookup"><span data-stu-id="b7e06-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="b7e06-157">Para obter informações sobre o Win32 `OutputDebugString` depuração da função, consulte o SDK da plataforma ou MSDN.</span><span class="sxs-lookup"><span data-stu-id="b7e06-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="b7e06-158">Esse método define o <xref:System.Diagnostics.TraceListener.NeedIndent%2A> propriedade para `true`.</span><span class="sxs-lookup"><span data-stu-id="b7e06-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7e06-159">O exemplo de código a seguir formata os resultados de uma função e usa o <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> método para gravar a última parte da mensagem a um <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="b7e06-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>