<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcf465491257980e042b06fb8c34d629c1463d98" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675476" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <TypeSignature Language="F#" Value="type Debug = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="77c27-101">Provides a set of methods and properties that help debug your code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77c27-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-102">Se você usar métodos de <xref:System.Diagnostics.Debug> classe para imprimir informações de depuração e verifique sua lógica de declarações, você pode tornar seu código mais robusto sem afetar o desempenho e código o tamanho de seu produto de envio.</span><span class="sxs-lookup"><span data-stu-id="77c27-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="77c27-103">Essa classe fornece métodos para exibir um <xref:System.Diagnostics.Debug.Assert%2A> caixa de diálogo e para emitir uma declaração que sempre irá falhar.</span><span class="sxs-lookup"><span data-stu-id="77c27-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="77c27-104">Essa classe fornece métodos de gravação em variações a seguir: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> e <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="77c27-105">O <xref:System.Diagnostics.BooleanSwitch> e <xref:System.Diagnostics.TraceSwitch> classes fornecem meios para controlar dinamicamente a saída de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="77c27-106">Você pode modificar os valores dessas opções sem recompilar o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="77c27-107">Para obter informações sobre como usar o arquivo de configuração para definir uma opção, consulte o <xref:System.Diagnostics.Switch> classe e o [opções de rastreamento](~/docs/framework/debug-trace-profile/trace-switches.md) tópico.</span><span class="sxs-lookup"><span data-stu-id="77c27-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="77c27-108">Você pode personalizar o destino da saída de rastreamento adicionando <xref:System.Diagnostics.TraceListener> instâncias ou removendo instâncias da <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="77c27-109">O <xref:System.Diagnostics.Debug.Listeners%2A> coleção é compartilhada por ambos os <xref:System.Diagnostics.Debug> e o <xref:System.Diagnostics.Trace> classes; adicionando um ouvinte de rastreamento para qualquer classe adiciona o ouvinte a ambos.</span><span class="sxs-lookup"><span data-stu-id="77c27-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="77c27-110">Por padrão, o <xref:System.Diagnostics.DefaultTraceListener> classe emite a saída de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-111">Adicionar um ouvinte de rastreamento para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta pode causar uma exceção seja lançada durante um rastreamento, se um recurso usado pelo ouvinte de rastreamento não está disponível.</span><span class="sxs-lookup"><span data-stu-id="77c27-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="77c27-112">As condições e a exceção lançada dependem o ouvinte de rastreamento e não podem ser enumerados neste tópico.</span><span class="sxs-lookup"><span data-stu-id="77c27-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="77c27-113">Pode ser útil fazer chamadas para o <xref:System.Diagnostics.Debug> métodos em `try` / `catch` blocos para detectar e lidar com todas as exceções de ouvintes de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="77c27-114">Você pode modificar o nível de recuo usando o <xref:System.Diagnostics.Debug.Indent%2A> método ou o <xref:System.Diagnostics.Debug.IndentLevel%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="77c27-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="77c27-115">Para modificar o espaçamento de recuo, use o <xref:System.Diagnostics.Debug.IndentSize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="77c27-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="77c27-116">Você pode especificar se deseja liberar automaticamente o buffer de saída depois de cada gravação, definindo o <xref:System.Diagnostics.Debug.AutoFlush%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="77c27-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="77c27-117">Para definir o <xref:System.Diagnostics.Debug.AutoFlush%2A> e <xref:System.Diagnostics.Debug.IndentSize%2A> para <xref:System.Diagnostics.Debug>, você pode editar o arquivo de configuração correspondente ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="77c27-118">O arquivo de configuração deve ser formatado como mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="77c27-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="77c27-119">O <xref:System.Diagnostics.ConditionalAttribute> atributo é aplicado a métodos de <xref:System.Diagnostics.Debug>.</span><span class="sxs-lookup"><span data-stu-id="77c27-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="77c27-120">Compiladores que suportem <xref:System.Diagnostics.ConditionalAttribute> ignorar chamadas para esses métodos, a menos que "DEBUG" é definido como um símbolo de compilação condicional.</span><span class="sxs-lookup"><span data-stu-id="77c27-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="77c27-121">Consulte a documentação do compilador para determinar se <xref:System.Diagnostics.ConditionalAttribute> tem suporte e a sintaxe para definir um símbolo de compilação condicional.</span><span class="sxs-lookup"><span data-stu-id="77c27-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="77c27-122">Em projetos do Visual Studio c# e Visual Basic, por padrão, o símbolo de compilação condicional "DEBUG" é definido para compilações de depuração e o símbolo de "TRACE" está definido para ambos depurar e compilações de versão.</span><span class="sxs-lookup"><span data-stu-id="77c27-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="77c27-123">Para obter informações sobre como desativar esse comportamento, consulte a documentação do Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="77c27-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="77c27-124">Para obter informações sobre como depurar condicional no Visual C++, consulte [classe Debug (C + + CLI)](/cpp/dotnet/debug-class-cpp-cli).</span><span class="sxs-lookup"><span data-stu-id="77c27-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="77c27-125">Para definir o símbolo de compilação condicional "DEBUG" em c#, adicione o `/d:DEBUG` opção de linha de comando do compilador quando você compila o código usando uma linha de comando ou adicionar `#define DEBUG` à parte superior do seu arquivo.</span><span class="sxs-lookup"><span data-stu-id="77c27-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="77c27-126">No Visual Basic, adicione o `/d:DEBUG=True` opção de linha de comando do compilador ou adicionar `#Const DEBUG=True` para o arquivo.</span><span class="sxs-lookup"><span data-stu-id="77c27-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-127">O exemplo a seguir usa <xref:System.Diagnostics.Debug> para indicar o início e fim da execução do programa.</span><span class="sxs-lookup"><span data-stu-id="77c27-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="77c27-128">O exemplo também usa <xref:System.Diagnostics.Debug.Indent%2A> e <xref:System.Diagnostics.Debug.Unindent%2A> para distinguir a saída de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="77c27-129">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77c27-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Debug.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-131">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-134">Por padrão, o <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> método funciona apenas em compilações de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="77c27-135">Use o <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> método se você quiser fazer asserções versão cria.</span><span class="sxs-lookup"><span data-stu-id="77c27-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="77c27-136">Para obter mais informações, consulte [itens no código gerenciado](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="77c27-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="77c27-137">O `Assert` métodos não estão disponíveis para [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] aplicativos.</span><span class="sxs-lookup"><span data-stu-id="77c27-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="77c27-138">Normalmente, o <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> método é usado para identificar erros de lógica durante o desenvolvimento de programa.</span><span class="sxs-lookup"><span data-stu-id="77c27-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="77c27-139"><xref:System.Diagnostics.Debug.Assert%2A> avalia a condição.</span><span class="sxs-lookup"><span data-stu-id="77c27-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="77c27-140">Se o resultado for `false`, ele envia uma mensagem de falha para o <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="77c27-141">Você pode personalizar esse comportamento adicionando um <xref:System.Diagnostics.TraceListener> , ou remover uma, a <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="77c27-142">Quando o aplicativo é executado no modo de interface do usuário, ele exibe uma caixa de mensagem que mostra a pilha de chamadas com arquivos e números de linha.</span><span class="sxs-lookup"><span data-stu-id="77c27-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="77c27-143">A caixa de mensagem contém três botões: **anular**, **novamente**, e **ignorar**.</span><span class="sxs-lookup"><span data-stu-id="77c27-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="77c27-144">Clique o **anular** botão encerra o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="77c27-145">Clicando em **novamente** envia para o código no depurador se seu aplicativo estiver sendo executado em um depurador ou oferece para abrir um depurador se não for.</span><span class="sxs-lookup"><span data-stu-id="77c27-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="77c27-146">Clicando em **ignorar** continua com a próxima instrução no código.</span><span class="sxs-lookup"><span data-stu-id="77c27-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="77c27-147"> aplicativos não dão suporte a caixas de diálogo modal, para que eles se comportam da mesma maneira no modo de interface do usuário e o modo de interface do usuário não.</span><span class="sxs-lookup"><span data-stu-id="77c27-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="77c27-148">A mensagem é gravada para os ouvintes de rastreamento ativo no modo de depuração, ou nenhuma mensagem é gravada no modo de liberação.</span><span class="sxs-lookup"><span data-stu-id="77c27-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-149">A exibição da caixa de mensagem depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-150">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="77c27-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="77c27-151">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ &lt;limpar&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), o [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método sobre o <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="77c27-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="77c27-152">Você pode alterar o comportamento do <xref:System.Diagnostics.DefaultTraceListener> no arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="77c27-153">Nesse arquivo, você pode habilitar e desabilitar a caixa de mensagem assert ou definir o <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="77c27-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77c27-154">O arquivo de configuração deve ser formatado da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="77c27-154">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="77c27-155">O exemplo a seguir cria um índice para uma matriz, executa alguma ação para definir o valor do índice e, em seguida, chama <xref:System.Diagnostics.Debug.Assert%2A> para confirmar se o valor de índice é válido.</span><span class="sxs-lookup"><span data-stu-id="77c27-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="77c27-156">Se não for válido, <xref:System.Diagnostics.Debug.Assert%2A> gera a pilha de chamadas.</span><span class="sxs-lookup"><span data-stu-id="77c27-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-157">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-161">Por padrão, o <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> método funciona apenas em compilações de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="77c27-162">Use o <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> método se você quiser fazer asserções versão cria.</span><span class="sxs-lookup"><span data-stu-id="77c27-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="77c27-163">Para obter mais informações, consulte [itens no código gerenciado](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="77c27-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="77c27-164">Normalmente, o <xref:System.Diagnostics.Debug.Assert%2A> método é usado para identificar erros de lógica durante o desenvolvimento de programa.</span><span class="sxs-lookup"><span data-stu-id="77c27-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="77c27-165"><xref:System.Diagnostics.Debug.Assert%2A> avalia a condição.</span><span class="sxs-lookup"><span data-stu-id="77c27-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="77c27-166">Se o resultado for `false`, ele envia a mensagem de diagnóstica especificada para o <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="77c27-167">Você pode personalizar esse comportamento adicionando um <xref:System.Diagnostics.TraceListener> , ou remover uma, a <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="77c27-168">Quando o aplicativo é executado no modo de interface do usuário, ele exibe uma caixa de mensagem que mostra a pilha de chamadas com arquivos e números de linha.</span><span class="sxs-lookup"><span data-stu-id="77c27-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="77c27-169">A caixa de mensagem contém três botões: **anular**, **novamente**, e **ignorar**.</span><span class="sxs-lookup"><span data-stu-id="77c27-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="77c27-170">Clique o **anular** botão encerra o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="77c27-171">Clicando em **novamente** envia para o código no depurador se seu aplicativo estiver sendo executado em um depurador ou oferece para abrir um depurador se não for.</span><span class="sxs-lookup"><span data-stu-id="77c27-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="77c27-172">Clicando em **ignorar** continua com a próxima instrução no código.</span><span class="sxs-lookup"><span data-stu-id="77c27-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-173">A exibição da caixa de mensagem depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-174">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="77c27-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="77c27-175">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ &lt;limpar&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), o [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método sobre o <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="77c27-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="77c27-176">Você pode alterar o comportamento do <xref:System.Diagnostics.DefaultTraceListener> no arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="77c27-177">Nesse arquivo, você pode habilitar e desabilitar a caixa de mensagem assert ou definir o <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="77c27-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77c27-178">O arquivo de configuração deve ser formatado da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="77c27-178">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="77c27-179">A exemplo a seguir verifica se o `type` parâmetro é válido.</span><span class="sxs-lookup"><span data-stu-id="77c27-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="77c27-180">Se `type` é `null`, <xref:System.Diagnostics.Trace.Assert%2A> gera uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-181">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="77c27-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-186">Por padrão, o <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> método funciona apenas em compilações de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="77c27-187">Use o <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> método se você quiser fazer asserções versão cria.</span><span class="sxs-lookup"><span data-stu-id="77c27-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="77c27-188">Para obter mais informações, consulte [itens no código gerenciado](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="77c27-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="77c27-189">Normalmente, o <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> método é usado para identificar erros de lógica durante o desenvolvimento de programa.</span><span class="sxs-lookup"><span data-stu-id="77c27-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="77c27-190"><xref:System.Diagnostics.Debug.Assert%2A> avalia a condição.</span><span class="sxs-lookup"><span data-stu-id="77c27-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="77c27-191">Se o resultado for `false`, ele envia a mensagem de diagnóstico especificada e a mensagem detalhada para o <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="77c27-192">Você pode personalizar esse comportamento adicionando um <xref:System.Diagnostics.TraceListener> , ou remover uma, a <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="77c27-193">Quando o aplicativo é executado no modo de interface do usuário, ele exibe uma caixa de mensagem que mostra a pilha de chamadas com arquivos e números de linha.</span><span class="sxs-lookup"><span data-stu-id="77c27-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="77c27-194">A caixa de mensagem contém três botões: **anular**, **novamente**, e **ignorar**.</span><span class="sxs-lookup"><span data-stu-id="77c27-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="77c27-195">Clique o **anular** botão encerra o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="77c27-196">Clicando em **novamente** envia para o código no depurador se seu aplicativo estiver sendo executado em um depurador ou oferece para abrir um depurador se não for.</span><span class="sxs-lookup"><span data-stu-id="77c27-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="77c27-197">Clicando em **ignorar** continua com a próxima instrução no código.</span><span class="sxs-lookup"><span data-stu-id="77c27-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-198">A exibição da caixa de mensagem depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-199">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="77c27-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="77c27-200">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ &lt;limpar&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), o [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método sobre o <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="77c27-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="77c27-201">Você pode alterar o comportamento do <xref:System.Diagnostics.DefaultTraceListener> no arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="77c27-202">Nesse arquivo, você pode habilitar e desabilitar a caixa de mensagem assert ou definir o <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="77c27-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77c27-203">O arquivo de configuração deve ser formatado da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="77c27-203">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="77c27-204">A exemplo a seguir verifica se o `type` parâmetro é válido.</span><span class="sxs-lookup"><span data-stu-id="77c27-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="77c27-205">Se `type` é `null`, <xref:System.Diagnostics.Trace.Assert%2A> gera duas mensagens.</span><span class="sxs-lookup"><span data-stu-id="77c27-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-206">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="77c27-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="77c27-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="77c27-211">An object array that contains zero or more objects to format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-213">Esse método usa do .NET Framework para converter o valor de um objeto em sua representação de texto e inserir essa representação em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="77c27-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="77c27-214">A cadeia de caracteres resultante é enviada para o <xref:System.Diagnostics.Trace.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="77c27-215">Por padrão, o <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> método funciona apenas em compilações de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="77c27-216">Use o <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> método se você quiser fazer asserções versão cria.</span><span class="sxs-lookup"><span data-stu-id="77c27-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="77c27-217">Para obter mais informações, consulte [itens no código gerenciado](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="77c27-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="77c27-218">Normalmente, o <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> método é usado para identificar erros de lógica durante o desenvolvimento de programa.</span><span class="sxs-lookup"><span data-stu-id="77c27-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="77c27-219"><xref:System.Diagnostics.Debug.Assert%2A> avalia a condição.</span><span class="sxs-lookup"><span data-stu-id="77c27-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="77c27-220">Se o resultado for `false`, o <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> método é chamado e o `detailMessageFormat` cadeia de caracteres e `args` matriz são passados como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="77c27-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="77c27-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> em seguida, envia a mensagem de texto especificado e a mensagem de texto formatado para o <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="77c27-222">Você pode personalizar esse comportamento adicionando um <xref:System.Diagnostics.TraceListener> , ou remover uma, a <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="77c27-223">Quando o aplicativo é executado no modo de interface do usuário, ele exibe uma caixa de mensagem que mostra a pilha de chamadas com arquivos e números de linha.</span><span class="sxs-lookup"><span data-stu-id="77c27-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="77c27-224">A caixa de mensagem contém três botões: **anular**, **novamente**, e **ignorar**.</span><span class="sxs-lookup"><span data-stu-id="77c27-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="77c27-225">Clique o **anular** botão encerra o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="77c27-226">Clicando em **novamente** envia para o código no depurador se seu aplicativo estiver sendo executado em um depurador ou oferece para abrir um depurador se não for.</span><span class="sxs-lookup"><span data-stu-id="77c27-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="77c27-227">Clicando em **ignorar** continua com a próxima instrução no código.</span><span class="sxs-lookup"><span data-stu-id="77c27-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-228">A exibição da caixa de mensagem depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-229">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="77c27-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="77c27-230">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ &lt;limpar&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), o [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método sobre o <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="77c27-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="77c27-231">Você pode alterar o comportamento do <xref:System.Diagnostics.DefaultTraceListener> no arquivo de configuração que corresponde ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="77c27-232">Nesse arquivo, você pode habilitar e desabilitar a caixa de mensagem assert ou definir o <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="77c27-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="77c27-233">O arquivo de configuração deve ser formatado da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="77c27-233">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Debug.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c27-235">
            <see langword="true" /> se <see cref="M:System.Diagnostics.Debug.Flush" /> for chamado no <see cref="P:System.Diagnostics.Debug.Listeners" /> após cada gravação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-236">O padrão é `false`.</span><span class="sxs-lookup"><span data-stu-id="77c27-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="77c27-237">Liberando o fluxo não liberar seu codificador subjacente, a menos que você chamar explicitamente <xref:System.Diagnostics.Debug.Flush%2A> ou <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="77c27-238">Configuração <xref:System.Diagnostics.Debug.AutoFlush%2A> para `true` significa que os dados serão liberados do buffer no fluxo, mas o estado de codificador não será liberado.</span><span class="sxs-lookup"><span data-stu-id="77c27-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="77c27-239">Isso permite que o codificador deve manter o estado (parcial caracteres) para que ele pode codificar o próximo bloco de caracteres corretamente.</span><span class="sxs-lookup"><span data-stu-id="77c27-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="77c27-240">Este cenário afeta UTF8 e UTF7 onde determinados caracteres podem ser codificados somente depois que o codificador recebe adjacentes ou mais caracteres.</span><span class="sxs-lookup"><span data-stu-id="77c27-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="77c27-241">Para definir o <xref:System.Diagnostics.Debug.AutoFlush%2A> e <xref:System.Diagnostics.Debug.IndentSize%2A> para <xref:System.Diagnostics.Debug>, você também pode editar o arquivo de configuração correspondente ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="77c27-242">O arquivo de configuração deve ser formatado como mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="77c27-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="77c27-243">para a operação com código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="77c27-244">Valor de demanda <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Debug.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c27-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-246">Use este método quando a saída vai para um arquivo, como para o <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-247">Liberando o fluxo não liberar seu codificador subjacente, a menos que você chamar explicitamente <xref:System.Diagnostics.Debug.Flush%2A> ou <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="77c27-248">Configuração <xref:System.Diagnostics.Debug.AutoFlush%2A> para `true` significa que os dados serão liberados do buffer no fluxo, mas o estado de codificador não será liberado.</span><span class="sxs-lookup"><span data-stu-id="77c27-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="77c27-249">Isso permite que o codificador deve manter o estado (parcial caracteres) para que ele pode codificar o próximo bloco de caracteres corretamente.</span><span class="sxs-lookup"><span data-stu-id="77c27-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="77c27-250">Este cenário afeta UTF8 e UTF7 onde determinados caracteres podem ser codificados somente depois que o codificador recebe adjacentes ou mais caracteres.</span><span class="sxs-lookup"><span data-stu-id="77c27-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-251">O exemplo a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> chamado `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="77c27-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="77c27-252">`myTextListener` usa um <xref:System.IO.StreamWriter> chamado `myOutputWriter` para gravar um arquivo chamado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="77c27-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="77c27-253">O exemplo cria o gravador de arquivo, o fluxo e o texto, grava uma linha de texto para o arquivo e, em seguida, libera e fecha a saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="77c27-254">para a operação com código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="77c27-255">Valor de demanda <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-256">Emits an error message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Debug.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-257">A message to emit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-258">Emits the specified error message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-259">O comportamento padrão é que o <xref:System.Diagnostics.DefaultTraceListener> gera a mensagem para uma caixa de mensagem quando o aplicativo é executado no modo de interface do usuário e para o <xref:System.Diagnostics.TraceListener> instâncias o <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-260">A exibição da caixa de mensagem depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-261">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="77c27-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="77c27-262">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ &lt;limpar&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), o [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método sobre o <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="77c27-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="77c27-263">Você pode personalizar esse comportamento adicionando um <xref:System.Diagnostics.TraceListener> , ou remover uma, a <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-264">O exemplo a seguir usa o <xref:System.Diagnostics.Debug.Fail%2A> método para imprimir uma mensagem durante a manipulação de exceção.</span><span class="sxs-lookup"><span data-stu-id="77c27-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="77c27-265">Você também pode usar o <xref:System.Diagnostics.Debug.Fail%2A> método em uma instrução switch.</span><span class="sxs-lookup"><span data-stu-id="77c27-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-266">A message to emit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="77c27-267">A detailed message to emit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-268">Emits an error message and a detailed error message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-269">O comportamento padrão é que o <xref:System.Diagnostics.DefaultTraceListener> gera a mensagem para uma caixa de mensagem quando o aplicativo é executado no modo de interface do usuário e para o <xref:System.Diagnostics.TraceListener> instâncias o <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-270">A exibição da caixa de mensagem depende da presença do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-271">Se o <xref:System.Diagnostics.DefaultTraceListener> não está no <xref:System.Diagnostics.Trace.Listeners%2A> coleção, a caixa de mensagem não é exibida.</span><span class="sxs-lookup"><span data-stu-id="77c27-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="77c27-272">O <xref:System.Diagnostics.DefaultTraceListener> pode ser removido com o [ &lt;limpar&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), o [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), ou chamando o <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> método sobre o <xref:System.Diagnostics.Trace.Listeners%2A> propriedade (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="77c27-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="77c27-273">Você pode personalizar esse comportamento adicionando um <xref:System.Diagnostics.TraceListener> , ou remover uma, a <xref:System.Diagnostics.Debug.Listeners%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="77c27-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-274">O exemplo a seguir usa o <xref:System.Diagnostics.Debug.Fail%2A> método para imprimir uma mensagem durante a manipulação de exceção.</span><span class="sxs-lookup"><span data-stu-id="77c27-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="77c27-275">Você também pode usar o <xref:System.Diagnostics.Debug.Fail%2A> método em uma instrução switch.</span><span class="sxs-lookup"><span data-stu-id="77c27-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Debug.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c27-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-277">Liberando o fluxo não liberar seu codificador subjacente, a menos que você chamar explicitamente <xref:System.Diagnostics.Debug.Flush%2A> ou <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="77c27-278">Configuração <xref:System.Diagnostics.Debug.AutoFlush%2A> para `true` significa que os dados serão liberados do buffer no fluxo, mas o estado de codificador não será liberado.</span><span class="sxs-lookup"><span data-stu-id="77c27-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="77c27-279">Isso permite que o codificador deve manter o estado (parcial caracteres) para que ele pode codificar o próximo bloco de caracteres corretamente.</span><span class="sxs-lookup"><span data-stu-id="77c27-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="77c27-280">Este cenário afeta UTF8 e UTF7 onde determinados caracteres podem ser codificados somente depois que o codificador recebe adjacentes ou mais caracteres.</span><span class="sxs-lookup"><span data-stu-id="77c27-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-281">O exemplo a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> chamado `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="77c27-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="77c27-282">`myTextListener` usa um <xref:System.IO.FileStream> chamado `myFileStream` para gravar um arquivo chamado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="77c27-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="77c27-283">O exemplo cria o fluxo, abre o arquivo se ele existe ou cria um novo, grava uma linha de texto para o arquivo, em seguida, libera e fecha a saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c27-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="77c27-285">O exemplo a seguir define o nível de recuo e emite mensagens de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="77c27-286">Este exemplo gera a seguinte saída:</span><span class="sxs-lookup"><span data-stu-id="77c27-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Debug.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-287">Gets or sets the indent level.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c27-288">O nível de recuo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-288">The indent level.</span>
          </span>
          <span data-ttu-id="77c27-289">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-290">O <xref:System.Diagnostics.Debug.IndentLevel%2A> propriedade representa o número de vezes que o recuo de tamanho <xref:System.Diagnostics.Debug.IndentSize%2A> é aplicada.</span><span class="sxs-lookup"><span data-stu-id="77c27-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-291">O exemplo a seguir define o nível de recuo e emite mensagens de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="77c27-292">Este exemplo gera a seguinte saída:</span><span class="sxs-lookup"><span data-stu-id="77c27-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Debug.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-293">Gets or sets the number of spaces in an indent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c27-294">O número de espaços em um recuo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="77c27-295">O padrão é de quatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-296">Um <xref:System.Diagnostics.TextWriterTraceListener> interpreta esse número como espaços.</span><span class="sxs-lookup"><span data-stu-id="77c27-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="77c27-297">Um <xref:System.Diagnostics.EventLogTraceListener> ignora esse valor.</span><span class="sxs-lookup"><span data-stu-id="77c27-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="77c27-298">Para definir o <xref:System.Diagnostics.Debug.AutoFlush%2A> e <xref:System.Diagnostics.Debug.IndentSize%2A> para <xref:System.Diagnostics.Debug>, você também pode editar o arquivo de configuração correspondente ao nome do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="77c27-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="77c27-299">O arquivo de configuração deve ser formatado como mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="77c27-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Debug.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-300">Gets the collection of listeners that is monitoring the debug output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77c27-301">Um <see cref="T:System.Diagnostics.TraceListenerCollection" /> que representa uma coleção do tipo <see cref="T:System.Diagnostics.TraceListener" /> que monitora a saída de depuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-302">Os ouvintes de produzem saída formatada da saída de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="77c27-303">Por padrão, a coleção contém uma instância do <xref:System.Diagnostics.DefaultTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="77c27-304">Para remover o ouvinte padrão, chame o <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> método e passe a instância do <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="77c27-305">Para redirecionar a saída para a janela do console, adicione uma instância do <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="77c27-306">Para redirecionar a saída para um arquivo ou fluxo, adicionar uma instância do <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77c27-307">O <xref:System.Diagnostics.Debug.Listeners%2A> coleção é compartilhada por ambos os <xref:System.Diagnostics.Debug> e o <xref:System.Diagnostics.Trace> classes; adicionando um ouvinte de rastreamento para qualquer classe adiciona o ouvinte a ambos.</span><span class="sxs-lookup"><span data-stu-id="77c27-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-308">O exemplo a seguir cria um <xref:System.Diagnostics.TextWriterTraceListener> que saídas para a tela do console.</span><span class="sxs-lookup"><span data-stu-id="77c27-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="77c27-309">O código, em seguida, adiciona o novo ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="77c27-310">para a operação com código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="77c27-311">Valor de demanda <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Print : string -&gt; unit" Usage="System.Diagnostics.Debug.Print message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-313">The message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-315">O terminador de linha padrão é um retorno de carro seguido por uma alimentação de linha.</span><span class="sxs-lookup"><span data-stu-id="77c27-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="77c27-316">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Print : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Print (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="77c27-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="77c27-318">An object array containing zero or more objects to format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-320">Esse método usa do .NET Framework para converter o valor de um objeto em sua representação de texto e inserir essa representação em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="77c27-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="77c27-321">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77c27-322">
            <paramref name="format" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="77c27-323">
            <paramref name="format" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="77c27-324">-or-  The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-324">-or-  The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77c27-325">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-325">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="77c27-326">O exemplo a seguir define o nível de recuo e emite mensagens de depuração.</span><span class="sxs-lookup"><span data-stu-id="77c27-326">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="77c27-327">Este exemplo gera a seguinte saída:</span><span class="sxs-lookup"><span data-stu-id="77c27-327">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-328">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-328">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Debug.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="77c27-329">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-329">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-330">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-330">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-331">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-331">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-332">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-332">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-333">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-333">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-334">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-334">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-335">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-335">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-336">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-336">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-337">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-337">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-338">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-338">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Debug.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-339">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-339">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-340">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-340">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-341">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-341">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-342">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-342">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-343">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-343">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-344">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-344">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-345">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-345">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-346">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-346">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-347">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-347">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-348">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-348">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="77c27-349">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-349">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-350">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-350">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-351">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-351">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-352">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-352">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-353">Use o `category` mensagens de saída do parâmetro ao grupo.</span><span class="sxs-lookup"><span data-stu-id="77c27-353">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-354">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-354">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-355">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-355">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-356">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-356">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-357">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-357">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-358">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-358">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-359">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-359">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-360">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-360">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-361">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-361">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-362">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-362">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-363">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-363">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-364">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-364">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-365">Use o `category` mensagens de saída do parâmetro ao grupo.</span><span class="sxs-lookup"><span data-stu-id="77c27-365">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-366">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-367">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-367">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-368">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-368">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-369">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-369">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-370">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-370">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-371">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-371">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-372">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-372">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-373">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-373">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-374">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-374">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-375">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-375">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="77c27-376">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-376">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-377">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-377">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-378">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-378">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-379">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-379">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-380">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-380">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-381">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-381">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-382">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera o nome do parâmetro value para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-382">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-383">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-383">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-384">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera uma mensagem na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-384">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="77c27-385">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-385">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-386">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) Debug ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-386">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-387">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-387">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-388">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-388">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-389">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-389">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-390">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-390">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-391">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-391">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-392">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-392">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-393">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-393">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-394">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-394">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-395">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-395">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-396">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-396">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-397">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-397">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-398">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-398">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-399">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) Debug ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-399">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-400">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-400">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-401">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-401">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="77c27-402">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-402">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-403">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-403">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-404">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-404">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-405">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-405">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-406">O `category` parâmetro pode ser usado para agrupar mensagens de saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-406">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-407">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-407">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-408">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-408">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-409">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-409">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-410">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Verbose`, o exemplo gera o nome do `myObject` e `category` para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-410">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-411">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-411">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-412">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Error` ou superior, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-412">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-413">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-413">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-414">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) Debug ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-414">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-415">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-415">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-416">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-416">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-417">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-417">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-418">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-418">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-419">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-419">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-420">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-420">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-421">O `category` parâmetro pode ser usado para agrupar mensagens de saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-421">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-422">Este método chama o <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-422">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-423">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-423">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-424">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-424">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-425">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Verbose`, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-425">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-426">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-426">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-427">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Error` ou superior, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-427">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-428">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-428">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-429">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) Debug ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-429">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-430">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-430">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="77c27-431">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-431">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-432">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-432">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-433">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-433">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-434">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-434">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-435">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-435">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-436">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-436">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-437">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-437">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-438">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-438">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-439">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera o nome do objeto na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-439">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="77c27-440">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-440">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-441">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-441">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-442">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-442">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-443">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-443">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-444">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-444">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-445">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-445">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-446">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-446">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-447">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-447">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-448">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-448">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-449">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-449">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-450">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-450">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="77c27-451">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-451">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-452">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-452">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-453">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-453">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-454">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-454">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-455">O `category` parâmetro pode ser usado para agrupar mensagens de saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-455">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-456">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-456">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-457">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-457">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-458">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-458">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-459">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-459">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-460">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-460">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-461">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-461">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-462">A segunda mensagem é seguida por um terminador de linha.</span><span class="sxs-lookup"><span data-stu-id="77c27-462">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="77c27-463">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-463">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="77c27-464">An object array that contains zero or more objects to format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-464">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-465">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-465">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-466">Esse método usa do .NET Framework para converter o valor de um objeto em sua representação de texto e inserir essa representação em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="77c27-466">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="77c27-467">A palavra-chave na sintaxe para este método implica que a matriz de objetos pode ser um único valor.</span><span class="sxs-lookup"><span data-stu-id="77c27-467">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="77c27-468">A exceção a isso é o <xref:System.String> objeto.</span><span class="sxs-lookup"><span data-stu-id="77c27-468">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="77c27-469">Sobrecargas explícitas têm precedência, portanto uma `arg` valor de uma única cadeia de caracteres padrão será o <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="77c27-469">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="77c27-470">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-471">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-471">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="77c27-472">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-472">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-473">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-473">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-474">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-474">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-475">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-476">O `category` parâmetro pode ser usado para agrupar mensagens de saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-476">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-477">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-477">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-478">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-478">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-479">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-479">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-480">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-480">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-481">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-481">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-482">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro e o `category` na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-482">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="77c27-483">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-483">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77c27-484">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-484">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-485">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-485">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-486">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-486">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="77c27-487">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-487">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-489">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-490">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-491">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-492">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-492">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-493">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-494">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-494">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-495">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera o nome do objeto na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="77c27-496">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-496">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-497">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) WriteLine ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteLineIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-497">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-498">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-498">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-499">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-499">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-500">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-500">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-501">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-501">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-502">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-502">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-503">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-503">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-504">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-504">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-505">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-505">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-506">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-506">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-507">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-507">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-508">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-508">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-509">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-509">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-510">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) WriteLine ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteLineIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-510">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-511">The conditional expression to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-511">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="77c27-512">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-512">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="77c27-513">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-513">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-514">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-514">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-515">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-515">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-516">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-516">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-517">O `category` parâmetro pode ser usado para agrupar mensagens de saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-517">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-518">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-518">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-519">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-519">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-520">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-520">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-521">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-521">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-522">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-522">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-523">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-523">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="77c27-524">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-524">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-525">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) WriteLine ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteLineIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-525">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="77c27-526">
            <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-526">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="77c27-527">A message to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-527">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="77c27-528">A category name used to organize the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-528">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77c27-529">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-529">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c27-530">Por padrão, a saída é gravada em uma instância de <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="77c27-530">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="77c27-531">O `category` parâmetro pode ser usado para agrupar mensagens de saída.</span><span class="sxs-lookup"><span data-stu-id="77c27-531">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="77c27-532">Este método chama o <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> método do ouvinte de rastreamento.</span><span class="sxs-lookup"><span data-stu-id="77c27-532">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c27-533">O exemplo a seguir cria um <xref:System.Diagnostics.TraceSwitch> chamado `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="77c27-533">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="77c27-534">Essa opção é definida fora o exemplo de código.</span><span class="sxs-lookup"><span data-stu-id="77c27-534">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="77c27-535">Se a opção for definida como o <xref:System.Diagnostics.TraceLevel> `Error` ou superior, o exemplo gera a primeira mensagem de erro para o <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="77c27-535">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="77c27-536">Para obter informações sobre como adicionar um ouvinte para o <xref:System.Diagnostics.Debug.Listeners%2A> coleta, consulte o <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="77c27-536">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="77c27-537">Em seguida, se o <xref:System.Diagnostics.TraceLevel> é definido como `Verbose`, o exemplo gera a segunda mensagem de erro e o `category` na mesma linha como a primeira mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-537">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="77c27-538">Um terminador de linha segue a segunda mensagem.</span><span class="sxs-lookup"><span data-stu-id="77c27-538">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77c27-539">
            <para>Você pode minimizar a degradação de desempenho de instrumentar seu aplicativo usando <see langword="If...Then" /> instruções em vez de usar <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instruções. Os seguir dois exemplos de código enviem a mesma mensagem de depuração. No entanto, o primeiro exemplo é muito mais rápido quando o rastreamento está desativado, porque se <c>mySwitch.TraceError</c> é avaliada como <see langword="false" />, você não chama <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. O segundo exemplo sempre chama <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, mesmo quando <c>mySwitch.TraceError</c> é <see langword="false" /> e nenhuma saída de rastreamento é gerada. Isso pode resultar na execução desnecessária do código arbitrariamente complexo.  Primeiro exemplo: ' ' csharp if(mySwitch.TraceError) WriteLine ("um número =" + um número + "fora do intervalo"); ' ' Segundo exemplo: ' ' csharp Debug.WriteLineIf (mySwitch.TraceError, "um número =" + um número + "fora do intervalo"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77c27-539">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>