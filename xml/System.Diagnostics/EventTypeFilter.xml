<Type Name="EventTypeFilter" FullName="System.Diagnostics.EventTypeFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf51ca3cfc59c862cb212fa40bd5f44d6e35eb82" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39923602" /></Metadata><TypeSignature Language="C#" Value="public class EventTypeFilter : System.Diagnostics.TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTypeFilter extends System.Diagnostics.TraceFilter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventTypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTypeFilter&#xA;Inherits TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTypeFilter : System::Diagnostics::TraceFilter" />
  <TypeSignature Language="F#" Value="type EventTypeFilter = class&#xA;    inherit TraceFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Indica se um ouvinte deve rastrear com base no tipo de evento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um dos vários tipos diferentes de filtros pode ser atribuído a um ouvinte de rastreamento por meio de <xref:System.Diagnostics.TraceListener.Filter%2A> propriedade para fornecer uma camada de triagem além daquelas já fornecidas pelo <xref:System.Diagnostics.TraceSwitch>. O filtro pode ser usado para controlar os tipos de evento que são produzidos pelo ouvinte.  
  
 Essa classe filtre eventos com base no valor da <xref:System.Diagnostics.EventTypeFilter.EventType%2A> propriedade.  Essa propriedade pode ser definida por código ou em um arquivo de configuração para especificar o tipo de evento das mensagens que devem ser rastreadas pelo ouvinte. O valor da propriedade indica o limite no qual iniciar o rastreamento. Tipos de evento na e acima do nível especificado são rastreados. O <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> método, chamado por ouvintes para determinar se um evento deve ser rastreado, usa o valor da <xref:System.Diagnostics.EventTypeFilter.EventType%2A> propriedade.  
  
 Para definir o evento de tipo no qual será iniciada rastreamento, edite o arquivo de configuração que corresponde ao nome do seu aplicativo. Nesse arquivo, adicionar um ouvinte, defina seu tipo de filtro e especificar o tipo de evento para rastreamento. O arquivo de configuração deve ser formatado da seguinte maneira.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sharedListeners>  
      <add name="Console" type="System.Diagnostics.ConsoleTraceListener">  
        <filter type="System.Diagnostics.EventTypeFilter"   
          initializeData="Warning" />  
      </add>  
    </sharedListeners>  
  </system.diagnostics>  
</configuration>  
```  
  
 Para obter mais informações sobre como inicializar dados para um <xref:System.Diagnostics.EventTypeFilter>, consulte [ &lt;filtro&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTypeFilter (System.Diagnostics.SourceLevels level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SourceLevels level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTypeFilter(System::Diagnostics::SourceLevels level);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventTypeFilter : System.Diagnostics.SourceLevels -&gt; System.Diagnostics.EventTypeFilter" Usage="new System.Diagnostics.EventTypeFilter level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="level">Uma combinação bit a bit de valores <see cref="T:System.Diagnostics.SourceLevels" /> que especifica o tipo de evento das mensagens a serem rastreadas.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.EventTypeFilter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor de `level` parâmetro é usado para inicializar o <xref:System.Diagnostics.EventTypeFilter.EventType%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceLevels EventType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SourceLevels EventType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventTypeFilter.EventType" />
      <MemberSignature Language="VB.NET" Value="Public Property EventType As SourceLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceLevels EventType { System::Diagnostics::SourceLevels get(); void set(System::Diagnostics::SourceLevels value); };" />
      <MemberSignature Language="F#" Value="member this.EventType : System.Diagnostics.SourceLevels with get, set" Usage="System.Diagnostics.EventTypeFilter.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceLevels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de evento das mensagens a serem rastreadas.</summary>
        <value>Uma combinação bit a bit dos valores <see cref="T:System.Diagnostics.SourceLevels" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Diagnostics.EventTypeFilter.EventType%2A> propriedade indica o nível de rastreamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="eventTypeFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">Um <see cref="T:System.Diagnostics.TraceEventCache" /> que representa o cache de informações do evento de rastreamento.</param>
        <param name="source">O nome da fonte.</param>
        <param name="eventType">Um dos valores de <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Um número de identificador de rastreamento.</param>
        <param name="formatOrMessage">O formato a ser usado para gravar uma matriz de argumentos ou uma mensagem a ser gravada.</param>
        <param name="args">Uma matriz de objetos de argumento.</param>
        <param name="data1">Um objeto de dados de rastreamento.</param>
        <param name="data">Uma matriz de objetos de dados de rastreamento.</param>
        <summary>Determina se o ouvinte de rastreamento deve rastrear o evento.</summary>
        <returns><see langword="true" /> se o rastreamento deve ser produzido; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o valor da `eventType` parâmetro é maior que ou igual ao valor da <xref:System.Diagnostics.EventTypeFilter.EventType%2A> propriedade, o método retorna `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>