<Type Name="InstancePersistenceEvent&lt;T&gt;" FullName="System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a68e4ae37371295a1fca5db5088fb21a298fa3b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39754433" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstancePersistenceEvent&lt;T&gt; : System.Runtime.DurableInstancing.InstancePersistenceEvent where T : InstancePersistenceEvent&lt;T&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstancePersistenceEvent`1&lt;.ctor (class System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;!T&gt;) T&gt; extends System.Runtime.DurableInstancing.InstancePersistenceEvent" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceEvent`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstancePersistenceEvent(Of T)&#xA;Inherits InstancePersistenceEvent" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : InstancePersistenceEvent&lt;T&gt;gcnew()public ref class InstancePersistenceEvent abstract : System::Runtime::DurableInstancing::InstancePersistenceEvent" />
  <TypeSignature Language="F#" Value="type InstancePersistenceEvent&lt;'T (requires 'T :&gt; InstancePersistenceEvent&lt;'T&gt; and 'T : (new : unit -&gt; 'T))&gt; = class&#xA;    inherit InstancePersistenceEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;T&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">O tipo do evento.</typeparam>
    <summary>Representa um evento que um repositório de instâncias gera para notificar os hosts sobre uma alteração. Esta é uma classe genérica.  Classes como <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> e <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" /> derivam dessa classe.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstancePersistenceEvent (System.Xml.Linq.XName name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceEvent`1.#ctor(System.Xml.Linq.XName)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As XName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstancePersistenceEvent(System::Xml::Linq::XName ^ name);" />
      <MemberSignature Language="F#" Value="new System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T (requires 'T :&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T&gt; and 'T : (new : unit -&gt; 'T))&gt; : System.Xml.Linq.XName -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T (requires 'T :&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T&gt; and 'T : (new : unit -&gt; 'T))&gt;" Usage="new System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T (requires 'T :&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T&gt; and 'T : (new : unit -&gt; 'T))&gt; name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
      </Parameters>
      <Docs>
        <param name="name">XName (namespace combinado ao nome) do evento.</param>
        <summary>Inicializa uma instância da classe <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent`1" /> usando o parâmetro XName.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public static T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceEvent`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T (requires 'T :&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;'T&gt; and 'T : (new : unit -&gt; 'T))&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna a instância do objeto de evento real (por exemplo: <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />).</summary>
        <value>O objeto de evento.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>