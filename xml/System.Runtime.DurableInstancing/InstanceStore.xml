<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2b12f4e5d58ec2076b24cd5a49c59b380186a2e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58710046" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bcd9a-101">Representa um repositório de instâncias.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-101">Represents an instance store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-102">Um provedor de persistência fornece acesso a um armazenamento de instância por meio de uma implementação concreta do <xref:System.Runtime.DurableInstancing.InstanceStore> classe.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="bcd9a-103">Provedores de persistência podem chamar InstanceHandle.Free em identificadores passados para TryCommand, mesmo depois que o comando seja concluído.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="bcd9a-104">Mas persistência provedores não devem conter fortes referências a objetos de InstanceHandle ou InstanceOwner, pois isso pode impedir que o InstanceStore que está sendo coletado como lixo.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="bcd9a-105">Definições de fluxo de trabalho para fluxos de trabalho persistidos não podem ser alteradas.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="bcd9a-106">Se uma definição de fluxo de trabalho for alterada depois que ele é mantido, o tempo de execução do fluxo de trabalho falhará quando o fluxo de trabalho é recarregado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bcd9a-107">Inicializa uma instância da classe <see cref="T:System.Runtime.DurableInstancing.InstanceStore" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bcd9a-108">Um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-108">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="bcd9a-109">O comando a ser executado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-109">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="bcd9a-110">O valor de tempo limite para a execução do comando.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-110">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="bcd9a-111">O representante de retorno de chamada assíncrono que recebe a notificação da conclusão da operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="bcd9a-112">As informações de estado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-112">The state information.</span></span></param>
        <summary><span data-ttu-id="bcd9a-113">Executa de forma assíncrona comandos de persistência como <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> e <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-114">O status da operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-114">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-115">Um host chama o <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> método para executar um comando de persistência em um identificador de instância de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="bcd9a-116">O host obtém o identificador de instância, invocando o <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="bcd9a-117">O identificador de instância deve ser associado a entidades que representam o contexto e o assunto do comando, como uma instância, o proprietário da instância ou o bloqueio de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="bcd9a-118">Somente um comando pode ser emitido em relação a um identificador de instância por vez.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="bcd9a-119">O contexto da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-119">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="bcd9a-120">O comando de persistência a ser executado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-120">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="bcd9a-121">O valor de tempo limite para a execução do comando.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-121">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="bcd9a-122">O representante de retorno de chamada assíncrono que recebe a notificação da conclusão da operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="bcd9a-123">As informações de estado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-123">The state information.</span></span></param>
        <summary><span data-ttu-id="bcd9a-124">Um provedor de persistência implementa esse método, que determina se um comando de persistência específico pode ser executado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span></span> <span data-ttu-id="bcd9a-125">Se o comando puder ser executado, executa o comando de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-125">If the command can be executed, executes the command asynchronously.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-126">O status da operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-126">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-127">Se o comando pode ser executado, o provedor de persistência chama métodos relevantes sobre o InstancePersistenceContext para fornecer os resultados do comando.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="bcd9a-128">Embora esse método é declarado como `virtual` em vez de `abstract`, não há nenhuma implementação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="bcd9a-129">Este método deve ser substituído para fornecer funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bcd9a-130">Um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-130">An instance handle.</span></span></param>
        <param name="timeout"><span data-ttu-id="bcd9a-131">O período após o qual a operação atinge seu tempo limite.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-131">The period after which the operation times out.</span></span></param>
        <param name="callback"><span data-ttu-id="bcd9a-132">O método a ser chamado após a operação assíncrona ser concluída.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-132">The method to be called after the asynchronous operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="bcd9a-133">Um objeto que contém as informações de estado associadas à operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-133">An object containing the state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="bcd9a-134">Inicia uma operação assíncrona para os eventos gerados pelo repositório de instâncias para um identificador de instância específico.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-135">Retorna um objeto <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-135">Returns an <see cref="T:System.IAsyncResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bcd9a-136">Cria um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-136">Creates an instance handle.</span></span> <span data-ttu-id="bcd9a-137">Se o DefaultInstanceOwner estiver definido, o valor será associado automaticamente como o proprietário da instância do novo identificador.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bcd9a-138">Cria um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-138">Creates an instance handle.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-139">O identificador da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-139">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="bcd9a-140">Um identificador da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-140">An instance identifier.</span></span> <span data-ttu-id="bcd9a-141">Não deve ser Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-141">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="bcd9a-142">Cria um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-142">Creates an instance handle.</span></span>  <span data-ttu-id="bcd9a-143">Se o DefaultInstanceOwner estiver definido, o valor será associado automaticamente como o proprietário da instância do novo identificador.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="bcd9a-144">O identificador da instância passado como um parâmetro é automaticamente associado como a instância do novo identificador.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-144">The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-145">O identificador da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-145">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="bcd9a-146">O proprietário de uma instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-146">The owner of an instance.</span></span></param>
        <summary><span data-ttu-id="bcd9a-147">Cria um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-147">Creates an instance handle.</span></span> <span data-ttu-id="bcd9a-148">Se o proprietário da instância passado como um parâmetro não for nulo, o valor será associado automaticamente como o proprietário da instância do novo identificador.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="bcd9a-149">(Caso contrário, nenhum proprietário de instância está associado, mesmo se DefaultInstanceOwner for definido.)</span><span class="sxs-lookup"><span data-stu-id="bcd9a-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span></span></summary>
        <returns><span data-ttu-id="bcd9a-150">O identificador da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-150">The instance handle.</span></span> <span data-ttu-id="bcd9a-151">Um valor nulo indica que o novo identificador deve não ser automaticamente associado a um proprietário de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="bcd9a-152">Um objeto InstanceOwner que representa o proprietário de uma instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-152">An InstanceOwner object  that represents the owner of an instance.</span></span> <span data-ttu-id="bcd9a-153">Passa nulo como valor para este parâmetro para indicar que o novo identificador deve não ser automaticamente associado a um proprietário de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span></span></param>
        <param name="instanceId"><span data-ttu-id="bcd9a-154">Um identificador da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-154">An instance identifier.</span></span> <span data-ttu-id="bcd9a-155">Não deve ser Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-155">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="bcd9a-156">Cria um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-156">Creates an instance handle.</span></span> <span data-ttu-id="bcd9a-157">Se o proprietário da instância passado como um parâmetro não for nulo, o valor será associado automaticamente como o proprietário da instância do novo identificador.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="bcd9a-158">(Caso contrário, nenhum proprietário de instância está associado, mesmo se DefaultInstanceOwner for definido.) O identificador da instância passado como um parâmetro é automaticamente associado como a instância do novo identificador.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-159">O identificador da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-159">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcd9a-160">Obtém ou define o proprietário da instância padrão.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-160">Gets or sets the default instance owner.</span></span></summary>
        <value><span data-ttu-id="bcd9a-161">O proprietário da instância padrão.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-161">The default instance owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-162">Alguns hosts inferem o proprietário da instância usar lendo esta propriedade.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="bcd9a-163">WorkflowApplication pode usar essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="bcd9a-164">WorkflowServiceHost não usa essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="bcd9a-165">A propriedade DefaultInstanceOwner deve ser definida como nulo quando ele não é mais necessário.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-165">The DefaultInstanceOwner property must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="bcd9a-166">Objetos de InstanceStore podem não ser limpos se DefaultInstanceOwner não for nulo.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="bcd9a-167">Embora esse método é declarado como `virtual` em vez de `abstract`, não há nenhuma implementação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="bcd9a-168">Este método deve ser substituído para fornecer funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="bcd9a-169">O resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-169">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="bcd9a-170">Encerra a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-170">Ends the asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-171">Um objeto InstanceView que representa o estado conhecido da instância após a conclusão bem-sucedida do comando.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-172">Se BeginExecute foi chamado em uma transação, esse estado poderá incluir dados não confirmados.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="bcd9a-173">Depois que a transação é confirmada com êxito, os dados em InstanceView objeto pode ser considerado confirmada.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="bcd9a-174">O resultado da operação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-174">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="bcd9a-175">Encerra uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-175">Ends an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-176">Uma implementação de provedor de persistência deverá retornar falso se não der suporte ao comando passado para o método BeginTryCommand.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-176">A persistence provider implementation should return false if it doesn't support the command passed to the BeginTryCommand method.</span></span> <span data-ttu-id="bcd9a-177">Caso contrário, ele deve retornar verdadeiro ou gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-177">Otherwise it should return true or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="bcd9a-178">Embora esse método é declarado como `virtual` em vez de `abstract`, não há nenhuma implementação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="bcd9a-179">Este método deve ser substituído para fornecer funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="bcd9a-180">Um objeto IAsyncResult que foi entregue ao cliente pelo método Begin.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-180">An IAsyncResult object that was handed over to the client by the Begin method.</span></span></param>
        <summary><span data-ttu-id="bcd9a-181">Encerra a operação assíncrona iniciada pelo método <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-182">Retorna uma lista de objetos <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bcd9a-183">Um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-183">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="bcd9a-184">O comando a ser executado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-184">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="bcd9a-185">O valor de tempo limite para a operação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-185">The timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="bcd9a-186">Executa um comando de persistência de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-186">Executes a persistence command synchronously.</span></span> <span data-ttu-id="bcd9a-187">Exemplos de comandos de persistência: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> e <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-188">Um objeto InstanceView que representa o estado conhecido da instância após a conclusão bem-sucedida do comando.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span></span>  <span data-ttu-id="bcd9a-189">Se Execute foi chamado em uma transação, esse estado poderá incluir dados não confirmados.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-189">If Execute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="bcd9a-190">Depois que a transação é confirmada com êxito, os dados no objeto InstanceView podem ser considerados confirmados</span><span class="sxs-lookup"><span data-stu-id="bcd9a-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-191">Um host chama o <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> método para executar um comando de persistência em um identificador de instância, o host obtém invocando o <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="bcd9a-192">O identificador de instância deve ser associado a entidades que representam o contexto e o assunto do comando, como uma instância, o proprietário da instância ou o bloqueio de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="bcd9a-193">Somente um comando pode ser emitido em relação a um identificador de instância por vez.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="bcd9a-194">Se esse método é executado com um <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, ele criará um <xref:System.Runtime.DurableInstancing.InstanceOwner> e associá-lo à instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="bcd9a-195">Isso significa que nenhum outro processo poderão acessar esse fluxo de trabalho; Se o processo terminar, o fluxo de trabalho não pode ser recuperado ou executado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="bcd9a-196">Se um fluxo de trabalho é executado novamente, um <xref:System.Runtime.DurableInstancing.InstanceLockedException> será lançada.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="bcd9a-197">Se <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> não é usado, o armazenamento de instância criará um temporário <xref:System.Runtime.DurableInstancing.InstanceOwner> que será excluído no final do processo.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="bcd9a-198">No entanto, se o processo terminar antes do ponto de persistência do final do fluxo de trabalho, essa exceção será gerada, a menos que o período de tempo especificado na **HostLockRenewalPeriod** parâmetro expirou.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-198">However, if the process ends before the workflow's final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="bcd9a-199">Um objeto <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> que representa o proprietário de uma instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span></span></param>
        <summary><span data-ttu-id="bcd9a-200">Obtém todos os eventos sinalizados associados a um objeto <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-201">Retorna uma matriz de objetos <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bcd9a-202">Obtém cada objeto InstanceOwner que está associado a um identificador de instância válido ou que não passou pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-203">O proprietário da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-203">The owner of the instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-204">Retorna uma matriz de objetos InstanceOwner.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="bcd9a-205">O identificador da instância que foi liberado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-205">The instance handle that was freed.</span></span></param>
        <param name="userContext"><span data-ttu-id="bcd9a-206">As informações de contexto do usuário do provedor de persistência que foram retornadas de OnNewInstanceHandle ou nulo se OnNewInstanceHandle não for substituído.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-206">The persistence provider's user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span></span></param>
        <summary><span data-ttu-id="bcd9a-207">Invocado quando um novo identificador de instância é liberado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-207">Invoked when an instance handle is freed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="bcd9a-208">Um identificador de instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-208">An instance handle.</span></span></param>
        <summary><span data-ttu-id="bcd9a-209">Invocado quando um novo identificador de instância é criado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-209">Invoked when a new instance handle is created.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-210">Um objeto.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-210">An object.</span></span>  <span data-ttu-id="bcd9a-211">Esse objeto de contexto de usuário estará disponível para o provedor de persistência quando os comandos são executados usando o identificador e o identificador é liberado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="bcd9a-212">O evento de persistência que foi assinalado anteriormente e que deve ser redefinido.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-212">The persistence event that was signaled earlier and to be reset.</span></span></param>
        <param name="owner"><span data-ttu-id="bcd9a-213">O proprietário da instância associado ao evento de persistência.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-213">The instance owner associated with the persistence event.</span></span></param>
        <summary><span data-ttu-id="bcd9a-214">Redefine o evento com sinal e remove o evento da lista de eventos com sinal mantida pelo proprietário da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="bcd9a-215">O evento de persistência a ser sinalizado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-215">The persistence event to be signaled.</span></span></param>
        <param name="owner"><span data-ttu-id="bcd9a-216">O proprietário da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-216">The instance owner.</span></span></param>
        <summary><span data-ttu-id="bcd9a-217">Um repositório de instâncias invoca esse método para sinalizar um evento.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-217">An instance store invokes this method to signal an event.</span></span> <span data-ttu-id="bcd9a-218">Um host de fluxo de trabalho que se inscreve para este evento de persistência recebe e executa uma ação apropriada.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="bcd9a-219">O contexto da instância.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-219">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="bcd9a-220">O comando a ser executado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-220">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="bcd9a-221">O valor de tempo limite para a operação.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-221">Timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="bcd9a-222">Um provedor de persistência implementa esse método, que determina se um comando de persistência específico pode ser executado e se o comando é executado de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-223">Uma implementação de provedor de persistência deverá retornar <see langword="false" /> se não der suporte ao comando passado como um parâmetro; caso contrário, deverá retornar <see langword="true" /> ou gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-223">A persistence provider implementation should return <see langword="false" /> if it doesn't support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcd9a-224">Se o comando pode ser executado, o provedor de persistência chama métodos relevantes sobre o <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> para fornecer os resultados do comando.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bcd9a-225">O identificador da instância que está associado ao evento.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-225">The instance handle that is bound to the event.</span></span></param>
        <param name="timeout"><span data-ttu-id="bcd9a-226">O período de tempo após o qual a operação de espera atinge o tempo limite.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-226">The time span after which the waiting operation times out.</span></span></param>
        <summary><span data-ttu-id="bcd9a-227">Um host de fluxo de trabalho normalmente invoca esse método para aguardar que um evento seja sinalizado.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-227">A workflow host typically invokes this method to wait for an event to be signaled.</span></span></summary>
        <returns><span data-ttu-id="bcd9a-228">Uma lista de objetos <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span><span class="sxs-lookup"><span data-stu-id="bcd9a-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>