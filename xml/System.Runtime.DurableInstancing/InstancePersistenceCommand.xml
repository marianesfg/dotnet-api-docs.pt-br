<Type Name="InstancePersistenceCommand" FullName="System.Runtime.DurableInstancing.InstancePersistenceCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9daf16e962aeb7bcc70d45768c6287f25b324e68" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39754290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstancePersistenceCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceCommand abstract" />
  <TypeSignature Language="F#" Value="type InstancePersistenceCommand = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe base para todos os comandos relacionados a persistência. Os comandos são diferenciados pelos seus nomes. Geralmente, os comandos também podem ser distinguidos pelo seu tipo derivado.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstancePersistenceCommand (System.Xml.Linq.XName name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.#ctor(System.Xml.Linq.XName)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As XName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstancePersistenceCommand(System::Xml::Linq::XName ^ name);" />
      <MemberSignature Language="F#" Value="new System.Runtime.DurableInstancing.InstancePersistenceCommand : System.Xml.Linq.XName -&gt; System.Runtime.DurableInstancing.InstancePersistenceCommand" Usage="new System.Runtime.DurableInstancing.InstancePersistenceCommand name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
      </Parameters>
      <Docs>
        <param name="name">O XName (a combinação de namespace e nome) do comando.</param>
        <summary>Inicializa uma instância da classe <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal virtual bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyAcquiringLock : bool" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se o comando pode tentar adquirir um bloqueio na instância.</summary>
        <value>
          <see langword="true" /> Se o comando adquire um bloqueio na instância; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As classes de comando que derivam dessa classe podem substituir essa propriedade para defini-lo como `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactionEnlistmentOptional : bool" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um valor que indica se o provedor de persistência pode escolher não se inscrever na transação de ambiente (Transaction.Currnet) ao executar esse comando.</summary>
        <value>
          <see langword="True" /> Se a inscrição na transação é opcional para este comando, caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As classes de comando que derivam dessa classe podem substituir essa propriedade para defini-lo como `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Xml.Linq.XName" Usage="System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do comando de persistência.</summary>
        <value>XName (a combinação de namespace e nome).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal virtual void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit&#xA;override this.Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit" Usage="instancePersistenceCommand.Validate view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view">Um objeto <see cref="T:System.Runtime.DurableInstancing.InstanceView" /> que representa o estado atual do identificador de instância.</param>
        <summary>Valida o comando.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Comandos substituem validar para garantir que um comando seja válido para executar no momento atual. Implementações devem gerar uma InvalidOperationException se o comando não é válido para ser executada no InstanceView passado como um parâmetro.  O método Validate é chamado pelo InstanceStore antes que o comando é passado para InstanceStore.TryCommand.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>