<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemoryMappedFile.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5095760ec996b3eb3046cc228e6f3e33dbaf2b4a3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">095760ec996b3eb3046cc228e6f3e33dbaf2b4a3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Represents a memory-mapped file.</source>
          <target state="translated">Representa um arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>A memory-mapped file maps the contents of a file to an application’s logical address space.</source>
          <target state="translated">Um arquivo de memória mapeada mapeia o conteúdo de um arquivo para o espaço de endereçamento lógico de um aplicativo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</source>
          <target state="translated">Arquivos mapeados na memória permitem aos programadores trabalhar com arquivos muito grandes, porque a memória pode ser gerenciada simultaneamente e permitir acesso aleatório, completo para um arquivo sem a necessidade de busca.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Memory-mapped files can also be shared across multiple processes.</source>
          <target state="translated">Arquivos mapeados na memória também podem ser compartilhados entre vários processos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;</ph> methods create a memory-mapped file from a specified path or a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> of an existing file on disk.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;</ph> métodos de criam um arquivo de mapeamento de memória de um caminho especificado ou um <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> de um arquivo existente no disco.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Changes are automatically propagated to disk when the file is unmapped.</source>
          <target state="translated">As alterações são propagadas automaticamente para disco quando o arquivo não está mapeado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;</ph> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;</ph> métodos criam um arquivo de mapeamento de memória que não está mapeado para um arquivo existente no disco; e são adequados para a criação de memória compartilhada para comunicação entre processos (IPC).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>A memory-mapped file is associated with a name.</source>
          <target state="translated">Um arquivo de mapeamento de memória está associado um nome.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>You can create multiple views of the memory-mapped file, including views of parts of the file.</source>
          <target state="translated">Você pode criar vários modos de exibição do arquivo mapeado em memória, incluindo modos de exibição de partes do arquivo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>You can map the same part of a file to more than one address to create concurrent memory.</source>
          <target state="translated">Você pode mapear a mesma parte de um arquivo para mais de um endereço para criar simultâneas de memória.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>For two views to remain concurrent, they have to be created from the same memory-mapped file.</source>
          <target state="translated">Para que dois modos de exibição permaneçam simultâneos, precisam ser criados usando o mesmo arquivo de memória mapeada.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Creating two file mappings of the same file with two views does not provide concurrency.</source>
          <target state="translated">Criar mapeamentos de dois arquivos do mesmo arquivo de dois modos de exibição não fornece a simultaneidade.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</source>
          <target state="translated">O exemplo a seguir cria uma exibição de mapeamento na memória de parte de um arquivo muito grande e manipula uma porção dele.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Creates a memory-mapped file from an existing file.</source>
          <target state="translated">Cria um arquivo mapeado em memória de um arquivo existente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>The path to file to map.</source>
          <target state="translated">O caminho para o arquivo a ser mapeado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>Creates a memory-mapped file from a file on disk.</source>
          <target state="translated">Cria um arquivo mapeado em memória de um arquivo no disco.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>A memory-mapped file.</source>
          <target state="translated">Um arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;</ph> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;</ph> método para criar um arquivo de mapeamento de memória e, em seguida, cria uma exibição de memória mapeada para uma parte de um arquivo muito grande.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é uma cadeia de caracteres vazia, contém somente espaço em branco ou tem um ou mais caracteres inválidos, conforme definido pelo método <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to an invalid device.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refere-se a um dispositivo inválido.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> excede o tamanho máximo definido pelo sistema operacional.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">No Windows, os caminhos devem conter menos de 248 caracteres e os nomes de arquivo devem conter menos de 260 caracteres.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">O chamador não tem as permissões necessárias para o arquivo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>The path to file to map.</source>
          <target state="translated">O caminho para o arquivo a ser mapeado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>Access mode; must be <ph id="ph1">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">Modo de acesso; deve ser <ph id="ph1">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>Creates a memory-mapped file that has the specified access mode from a file on disk.</source>
          <target state="translated">Cria, de um arquivo no disco, um arquivo mapeado na memória que tem o modo de acesso especificado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>A memory-mapped file that has the specified access mode.</source>
          <target state="translated">Um arquivo mapeado na memória que tem o modo de acesso especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated">O <ph id="ph1">`mode`</ph> parâmetro está relacionado ao arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>You can use only the <ph id="ph1">&lt;xref:System.IO.FileMode.Open&gt;</ph> enumeration value to create the memory-mapped file from the source file on disk.</source>
          <target state="translated">Você pode usar apenas o <ph id="ph1">&lt;xref:System.IO.FileMode.Open&gt;</ph> valor de enumeração para criar o arquivo de memória mapeada do arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é uma cadeia de caracteres vazia, contém somente espaço em branco ou tem um ou mais caracteres inválidos, conforme definido pelo método <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to an invalid device.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refere-se a um dispositivo inválido.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Create" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileMode.CreateNew" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.IO.FileMode.Truncate" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Create" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileMode.CreateNew" /&gt;</ph> ou <ph id="ph4">&lt;see cref="F:System.IO.FileMode.Truncate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.OpenOrCreate" /&gt;</ph> and the file on disk does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.OpenOrCreate" /&gt;</ph> e o arquivo em disco não existe.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> excede o tamanho máximo definido pelo sistema operacional.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">No Windows, os caminhos devem conter menos de 248 caracteres e os nomes de arquivo devem conter menos de 260 caracteres.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">O chamador não tem as permissões necessárias para o arquivo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>The path to the file to map.</source>
          <target state="translated">O caminho para o arquivo a ser mapeado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>Access mode; must be <ph id="ph1">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">Modo de acesso; deve ser <ph id="ph1">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>Creates a memory-mapped file that has the specified access mode and name from a file on disk.</source>
          <target state="translated">Cria, de um arquivo no disco, um arquivo mapeado em memória que tem o modo de acesso e o nome especificados.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>A memory-mapped file that has the specified name and access mode.</source>
          <target state="translated">Um arquivo mapeado em memória que tem o nome e o modo de acesso especificados.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated">O <ph id="ph1">`mode`</ph> parâmetro está relacionado ao arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>You can use only the <ph id="ph1">&lt;xref:System.IO.FileMode.Open&gt;</ph> enumeration value to create the memory-mapped file from the source file on disk.</source>
          <target state="translated">Você pode usar apenas o <ph id="ph1">&lt;xref:System.IO.FileMode.Open&gt;</ph> valor de enumeração para criar o arquivo de memória mapeada do arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é uma cadeia de caracteres vazia, contém somente espaço em branco ou tem um ou mais caracteres inválidos, conforme definido pelo método <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to an invalid device.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refere-se a um dispositivo inválido.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Create" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileMode.CreateNew" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.IO.FileMode.Truncate" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Create" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileMode.CreateNew" /&gt;</ph> ou <ph id="ph4">&lt;see cref="F:System.IO.FileMode.Truncate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.OpenOrCreate" /&gt;</ph> and the file on disk does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.OpenOrCreate" /&gt;</ph> e o arquivo em disco não existe.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> excede o tamanho máximo definido pelo sistema operacional.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">No Windows, os caminhos devem conter menos de 248 caracteres e os nomes de arquivo devem conter menos de 260 caracteres.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">O chamador não tem as permissões necessárias para o arquivo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>The path to the file to map.</source>
          <target state="translated">O caminho para o arquivo a ser mapeado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>Access mode; can be any of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> enumeration values except <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</source>
          <target state="translated">Modo de acesso; pode ser qualquer um dos valores de enumeração de <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph>, exceto <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
          <target state="translated">Especifique 0 para definir a capacidade para o tamanho do arquivo no disco.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</source>
          <target state="translated">Cria, de um arquivo no disco, um arquivo mapeado em memória que tem o modo de acesso, o nome e a capacidade especificados.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated">O <ph id="ph1">`mode`</ph> parâmetro está relacionado ao arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
          <target state="translated">Se <ph id="ph1">`capacity`</ph> é maior do que o tamanho do arquivo no disco, o arquivo no disco é aumentado para corresponder a capacidade especificada, mesmo que nenhum dado é gravado no arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
          <target state="translated">Para evitar que isso ocorra, especifique 0 (zero) para a capacidade padrão, que definirá internamente <ph id="ph1">`capacity`</ph> para o tamanho do arquivo no disco.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é uma cadeia de caracteres vazia, contém somente espaço em branco ou tem um ou mais caracteres inválidos, conforme definido pelo método <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidFileNameChars" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refers to an invalid device.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> refere-se a um dispositivo inválido.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é maior que o tamanho do espaço de endereçamento lógico.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than the file size (but not zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que o tamanho do arquivo (mas não zero).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is zero, and the size of the file on disk is also zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é zero e o tamanho do arquivo em disco também é zero.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> excede o tamanho máximo definido pelo sistema operacional.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">No Windows, os caminhos devem conter menos de 248 caracteres e os nomes de arquivo devem conter menos de 260 caracteres.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">O chamador não tem as permissões necessárias para o arquivo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The path to the file to map.</source>
          <target state="translated">O caminho para o arquivo a ser mapeado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Access mode; can be any of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> enumeration values except <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</source>
          <target state="translated">Modo de acesso; pode ser qualquer um dos valores de enumeração de <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph>, exceto <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
          <target state="translated">Especifique 0 para definir a capacidade para o tamanho do arquivo no disco.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</source>
          <target state="translated">Cria um arquivo mapeado na memória que tem o modo de acesso, o nome, a capacidade e o tipo de acesso especificados de um arquivo no disco.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated">O <ph id="ph1">`mode`</ph> parâmetro está relacionado ao arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
          <target state="translated">Se <ph id="ph1">`capacity`</ph> é maior do que o tamanho do arquivo no disco, o arquivo no disco é aumentado para corresponder a capacidade especificada, mesmo que nenhum dado é gravado no arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
          <target state="translated">Para evitar que isso ocorra, especifique 0 (zero) para a capacidade padrão, que definirá internamente <ph id="ph1">`capacity`</ph> para o tamanho do arquivo no disco.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not an allowed value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor permitido.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> specifies an empty file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> especifica um arquivo vazio.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is specified as <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /&gt;</ph> and capacity is greater than the size of the file indicated by <ph id="ph3">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é especificado como <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /&gt;</ph> e capacidade é maior que o tamanho do arquivo indicado por <ph id="ph3">&lt;paramref name="path" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Append" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é maior que o tamanho do espaço de endereçamento lógico.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than the file size (but not zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que o tamanho do arquivo (mas não zero).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is zero, and the size of the file on disk is also zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é zero e o tamanho do arquivo em disco também é zero.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a defined <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não um valor de <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> definido.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The size of the file indicated by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</source>
          <target state="translated">O tamanho do arquivo indicado por <ph id="ph1">&lt;paramref name="path" /&gt;</ph> é maior do que <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> excede o tamanho máximo definido pelo sistema operacional.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">No Windows, os caminhos devem conter menos de 248 caracteres e os nomes de arquivo devem conter menos de 260 caracteres.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">O chamador não tem as permissões necessárias para o arquivo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>The file stream of the existing file.</source>
          <target state="translated">O fluxo de arquivo do arquivo existente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>Specify 0 to set the capacity to the size of <bpt id="p1">&lt;c&gt;</bpt>filestream<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Especifique 0 para definir a capacidade para o tamanho do <bpt id="p1">&lt;c&gt;</bpt>fluxo de arquivos<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>This parameter can’t be set to <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro não pode ser definido como <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um dos valores de enumeração que especifica se um identificador para o arquivo mapeado na memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>A value that indicates whether to close the source file stream when the <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph> is disposed.</source>
          <target state="translated">Um valor que indica se deve fechar o fluxo do arquivo de origem quando o <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph> é descartado.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</source>
          <target state="translated">Cria um arquivo mapeado na memória de um arquivo existente com o modo de acesso, nome, herdabilidade e capacidade especificados.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> and the length of the file are zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> e o tamanho do arquivo são zero.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value, which is not allowed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>, o que não é permitido.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /&gt;</ph> and <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> is larger than the length of <ph id="ph4">&lt;see langword="filestream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /&gt;</ph> e <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> é maior do que o comprimento de <ph id="ph4">&lt;see langword="filestream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="fileStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileStream" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than the file size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que o tamanho do arquivo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>fileStream<ept id="p1">&lt;/c&gt;</ept> to the file to map.</source>
          <target state="translated">O <bpt id="p1">&lt;c&gt;</bpt>fileStream<ept id="p1">&lt;/c&gt;</ept> para o arquivo a mapear.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
          <target state="translated">Especifique 0 para definir a capacidade para o tamanho do arquivo no disco.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>This parameter can’t be set to <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro não pode ser definido como <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">As permissões que podem ser concedidas para acesso a arquivos e operações em arquivos mapeados na memória.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um dos valores de enumeração que especifica se um identificador para o arquivo mapeado em memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not dispose <bpt id="p1">&lt;c&gt;</bpt>fileStream<ept id="p1">&lt;/c&gt;</ept> after the <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph> is closed; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to dispose <bpt id="p2">&lt;c&gt;</bpt>fileStream<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para não descartar o <bpt id="p1">&lt;c&gt;</bpt>fileStream<ept id="p1">&lt;/c&gt;</ept> depois que o <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph> for fechado; <ph id="ph3">&lt;see langword="false" /&gt;</ph> para descartar o <bpt id="p2">&lt;c&gt;</bpt>fileStream<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</source>
          <target state="translated">Cria um arquivo mapeado na memória que tem o nome, a capacidade, o tipo de acesso, as permissões de segurança, a herdabilidade e o requisito de descarte especificados.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
          <target state="translated">Se <ph id="ph1">`capacity`</ph> é maior do que o tamanho do arquivo no disco, o arquivo no disco é aumentado para corresponder a capacidade especificada, mesmo que nenhum dado é gravado no arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
          <target state="translated">Para evitar que isso ocorra, especifique 0 (zero) para a capacidade padrão, que definirá internamente <ph id="ph1">`capacity`</ph> para o tamanho do arquivo no disco.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> and the length of the file are zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> e o tamanho do arquivo são zero.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value, which is not allowed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /&gt;</ph> ou <ph id="ph3">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>, o que não é permitido.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="fileStream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="mapname" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileStream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="mapname" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than the file size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que o tamanho do arquivo.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="fileStream" /&gt;</ph> was closed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileStream" /&gt;</ph> foi fechado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph> when <ph id="ph3">&lt;paramref name="fileStream" /&gt;</ph>'s access is set to <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph> or <ph id="ph5">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph> quando o acesso de <ph id="ph3">&lt;paramref name="fileStream" /&gt;</ph> é definido como <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph> ou <ph id="ph5">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> já existe.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Creates a memory-mapped file in system memory.</source>
          <target state="translated">Cria um arquivo mapeado em memória na memória do sistema.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Creates a memory-mapped file that has the specified capacity in system memory.</source>
          <target state="translated">Cria um arquivo mapeado em memória que tem a capacidade especificada na memória do sistema.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>A memory-mapped file that has the specified name and capacity.</source>
          <target state="translated">Um arquivo mapeado em memória que tem o nome e a capacidade especificados.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">Use esse método para criar um arquivo de mapeamento de memória que não é persistido (ou seja, não associado com um arquivo no disco), que pode ser usado para compartilhar dados entre processos.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>The following example is composed of three separate processes (console applications) that write <ph id="ph1">`Boolean`</ph> values to a memory-mapped file.</source>
          <target state="translated">O exemplo a seguir é composto de três processos separados (aplicativos de console) que gravam <ph id="ph1">`Boolean`</ph> valores em um arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>The following sequence of actions occur:</source>
          <target state="translated">Ocorre a seguinte sequência de ações:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Process A creates the memory-mapped file and writes a value to it.</source>
          <target state="translated">Processo cria o arquivo de mapeamento de memória e grava um valor para ele.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Process B opens the memory-mapped file and writes a value to it.</source>
          <target state="translated">Processo B abre o arquivo de mapeamento de memória e grava um valor para ele.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Process C opens the memory-mapped file and writes a value to it.</source>
          <target state="translated">Processo C abre o arquivo de mapeamento de memória e grava um valor para ele.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Process A reads and displays the values from the memory-mapped file.</source>
          <target state="translated">Um processo lê e exibe os valores do arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</source>
          <target state="translated">Após um processo com o arquivo de mapeamento de memória, o arquivo imediatamente é recuperado pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>To run this example, do the following:</source>
          <target state="translated">Para executar este exemplo, faça o seguinte:</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Compile the applications and open three Command windows.</source>
          <target state="translated">Compilar aplicativos e abra três janelas de comando.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>In the first Command window, run Process A.</source>
          <target state="translated">Na primeira janela de comando, execute a processo.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>In the second Command window, run Process B.</source>
          <target state="translated">Na segunda janela de comando, execute o processo b</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Return to Process A and press ENTER.</source>
          <target state="translated">Retornar para processar A e pressione ENTER.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>In the third Command window, run Process C.</source>
          <target state="translated">Na terceira janela de comando, execute o processo c</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>Return to Process A and press ENTER.</source>
          <target state="translated">Retornar para processar A e pressione ENTER.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source>The output of Process A is as follows:</source>
          <target state="translated">A saída de um processo é o seguinte:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source><bpt id="p1">**</bpt>Process A<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Processo A<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source><bpt id="p1">**</bpt>Process B<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Processo B<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source><bpt id="p1">**</bpt>Process C<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Processo C<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Creates a memory-mapped file that has the specified capacity and access type in system memory.</source>
          <target state="translated">Cria um arquivo mapeado em memória que tem a capacidade e tipo de acesso especificados na memória do sistema.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">Use esse método para criar um arquivo de mapeamento de memória que não é persistido (ou seja, não associado com um arquivo no disco), que pode ser usado para compartilhar dados entre processos.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to write-only with the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como somente gravação com o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
          <target state="translated">Uma combinação bit a bit dos valores de enumeração que especifica opções de alocação de memória para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um valor que especifica se um identificador para o arquivo de mapeamento de memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</source>
          <target state="translated">Cria um arquivo mapeado em memória que tem o nome, a capacidade, o tipo de acesso, as opções de alocação de memória e a capacidade de herança especificados.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to write-only with the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como somente gravação com o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
          <target state="translated">Uma combinação bit a bit dos valores de enumeração que especifica opções de alocação de memória para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">As permissões que podem ser concedidas para acesso a arquivos e operações em arquivos mapeados em memória.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um dos valores de enumeração que especifica se um identificador para o arquivo mapeado em memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</source>
          <target state="translated">Cria um arquivo mapeado em memória que tem a capacidade, o tipo de acesso, a alocação de memória, as permissões de segurança e a herdabilidade especificadas na memória do sistema.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">Use esse método para criar um arquivo de mapeamento de memória que não é persistido (ou seja, não associado com um arquivo no disco), que pode ser usado para compartilhar dados entre processos.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to write-only with the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como somente gravação com o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Creates or opens a memory-mapped file in system memory.</source>
          <target state="translated">Cria ou abre um arquivo mapeado em memória na memória do sistema.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source>Creates or opens a memory-mapped file that has the specified capacity in system memory.</source>
          <target state="translated">Cria ou abre um arquivo mapeado em memória que tem a capacidade especificada na memória do sistema.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source>A memory-mapped file that has the specified name and size.</source>
          <target state="translated">Um arquivo mapeado em memória que tem o nome e o tamanho especificados.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">Use esse método para criar ou abrir um arquivo de mapeamento de memória que não é persistido (ou seja, não associado com um arquivo no disco), que pode ser usado para compartilhar dados entre processos.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é maior que o tamanho do espaço de endereçamento lógico.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.</source>
          <target state="translated">Cria ou abre um arquivo mapeado na memória que tem a capacidade e tipo de acesso especificados na memória do sistema.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">Use esse método para criar ou abrir um arquivo de mapeamento de memória que não é persistido (ou seja, não associado com um arquivo no disco), que pode ser usado para compartilhar dados entre processos.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to write-only with the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como somente gravação com o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é maior que o tamanho do espaço de endereçamento lógico.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The operating system denied the specified access to the file; for example, access is set to <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>, but the file or directory is read-only.</source>
          <target state="translated">O sistema operacional negou o acesso especificado ao arquivo, por exemplo, o acesso está definido como <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>, mas o arquivo ou diretório é somente leitura.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A bitwise combination of values that indicate the memory allocation options to apply to the file.</source>
          <target state="translated">Uma combinação bit a bit de valores que indicam as opções de alocação de memória a aplicar ao arquivo.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um valor que especifica se um identificador para o arquivo de mapeamento de memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</source>
          <target state="translated">Cria um novo arquivo mapeado em memória vazio ou abre um arquivo mapeado em memória existente se existir um com o mesmo nome.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>If opening an existing file, the capacity, options, and memory arguments will be ignored.</source>
          <target state="translated">Se estiver abrindo um arquivo existente, os argumentos de memória, opções e capacidades serão ignorados.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to write-only with the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como somente gravação com o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é maior que o tamanho do espaço de endereçamento lógico.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
          <source>The operating system denied the specified access to the file; for example, access is set to <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>, but the file or directory is read-only.</source>
          <target state="translated">O sistema operacional negou o acesso especificado ao arquivo, por exemplo, o acesso está definido como <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>, mas o arquivo ou diretório é somente leitura.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">Um nome a ser atribuído ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">O tamanho máximo, em bytes, a ser alocado para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
          <target state="translated">Uma combinação bit a bit dos valores de enumeração que especifica opções de alocação de memória para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">As permissões que podem ser concedidas para acesso a arquivos e operações em arquivos mapeados em memória.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um dos valores de enumeração que especifica se um identificador para o arquivo mapeado em memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</source>
          <target state="translated">Cria ou abre um arquivo mapeado na memória que tem a capacidade, o tipo de acesso, a alocação de memória, as permissões de segurança e a herdabilidade especificadas na memória do sistema.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">Use esse método para criar ou abrir um arquivo de mapeamento de memória que não é persistido (ou seja, não associado com um arquivo no disco), que pode ser usado para compartilhar dados entre processos.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is set to write-only with the <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é definido como somente gravação com o valor de enumeração <ph id="ph2">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é maior que o tamanho do espaço de endereçamento lógico.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>The operating system denied the specified <ph id="ph1">&lt;paramref name="access" /&gt;</ph> to the file; for example, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> is set to <ph id="ph3">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>, but the file or directory is read-only.</source>
          <target state="translated">O sistema operacional negou o <ph id="ph1">&lt;paramref name="access" /&gt;</ph> especificado para o arquivo, por exemplo, <ph id="ph2">&lt;paramref name="access" /&gt;</ph> está definido como <ph id="ph3">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> ou <ph id="ph4">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>, mas o arquivo ou o diretório é somente leitura.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> that maps to a view of the memory-mapped file.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> que é mapeado para uma exibição do arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> that maps to a view of the memory-mapped file.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> que é mapeado para uma exibição do arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
          <source>A randomly accessible block of memory.</source>
          <target state="translated">Um bloco de memória acessível aleatoriamente.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
          <target state="translated">Você pode usar o modo de exibição retornado por este método para acesso aleatório em um arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">O acesso ao arquivo mapeado na memória não está autorizado.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>The byte at which to start the view.</source>
          <target state="translated">O byte no qual a exibição é iniciada.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>The size of the view.</source>
          <target state="translated">O tamanho da exibição.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">Especifique 0 (zero) para criar uma exibição que começa no <bpt id="p1">&lt;c&gt;</bpt>deslocamento<ept id="p1">&lt;/c&gt;</ept> e termina aproximadamente no final do arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> that maps to a view of the memory-mapped file, and that has the specified offset and size.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> que é mapeado para uma exibição do arquivo mapeado em memória e que tem o deslocamento e tamanho especificados.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>A randomly accessible block of memory.</source>
          <target state="translated">Um bloco de memória acessível aleatoriamente.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
          <target state="translated">Você pode usar o modo de exibição retornado por este método para acesso aleatório em um arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">Para criar uma exibição completa do arquivo de memória mapeada, especifique 0 (zero) para o <ph id="ph1">`size`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">Se você fizer isso, o tamanho do modo de exibição pode ser menor ou maior que o tamanho do arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">Isso ocorre porque os modos de exibição são fornecidos em unidades de páginas de sistema e o tamanho da exibição é arredondado para o próximo tamanho de página do sistema.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>The following example creates a view of a memory-mapped file and edits it.</source>
          <target state="translated">O exemplo a seguir cria uma exibição de um arquivo de mapeamento de memória e editá-lo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="size" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="size" /&gt;</ph> é um valor negativo.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> é maior que o espaço de endereço lógico.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">O acesso ao arquivo mapeado na memória não está autorizado.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The byte at which to start the view.</source>
          <target state="translated">O byte no qual a exibição é iniciada.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The size of the view.</source>
          <target state="translated">O tamanho da exibição.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">Especifique 0 (zero) para criar uma exibição que começa no <bpt id="p1">&lt;c&gt;</bpt>deslocamento<ept id="p1">&lt;/c&gt;</ept> e termina aproximadamente no final do arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /&gt;</ph> que mapeia para uma exibição do arquivo com mapeamento em memória e que tem o deslocamento, o tamanho e as restrições de acesso especificados.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A randomly accessible block of memory.</source>
          <target state="translated">Um bloco de memória acessível aleatoriamente.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
          <target state="translated">Você pode usar o modo de exibição retornado por este método para acesso aleatório em um arquivo de mapeamento de memória.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">Para criar uma exibição completa do arquivo de memória mapeada, especifique 0 (zero) para o <ph id="ph1">`size`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">Se você fizer isso, o tamanho do modo de exibição pode ser menor ou maior que o tamanho do arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">Isso ocorre porque os modos de exibição são fornecidos em unidades de páginas de sistema e o tamanho da exibição é arredondado para o próximo tamanho de página do sistema.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="size" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="size" /&gt;</ph> é um valor negativo.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> é maior que o espaço de endereço lógico.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is invalid for the memory-mapped file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é inválido para o arquivo com mapeamento em memória.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Creates a stream that maps to a view of the memory-mapped file.</source>
          <target state="translated">Cria um fluxo que mapeia uma exibição do arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
          <source>Creates a stream that maps to a view of the memory-mapped file.</source>
          <target state="translated">Cria um fluxo que mapeia uma exibição do arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
          <source>A stream of memory.</source>
          <target state="translated">Um fluxo de memória.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
          <target state="translated">Você pode usar o fluxo retornado por esse método de acesso sequencial para um arquivo de mapeamento de memória, como para comunicações entre processos.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
          <source>The following example creates a stream and writes a value to it.</source>
          <target state="translated">O exemplo a seguir cria um fluxo e grava um valor para ele.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;</ph> method.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para o <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">O acesso ao arquivo mapeado na memória não está autorizado.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>The byte at which to start the view.</source>
          <target state="translated">O byte no qual a exibição é iniciada.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>The size of the view.</source>
          <target state="translated">O tamanho da exibição.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">Especifique 0 (zero) para criar uma exibição que começa no <bpt id="p1">&lt;c&gt;</bpt>deslocamento<ept id="p1">&lt;/c&gt;</ept> e termina aproximadamente no final do arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</source>
          <target state="translated">Cria um fluxo que é mapeado para uma exibição do arquivo mapeado em memória e que tem o deslocamento e tamanho especificados.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>A stream of memory that has the specified offset and size.</source>
          <target state="translated">Um fluxo de memória que tem o deslocamento e tamanho especificados.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
          <target state="translated">Você pode usar o fluxo retornado por esse método de acesso sequencial para um arquivo de mapeamento de memória, como para comunicações entre processos.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">Para criar uma exibição completa do arquivo de memória mapeada, especifique 0 (zero) para o <ph id="ph1">`size`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">Se você fizer isso, o tamanho do modo de exibição pode ser menor ou maior que o tamanho do arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">Isso ocorre porque os modos de exibição são fornecidos em unidades de páginas de sistema e o tamanho da exibição é arredondado para o próximo tamanho de página do sistema.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="size" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="size" /&gt;</ph> é um valor negativo.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> é maior que o espaço de endereço lógico.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">O acesso ao arquivo mapeado na memória não está autorizado.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the total virtual memory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> é maior que a memória virtual total.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The byte at which to start the view.</source>
          <target state="translated">O byte no qual a exibição é iniciada.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The size of the view.</source>
          <target state="translated">O tamanho da exibição.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">Especifique 0 (zero) para criar uma exibição que começa no <bpt id="p1">&lt;c&gt;</bpt>deslocamento<ept id="p1">&lt;/c&gt;</ept> e termina aproximadamente no final do arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica o tipo de acesso permitido para o arquivo mapeado na memória.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</source>
          <target state="translated">Cria um fluxo que é mapeado para uma exibição do arquivo mapeado em memória e que tem o deslocamento, tamanho e tipo de acesso especificados.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>A stream of memory that has the specified characteristics.</source>
          <target state="translated">Um fluxo de memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
          <target state="translated">Você pode usar o fluxo retornado por esse método de acesso sequencial para um arquivo de mapeamento de memória, como para comunicações entre processos.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">Para criar uma exibição completa do arquivo de memória mapeada, especifique 0 (zero) para o <ph id="ph1">`size`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">Se você fizer isso, o tamanho do modo de exibição pode ser menor ou maior que o tamanho do arquivo de origem no disco.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">Isso ocorre porque os modos de exibição são fornecidos em unidades de páginas de sistema e o tamanho da exibição é arredondado para o próximo tamanho de página do sistema.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="size" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="size" /&gt;</ph> é um valor negativo.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> é maior que o espaço de endereço lógico.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is invalid for the memory-mapped file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é inválido para o arquivo com mapeamento em memória.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the total virtual memory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> é maior que a memória virtual total.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source><ph id="ph1">&lt;paramref name="access" /&gt;</ph> is invalid for the memory-mapped file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="access" /&gt;</ph> é inválido para o arquivo com mapeamento em memória.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph>.</source>
          <target state="translated">Libera os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>Gets the access control to the memory-mapped file resource.</source>
          <target state="translated">Obtém o controle de acesso para o recurso de arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">As permissões que podem ser concedidas para acesso a arquivos e operações em arquivos mapeados em memória.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">Falha em uma chamada subjacente em definir informações de segurança.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">Falha em uma chamada subjacente em definir informações de segurança.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>The memory-mapped file is closed.</source>
          <target state="translated">O arquivo mapeado em memória é fechado.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>The current platform is Windows 98 or earlier.</source>
          <target state="translated">A plataforma atual é o Windows 98 ou anterior.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">Falha em uma chamada subjacente em definir informações de segurança.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl">
          <source>The memory-mapped file was opened as <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> only.</source>
          <target state="translated">O arquivo mapeado em memória foi aberto como <ph id="ph1">&lt;see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /&gt;</ph> somente.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
          <source>Opens an existing named memory-mapped file in system memory.</source>
          <target state="translated">Abre um arquivo mapeado em memória nomeado existente na memória do sistema.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>The name of the memory-mapped file to open.</source>
          <target state="translated">O nome do arquivo mapeado na memória para ser aberto.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>Opens an existing memory-mapped file that has the specified name in system memory.</source>
          <target state="translated">Abre um arquivo mapeado na memória existente que tem o nome especificado na memória do sistema.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>A memory-mapped file that has the specified name.</source>
          <target state="translated">Um arquivo mapeado na memória que tem o nome especificado.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.</source>
          <target state="translated">O arquivo de mapeamento de memória pode ser um persistente mapeados por memória arquivo (associado a um arquivo no disco) ou não persistente.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source><bpt id="p1">**</bpt>Opening a Persisted Memory-Mapped File<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Abrir um arquivo de mapeamento de memória persistente<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>The following example opens a memory-mapped file named <ph id="ph1">`ImgA`</ph> that has already been created from a file on disk (as shown in the example for the <ph id="ph2">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29&gt;</ph> method).</source>
          <target state="translated">O exemplo a seguir abre um arquivo de mapeamento de memória denominado <ph id="ph1">`ImgA`</ph> que já foi criado de um arquivo em disco (conforme mostrado no exemplo para o <ph id="ph2">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29&gt;</ph> método).</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source><bpt id="p1">**</bpt>Opening a Non-Persisted Memory-Mapped File<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Abrir um arquivo de mapeamento de memória persistentes<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>The following example opens a memory-mapped file used for inter-process communication.</source>
          <target state="translated">O exemplo a seguir abre um arquivo de mapeamento de memória usado para comunicação entre processos.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29&gt;</ph> method.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para o <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
          <source>The file specified for <ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> does not exist.</source>
          <target state="translated">O arquivo especificado para <ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source>The name of the memory-mapped file to open.</source>
          <target state="translated">O nome do arquivo mapeado na memória para ser aberto.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source>One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica os direitos de acesso a serem aplicados ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source>Opens an existing memory-mapped file that has the specified name and access rights in system memory.</source>
          <target state="translated">Abre um arquivo mapeado em memória existente que tem o nome especificado e os direitos de acesso na memória do sistema.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source><ph id="ph1">&lt;paramref name="desiredAccessRights" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="desiredAccessRights" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
          <source>The file specified for <ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> does not exist.</source>
          <target state="translated">O arquivo especificado para <ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>The name of the memory-mapped file to open.</source>
          <target state="translated">O nome do arquivo mapeado na memória para ser aberto.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</source>
          <target state="translated">Um dos valores de enumeração que especifica os direitos de acesso a serem aplicados ao arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">Um dos valores de enumeração que especifica se um identificador para o arquivo mapeado em memória pode ser herdado por um processo filho.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.IO.HandleInheritability.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</source>
          <target state="translated">Abre um arquivo mapeado em memória existente que tem o nome, os direitos de acesso e a capacidade de herança especificados na memória do sistema.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">Um arquivo mapeado na memória que tem as características especificadas.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="desiredAccessRights" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="desiredAccessRights" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inheritability" /&gt;</ph> não é um valor de enumeração <ph id="ph2">&lt;see cref="T:System.IO.HandleInheritability" /&gt;</ph> válido.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>The requested access is invalid for the memory-mapped file.</source>
          <target state="translated">O acesso solicitado é inválido para o arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>The file specified for <ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> does not exist.</source>
          <target state="translated">O arquivo especificado para <ph id="ph1">&lt;paramref name="mapName" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
          <source>Gets the file handle of a memory-mapped file.</source>
          <target state="translated">Obtém o identificador de arquivo de um arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
          <source>The handle to the memory-mapped file.</source>
          <target state="translated">O identificador do arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">As permissões que podem ser concedidas para acesso a arquivos e operações em arquivos mapeados em memória.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
          <source>Sets the access control to the memory-mapped file resource.</source>
          <target state="translated">Define o controle de acesso para o recurso de arquivo mapeado em memória.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
          <source><ph id="ph1">&lt;paramref name="memoryMappedFileSecurity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memoryMappedFileSecurity" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">Falha em uma chamada subjacente em definir informações de segurança.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">Falha em uma chamada subjacente em definir informações de segurança.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">Falha em uma chamada subjacente em definir informações de segurança.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>