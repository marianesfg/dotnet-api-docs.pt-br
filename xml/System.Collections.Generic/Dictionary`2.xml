<Type Name="Dictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;">
  <TypeSignature Language="C#" Value="public class Dictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Dictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Dictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class Dictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDeserializationCallback, IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class Dictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="791c3-101">O tipo das chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-101">The type of the keys in the dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="791c3-102">O tipo dos valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-102">The type of the values in the dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="791c3-103">Representa uma coleção de chaves e valores.</span><span class="sxs-lookup"><span data-stu-id="791c3-103">Represents a collection of keys and values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-104">O <xref:System.Collections.Generic.Dictionary%602> classe genérica fornece um mapeamento de um conjunto de chaves para um conjunto de valores.</span><span class="sxs-lookup"><span data-stu-id="791c3-104">The <xref:System.Collections.Generic.Dictionary%602> generic class provides a mapping from a set of keys to a set of values.</span></span> <span data-ttu-id="791c3-105">Cada adição ao dicionário consiste em um valor e a respectiva chave associada.</span><span class="sxs-lookup"><span data-stu-id="791c3-105">Each addition to the dictionary consists of a value and its associated key.</span></span> <span data-ttu-id="791c3-106">Recuperando um valor usando a chave é muito rápido, feche (1), pois o <xref:System.Collections.Generic.Dictionary%602> classe é implementada como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="791c3-106">Retrieving a value by using its key is very fast, close to O(1), because the <xref:System.Collections.Generic.Dictionary%602> class is implemented as a hash table.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-107">A velocidade de recuperação depende da qualidade do algoritmo de hash do tipo especificado para `TKey`.</span><span class="sxs-lookup"><span data-stu-id="791c3-107">The speed of retrieval depends on the quality of the hashing algorithm of the type specified for `TKey`.</span></span>  
  
 <span data-ttu-id="791c3-108">Como um objeto é usado como uma chave de <xref:System.Collections.Generic.Dictionary%602>, ele não deve alterar de qualquer forma que afeta o valor de hash.</span><span class="sxs-lookup"><span data-stu-id="791c3-108">As long as an object is used as a key in the <xref:System.Collections.Generic.Dictionary%602>, it must not change in any way that affects its hash value.</span></span> <span data-ttu-id="791c3-109">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o comparador de igualdade do dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-109">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the dictionary's equality comparer.</span></span> <span data-ttu-id="791c3-110">Uma chave não pode ser `null`, mas um valor possível, se o valor do tipo `TValue` é um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="791c3-110">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="791c3-111"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-111"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-112">Você pode especificar uma implementação do <xref:System.Collections.Generic.IEqualityComparer%601> interface genérica usando um construtor que aceite um `comparer` parâmetro; se você não especificar uma implementação, o comparador de igualdade genérico padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> é usado.</span><span class="sxs-lookup"><span data-stu-id="791c3-112">You can specify an implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface by using a constructor that accepts a `comparer` parameter; if you do not specify an implementation, the default generic equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> is used.</span></span> <span data-ttu-id="791c3-113">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-113">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-114">Por exemplo, você pode usar os comparadores de maiusculas e minúsculas de cadeia de caracteres fornecidos pelo <xref:System.StringComparer> classe para criar dicionários com chaves de cadeia de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-114">For example, you can use the case-insensitive string comparers provided by the <xref:System.StringComparer> class to create dictionaries with case-insensitive string keys.</span></span>  
  
 <span data-ttu-id="791c3-115">A capacidade de um <xref:System.Collections.Generic.Dictionary%602> é o número de elementos de <xref:System.Collections.Generic.Dictionary%602> pode conter.</span><span class="sxs-lookup"><span data-stu-id="791c3-115">The capacity of a <xref:System.Collections.Generic.Dictionary%602> is the number of elements the <xref:System.Collections.Generic.Dictionary%602> can hold.</span></span> <span data-ttu-id="791c3-116">Como os elementos são adicionados a um <xref:System.Collections.Generic.Dictionary%602>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="791c3-116">As elements are added to a <xref:System.Collections.Generic.Dictionary%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="791c3-117">Para grandes <xref:System.Collections.Generic.Dictionary%602> objetos, você pode aumentar a capacidade máxima para 2 bilhões de elementos em um sistema de 64 bits definindo o `enabled` atributo do elemento de configuração para `true` no ambiente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="791c3-117">For very large <xref:System.Collections.Generic.Dictionary%602> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="791c3-118">Para fins de enumeração, cada item no dicionário é tratado como um <xref:System.Collections.Generic.KeyValuePair%602> que representa um valor e sua chave de estrutura.</span><span class="sxs-lookup"><span data-stu-id="791c3-118">For purposes of enumeration, each item in the dictionary is treated as a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span> <span data-ttu-id="791c3-119">A ordem na qual os itens são retornados é indefinida.</span><span class="sxs-lookup"><span data-stu-id="791c3-119">The order in which the items are returned is undefined.</span></span>  
  
 <span data-ttu-id="791c3-120">O `foreach` instrução de linguagem c# (`for each` em C++, `For Each` no Visual Basic) retorna um objeto do tipo dos elementos na coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-120">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="791c3-121">Desde que o <xref:System.Collections.Generic.Dictionary%602> é uma coleção de chaves e valores, o tipo de elemento não é o tipo de chave ou o tipo do valor.</span><span class="sxs-lookup"><span data-stu-id="791c3-121">Since the <xref:System.Collections.Generic.Dictionary%602> is a collection of keys and values, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="791c3-122">Em vez disso, o tipo de elemento é um <xref:System.Collections.Generic.KeyValuePair%602> de tipo de chave e o tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="791c3-122">Instead, the element type is a <xref:System.Collections.Generic.KeyValuePair%602> of the key type and the value type.</span></span> <span data-ttu-id="791c3-123">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="791c3-123">For example:</span></span>  
  
 [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]
 [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="791c3-124">O `foreach` instrução é um wrapper em torno de enumerador, que permite que somente leitura da coleção, não gravar nele.</span><span class="sxs-lookup"><span data-stu-id="791c3-124">The `foreach` statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-125">Porque as chaves podem ser herdadas e seu comportamento é alterado, a exclusividade absoluta não pode ser garantida pelo comparações que usam o <xref:System.Type.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="791c3-125">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-126">O exemplo de código a seguir cria um vazio <xref:System.Collections.Generic.Dictionary%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="791c3-126">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="791c3-127">O exemplo demonstra que o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada.</span><span class="sxs-lookup"><span data-stu-id="791c3-127">The example demonstrates that the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="791c3-128">O exemplo usa o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade (indexador em c#) para recuperar valores, demonstrando que um <xref:System.Collections.Generic.KeyNotFoundException> é lançada quando uma chave solicitada não está presente e mostrando que o valor associado com uma chave pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="791c3-128">The example uses the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="791c3-129">O exemplo mostra como usar o <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> método como uma forma mais eficiente para recuperar valores, se um programa geralmente deve tentar valores de chave que não estão no dicionário e ele mostra como usar o <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> método para testar se uma chave existe antes de chamar o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="791c3-129">The example shows how to use the <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="791c3-130">O exemplo mostra como enumerar as chaves e valores no dicionário e como enumerar as chaves e valores usando apenas o <xref:System.Collections.Generic.Dictionary%602.Keys%2A> propriedade e o <xref:System.Collections.Generic.Dictionary%602.Values%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-130">The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.Dictionary%602.Keys%2A> property and the <xref:System.Collections.Generic.Dictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-131">Por fim, o exemplo demonstra o <xref:System.Collections.Generic.Dictionary%602.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="791c3-131">Finally, the example demonstrates the <xref:System.Collections.Generic.Dictionary%602.Remove%2A> method.</span></span>  
  
 [!code-cpp[Generic.Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#1)]
 [!code-csharp[Generic.Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="791c3-132">Um <see cref="T:System.Collections.Generic.Dictionary`2" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-132">A <see cref="T:System.Collections.Generic.Dictionary`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="791c3-133">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe.</span><span class="sxs-lookup"><span data-stu-id="791c3-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="791c3-134">Em casos raros em que uma enumeração afirma com acessos de gravação, a coleção deve ser bloqueada durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="791c3-134">In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</span></span> <span data-ttu-id="791c3-135">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="791c3-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="791c3-136">Para alternativas de thread-safe, consulte o <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> classe ou <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> classe.</span><span class="sxs-lookup"><span data-stu-id="791c3-136">For thread-safe alternatives, see the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class or <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span></span>  
  
 <span data-ttu-id="791c3-137">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="791c3-137">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Generic.IDictionary`2" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
    <altmember cref="T:System.Collections.Generic.KeyValuePair`2" />
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="791c3-138">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="791c3-139">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> que está vazia, tem a capacidade inicial padrão e usa o comparador de igualdade padrão para o tipo de chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-139">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-140">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o comparador de igualdade padrão.</span><span class="sxs-lookup"><span data-stu-id="791c3-140">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the default equality comparer.</span></span>  
  
 <span data-ttu-id="791c3-141"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-141"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-142">Este construtor usa o comparador de igualdade genérico padrão, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="791c3-142">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="791c3-143">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-143">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span> <span data-ttu-id="791c3-144">Como alternativa, você pode especificar uma implementação do <xref:System.Collections.Generic.IEqualityComparer%601> interface genérica usando um construtor que aceite um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="791c3-144">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-145">Se você pode estimar o tamanho da coleção, com um construtor que especifica a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-145">If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-146">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-146">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-147">O exemplo de código a seguir cria um vazio <xref:System.Collections.Generic.Dictionary%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="791c3-147">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="791c3-148">O exemplo demonstra que o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada.</span><span class="sxs-lookup"><span data-stu-id="791c3-148">The example demonstrates that the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="791c3-149">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.Dictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="791c3-149">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.</span></span>  
  
 [!code-cpp[Generic.Dictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#2)]
 [!code-csharp[Generic.Dictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#2)]
 [!code-vb[Generic.Dictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Immutable.IImmutableDictionary`2" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
        <altmember cref="T:System.IEquatable`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="791c3-150">O <see cref="T:System.Collections.Generic.IDictionary`2" /> cujos elementos são copiados para o novo <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-150">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="791c3-151">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> que contém os elementos copiados do <see cref="T:System.Collections.Generic.IDictionary`2" /> especificado e usa o comparador de igualdade padrão para o tipo de chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-151">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default equality comparer for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-152">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o padrão comparador de igualdade; da mesma forma, cada chave na fonte `dictionary` também devem ser exclusivos de acordo com o comparador de igualdade padrão.</span><span class="sxs-lookup"><span data-stu-id="791c3-152">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the default equality comparer; likewise, every key in the source `dictionary` must also be unique according to the default equality comparer.</span></span>  
  
 <span data-ttu-id="791c3-153">A capacidade inicial do novo <xref:System.Collections.Generic.Dictionary%602> é grande o suficiente para conter todos os elementos em `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="791c3-153">The initial capacity of the new <xref:System.Collections.Generic.Dictionary%602> is large enough to contain all the elements in `dictionary`.</span></span>  
  
 <span data-ttu-id="791c3-154"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-154"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-155">Este construtor usa o comparador de igualdade genérico padrão, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="791c3-155">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="791c3-156">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-156">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span> <span data-ttu-id="791c3-157">Como alternativa, você pode especificar uma implementação do <xref:System.Collections.Generic.IEqualityComparer%601> interface genérica usando um construtor que aceite um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="791c3-157">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="791c3-158">Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="791c3-158">This constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-159">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> construtor para inicializar um <xref:System.Collections.Generic.Dictionary%602> com classificados conteúdo de outro dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-159">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor to initialize a <xref:System.Collections.Generic.Dictionary%602> with sorted content from another dictionary.</span></span> <span data-ttu-id="791c3-160">O exemplo de código cria um <xref:System.Collections.Generic.SortedDictionary%602> e preenche com dados em ordem aleatória, em seguida, passa o <xref:System.Collections.Generic.SortedDictionary%602> para o <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> construtor, criando um <xref:System.Collections.Generic.Dictionary%602> que é classificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-160">The code example creates a <xref:System.Collections.Generic.SortedDictionary%602> and populates it with data in random order, then passes the <xref:System.Collections.Generic.SortedDictionary%602> to the <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor, creating a <xref:System.Collections.Generic.Dictionary%602> that is sorted.</span></span> <span data-ttu-id="791c3-161">Isso é útil se você precisar criar um dicionário classificado que, em algum momento, torna-se estático; copiar os dados de um <xref:System.Collections.Generic.SortedDictionary%602> para um <xref:System.Collections.Generic.Dictionary%602> melhora a velocidade de recuperação.</span><span class="sxs-lookup"><span data-stu-id="791c3-161">This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <xref:System.Collections.Generic.SortedDictionary%602> to a <xref:System.Collections.Generic.Dictionary%602> improves retrieval speed.</span></span>  
  
 [!code-csharp[Generic.Dictionary.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-162"><paramref name="dictionary" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-162"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="791c3-163"><paramref name="dictionary" /> contém uma ou mais chaves duplicadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-163"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
        <altmember cref="T:System.IEquatable`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="791c3-164">A implementação <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> a ser usada na comparação de chaves ou <see langword="null" /> para usar o <see cref="T:System.Collections.Generic.EqualityComparer`1" /> padrão para o tipo de chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-164">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="791c3-165">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> que está vazia, tem a capacidade inicial padrão e usa o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-165">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-166">Use este construtor com os comparadores de maiusculas e minúsculas de cadeia de caracteres fornecidos pelo <xref:System.StringComparer> classe para criar dicionários com chaves de cadeia de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-166">Use this constructor with the case-insensitive string comparers provided by the <xref:System.StringComparer> class to create dictionaries with case-insensitive string keys.</span></span>  
  
 <span data-ttu-id="791c3-167">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-167">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="791c3-168"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-168"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-169">Se `comparer` é `null`, este construtor usa o comparador de igualdade genérico padrão, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="791c3-169">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="791c3-170">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-170">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-171">Se você pode estimar o tamanho da coleção, com um construtor que especifica a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-171">If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-172">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-172">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-173">O exemplo de código a seguir cria um <xref:System.Collections.Generic.Dictionary%602> com uma comparação de igualdade de maiusculas e minúsculas para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="791c3-173">The following code example creates a <xref:System.Collections.Generic.Dictionary%602> with a case-insensitive equality comparer for the current culture.</span></span> <span data-ttu-id="791c3-174">O exemplo adiciona quatro elementos, algumas com chaves em letras minúsculas e alguns com chaves de letras maiusculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-174">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="791c3-175">O exemplo, em seguida, tentar adicionar um elemento com uma chave que difere de uma chave existente somente por maiusculas, captura a exceção resultante e exibe uma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="791c3-175">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="791c3-176">Por fim, o exemplo exibe os elementos no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-176">Finally, the example displays the elements in the dictionary.</span></span>  
  
 [!code-csharp[Generic.Dictionary.ctor_IEqC#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.ctor_IEqC/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary.ctor_IEqC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.ctor_IEqC/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
        <altmember cref="T:System.IEquatable`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="791c3-177">O número inicial de elementos que o <see cref="T:System.Collections.Generic.Dictionary`2" /> pode conter.</span><span class="sxs-lookup"><span data-stu-id="791c3-177">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</span></span></param>
        <summary><span data-ttu-id="791c3-178">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> que está vazia, tem a capacidade inicial especificada e usa o comparador de igualdade padrão para o tipo de chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-178">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-179">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o comparador de igualdade padrão.</span><span class="sxs-lookup"><span data-stu-id="791c3-179">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the default equality comparer.</span></span>  
  
 <span data-ttu-id="791c3-180">A capacidade de um <xref:System.Collections.Generic.Dictionary%602> é o número de elementos que podem ser adicionados para o <xref:System.Collections.Generic.Dictionary%602> antes de redimensionamento é necessário.</span><span class="sxs-lookup"><span data-stu-id="791c3-180">The capacity of a <xref:System.Collections.Generic.Dictionary%602> is the number of elements that can be added to the <xref:System.Collections.Generic.Dictionary%602> before resizing is necessary.</span></span> <span data-ttu-id="791c3-181">Como os elementos são adicionados a um <xref:System.Collections.Generic.Dictionary%602>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="791c3-181">As elements are added to a <xref:System.Collections.Generic.Dictionary%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="791c3-182">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-182">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-183"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-183"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-184">Este construtor usa o comparador de igualdade genérico padrão, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="791c3-184">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="791c3-185">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-185">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span> <span data-ttu-id="791c3-186">Como alternativa, você pode especificar uma implementação do <xref:System.Collections.Generic.IEqualityComparer%601> interface genérica usando um construtor que aceite um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="791c3-186">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="791c3-187">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-187">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-188">O exemplo de código a seguir cria um dicionário com uma capacidade inicial de 4 e a popula com 4 entradas.</span><span class="sxs-lookup"><span data-stu-id="791c3-188">The following code example creates a dictionary with an initial capacity of 4 and populates it with 4 entries.</span></span>  
  
 [!code-csharp[Generic.Dictionary.ctor_Int32#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.ctor_Int32/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary.ctor_Int32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.ctor_Int32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="791c3-189"><paramref name="capacity" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="791c3-189"><paramref name="capacity" /> is less than 0.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
        <altmember cref="T:System.IEquatable`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="791c3-190">O <see cref="T:System.Collections.Generic.IDictionary`2" /> cujos elementos são copiados para o novo <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-190">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="791c3-191">A implementação <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> a ser usada na comparação de chaves ou <see langword="null" /> para usar o <see cref="T:System.Collections.Generic.EqualityComparer`1" /> padrão para o tipo de chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-191">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="791c3-192">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> que contém elementos copiados da <see cref="T:System.Collections.Generic.IDictionary`2" /> especificada e usa o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-192">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-193">Use este construtor com os comparadores de maiusculas e minúsculas de cadeia de caracteres fornecidos pelo <xref:System.StringComparer> classe para criar dicionários com chaves de cadeia de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-193">Use this constructor with the case-insensitive string comparers provided by the <xref:System.StringComparer> class to create dictionaries with case-insensitive string keys.</span></span>  
  
 <span data-ttu-id="791c3-194">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o especificado comparador; da mesma forma, cada chave na fonte `dictionary` também devem ser exclusivos de acordo com o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-194">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the specified comparer; likewise, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-195">Por exemplo, chaves duplicadas podem ocorrer se `comparer` é um dos comparadores de maiusculas e minúsculas de cadeia de caracteres fornecidos pelo <xref:System.StringComparer> classe e `dictionary` não usa uma chave de comparador maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-195">For example, duplicate keys can occur if `comparer` is one of the case-insensitive string comparers provided by the <xref:System.StringComparer> class and `dictionary` does not use a case-insensitive comparer key.</span></span>  
  
 <span data-ttu-id="791c3-196">A capacidade inicial do novo <xref:System.Collections.Generic.Dictionary%602> é grande o suficiente para conter todos os elementos em `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="791c3-196">The initial capacity of the new <xref:System.Collections.Generic.Dictionary%602> is large enough to contain all the elements in `dictionary`.</span></span>  
  
 <span data-ttu-id="791c3-197"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-197"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-198">Se `comparer` é `null`, este construtor usa o comparador de igualdade genérico padrão, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="791c3-198">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="791c3-199">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-199">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="791c3-200">Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="791c3-200">This constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-201">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29> construtor para inicializar um <xref:System.Collections.Generic.Dictionary%602> com maiusculas e minúsculas conteúdo classificado do dicionário de outro.</span><span class="sxs-lookup"><span data-stu-id="791c3-201">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor to initialize a <xref:System.Collections.Generic.Dictionary%602> with case-insensitive sorted content from another dictionary.</span></span> <span data-ttu-id="791c3-202">O exemplo de código cria um <xref:System.Collections.Generic.SortedDictionary%602> com um comparador de maiusculas e minúsculas e preenche com dados em ordem aleatória, em seguida, passa o <xref:System.Collections.Generic.SortedDictionary%602> para o <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29> construtor, junto com uma comparação de igualdade maiusculas de minúsculas, criando um <xref:System.Collections.Generic.Dictionary%602> que é classificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-202">The code example creates a <xref:System.Collections.Generic.SortedDictionary%602> with a case-insensitive comparer and populates it with data in random order, then passes the <xref:System.Collections.Generic.SortedDictionary%602> to the <xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor, along with a case-insensitive equality comparer, creating a <xref:System.Collections.Generic.Dictionary%602> that is sorted.</span></span> <span data-ttu-id="791c3-203">Isso é útil se você precisar criar um dicionário classificado que, em algum momento, torna-se estático; copiar os dados de um <xref:System.Collections.Generic.SortedDictionary%602> para um <xref:System.Collections.Generic.Dictionary%602> melhora a velocidade de recuperação.</span><span class="sxs-lookup"><span data-stu-id="791c3-203">This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <xref:System.Collections.Generic.SortedDictionary%602> to a <xref:System.Collections.Generic.Dictionary%602> improves retrieval speed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-204">Quando você cria um novo dicionário com um comparador de maiusculas e minúsculas e preenchê-lo com as entradas de um dicionário que usa uma comparação diferencia maiusculas de minúsculas, como neste exemplo, ocorrerá uma exceção se o dicionário de entrada tem chaves que diferenciam somente maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-204">When you create a new dictionary with a case-insensitive comparer and populate it with entries from a dictionary that uses a case-sensitive comparer, as in this example, an exception occurs if the input dictionary has keys that differ only by case.</span></span>  
  
 [!code-csharp[Generic.Dictionary.ctor_IDicIEqC#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.ctor_IDicIEqC/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary.ctor_IDicIEqC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.ctor_IDicIEqC/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-205"><paramref name="dictionary" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-205"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="791c3-206"><paramref name="dictionary" /> contém uma ou mais chaves duplicadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-206"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
        <altmember cref="T:System.IEquatable`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">To be added.</param>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Dictionary (int capacity, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Dictionary(int capacity, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="791c3-207">O número inicial de elementos que o <see cref="T:System.Collections.Generic.Dictionary`2" /> pode conter.</span><span class="sxs-lookup"><span data-stu-id="791c3-207">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</span></span></param>
        <param name="comparer"><span data-ttu-id="791c3-208">A implementação <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> a ser usada na comparação de chaves ou <see langword="null" /> para usar o <see cref="T:System.Collections.Generic.EqualityComparer`1" /> padrão para o tipo de chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-208">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="791c3-209">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> que está vazia, tem a capacidade inicial especificada e usa o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-209">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-210">Use este construtor com os comparadores de maiusculas e minúsculas de cadeia de caracteres fornecidos pelo <xref:System.StringComparer> classe para criar dicionários com chaves de cadeia de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-210">Use this constructor with the case-insensitive string comparers provided by the <xref:System.StringComparer> class to create dictionaries with case-insensitive string keys.</span></span>  
  
 <span data-ttu-id="791c3-211">Todas as chaves em um <xref:System.Collections.Generic.Dictionary%602> devem ser exclusivos de acordo com o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="791c3-211">Every key in a <xref:System.Collections.Generic.Dictionary%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="791c3-212">A capacidade de um <xref:System.Collections.Generic.Dictionary%602> é o número de elementos que podem ser adicionados para o <xref:System.Collections.Generic.Dictionary%602> antes de redimensionamento é necessário.</span><span class="sxs-lookup"><span data-stu-id="791c3-212">The capacity of a <xref:System.Collections.Generic.Dictionary%602> is the number of elements that can be added to the <xref:System.Collections.Generic.Dictionary%602> before resizing is necessary.</span></span> <span data-ttu-id="791c3-213">Como os elementos são adicionados a um <xref:System.Collections.Generic.Dictionary%602>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="791c3-213">As elements are added to a <xref:System.Collections.Generic.Dictionary%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="791c3-214">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-214">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-215"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-215"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-216">Se `comparer` é `null`, este construtor usa o comparador de igualdade genérico padrão, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="791c3-216">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="791c3-217">Caso o tipo `TKey` implemente a interface genérica <xref:System.IEquatable%601?displayProperty=nameWithType>, a comparação de igualdade padrão usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="791c3-217">If type `TKey` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface, the default equality comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="791c3-218">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-218">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-219">O exemplo de código a seguir cria um <xref:System.Collections.Generic.Dictionary%602> com uma capacidade inicial igual a 5 e um comparador de igualdade de maiusculas e minúsculas para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="791c3-219">The following code example creates a <xref:System.Collections.Generic.Dictionary%602> with an initial capacity of 5 and a case-insensitive equality comparer for the current culture.</span></span> <span data-ttu-id="791c3-220">O exemplo adiciona quatro elementos, algumas com chaves em letras minúsculas e alguns com chaves de letras maiusculas.</span><span class="sxs-lookup"><span data-stu-id="791c3-220">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="791c3-221">O exemplo, em seguida, tentar adicionar um elemento com uma chave que difere de uma chave existente somente por maiusculas, captura a exceção resultante e exibe uma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="791c3-221">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="791c3-222">Por fim, o exemplo exibe os elementos no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-222">Finally, the example displays the elements in the dictionary.</span></span>  
  
 [!code-csharp[Generic.Dictionary.ctor_Int32IEqC#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.ctor_Int32IEqC/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary.ctor_Int32IEqC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.ctor_Int32IEqC/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="791c3-223"><paramref name="capacity" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="791c3-223"><paramref name="capacity" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
        <altmember cref="T:System.IEquatable`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Dictionary (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Dictionary(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="791c3-224">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar o <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-224">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></param>
        <param name="context"><span data-ttu-id="791c3-225">Uma estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado ao <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-225">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="791c3-226">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Dictionary`2" /> com dados serializados.</span><span class="sxs-lookup"><span data-stu-id="791c3-226">Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-227">Este construtor é chamado durante a desserialização para reconstituir a um objeto transmitido em um fluxo.</span><span class="sxs-lookup"><span data-stu-id="791c3-227">This constructor is called during deserialization to reconstitute an object transmitted over a stream.</span></span> <span data-ttu-id="791c3-228">Para obter mais informações, consulte [XML e serialização SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="791c3-228">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-229">A chave do elemento a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="791c3-229">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="791c3-230">O valor do elemento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="791c3-230">The value of the element to add.</span></span> <span data-ttu-id="791c3-231">O valor pode ser <see langword="null" /> para tipos de referência.</span><span class="sxs-lookup"><span data-stu-id="791c3-231">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="791c3-232">Adiciona a chave e o valor especificados ao dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-232">Adds the specified key and value to the dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-233">Você também pode usar o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Generic.Dictionary%602>; por exemplo, `myCollection[myKey] = myValue` (no Visual Basic, `myCollection(myKey) = myValue`).</span><span class="sxs-lookup"><span data-stu-id="791c3-233">You can also use the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.Dictionary%602>; for example, `myCollection[myKey] = myValue` (in Visual Basic, `myCollection(myKey) = myValue`).</span></span> <span data-ttu-id="791c3-234">No entanto, se a chave especificada já existe no <xref:System.Collections.Generic.Dictionary%602>, a definição de <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="791c3-234">However, if the specified key already exists in the <xref:System.Collections.Generic.Dictionary%602>, setting the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="791c3-235">Em contraste, o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método lançará uma exceção se um valor com a chave especificada já existe.</span><span class="sxs-lookup"><span data-stu-id="791c3-235">In contrast, the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method throws an exception if a value with the specified key already exists.</span></span>  
  
 <span data-ttu-id="791c3-236">Se o <xref:System.Collections.Generic.Dictionary%602.Count%2A> o valor da propriedade já for igual a capacidade, a capacidade do <xref:System.Collections.Generic.Dictionary%602> é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="791c3-236">If the <xref:System.Collections.Generic.Dictionary%602.Count%2A> property value already equals the capacity, the capacity of the <xref:System.Collections.Generic.Dictionary%602> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="791c3-237">Uma chave não pode ser `null`, mas um valor possível, se `TValue` é um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="791c3-237">A key cannot be `null`, but a value can be, if `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="791c3-238">Se <xref:System.Collections.Generic.Dictionary%602.Count%2A> é menor que a capacidade, esse método se aproximar uma operação (1).</span><span class="sxs-lookup"><span data-stu-id="791c3-238">If <xref:System.Collections.Generic.Dictionary%602.Count%2A> is less than the capacity, this method approaches an O(1) operation.</span></span> <span data-ttu-id="791c3-239">Se a capacidade deve ser aumentada para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-239">If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-240">O exemplo de código a seguir cria um vazio <xref:System.Collections.Generic.Dictionary%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="791c3-240">The following code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="791c3-241">O exemplo demonstra que o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada.</span><span class="sxs-lookup"><span data-stu-id="791c3-241">The example demonstrates that the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="791c3-242">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.Dictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="791c3-242">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.</span></span>  
  
 [!code-cpp[Generic.Dictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#2)]
 [!code-csharp[Generic.Dictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#2)]
 [!code-vb[Generic.Dictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-243"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-243"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="791c3-244">Já existe um elemento com a mesma chave no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-244">An element with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="791c3-245">Remove todas as chaves e valores do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-245">Removes all keys and values from the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-246">O <xref:System.Collections.Generic.Dictionary%602.Count%2A> propriedade é definida como 0, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-246">The <xref:System.Collections.Generic.Dictionary%602.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="791c3-247">A capacidade permanece inalterada.</span><span class="sxs-lookup"><span data-stu-id="791c3-247">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="791c3-248">Esse método é um O (`n`) operação, onde `n` é a capacidade do dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-248">This method is an O(`n`) operation, where `n` is the capacity of the dictionary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-249">Obtém o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> que é usado para determinar a igualdade de chaves para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-249">Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> that is used to determine equality of keys for the dictionary.</span></span></summary>
        <value><span data-ttu-id="791c3-250">A implementação de interface genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> que é usada para determinar a igualdade de chaves para o <see cref="T:System.Collections.Generic.Dictionary`2" /> atual e fornecer valores de hash para as chaves.</span><span class="sxs-lookup"><span data-stu-id="791c3-250">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface implementation that is used to determine equality of keys for the current <see cref="T:System.Collections.Generic.Dictionary`2" /> and to provide hash values for the keys.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-251"><xref:System.Collections.Generic.Dictionary%602> requer uma implementação de igualdade para determinar se as chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="791c3-251"><xref:System.Collections.Generic.Dictionary%602> requires an equality implementation to determine whether keys are equal.</span></span> <span data-ttu-id="791c3-252">Você pode especificar uma implementação do <xref:System.Collections.Generic.IEqualityComparer%601> interface genérica usando um construtor que aceite um `comparer` parâmetro; se você não especificar um, o comparador de igualdade genérico padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> é usado.</span><span class="sxs-lookup"><span data-stu-id="791c3-252">You can specify an implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface by using a constructor that accepts a `comparer` parameter; if you do not specify one, the default generic equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> is used.</span></span>  
  
 <span data-ttu-id="791c3-253">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-253">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-254">A chave a ser localizada no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-254">The key to locate in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="791c3-255">Determina se o <see cref="T:System.Collections.Generic.Dictionary`2" /> atual contém a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-255">Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="791c3-256"><see langword="true" /> se o <see cref="T:System.Collections.Generic.Dictionary`2" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-256"><see langword="true" /> if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-257">Este método abrange uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-257">This method approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-258">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> método para testar se uma chave existe antes de chamar o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="791c3-258">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method.</span></span> <span data-ttu-id="791c3-259">Ele também mostra como usar o <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> método para recuperar valores, que é uma maneira eficiente para recuperar valores quando um programa tenta frequentemente chaves que não estão no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-259">It also shows how to use the <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="791c3-260">Finalmente, ele mostra a maneira menos eficiente para testar se chaves existirem, usando o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade (indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="791c3-260">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="791c3-261">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Collections.Generic.Dictionary%602> classe (`openWith` é o nome do dicionário usado neste exemplo).</span><span class="sxs-lookup"><span data-stu-id="791c3-261">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class (`openWith` is the name of the Dictionary used in this example).</span></span>  
  
 [!code-cpp[Generic.Dictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#6)]
 [!code-csharp[Generic.Dictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#6)]
 [!code-vb[Generic.Dictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#6)]  
[!code-cpp[Generic.Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#5)]
[!code-csharp[Generic.Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#5)]
[!code-vb[Generic.Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#5)]  
[!code-cpp[Generic.Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#4)]
[!code-vb[Generic.Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-262"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-262"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="791c3-263">O valor a ser localizado na <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-263">The value to locate in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span> <span data-ttu-id="791c3-264">O valor pode ser <see langword="null" /> para tipos de referência.</span><span class="sxs-lookup"><span data-stu-id="791c3-264">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="791c3-265">Determinará se o <see cref="T:System.Collections.Generic.Dictionary`2" /> contiver um valor específico.</span><span class="sxs-lookup"><span data-stu-id="791c3-265">Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="791c3-266"><see langword="true" /> se o <see cref="T:System.Collections.Generic.Dictionary`2" /> contiver um elemento com o valor especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-266"><see langword="true" /> if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-267">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `TValue`, o tipo de valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-267">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `TValue`, the type of values in the dictionary.</span></span>  
  
 <span data-ttu-id="791c3-268">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-268">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span> <span data-ttu-id="791c3-269">Ou seja, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-269">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-270">Obtém o número de pares chave-valor contidos no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-270">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="791c3-271">O número de pares chave-valor contidos no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-271">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-272">A capacidade de um <xref:System.Collections.Generic.Dictionary%602> é o número de elementos que o <xref:System.Collections.Generic.Dictionary%602> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="791c3-272">The capacity of a <xref:System.Collections.Generic.Dictionary%602> is the number of elements that the <xref:System.Collections.Generic.Dictionary%602> can store.</span></span> <span data-ttu-id="791c3-273">O <xref:System.Collections.Generic.Dictionary%602.Count%2A> propriedade é o número de elementos que estão realmente no <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-273">The <xref:System.Collections.Generic.Dictionary%602.Count%2A> property is the number of elements that are actually in the <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-274">A capacidade é sempre maior que ou igual a <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-274">The capacity is always greater than or equal to <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span> <span data-ttu-id="791c3-275">Se <xref:System.Collections.Generic.Dictionary%602.Count%2A> excede a capacidade durante a adição de elementos, a capacidade é aumentada, automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="791c3-275">If <xref:System.Collections.Generic.Dictionary%602.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="791c3-276">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-276">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureCapacity">
      <MemberSignature Language="C#" Value="public int EnsureCapacity (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EnsureCapacity(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureCapacity (capacity As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EnsureCapacity(int capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Dictionary`2/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Dictionary(Of TKey, TValue).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Dictionary&lt;TKey, TValue&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="791c3-277">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-277">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="791c3-278">A estrutura <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /> do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-278">A <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /> structure for the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-279">Para fins de enumeração, cada item é uma estrutura <xref:System.Collections.Generic.KeyValuePair%602> que representa um valor e sua chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-279">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="791c3-280">A instrução `foreach` da linguagem C# (`for each` em C++, `For Each` no Visual Basic) oculta a complexidade de enumeradores.</span><span class="sxs-lookup"><span data-stu-id="791c3-280">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="791c3-281">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="791c3-281">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="791c3-282">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="791c3-282">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="791c3-283">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-283">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="791c3-284">Nesta posição, o <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="791c3-284">At this position, the <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="791c3-285">Por isso, você deve chamar o método <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-285">Therefore, you must call the <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-286">Para obter melhor desempenho, o enumerador retornado por essa propriedade gerará uma exceção se ele está posicionado antes do primeiro elemento ou depois do último elemento e o <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade for acessada; o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="791c3-286">For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> property is accessed; the value of the <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> property is undefined.</span></span>  
  
 <span data-ttu-id="791c3-287">O <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade retorna o mesmo elemento até que o <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="791c3-287">The <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> property returns the same element until the <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="791c3-288"><xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> define <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="791c3-288"><xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="791c3-289">Caso <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="791c3-289">If <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="791c3-290">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="791c3-290">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="791c3-291">Caso a última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="791c3-291">If the last call to <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="791c3-292">Não é possível definir <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="791c3-292">You cannot set <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="791c3-293">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="791c3-293">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="791c3-294">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="791c3-294">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="791c3-295">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="791c3-295">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="791c3-296">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="791c3-296">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="791c3-297">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="791c3-297">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="791c3-298">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-298">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="791c3-299">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-299">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="791c3-300">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar a instância <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-300">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="791c3-301">Uma estrutura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado à instância <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-301">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2" /> instance.</span></span></param>
        <summary><span data-ttu-id="791c3-302">Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e retorna os dados necessários para serializar a instância <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-302">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.Dictionary`2" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-303">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-303">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-304"><paramref name="info" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-304"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="791c3-305">para fornecer serviços de serialização.</span><span class="sxs-lookup"><span data-stu-id="791c3-305">for providing serialization services.</span></span> <span data-ttu-id="791c3-306">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="791c3-306">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="791c3-307">requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="791c3-307">requires full trust for the immediate caller.</span></span> <span data-ttu-id="791c3-308">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="791c3-308">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-309">A chave do valor a ser obtido ou definido.</span><span class="sxs-lookup"><span data-stu-id="791c3-309">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="791c3-310">Obtém ou define o valor associado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-310">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="791c3-311">O valor associado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-311">The value associated with the specified key.</span></span> <span data-ttu-id="791c3-312">Se a chave especificada não for encontrada, uma operação get lançará um <see cref="T:System.Collections.Generic.KeyNotFoundException" /> e uma operação set criará um novo elemento com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-312">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-313">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a sintaxe c# a seguir: `myCollection[key]` (`myCollection(key)` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="791c3-313">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="791c3-314">Você também pode usar o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-314">You can also use the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.Dictionary%602>.</span></span> <span data-ttu-id="791c3-315">Quando você define o valor da propriedade, se a chave está no <xref:System.Collections.Generic.Dictionary%602>, o valor associado a essa chave é substituído pelo valor atribuído.</span><span class="sxs-lookup"><span data-stu-id="791c3-315">When you set the property value, if the key is in the <xref:System.Collections.Generic.Dictionary%602>, the value associated with that key is replaced by the assigned value.</span></span> <span data-ttu-id="791c3-316">Se a chave não está no <xref:System.Collections.Generic.Dictionary%602>, a chave e valor são adicionados ao dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-316">If the key is not in the <xref:System.Collections.Generic.Dictionary%602>, the key and value are added to the dictionary.</span></span> <span data-ttu-id="791c3-317">Em contraste, o <xref:System.Collections.Generic.Dictionary%602.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="791c3-317">In contrast, the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="791c3-318">Uma chave não pode ser `null`, mas um valor possível, se o valor do tipo `TValue` é um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="791c3-318">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="791c3-319">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-319">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property.</span></span> <span data-ttu-id="791c3-320">Visual Basic implementa <xref:System.Collections.Generic.Dictionary%602.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="791c3-320">Visual Basic implements <xref:System.Collections.Generic.Dictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="791c3-321">Obter ou definir o valor dessa propriedade se aproximar uma operação (1).</span><span class="sxs-lookup"><span data-stu-id="791c3-321">Getting or setting the value of this property approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-322">O seguinte exemplo de código usa o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade (indexador em c#) para recuperar valores, demonstrando que um <xref:System.Collections.Generic.KeyNotFoundException> é lançada quando uma chave solicitada não está presente e mostrando que o valor associado com uma chave pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="791c3-322">The following code example uses the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="791c3-323">O exemplo também mostra como usar o <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> método como uma forma mais eficiente para recuperar valores, se um programa geralmente deve tentar valores de chave que não estão no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-323">The example also shows how to use the <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="791c3-324">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.Dictionary%602> classe.</span><span class="sxs-lookup"><span data-stu-id="791c3-324">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.</span></span> <span data-ttu-id="791c3-325">`openWith` é o nome do dicionário usado neste exemplo.</span><span class="sxs-lookup"><span data-stu-id="791c3-325">`openWith` is the name of the Dictionary used in this example.</span></span>  
  
 [!code-cpp[Generic.Dictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#2)]
 [!code-csharp[Generic.Dictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#2)]
 [!code-vb[Generic.Dictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#2)]  
[!code-cpp[Generic.Dictionary#3](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#3)]
[!code-csharp[Generic.Dictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#3)]
[!code-vb[Generic.Dictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#3)]  
[!code-cpp[Generic.Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#4)]
[!code-vb[Generic.Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#4)]  
[!code-cpp[Generic.Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#5)]
[!code-csharp[Generic.Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#5)]
[!code-vb[Generic.Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-326"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-326"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="791c3-327">A propriedade é recuperada e <paramref name="key" /> não existe na coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-327">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;.KeyCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2/KeyCollection&lt;!TKey, !TValue&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As Dictionary(Of TKey, TValue).KeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;TKey, TValue&gt;::KeyCollection ^ Keys { System::Collections::Generic::Dictionary&lt;TKey, TValue&gt;::KeyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+KeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-328">Obtém uma coleção que contém as chaves do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-328">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="791c3-329">Um <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> que contém as chaves no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-329">A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-330">A ordem das chaves no <xref:System.Collections.Generic.Dictionary%602.KeyCollection> não for especificado, mas é a mesma ordem que os valores associados a <xref:System.Collections.Generic.Dictionary%602.ValueCollection> retornado pelo <xref:System.Collections.Generic.Dictionary%602.Values%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-330">The order of the keys in the <xref:System.Collections.Generic.Dictionary%602.KeyCollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.Generic.Dictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.Dictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-331">Retornado <xref:System.Collections.Generic.Dictionary%602.KeyCollection> não é uma cópia estática; em vez disso, o <xref:System.Collections.Generic.Dictionary%602.KeyCollection> refere-se novamente para as chaves no original <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-331">The returned <xref:System.Collections.Generic.Dictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.Dictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.Dictionary%602>.</span></span> <span data-ttu-id="791c3-332">Portanto, as alterações para o <xref:System.Collections.Generic.Dictionary%602> continuar sejam refletidas no <xref:System.Collections.Generic.Dictionary%602.KeyCollection>.</span><span class="sxs-lookup"><span data-stu-id="791c3-332">Therefore, changes to the <xref:System.Collections.Generic.Dictionary%602> continue to be reflected in the <xref:System.Collections.Generic.Dictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="791c3-333">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-333">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-334">O exemplo de código a seguir mostra como enumerar as chaves no dicionário usando o <xref:System.Collections.Generic.Dictionary%602.Keys%2A> propriedade e como enumerar as chaves e valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-334">The following code example shows how to enumerate the keys in the dictionary using the <xref:System.Collections.Generic.Dictionary%602.Keys%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="791c3-335">Esse código é parte de um exemplo maior que pode ser compilado e executado (`openWith` é o nome do dicionário usado neste exemplo).</span><span class="sxs-lookup"><span data-stu-id="791c3-335">This code is part of a larger example that can be compiled and executed (`openWith` is the name of the Dictionary used in this example).</span></span> <span data-ttu-id="791c3-336">Consulte <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-336">See <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 [!code-cpp[Generic.Dictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#9)]
 [!code-csharp[Generic.Dictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#9)]
 [!code-vb[Generic.Dictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#9)]  
[!code-cpp[Generic.Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#7)]
[!code-csharp[Generic.Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#7)]
[!code-vb[Generic.Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="791c3-337">A fonte do evento de desserialização.</span><span class="sxs-lookup"><span data-stu-id="791c3-337">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="791c3-338">Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e gera o evento de desserialização quando a desserialização for concluída.</span><span class="sxs-lookup"><span data-stu-id="791c3-338">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-339">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-339">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="791c3-340">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associado à instância <see cref="T:System.Collections.Generic.Dictionary`2" /> atual é inválido.</span><span class="sxs-lookup"><span data-stu-id="791c3-340">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.Dictionary`2" /> instance is invalid.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-341">A chave do elemento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="791c3-341">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="791c3-342">Remove o valor com a chave especificada do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-342">Removes the value with the specified key from the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns>
          <span data-ttu-id="791c3-343"><see langword="true" /> se o elemento for encontrado e removido com êxito; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-343"><see langword="true" /> if the element is successfully found and removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="791c3-344">Esse método retorna <see langword="false" /> se <paramref name="key" /> não foi encontrado no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-344">This method returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-345">Se o <xref:System.Collections.Generic.Dictionary%602> não contém um elemento com a chave especificada, o <xref:System.Collections.Generic.Dictionary%602> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="791c3-345">If the <xref:System.Collections.Generic.Dictionary%602> does not contain an element with the specified key, the <xref:System.Collections.Generic.Dictionary%602> remains unchanged.</span></span> <span data-ttu-id="791c3-346">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="791c3-346">No exception is thrown.</span></span>  
  
 <span data-ttu-id="791c3-347">Este método abrange uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-347">This method approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-348">O exemplo de código a seguir mostra como remover um par chave/valor de um dicionário usando o <xref:System.Collections.Generic.Dictionary%602.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="791c3-348">The following code example shows how to remove a key/value pair from a dictionary using the <xref:System.Collections.Generic.Dictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="791c3-349">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Collections.Generic.Dictionary%602> classe (`openWith` é o nome do dicionário usado neste exemplo).</span><span class="sxs-lookup"><span data-stu-id="791c3-349">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class (`openWith` is the name of the Dictionary used in this example).</span></span>  
  
 [!code-cpp[Generic.Dictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#10)]
 [!code-csharp[Generic.Dictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#10)]
 [!code-vb[Generic.Dictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-350"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-350"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Remove(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="791c3-351">A matriz unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-351">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span> <span data-ttu-id="791c3-352">A matriz deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="791c3-352">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="791c3-353">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="791c3-353">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="791c3-354">Copia os elementos do <see cref="T:System.Collections.Generic.ICollection`1" /> para uma matriz, começando no índice da matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-354">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-355">Cada elemento copiado de um <xref:System.Collections.Generic.Dictionary%602> é um <xref:System.Collections.Generic.KeyValuePair%602> que representa um valor e sua chave de estrutura.</span><span class="sxs-lookup"><span data-stu-id="791c3-355">Each element copied from a <xref:System.Collections.Generic.Dictionary%602> is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-356">Se o tipo da fonte de <xref:System.Collections.ICollection> não pode ser convertido automaticamente para o tipo de destino `array`, as implementações não genéricas de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> lançar um <xref:System.InvalidCastException>, enquanto as implementações genéricas lançam um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="791c3-356">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="791c3-357">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-357">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-358"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-358"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="791c3-359"><paramref name="index" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="791c3-359"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="791c3-360"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="791c3-360"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="791c3-361">- ou -</span><span class="sxs-lookup"><span data-stu-id="791c3-361">-or-</span></span>  
  
 <span data-ttu-id="791c3-362">O <paramref name="array" /> não tem indexação baseada em zero.</span><span class="sxs-lookup"><span data-stu-id="791c3-362"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
 <span data-ttu-id="791c3-363">- ou -</span><span class="sxs-lookup"><span data-stu-id="791c3-363">-or-</span></span>  
  
 <span data-ttu-id="791c3-364">O número de elementos na origem <see cref="T:System.Collections.Generic.ICollection`1" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="791c3-364">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="791c3-365">- ou -</span><span class="sxs-lookup"><span data-stu-id="791c3-365">-or-</span></span>  
  
 <span data-ttu-id="791c3-366">O tipo do <see cref="T:System.Collections.Generic.ICollection`1" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="791c3-366">The type of the source <see cref="T:System.Collections.Generic.ICollection`1" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-367">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="791c3-367">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="791c3-368"><see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-368"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="791c3-369">Na implementação padrão de <see cref="T:System.Collections.Generic.Dictionary`2" />, essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-369">In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-370">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-370">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="791c3-371">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="791c3-371">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="791c3-372">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, que pode fazer com que o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="791c3-372">Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</span></span> <span data-ttu-id="791c3-373">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="791c3-373">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="791c3-374">O <xref:System.Collections.ICollection.SyncRoot%2A> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="791c3-374">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="791c3-375">A sincronização é eficaz somente se todos os threads de bloquear o objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-375">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="791c3-376">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-376">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-377">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-377">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="791c3-378">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-378">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-379">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-379">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="791c3-380">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="791c3-380">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="791c3-381">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="791c3-381">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="791c3-382">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="791c3-382">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="791c3-383">O <xref:System.Collections.ICollection.SyncRoot%2A> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="791c3-383">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="791c3-384">A sincronização é eficaz somente se todos os threads de bloquear o objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-384">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="791c3-385">O código a seguir mostra o uso do <xref:System.Collections.ICollection.SyncRoot%2A> propriedade para c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="791c3-385">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="791c3-386">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-386">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-387">O objeto a ser usado como a chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-387">The object to use as the key.</span></span></param>
        <param name="value"><span data-ttu-id="791c3-388">O objeto a ser usado como o valor.</span><span class="sxs-lookup"><span data-stu-id="791c3-388">The object to use as the value.</span></span></param>
        <summary><span data-ttu-id="791c3-389">Adiciona a chave e o valor especificados ao dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-389">Adds the specified key and value to the dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-390">Você também pode usar o <xref:System.Collections.IDictionary.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no dicionário; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="791c3-390">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="791c3-391">No entanto, se a chave especificada já existe no dicionário, configurando o <xref:System.Collections.IDictionary.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="791c3-391">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="791c3-392">Em contraste, o <xref:System.Collections.IDictionary.Add%2A> método lançará uma exceção se a chave especificada já existe.</span><span class="sxs-lookup"><span data-stu-id="791c3-392">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method throws an exception if the specified key already exists.</span></span>  
  
 <span data-ttu-id="791c3-393">Se <xref:System.Collections.Generic.Dictionary%602.Count%2A> é menor que a capacidade, esse método se aproximar uma operação (1).</span><span class="sxs-lookup"><span data-stu-id="791c3-393">If <xref:System.Collections.Generic.Dictionary%602.Count%2A> is less than the capacity, this method approaches an O(1) operation.</span></span> <span data-ttu-id="791c3-394">Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-394">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Dictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-395">O exemplo de código a seguir mostra como acessar o <xref:System.Collections.Generic.Dictionary%602> classe por meio de <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="791c3-395">The following code example shows how to access the <xref:System.Collections.Generic.Dictionary%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="791c3-396">O exemplo de código cria um vazio <xref:System.Collections.Generic.Dictionary%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="791c3-396">The code example creates an empty <xref:System.Collections.Generic.Dictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="791c3-397">O exemplo demonstra que o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada ou uma chave ou valor de tipo de dados errado for fornecido.</span><span class="sxs-lookup"><span data-stu-id="791c3-397">The example demonstrates that the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="791c3-398">O exemplo de código demonstra o uso de vários outros membros de <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="791c3-398">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.Dictionary.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-399"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-399"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="791c3-400">O <paramref name="key" /> é de um tipo que não é atribuível ao tipo de chave <paramref name="TKey" /> do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-400"><paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
 <span data-ttu-id="791c3-401">- ou -</span><span class="sxs-lookup"><span data-stu-id="791c3-401">-or-</span></span>  
  
 <span data-ttu-id="791c3-402">O <paramref name="value" /> é de um tipo que não é atribuível ao <paramref name="TValue" />, o tipo de valores no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-402"><paramref name="value" /> is of a type that is not assignable to <paramref name="TValue" />, the type of values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
 <span data-ttu-id="791c3-403">- ou -</span><span class="sxs-lookup"><span data-stu-id="791c3-403">-or-</span></span>  
  
 <span data-ttu-id="791c3-404">Já existe um valor com a mesma chave no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-404">A value with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-405">A chave a ser localizada no <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-405">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span></span></param>
        <summary><span data-ttu-id="791c3-406">Determina se o <see cref="T:System.Collections.IDictionary" /> contém um elemento com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-406">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="791c3-407"><see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-407"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-408">Este método retorna `false` se `key` é de um tipo que não é atribuível ao tipo de chave `TKey` do <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-408">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-409">Este método abrange uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-409">This method approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-410">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A> método o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-410">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.Dictionary%602>.</span></span> <span data-ttu-id="791c3-411">O exemplo demonstra que o método retorna `false` se uma chave de tipo de dados errado for fornecida.</span><span class="sxs-lookup"><span data-stu-id="791c3-411">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="791c3-412">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-412">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.Dictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.Dictionary.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.Dictionary.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.Dictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.Dictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-413"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-413"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="791c3-414">Retorna um <see cref="T:System.Collections.IDictionaryEnumerator" /> para o <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-414">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="791c3-415">Um <see cref="T:System.Collections.IDictionaryEnumerator" /> para o <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-415">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-416">Para fins de enumeração, cada item é uma estrutura <xref:System.Collections.Generic.KeyValuePair%602> que representa um valor e sua chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-416">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="791c3-417">A instrução `foreach` da linguagem C# (`for each` em C++, `For Each` no Visual Basic) oculta a complexidade de enumeradores.</span><span class="sxs-lookup"><span data-stu-id="791c3-417">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="791c3-418">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="791c3-418">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="791c3-419">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="791c3-419">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="791c3-420">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-420">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="791c3-421">O método <xref:System.Collections.IEnumerator.Reset%2A> também retorna o enumerador a essa posição.</span><span class="sxs-lookup"><span data-stu-id="791c3-421">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="791c3-422">Nesta posição, o <xref:System.Collections.IDictionaryEnumerator.Entry%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="791c3-422">At this position, the <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property is undefined.</span></span> <span data-ttu-id="791c3-423">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-423">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="791c3-424">O <xref:System.Collections.IDictionaryEnumerator.Entry%2A> propriedade retorna o mesmo elemento até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="791c3-424">The <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property returns the same element until either the <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> method is called.</span></span> <span data-ttu-id="791c3-425"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IDictionaryEnumerator.Entry%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="791c3-425"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="791c3-426">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="791c3-426">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="791c3-427">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="791c3-427">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="791c3-428">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="791c3-428">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="791c3-429">Para definir <xref:System.Collections.IDictionaryEnumerator.Entry%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-429">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="791c3-430">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="791c3-430">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="791c3-431">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="791c3-431">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="791c3-432">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="791c3-432">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="791c3-433">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="791c3-433">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="791c3-434">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="791c3-434">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="791c3-435">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-435">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="791c3-436">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-436">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-437">O exemplo de código a seguir mostra como enumerar os pares chave/valor no dicionário usando o `foreach` instrução (`For Each` no Visual Basic, `for each` em C++), que oculta o uso do enumerador.</span><span class="sxs-lookup"><span data-stu-id="791c3-437">The following code example shows how to enumerate the key/value pairs in the dictionary by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="791c3-438">Em particular, observe que o enumerador para o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface retorna <xref:System.Collections.DictionaryEntry> objetos em vez de <xref:System.Collections.Generic.KeyValuePair%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="791c3-438">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="791c3-439">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-439">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.Dictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.Dictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.Dictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.Dictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.Dictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-440">Obtém um valor que indica se o <see cref="T:System.Collections.IDictionary" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="791c3-440">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="791c3-441"><see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-441"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="791c3-442">Na implementação padrão de <see cref="T:System.Collections.Generic.Dictionary`2" />, essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-442">In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-443">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="791c3-443">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="791c3-444">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="791c3-444">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="791c3-445">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-445">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-446">Obtém um valor que indica se o <see cref="T:System.Collections.IDictionary" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="791c3-446">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="791c3-447"><see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-447"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="791c3-448">Na implementação padrão de <see cref="T:System.Collections.Generic.Dictionary`2" />, essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-448">In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-449">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="791c3-449">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="791c3-450">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="791c3-450">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="791c3-451">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-451">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-452">A chave do valor a ser obtido.</span><span class="sxs-lookup"><span data-stu-id="791c3-452">The key of the value to get.</span></span></param>
        <summary><span data-ttu-id="791c3-453">Obtém ou define o valor com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-453">Gets or sets the value with the specified key.</span></span></summary>
        <value><span data-ttu-id="791c3-454">O valor associado à chave especificada ou <see langword="null" /> se <paramref name="key" /> não estiver no dicionário ou se <paramref name="key" /> for de um tipo que não é atribuível ao tipo de chave <paramref name="TKey" /> do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-454">The value associated with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-455">Esta propriedade fornece a capacidade de acessar um valor específico na coleção usando a sintaxe c# a seguir: `myCollection[key]` (`myCollection(key)` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="791c3-455">This property provides the ability to access a specific value in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="791c3-456">Você também pode usar o <xref:System.Collections.IDictionary.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no dicionário; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="791c3-456">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="791c3-457">No entanto, se a chave especificada já existe no dicionário, configurando o <xref:System.Collections.IDictionary.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="791c3-457">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="791c3-458">Em contraste, o <xref:System.Collections.IDictionary.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="791c3-458">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="791c3-459">A linguagem c# usa o [isso](~/docs/csharp/language-reference/keywords/this.md) palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-459">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="791c3-460">Visual Basic implementa <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="791c3-460">Visual Basic implements <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="791c3-461">Obter ou definir o valor dessa propriedade se aproximar uma operação (1).</span><span class="sxs-lookup"><span data-stu-id="791c3-461">Getting or setting the value of this property approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-462">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A> propriedade (indexador em c#) da <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.Dictionary%602>e diferenças entre a propriedade de <xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-462">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.Dictionary%602>, and ways the property differs from the <xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="791c3-463">O exemplo mostra que, como o <xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType> propriedade, o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> propriedade pode alterar o valor associado com uma chave existente e pode ser usada para adicionar um novo par de chave/valor se a chave especificada não está no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-463">The example shows that, like the <xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</span></span> <span data-ttu-id="791c3-464">O exemplo também mostra que, ao contrário de <xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType> propriedade, o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> propriedade não lança uma exceção se `key` não estiver no dicionário, retornando uma referência nula em vez disso.</span><span class="sxs-lookup"><span data-stu-id="791c3-464">The example also shows that unlike the <xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the dictionary, returning a null reference instead.</span></span> <span data-ttu-id="791c3-465">Por fim, o exemplo demonstra que obtendo o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> propriedade retorna uma referência nula se `key` não é do tipo de dados correto e que a configuração da propriedade gera uma exceção se `key` não é do tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="791c3-465">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="791c3-466">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-466">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.Dictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.Dictionary.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.Dictionary.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.Dictionary.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.Dictionary.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.Dictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.Dictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-467"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-467"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="791c3-468">Um valor está sendo atribuído e <paramref name="key" /> é de um tipo que não é atribuível ao tipo de chave <paramref name="TKey" /> do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-468">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
 <span data-ttu-id="791c3-469">- ou -</span><span class="sxs-lookup"><span data-stu-id="791c3-469">-or-</span></span>  
  
 <span data-ttu-id="791c3-470">Um valor está sendo atribuído e <paramref name="value" /> é de um tipo que não é atribuível ao tipo de valor <paramref name="TValue" /> do <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-470">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-471">Obtém um <see cref="T:System.Collections.ICollection" /> que contém as chaves do <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-471">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="791c3-472">Um <see cref="T:System.Collections.ICollection" /> que contém as chaves do <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-472">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-473">A ordem das chaves no retornado <xref:System.Collections.ICollection> não for especificado, mas é garantido para ser a mesma ordem que os valores correspondentes no <xref:System.Collections.ICollection> retornado pelo <xref:System.Collections.IDictionary.Values%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-473">The order of the keys in the returned <xref:System.Collections.ICollection> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-474">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-474">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-475">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A> propriedade o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.Dictionary%602>, para listar as chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-475">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.Dictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="791c3-476">O exemplo também mostra como enumerar os pares de chave/valor no dicionário. Observe que o enumerador para o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface retorna <xref:System.Collections.DictionaryEntry> objetos em vez de <xref:System.Collections.Generic.KeyValuePair%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="791c3-476">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="791c3-477">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-477">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.Dictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.Dictionary.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.Dictionary.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.Dictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.Dictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.Dictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.Dictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-478">A chave do elemento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="791c3-478">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="791c3-479">Remove o elemento com a chave especificada do <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-479">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-480">Este método abrange uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-480">This method approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-481">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A> do <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-481">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
 <span data-ttu-id="791c3-482">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-482">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.Dictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.Dictionary.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.Dictionary.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.Dictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.Dictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-483"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-483"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-484">Obtém um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-484">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="791c3-485">Um <see cref="T:System.Collections.ICollection" /> que contém os valores de <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-485">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-486">A ordem dos valores em retornado <xref:System.Collections.ICollection> não for especificado, mas é garantido para ser a mesma ordem que as chaves correspondentes no <xref:System.Collections.ICollection> retornado pelo <xref:System.Collections.IDictionary.Keys%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-486">The order of the values in the returned <xref:System.Collections.ICollection> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-487">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-487">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-488">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A> propriedade o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.Dictionary%602>, para listar os valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-488">The following code example shows how to use the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.Dictionary%602>, to list the values in the dictionary.</span></span> <span data-ttu-id="791c3-489">O exemplo também mostra como enumerar os pares de chave/valor no dicionário. Observe que o enumerador para o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface retorna <xref:System.Collections.DictionaryEntry> objetos em vez de <xref:System.Collections.Generic.KeyValuePair%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="791c3-489">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="791c3-490">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-490">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.Dictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.Dictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.Dictionary.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.Dictionary.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.Dictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.Dictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.Dictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.Dictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="791c3-491">Retorna um enumerador que itera pela coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-491">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="791c3-492">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-492">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-493">Para fins de enumeração, cada item é uma estrutura <xref:System.Collections.Generic.KeyValuePair%602> que representa um valor e sua chave.</span><span class="sxs-lookup"><span data-stu-id="791c3-493">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="791c3-494">A instrução `foreach` da linguagem C# (`for each` em C++, `For Each` no Visual Basic) oculta a complexidade de enumeradores.</span><span class="sxs-lookup"><span data-stu-id="791c3-494">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="791c3-495">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="791c3-495">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="791c3-496">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="791c3-496">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="791c3-497">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="791c3-497">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="791c3-498">O método <xref:System.Collections.IEnumerator.Reset%2A> também retorna o enumerador a essa posição.</span><span class="sxs-lookup"><span data-stu-id="791c3-498">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="791c3-499">Nesta posição, o <xref:System.Collections.IEnumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="791c3-499">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="791c3-500">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-500">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="791c3-501">Para obter melhor desempenho, o enumerador retornado por essa propriedade gerará uma exceção se ele está posicionado antes do primeiro elemento ou depois do último elemento e o <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade for acessada; o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="791c3-501">For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> property is accessed; the value of the <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> property is undefined.</span></span>  
  
 <span data-ttu-id="791c3-502">O <xref:System.Collections.IEnumerator.Current%2A> propriedade retorna o mesmo elemento até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="791c3-502">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same element until either the <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> method is called.</span></span> <span data-ttu-id="791c3-503"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="791c3-503"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="791c3-504">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="791c3-504">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="791c3-505">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="791c3-505">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="791c3-506">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="791c3-506">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="791c3-507">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="791c3-507">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="791c3-508">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="791c3-508">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="791c3-509">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="791c3-509">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="791c3-510">O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</span><span class="sxs-lookup"><span data-stu-id="791c3-510">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="791c3-511">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="791c3-511">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="791c3-512">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="791c3-512">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="791c3-513">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="791c3-513">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="791c3-514">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-514">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess(int capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="791c3-515">A chave do valor a ser obtido.</span><span class="sxs-lookup"><span data-stu-id="791c3-515">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="791c3-516">Quando esse método retorna, ele contém o valor associado à chave especificada, caso a chave seja encontrada; caso contrário, o valor padrão para o tipo do parâmetro <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="791c3-516">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span></span> <span data-ttu-id="791c3-517">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="791c3-517">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="791c3-518">Obtém o valor associado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="791c3-518">Gets the value associated with the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="791c3-519"><see langword="true" /> se o <see cref="T:System.Collections.Generic.Dictionary`2" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-519"><see langword="true" /> if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-520">Esse método combina a funcionalidade do <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> método e o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-520">This method combines the functionality of the <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-521">Se a chave não for encontrada, o `value` parâmetro obtém o valor padrão apropriado para o tipo de `TValue`; por exemplo, 0 (zero) para tipos de inteiros, `false` para tipos boolianos, e `null` para tipos de referência.</span><span class="sxs-lookup"><span data-stu-id="791c3-521">If the key is not found, then the `value` parameter gets the appropriate default value for the type `TValue`; for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="791c3-522">Use o <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> método se seu código com frequência tenta acessar chaves que não estão no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-522">Use the <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> method if your code frequently attempts to access keys that are not in the dictionary.</span></span> <span data-ttu-id="791c3-523">Usando esse método é mais eficiente que captura a <xref:System.Collections.Generic.KeyNotFoundException> gerada pelo <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-523">Using this method is more efficient than catching the <xref:System.Collections.Generic.KeyNotFoundException> thrown by the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-524">Este método abrange uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-524">This method approaches an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-525">O exemplo mostra como usar o <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> método como uma forma mais eficiente para recuperar os valores em um programa que tenta frequentemente chaves que não estão no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-525">The example shows how to use the <xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="791c3-526">Para contraste, o exemplo também mostra como o <xref:System.Collections.Generic.Dictionary%602.Item%2A> propriedade (indexador em c#) lança exceções ao tentar recuperar as chaves que não existentes.</span><span class="sxs-lookup"><span data-stu-id="791c3-526">For contrast, the example also shows how the <xref:System.Collections.Generic.Dictionary%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="791c3-527">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Collections.Generic.Dictionary%602> classe (`openWith` é o nome do dicionário usado neste exemplo).</span><span class="sxs-lookup"><span data-stu-id="791c3-527">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class (`openWith` is the name of the Dictionary used in this example).</span></span>  
  
 [!code-cpp[Generic.Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#5)]
 [!code-csharp[Generic.Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#5)]
 [!code-vb[Generic.Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#5)]  
[!code-cpp[Generic.Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#4)]
[!code-csharp[Generic.Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#4)]
[!code-vb[Generic.Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="791c3-528"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-528"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;.ValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2/ValueCollection&lt;!TKey, !TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As Dictionary(Of TKey, TValue).ValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;TKey, TValue&gt;::ValueCollection ^ Values { System::Collections::Generic::Dictionary&lt;TKey, TValue&gt;::ValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+ValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="791c3-529">Obtém uma coleção que contém os valores no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-529">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="791c3-530">Um <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> que contém os valores no <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="791c3-530">A <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791c3-531">A ordem dos valores no <xref:System.Collections.Generic.Dictionary%602.ValueCollection> não for especificado, mas é a mesma ordem que as chaves associadas no <xref:System.Collections.Generic.Dictionary%602.KeyCollection> retornado pelo <xref:System.Collections.Generic.Dictionary%602.Keys%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="791c3-531">The order of the values in the <xref:System.Collections.Generic.Dictionary%602.ValueCollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.Generic.Dictionary%602.KeyCollection> returned by the <xref:System.Collections.Generic.Dictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="791c3-532">Retornado <xref:System.Collections.Generic.Dictionary%602.ValueCollection> não é uma cópia estática; em vez disso, o <xref:System.Collections.Generic.Dictionary%602.ValueCollection> refere-se novamente para os valores originais <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="791c3-532">The returned <xref:System.Collections.Generic.Dictionary%602.ValueCollection> is not a static copy; instead, the <xref:System.Collections.Generic.Dictionary%602.ValueCollection> refers back to the values in the original <xref:System.Collections.Generic.Dictionary%602>.</span></span> <span data-ttu-id="791c3-533">Portanto, as alterações para o <xref:System.Collections.Generic.Dictionary%602> continuar sejam refletidas no <xref:System.Collections.Generic.Dictionary%602.ValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="791c3-533">Therefore, changes to the <xref:System.Collections.Generic.Dictionary%602> continue to be reflected in the <xref:System.Collections.Generic.Dictionary%602.ValueCollection>.</span></span>  
  
 <span data-ttu-id="791c3-534">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="791c3-534">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="791c3-535">Este exemplo de código mostra como enumerar os valores no dicionário usando o <xref:System.Collections.Generic.Dictionary%602.Values%2A> propriedade e como enumerar as chaves e valores no dicionário.</span><span class="sxs-lookup"><span data-stu-id="791c3-535">This code example shows how to enumerate the values in the dictionary using the <xref:System.Collections.Generic.Dictionary%602.Values%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="791c3-536">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Collections.Generic.Dictionary%602> classe (`openWith` é o nome do dicionário usado neste exemplo).</span><span class="sxs-lookup"><span data-stu-id="791c3-536">This code example is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class (`openWith` is the name of the Dictionary used in this example).</span></span>  
  
 [!code-cpp[Generic.Dictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#8)]
 [!code-csharp[Generic.Dictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#8)]
 [!code-vb[Generic.Dictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#8)]  
[!code-cpp[Generic.Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#7)]
[!code-csharp[Generic.Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#7)]
[!code-vb[Generic.Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>