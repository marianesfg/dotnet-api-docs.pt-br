<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="3b92d-101">O tipo de objetos a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="3b92d-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="3b92d-102">Fornece uma classe base para implementações da interface genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b92d-103">Derivar desta classe para fornecer uma implementação personalizada do <xref:System.Collections.Generic.IEqualityComparer%601> interface genérica para uso com a coleção de classes, como o <xref:System.Collections.Generic.Dictionary%602> classe genérica, ou com métodos como <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3b92d-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b92d-104">O <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> verificações de propriedade se tipo `T` implementa o <xref:System.IEquatable%601?displayProperty=nameWithType> interface genérica e, em caso afirmativo, retorna um <xref:System.Collections.Generic.EqualityComparer%601> que invoca a implementação do <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3b92d-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3b92d-105">Caso contrário, ele retorna um <xref:System.Collections.Generic.EqualityComparer%601>, conforme fornecido por `T`.</span><span class="sxs-lookup"><span data-stu-id="3b92d-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="3b92d-106">É recomendável que você derivar do <xref:System.Collections.Generic.EqualityComparer%601> classe em vez de implementar o <xref:System.Collections.Generic.IEqualityComparer%601> interface, pois o <xref:System.Collections.Generic.EqualityComparer%601> classe testes para igualdade usando o <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método em vez do <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3b92d-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3b92d-107">Isso é consistente com o `Contains`, `IndexOf`, `LastIndexOf`, e `Remove` métodos de <xref:System.Collections.Generic.Dictionary%602> classe e outras coleções genéricas.</span><span class="sxs-lookup"><span data-stu-id="3b92d-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b92d-108">O exemplo a seguir cria uma coleção de dicionário de objetos do tipo `Box` com uma comparação de igualdade.</span><span class="sxs-lookup"><span data-stu-id="3b92d-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="3b92d-109">Duas caixas são consideradas iguais se suas dimensões forem iguais.</span><span class="sxs-lookup"><span data-stu-id="3b92d-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="3b92d-110">Ele adiciona as caixas à coleção.</span><span class="sxs-lookup"><span data-stu-id="3b92d-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="3b92d-111">O dicionário é recriado com um comparador de igualdade que define a igualdade de maneira diferente: duas caixas são consideradas iguais se os volumes são os mesmos.</span><span class="sxs-lookup"><span data-stu-id="3b92d-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3b92d-112">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.EqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3b92d-113">Retorna um comparador de igualdade padrão para o tipo especificado pelo argumento genérico.</span><span class="sxs-lookup"><span data-stu-id="3b92d-113">Returns a default equality comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="3b92d-114">A instância padrão da classe <see cref="T:System.Collections.Generic.EqualityComparer`1" /> para o tipo <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b92d-115">O <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> verificações de propriedade se tipo `T` implementa o <xref:System.IEquatable%601?displayProperty=nameWithType> interface e, em caso afirmativo, retorna um <xref:System.Collections.Generic.EqualityComparer%601> que usa essa implementação.</span><span class="sxs-lookup"><span data-stu-id="3b92d-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="3b92d-116">Caso contrário, ele retorna um <xref:System.Collections.Generic.EqualityComparer%601> que usa as substituições de <xref:System.Object.Equals%2A?displayProperty=nameWithType> e <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> fornecida pelo `T`.</span><span class="sxs-lookup"><span data-stu-id="3b92d-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b92d-117">O exemplo a seguir cria duas coleções de dicionário do tipo `Box`.</span><span class="sxs-lookup"><span data-stu-id="3b92d-117">The following example creates two dictionary collections of type `Box`.</span></span> <span data-ttu-id="3b92d-118">Ambos os dicionários são criados com o construtor que assume um <xref:System.Collections.Generic.EqualityComparer%601> como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="3b92d-118">Both dictionaries are created with the constructor that takes an <xref:System.Collections.Generic.EqualityComparer%601> as a parameter.</span></span>  
  
 <span data-ttu-id="3b92d-119">Para determinar a igualdade de chaves do dicionário, o `boxesByDim` dicionário usa uma comparação de igualdade (`BoxEqDimensions`) que usa a implementação do <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método o `Box` classe.</span><span class="sxs-lookup"><span data-stu-id="3b92d-119">To determine the equality of dictionary keys, the `boxesByDim` dictionary uses an equality comparer (`BoxEqDimensions`) that uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="3b92d-120">Duas caixas são consideradas iguais se suas dimensões forem iguais.</span><span class="sxs-lookup"><span data-stu-id="3b92d-120">Two boxes are considered equal if their dimensions are the same.</span></span>  
  
 <span data-ttu-id="3b92d-121">O `boxesByVol` dicionário usa uma comparação de igualdade (`BoxEqVolume`) que define a igualdade por volume.</span><span class="sxs-lookup"><span data-stu-id="3b92d-121">The `boxesByVol` dictionary uses an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="3b92d-122">Duas caixas são consideradas iguais se os volumes são os mesmos.</span><span class="sxs-lookup"><span data-stu-id="3b92d-122">Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-cpp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cpp/program.cpp#1)]
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3b92d-123">O primeiro objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="3b92d-124">O segundo objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="3b92d-125">Quando substituído em uma classe derivada, determina se dois objetos do tipo <typeparamref name="T" /> são iguais.</span><span class="sxs-lookup"><span data-stu-id="3b92d-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="3b92d-126"><see langword="true" /> se os objetos especificados forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-126"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b92d-127">O <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> método é transitiva reflexiva e simétrica.</span><span class="sxs-lookup"><span data-stu-id="3b92d-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="3b92d-128">Ou seja, ela retorna `true` se usado para comparar um objeto com em si; `true` de dois objetos `x` e `y` se for `true` para `y` e `x`; e `true` de dois objetos `x` e `z` se for `true` para `x` e `y` e também `true` para `y` e `z`.</span><span class="sxs-lookup"><span data-stu-id="3b92d-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3b92d-129">Implementações são necessárias para garantir que, se o <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> método retorna <see langword="true" /> de dois objetos <c>x</c> e <c>y</c>, em seguida, o valor retornado pelo <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> método para <c>x</c> deve ser igual ao valor retornado para <c>y</c>.</span><span class="sxs-lookup"><span data-stu-id="3b92d-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3b92d-130">O objeto para o qual obter um código hash.</span><span class="sxs-lookup"><span data-stu-id="3b92d-130">The object for which to get a hash code.</span></span></param>
        <summary><span data-ttu-id="3b92d-131">Quando substituído em uma classe derivada, serve como uma função de hash para o objeto especificado para algoritmos de hash e estruturas de dados, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="3b92d-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="3b92d-132">Um código hash para o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-132">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b92d-133">O tipo de <paramref name="obj" /> é um tipo de referência e <paramref name="obj" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3b92d-134">Implementações são necessárias para garantir que, se o <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> método retorna <see langword="true" /> de dois objetos <c>x</c> e <c>y</c>, em seguida, o valor retornado pelo <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> método para <c>x</c> deve ser igual ao valor retornado para <c>y</c>.</span><span class="sxs-lookup"><span data-stu-id="3b92d-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3b92d-135">O primeiro objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-135">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="3b92d-136">O segundo objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-136">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="3b92d-137">Determina se os objetos especificados são iguais.</span><span class="sxs-lookup"><span data-stu-id="3b92d-137">Determines whether the specified objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="3b92d-138"><see langword="true" /> se os objetos especificados forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-138"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b92d-139">Esse método é um wrapper para o <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> método, de modo `obj` devem ser convertidos para o tipo especificado pelo argumento genérico `T` da instância atual.</span><span class="sxs-lookup"><span data-stu-id="3b92d-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="3b92d-140">Se ele não pode ser convertido em `T`, uma <xref:System.ArgumentException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="3b92d-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="3b92d-141">Comparando `null` é permitida e não gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3b92d-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b92d-142"><paramref name="x" /> ou <paramref name="y" /> é de um tipo que não pode ser convertido para o tipo <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-142"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3b92d-143">O <see cref="T:System.Object" /> para o qual um código hash deve ser retornado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="3b92d-144">Retorna um código hash para o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-144">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="3b92d-145">Um código hash para o objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="3b92d-145">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b92d-146">Esse método é um wrapper para o <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> método, de modo `obj` deve ser um tipo que pode ser convertido para o tipo especificado pelo argumento de tipo genérico `T` da instância atual.</span><span class="sxs-lookup"><span data-stu-id="3b92d-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3b92d-147">O tipo de <paramref name="obj" /> é um tipo de referência e <paramref name="obj" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="3b92d-148">- ou -</span><span class="sxs-lookup"><span data-stu-id="3b92d-148">-or-</span></span>  
  
 <span data-ttu-id="3b92d-149"><paramref name="obj" /> é de um tipo que não pode ser convertido no tipo <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="3b92d-149"><paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>