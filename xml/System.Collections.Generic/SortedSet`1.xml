<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedSet`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051ff7c5785a21e2eaf1c539931610721ea634e508a8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7c5785a21e2eaf1c539931610721ea634e508a8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>The type of elements in the set.</source>
          <target state="translated">O tipo dos elementos no conjunto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Represents a collection of objects that is maintained in sorted order.</source>
          <target state="translated">Representa uma coleção de objetos que é mantida em ordem classificada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object maintains a sorted order without affecting performance as elements are inserted and deleted.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto mantém uma ordem classificada sem afetar o desempenho como elementos são inseridos e excluídos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Duplicate elements are not allowed.</source>
          <target state="translated">Elementos duplicados não são permitidos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Changing the sort values of existing items is not supported and may lead to unexpected behavior.</source>
          <target state="translated">Alterando os valores de classificação dos itens existentes não é suportado e pode resultar em comportamento inesperado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>For a thread safe alternative to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, see <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph></source>
          <target state="translated">Para uma alternativa segura de thread para <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601&gt;</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>The following example demonstrates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class that is created with the constructor that takes an <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> as a parameter.</source>
          <target state="translated">O exemplo a seguir demonstra um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe que é criada com o construtor que assume um <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> como um parâmetro.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This comparer (<ph id="ph1">`ByFileExtension`</ph>) is used to sort a list of file names by their extensions.</source>
          <target state="translated">Essa comparação (<ph id="ph1">`ByFileExtension`</ph>) é usado para classificar uma lista de nomes de arquivo através de suas extensões.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This example demonstrates how to create a sorted set of media file names, remove unwanted elements, view a range of elements, and compare the set with another sorted set.</source>
          <target state="translated">Este exemplo demonstra como criar um conjunto ordenado de mídia de nomes de arquivo, remover elementos indesejados, exibir um intervalo de elementos e comparar o conjunto com outro conjunto classificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este construtor é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The default comparer to use for comparing objects.</source>
          <target state="translated">O comparador padrão a ser usado para comparar objetos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that uses a specified comparer.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que usa um comparador especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> does not implement <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>, you must specify an <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> object to be used.</source>
          <target state="translated">Se <ph id="ph1">`comparer`</ph> não implementa <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>, você deve especificar um <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> objeto a ser usado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The following example defines a comparer (<ph id="ph1">`ByFileExtension`</ph>) that is used to construct a sorted set that sorts file names by their extensions.</source>
          <target state="translated">O exemplo a seguir define um comparador (<ph id="ph1">`ByFileExtension`</ph>) que é usado para construir um conjunto ordenado que classifica os nomes de arquivo através de suas extensões.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The enumerable collection to be copied.</source>
          <target state="translated">A coleção enumerável a ser copiada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains elements copied from a specified enumerable collection.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que contém elementos copiados de uma coleção enumerável especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Duplicate elements in the enumerable collection are not copied into the new instance of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class, and no exceptions are thrown.</source>
          <target state="translated">Elementos duplicados na coleção enumerável não são copiados para a nova instância do <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe e sem exceções são geradas.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in the <ph id="ph4">`collection`</ph> parameter.</source>
          <target state="translated">Este construtor é um O (<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operação, onde <ph id="ph3">`n`</ph> é o número de elementos de <ph id="ph4">`collection`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>The enumerable collection to be copied.</source>
          <target state="translated">A coleção enumerável a ser copiada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>The default comparer to use for comparing objects.</source>
          <target state="translated">O comparador padrão a ser usado para comparar objetos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que contém elementos copiados de uma coleção enumerável especificada e que usa um comparador especificado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that contains the information that is required to serialize the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">O objeto que contém as informações necessárias para serializar o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The structure that contains the source and destination of the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A estrutura que contém a origem e o destino do fluxo serializado associado ao objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> class that contains serialized data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> que contém dados serializados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</source>
          <target state="translated">Este construtor é chamado durante a desserialização para reconstituir a um objeto que é transmitido em um fluxo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">O elemento a ser adicionado ao conjunto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>Adds an element to the set and returns a value that indicates if it was successfully added.</source>
          <target state="translated">Adiciona um elemento ao conjunto e retorna um valor que indica se ele foi adicionado com êxito.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is added to the set; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> é adicionado ao conjunto; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class does not accept duplicate elements.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe não aceita elementos duplicados.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>If <ph id="ph1">`item`</ph> is already in the set, this method returns <ph id="ph2">`false`</ph> and does not throw an exception.</source>
          <target state="translated">Se <ph id="ph1">`item`</ph> já está no conjunto, esse método retorna <ph id="ph2">`false`</ph> e não gerará uma exceção.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> already equals the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, the capacity is automatically adjusted to accommodate the new item.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> já for igual à capacidade do <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> do objeto, a capacidade é automaticamente ajustada para acomodar o novo item.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>The following example adds elements to a sorted set.</source>
          <target state="translated">O exemplo a seguir adiciona elementos para um conjunto ordenado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Add(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Clear">
          <source>Removes all elements from the set.</source>
          <target state="translated">Remove todos os elementos do conjunto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> object that is used to order the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> usado para ordenar os valores no <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>The comparer that is used to order the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">O comparador usado para ordenar os valores no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>The returned comparer can be either the default comparer of the type for a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, or the comparer used for its constructor.</source>
          <target state="translated">O comparador retornado pode ser o comparador padrão do tipo para um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, ou o comparador usado para seu construtor.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>The element to locate in the set.</source>
          <target state="translated">O elemento a ser localizado no conjunto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>Determines whether the set contains a specific element.</source>
          <target state="translated">Determina se o conjunto contém um elemento específico.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the set contains <ph id="ph2">&lt;paramref name="item" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o conjunto contiver <ph id="ph2">&lt;paramref name="item" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
          <source>This method is an O(ln n) operation.</source>
          <target state="translated">Esse método é uma operação O (ln n).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Copies a portion or all of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the destination array or at a specified index.</source>
          <target state="translated">Copia uma parte ou o todo de um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> para uma matriz unidimensional compatível, começando no início da matriz de destino ou em um índice especificado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedSet`1">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Uma matriz unidimensional que é o destino dos elementos copiados do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the beginning of the target array.</source>
          <target state="translated">Copia todo o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> para uma matriz unidimensional compatível, começando no início da matriz de destino.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>The indexing of <ph id="ph1">`array`</ph> must be zero-based.</source>
          <target state="translated">A indexação de <ph id="ph1">`array`</ph> deve ser baseado em zero.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> exceeds the number of elements that the destination array can contain.</source>
          <target state="translated">O número de elementos na origem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> excede o número de elementos que a matriz de destino pode conter.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Uma matriz unidimensional que é o destino dos elementos copiados do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copia todo o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> para uma matriz unidimensional compatível, começando no índice especificado da matriz.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">O número de elementos na matriz de origem é maior que o espaço disponível do <ph id="ph1">&lt;paramref name="index" /&gt;</ph> ao final da matriz de destino.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Uma matriz unidimensional que é o destino dos elementos copiados do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy.</source>
          <target state="translated">O número de elementos a serem copiados.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>Copies a specified number of elements from <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copia um número especificado de elementos do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> para uma matriz unidimensional compatível, começando no índice especificado da matriz.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">O número de elementos na matriz de origem é maior que o espaço disponível do <ph id="ph1">&lt;paramref name="index" /&gt;</ph> ao final da matriz de destino.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Obtém o número de elementos no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>The number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">O número de elementos em <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedSet`1">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> que pode ser usado para criar uma coleção que contém conjuntos individuais.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> que pode ser usado para criar uma coleção que contém conjuntos individuais.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>A comparer for creating a collection of sets.</source>
          <target state="translated">Um comparador para criar uma coleção de conjuntos.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> objeto verifica a igualdade apenas em um nível; no entanto, você pode encadear comparadores em níveis adicionais para executar o teste de igualdade mais profunda.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
          <source>Calling this method is an O(1) operation.</source>
          <target state="translated">Chamar esse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The comparer to use for creating the returned comparer.</source>
          <target state="translated">O comparador usado para criar o comparador retornado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object, according to a specified comparer, that can be used to create a collection that contains individual sets.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>, de acordo com um comparador especificado, que pode ser usado para criar uma coleção que contém conjuntos individuais.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>A comparer for creating a collection of sets.</source>
          <target state="translated">Um comparador para criar uma coleção de conjuntos.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">`memberEqualityComparer`</ph> and the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> must have the same definition of equality.</source>
          <target state="translated">O <ph id="ph1">`memberEqualityComparer`</ph> e atual <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> devem ter a mesma definição de igualdade.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>You can use the comparer returned by this method in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> constructor to create a hash table of individual sets.</source>
          <target state="translated">Você pode usar o comparador retornado por este método no <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType&gt;</ph> construtor para criar uma tabela de hash de conjuntos individuais.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A&gt;</ph> method to create a set of sets.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A&gt;</ph> método para criar um conjunto de conjuntos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção de itens a serem removidos do objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes all elements that are in a specified collection from the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Remove todos os elementos que estão em uma coleção especificada do objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method removes any element in the current <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> that is also in <ph id="ph2">`other`</ph>.</source>
          <target state="translated">Este método remove qualquer elemento no atual <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> que também está na <ph id="ph2">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Duplicate values in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Valores duplicados em <ph id="ph1">`other`</ph> são ignorados.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é o número de elementos de <ph id="ph3">`other`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example removes elements from a sorted set that are duplicated in another sorted set.</source>
          <target state="translated">O exemplo a seguir remove os elementos de um conjunto ordenado são duplicados em outro conjunto classificado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Retorna um enumerador que itera por meio de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>An enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in sorted order.</source>
          <target state="translated">Um enumerador que itera pelo <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> em ordem de classificação.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>Any changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> will invalidate the enumerator.</source>
          <target state="translated">As alterações para o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> invalidará o enumerador.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
          <source>This method is an O(log n) operation.</source>
          <target state="translated">Esse método é uma operação O (log n).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information that is required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contém as informações necessárias para serializar o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contém a origem e o destino do fluxo serializado associado ao objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data that you must have to serialize a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">Implementa a interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> e retorna dos dados necessários para serializar um objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Chamar esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para fornecer serviços de serialização.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The lowest desired value in the view.</source>
          <target state="translated">O menor valor desejado no modo de exibição.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The highest desired value in the view.</source>
          <target state="translated">O maior valor desejado no modo de exibição.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>Returns a view of a subset in a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Retorna uma exibição de um subconjunto em um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>A subset view that contains only the values in the specified range.</source>
          <target state="translated">Uma exibição de subconjunto que contém apenas os valores no intervalo especificado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This method returns a view of the range of elements that fall between <ph id="ph1">`lowerValue`</ph> and <ph id="ph2">`upperValue`</ph>, as defined by the comparer.</source>
          <target state="translated">Esse método retorna uma exibição do intervalo de elementos que estão entre <ph id="ph1">`lowerValue`</ph> e <ph id="ph2">`upperValue`</ph>, conforme definido pelo comparador.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This method does not copy elements from the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, but provides a window into the underlying <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> itself.</source>
          <target state="translated">Esse método não copiar elementos do <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>, mas fornece uma janela em subjacente <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> em si.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>You can make changes in both the view and in the underlying <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</source>
          <target state="translated">Você pode fazer alterações no modo de exibição em subjacente <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A&gt;</ph> method to list only the AVI files from a sorted set of media file names.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A&gt;</ph> método para listar somente o AVI de arquivos de um conjunto ordenado de nomes de arquivo de mídia.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The comparer evaluates file names according to their extensions.</source>
          <target state="translated">O comparador avalia nomes de arquivo de acordo com as suas extensões.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>The <ph id="ph1">`lowerValue`</ph> is "AVI" and the <ph id="ph2">`upperValue`</ph> is only one value higher, "AVJ", to get the view of all AVI files.</source>
          <target state="translated">O <ph id="ph1">`lowerValue`</ph> é "AVI" e o <ph id="ph2">`upperValue`</ph> é apenas um valor mais alto, "AVJ", para obter o modo de exibição de todos os arquivos AVI.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source><ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> is more than <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph> according to the comparer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> é mais do que <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph> acordo com o comparador.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
          <source>A tried operation on the view was outside the range specified by <ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> and <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph>.</source>
          <target state="translated">Uma tentativa de operação na exibição estava fora do intervalo especificado por <ph id="ph1">&lt;paramref name="lowerValue" /&gt;</ph> e <ph id="ph2">&lt;paramref name="upperValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains only elements that are also in a specified collection.</source>
          <target state="translated">Modifica o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual para que ele contenha somente elementos que também estão em uma coleção especificada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method ignores any duplicate elements in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Este método ignora qualquer elementos duplicados no <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Se a coleção é representado pelo <ph id="ph1">`other`</ph> parâmetro é um <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> coleção com o comparador de igualdade mesmo do atual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> do objeto, esse método é um O (<ph id="ph4">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operação, onde <ph id="ph4">`n`</ph> é <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> e <ph id="ph6">`m`</ph> é o número de elementos em <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper subset of the specified collection.</source>
          <target state="translated">Determina se um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> é um subconjunto apropriado da coleção especificada.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> for um subconjunto apropriado de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>, caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper subset of any other collection.</source>
          <target state="translated">Um conjunto vazio é um subconjunto apropriado de qualquer outra coleção.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty unless the <ph id="ph3">`other`</ph> parameter is also an empty set.</source>
          <target state="translated">Portanto, esse método retorna <ph id="ph1">`true`</ph> se a coleção é representado por atual <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto estiver vazio, a menos que o <ph id="ph3">`other`</ph> parâmetro também é um conjunto vazio.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Esse método sempre retornará <ph id="ph1">`false`</ph> se <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> é maior que ou igual ao número de elementos em <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, then this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Se a coleção é representado por <ph id="ph1">`other`</ph> é um <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> coleção com o comparador de igualdade mesmo do atual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> do objeto, em seguida, esse método é um O (<ph id="ph4">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operação, onde <ph id="ph4">`n`</ph> é <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> e <ph id="ph6">`m`</ph> é o número de elementos em <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper superset of the specified collection.</source>
          <target state="translated">Determina se um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> é um superconjunto apropriado da coleção especificada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a proper superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> for um superconjunto apropriado de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper superset of any other collection.</source>
          <target state="translated">Um conjunto vazio é um superconjunto apropriado de qualquer outra coleção.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty unless the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection is also empty.</source>
          <target state="translated">Portanto, esse método retorna <ph id="ph1">`true`</ph> se a coleção é representado pelo <ph id="ph2">`other`</ph> parâmetro estiver vazio, a menos que atual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> também a coleção está vazia.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Esse método sempre retornará <ph id="ph1">`false`</ph> se <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> é menor ou igual ao número de elementos no <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Caso a coleção representada por <ph id="ph1">`other`</ph> seja uma coleção <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> com a mesma comparação de igualdade do objeto <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> atual, esse método é uma operação O(<ph id="ph4">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operação, onde <ph id="ph4">`n`</ph> é o número de elementos em <ph id="ph5">`other`</ph> e <ph id="ph6">`m`</ph> é <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a subset of the specified collection.</source>
          <target state="translated">Determina se um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> é um subconjunto da coleção especificada.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual for um subconjunto de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a subset of any other collection, including an empty set; therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty, even if the <ph id="ph3">`other`</ph> parameter is an empty set.</source>
          <target state="translated">Um conjunto vazio é um subconjunto de outra coleção, incluindo um conjunto vazio; Portanto, esse método retorna <ph id="ph1">`true`</ph> se a coleção é representado por atual <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto está vazio, mesmo se o <ph id="ph3">`other`</ph> parâmetro é um conjunto vazio.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is greater than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Esse método sempre retornará <ph id="ph1">`false`</ph> se <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> é maior que o número de elementos em <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Caso a coleção representada por <ph id="ph1">`other`</ph> seja uma coleção <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> com a mesma comparação de igualdade do objeto <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> atual, esse método é uma operação O(<ph id="ph4">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operação, onde <ph id="ph4">`n`</ph> é <ph id="ph5">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> e <ph id="ph6">`m`</ph> é o número de elementos em <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a superset of the specified collection.</source>
          <target state="translated">Determina se um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> é um superconjunto da coleção especificada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is a superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> for um superconjunto de <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>All collections, including the empty set, are supersets of the empty set.</source>
          <target state="translated">Todas as coleções, inclusive o conjunto vazio, são subconjuntos do conjunto vazio.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty, even if the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object is empty.</source>
          <target state="translated">Portanto, esse método retorna <ph id="ph1">`true`</ph> se a coleção é representado pelo <ph id="ph2">`other`</ph> parâmetro estiver vazio, mesmo se atual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto está vazio.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> is less than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Esse método sempre retornará <ph id="ph1">`false`</ph> se <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph> é menor que o número de elementos em <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Caso a coleção representada por <ph id="ph1">`other`</ph> seja uma coleção <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> com a mesma comparação de igualdade do objeto <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> atual, esse método é uma operação O(<ph id="ph4">`n`</ph>).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operação, onde <ph id="ph4">`n`</ph> é o número de elementos em <ph id="ph5">`other`</ph> e <ph id="ph6">`m`</ph> é <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Max">
          <source>Gets the maximum value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, as defined by the comparer.</source>
          <target state="translated">Obtém o valor máximo no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, conforme definido pelo comparador.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Max">
          <source>The maximum value in the set.</source>
          <target state="translated">O valor máximo no conjunto.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.Min">
          <source>Gets the minimum value in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, as defined by the comparer.</source>
          <target state="translated">Obtém o valor mínimo no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>, conforme definido pelo comparador.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.Min">
          <source>The minimum value in the set.</source>
          <target state="translated">O valor mínimo no conjunto.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">A fonte do evento de desserialização.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.</source>
          <target state="translated">Implementa a interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> e gera o evento de desserialização quando a desserialização é concluída.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Chamar esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is invalid.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> associado ao objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual é inválido.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and a specified collection share common elements.</source>
          <target state="translated">Determina se o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual e uma coleção especificada compartilham elementos comuns.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> share at least one common element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> e <ph id="ph3">&lt;paramref name="other" /&gt;</ph> compartilharem pelo menos um elemento comum; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Qualquer duplicar elementos no <ph id="ph1">`other`</ph> são ignorados.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é o número de elementos em <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">O elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>Removes a specified item from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Remove um item especificado do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is found and successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o elemento for encontrado e removido com êxito, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object does not contain the specified element, the object remains unchanged and no exception is thrown.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> objeto não contém o elemento especificado, o objeto permanece inalterado e nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source><ph id="ph1">`item`</ph> can be <ph id="ph2">`null`</ph> for reference types.</source>
          <target state="translated"><ph id="ph1">`item`</ph> pode ser <ph id="ph2">`null`</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
          <source>This method is an O(log n) operation.</source>
          <target state="translated">Esse método é uma operação O (log n).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">O delegado que define as condições dos elementos a serem removidos.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Removes all elements that match the conditions defined by the specified predicate from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Remove todos os elementos que correspondem às condições definidas pelo predicado especificado de um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The number of elements that were removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> collection..</source>
          <target state="translated">O número de elementos que foram removidos da coleção <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">`match`</ph> must not modify the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`match`</ph> Não modifique o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Doing so can cause unexpected results.</source>
          <target state="translated">Isso pode causar resultados inesperados.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Chamar esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The following example removes unwanted elements from a sorted set.</source>
          <target state="translated">O exemplo a seguir remove a um conjunto ordenado de elementos indesejados.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Reverse">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that iterates over the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in reverse order.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> iterado no <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> na ordem inversa.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.Reverse">
          <source>An enumerator that iterates over the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> in reverse order.</source>
          <target state="translated">Um enumerador iterado no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> na ordem inversa.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object and the specified collection contain the same elements.</source>
          <target state="translated">Determina se o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual e a coleção especificada contêm os mesmos elementos.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object is equal to <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual for igual a <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; caso contrário, falso.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>This method ignores the order of elements and any duplicate elements in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Este método ignora a ordem dos elementos e quaisquer elementos duplicados no <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(log<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Se a coleção é representado por <ph id="ph1">`other`</ph> é um <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> coleção com o comparador de igualdade mesmo do atual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> do objeto, esse método é um O (log<ph id="ph4">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operação, onde <ph id="ph4">`n`</ph> é o número de elementos em <ph id="ph5">`other`</ph> e <ph id="ph6">`m`</ph> é <ph id="ph7">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.</source>
          <target state="translated">Modifica o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual para que ele contenha somente elementos que estão presentes no objeto atual ou na coleção especificada, mas não em ambos.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Qualquer duplicar elementos no <ph id="ph1">`other`</ph> são ignorados.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> object, this method is an O(n log <ph id="ph4">`m`</ph>) operation.</source>
          <target state="translated">Se o <ph id="ph1">`other`</ph> parâmetro é um <ph id="ph2">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> coleção com o comparador de igualdade mesmo do atual <ph id="ph3">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> do objeto, esse método é um O (log n <ph id="ph4">`m`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`m`</ph>) + O(<ph id="ph3">`n`</ph> log <ph id="ph4">`n`</ph>) operation, where <ph id="ph5">`n`</ph> is the number of elements in <ph id="ph6">`other`</ph> and <ph id="ph7">`m`</ph> is <ph id="ph8">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Caso contrário, esse método é um O (<ph id="ph1">`n`</ph> log <ph id="ph2">`m`</ph>) + O (<ph id="ph3">`n`</ph> log <ph id="ph4">`n`</ph>) operação, onde <ph id="ph5">`n`</ph> é o número de elementos em <ph id="ph6">`other`</ph> e <ph id="ph7">`m`</ph> é <ph id="ph8">&lt;xref:System.Collections.Generic.SortedSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">O objeto a ser adicionado ao objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Adiciona um item a um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> é menor que <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, esse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Se a capacidade deve ser aumentada para acomodar o novo elemento, esse método se torna um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se um <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a coleção for somente leitura; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retorna um enumerador que itera em uma coleção.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>A one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</source>
          <target state="translated">Uma matriz unidimensional que é o destino dos elementos copiados do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the complete <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> to a compatible one-dimensional array, starting at the specified array index.</source>
          <target state="translated">Copia todo o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> para uma matriz unidimensional compatível, começando no índice especificado da matriz.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source array is greater than the available space from <ph id="ph1">&lt;paramref name="index" /&gt;</ph> to the end of the destination array.</source>
          <target state="translated">O número de elementos na matriz de origem é maior que o espaço disponível do <ph id="ph1">&lt;paramref name="index" /&gt;</ph> ao final da matriz de destino.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtém um valor que indica se o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é sincronizado (thread-safe).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se acessar para o <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> for sincronizado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtém um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">Na implementação padrão da <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, essa propriedade sempre retorna a instância atual.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retorna um enumerador que itera em uma coleção.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">A fonte do evento de desserialização.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> interface, and raises the deserialization event when the deserialization is completed.</source>
          <target state="translated">Implementa a interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDeserializationCallback" /&gt;</ph> e gera o evento de desserialização quando a desserialização é concluída.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance is invalid.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> associado à instância <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual é inválido.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information that is required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contém as informações necessárias para serializar a instância <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contém a origem e o destino do fluxo serializado associado à instância <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface, and returns the data that you need to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> instance.</source>
          <target state="translated">Implementa a interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> e retorna dos dados necessários para serializar a instância <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedSet%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">para fornecer serviços de serialização.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Ação de segurança: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
          <source>The value to search for.</source>
          <target state="translated">O valor a ser procurado.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
          <source>The value from the set that the search found, or the default value of T when the search yielded no match.</source>
          <target state="translated">O valor do conjunto encontrado pela pesquisa ou o valor padrão de T quando a pesquisa não gera correspondência.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
          <source>Searches the set for a given value and returns the equal value it finds, if any.</source>
          <target state="translated">Pesquisa um determinado valor no conjunto e retorna o valor igual que for encontrado, se houver.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
          <source>A value indicating whether the search was successful.</source>
          <target state="translated">Um valor que indica se a pesquisa foi bem-sucedida.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
          <source>This can be useful when you want to reuse a previously stored reference instead of a newly constructed one (so that more sharing of references can occur) or to look up a value that has more complete data than the value you currently have, although their comparer functions indicate they are equal.</source>
          <target state="translated">Isso pode ser útil quando você quiser reutilizar uma referência armazenada anteriormente em vez de um recentemente construído (de forma que pode ocorrer mais de compartilhamento de referências) ou para pesquisar um valor que tem mais completar os dados que o valor que você tem, embora suas funções de comparador indicam que eles são iguais.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object.</source>
          <target state="translated">A coleção a ser comparada com o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> object so that it contains all elements that are present in either the current object or the specified collection.</source>
          <target state="translated">Modifica o objeto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedSet`1" /&gt;</ph> atual para que ele contenha todos os elementos presentes no objeto atual ou na coleção especificada.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Any duplicate elements in <ph id="ph1">`other`</ph> are ignored.</source>
          <target state="translated">Qualquer duplicar elementos no <ph id="ph1">`other`</ph> são ignorados.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>