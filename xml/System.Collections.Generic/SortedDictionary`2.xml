<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedDictionary`2.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53b2f6397ce900f2206d4662434095c0ac6625416.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b2f6397ce900f2206d4662434095c0ac6625416</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">O tipo das chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">O tipo dos valores no dicionário.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Represents a collection of key/value pairs that are sorted on the key.</source>
          <target state="translated">Representa uma coleção de pares chave/valor que são classificados na chave.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic class is a binary search tree with O(log <ph id="ph2">`n`</ph>) retrieval, where <ph id="ph3">`n`</ph> is the number of elements in the dictionary.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe genérica é uma árvore de pesquisa binária com O (log <ph id="ph2">`n`</ph>) recuperação, onde <ph id="ph3">`n`</ph> é o número de elementos no dicionário.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>In this respect, it is similar to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic class.</source>
          <target state="translated">Nesse sentido, é semelhante de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> classe genérica.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The two classes have similar object models, and both have O(log <ph id="ph1">`n`</ph>) retrieval.</source>
          <target state="translated">As duas classes têm modelos de objeto semelhantes, e ambos possuem O (log <ph id="ph1">`n`</ph>) recuperação.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Where the two classes differ is in memory use and speed of insertion and removal:</source>
          <target state="translated">Onde as duas classes diferem está em uso de memória e velocidade de inserção e remoção:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> uses less memory than <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> usa menos memória do que <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> has faster insertion and removal operations for unsorted data: O(log <ph id="ph2">`n`</ph>) as opposed to O(<ph id="ph3">`n`</ph>) for <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> tem operações de inserção e remoção mais rápidas para dados sem classificação: O (log <ph id="ph2">`n`</ph>) em vez de O (<ph id="ph3">`n`</ph>) para <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>If the list is populated all at once from sorted data, <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is faster than <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">Se a lista é preenchida de uma só vez de dados classificados, <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> é mais rápido que <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Each key/value pair can be retrieved as a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure, or as a <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> through the nongeneric <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated">Cada par chave/valor pode ser recuperado como um <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> estrutura, ou como um <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> por meio de não-genérica <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Keys must be immutable as long as they are used as keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">As chaves devem ser imutáveis, desde que eles são usados como chaves no <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> must be unique.</source>
          <target state="translated">Todas as chaves em um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> devem ser exclusivos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Uma chave não pode ser <ph id="ph1">`null`</ph>, mas um valor possível, se o valor do tipo <ph id="ph2">`TValue`</ph> é um tipo de referência.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requires a comparer implementation to perform key comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requer uma implementação de comparador para executar comparações de chave.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify an implementation, the default genericcomparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">Você pode especificar uma implementação do <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface genérica usando um construtor que aceite um <ph id="ph2">`comparer`</ph> parâmetro; se você não especificar uma implementação, o padrão genericcomparer <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> é usado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa o <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface genérica, o comparador padrão usa a implementação.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução de linguagem c# (<ph id="ph2">`for each`</ph> em C++, <ph id="ph3">`For Each`</ph> no Visual Basic) retorna um objeto do tipo dos elementos na coleção.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Desde que cada elemento do <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> é um par chave/valor, o tipo de elemento não é o tipo de chave ou o tipo do valor.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</source>
          <target state="translated">Em vez disso, o tipo de elemento é <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The following code shows C#, C++, and Visual Basic syntax.</source>
          <target state="translated">O código a seguir mostra a sintaxe do c#, C++ e Visual Basic.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução é um wrapper em torno de enumerador, que permite que somente leitura da coleção, não gravar nele.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">O exemplo de código a seguir cria um vazio <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método para adicionar alguns elementos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">O exemplo demonstra que o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> ao tentar adicionar uma chave duplicada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade (indexador em c#) para recuperar valores, demonstrando que um <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> é lançada quando uma chave solicitada não está presente e mostrando que o valor associado com uma chave pode ser substituído.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists before calling the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> método como uma forma mais eficiente para recuperar valores, se um programa geralmente deve tentar valores de chave que não estão no dicionário e ele mostra como usar o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A&gt;</ph> método para testar se uma chave existe antes de chamar o <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo mostra como enumerar as chaves e valores no dicionário e como enumerar as chaves e valores usando apenas o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A&gt;</ph> propriedade e o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Finally, the example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Por fim, o exemplo demonstra o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Remove%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Os membros estáticos públicos (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> no Visual Basic) desse são thread-safe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Não há garantia de que qualquer membro de instância seja thread-safe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedDictionary`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> class that is empty and uses the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation for the key type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> que está vazia e usa a implementação <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> padrão para o tipo de chave.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> must be unique according to the default comparer.</source>
          <target state="translated">Todas as chaves em um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> devem ser exclusivos de acordo com o comparador padrão.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requires a comparer implementation to perform key comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requer uma implementação de comparador para executar comparações de chave.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>This constructor uses the default generic equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este construtor usa o comparador de igualdade genérico padrão <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa o <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface genérica, o comparador padrão usa a implementação.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Como alternativa, você pode especificar uma implementação do <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface genérica usando um construtor que aceite um <ph id="ph2">`comparer`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este construtor é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">O exemplo de código a seguir cria um vazio <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método para adicionar alguns elementos.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">O exemplo demonstra que o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> ao tentar adicionar uma chave duplicada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">A implementação <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> a ser usada na comparação de chaves ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> para usar o <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> padrão para o tipo de chave.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> class that is empty and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to compare keys.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> que está vazia e usa a implementação <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> especificada para comparar as chaves.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Todas as chaves em um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> devem ser exclusivos de acordo com o comparador especificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requires a comparer implementation to perform key comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requer uma implementação de comparador para executar comparações de chave.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`comparer`</ph> é <ph id="ph2">`null`</ph>, este construtor usa o comparador de igualdade genérico padrão, <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa o <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface genérica, o comparador padrão usa a implementação.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este construtor é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> with a case-insensitive comparer for the current culture.</source>
          <target state="translated">O exemplo de código a seguir cria um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> com um comparador de maiusculas e minúsculas para a cultura atual.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">O exemplo adiciona quatro elementos, algumas com chaves em letras minúsculas e alguns com chaves de letras maiusculas.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">O exemplo, em seguida, tentar adicionar um elemento com uma chave que difere de uma chave existente somente por maiusculas, captura a exceção resultante e exibe uma mensagem de erro.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Finally, the example displays the elements in case-insensitive sort order.</source>
          <target state="translated">Por fim, o exemplo exibe os elementos em ordem de classificação de maiusculas e minúsculas.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> cujos elementos são copiados para o novo <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation for the key type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> que contém os elementos copiados do <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> especificado e usa a implementação <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> padrão para o tipo de chave.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> must be unique according to the default comparer; therefore, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the default comparer.</source>
          <target state="translated">Todas as chaves em um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> devem ser exclusivos de acordo com o padrão comparador; portanto, cada chave na fonte <ph id="ph2">`dictionary`</ph> também devem ser exclusivos de acordo com o comparador padrão.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requires a comparer implementation to perform key comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requer uma implementação de comparador para executar comparações de chave.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este construtor usa o comparador de igualdade genérico padrão, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa o <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface genérica, o comparador padrão usa a implementação.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Como alternativa, você pode especificar uma implementação do <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface genérica usando um construtor que aceite um <ph id="ph2">`comparer`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in <ph id="ph4">`dictionary`</ph>.</source>
          <target state="translated">Este construtor é um O (<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operação, onde <ph id="ph3">`n`</ph> é o número de elementos em <ph id="ph4">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to create a sorted copy of the information in a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, by passing the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> to the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> para criar uma cópia classificada de informações em um <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, passando o <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> para o <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contém uma ou mais chaves duplicadas.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> cujos elementos são copiados para o novo <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">A implementação <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> a ser usada na comparação de chaves ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> para usar o <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> padrão para o tipo de chave.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to compare keys.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> que contém elementos copiados do <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> especificado e usa a implementação <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> especificada para comparar chaves.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> must be unique according to the specified comparer; therefore, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the specified comparer.</source>
          <target state="translated">Todas as chaves em um <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> devem ser exclusivos de acordo com o especificado comparador; portanto, cada chave na fonte <ph id="ph2">`dictionary`</ph> também devem ser exclusivos de acordo com o comparador especificado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requires a comparer implementation to perform key comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requer uma implementação de comparador para executar comparações de chave.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`comparer`</ph> é <ph id="ph2">`null`</ph>, este construtor usa o comparador de igualdade genérico padrão, <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa o <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface genérica, o comparador padrão usa a implementação.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in <ph id="ph4">`dictionary`</ph>.</source>
          <target state="translated">Este construtor é um O (<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operação, onde <ph id="ph3">`n`</ph> é o número de elementos em <ph id="ph4">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to create a case-insensitive sorted copy of the information in a case-insensitive <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, by passing the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> to the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> criar um maiusculas de minúsculas classificados cópia das informações em um maiusculas de minúsculas <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, passando o <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> para o <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>In this example, the case-insensitive comparers are for the current culture.</source>
          <target state="translated">Neste exemplo, os comparadores maiusculas e minúsculas são para a cultura atual.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contém uma ou mais chaves duplicadas.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">A chave do elemento a ser adicionada.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">O valor do elemento a ser adicionado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>Adds an element with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Adiciona um elemento com a chave e o valor especificados ao <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph> (in Visual Basic, <ph id="ph4">`myCollection("myNonexistantKey") = myValue`</ph>).</source>
          <target state="translated">Você também pode usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>; por exemplo, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph> (no Visual Basic, <ph id="ph4">`myCollection("myNonexistantKey") = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">No entanto, se a chave especificada já existe no <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, a definição de <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade substitui o valor antigo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method throws an exception if an element with the specified key already exists.</source>
          <target state="translated">Em contraste, o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método lançará uma exceção se um elemento com a chave especificada já existe.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Uma chave não pode ser <ph id="ph1">`null`</ph>, mas um valor possível, se o valor do tipo <ph id="ph2">`TValue`</ph> é um tipo de referência.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(log <ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">O exemplo de código a seguir cria um vazio <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método para adicionar alguns elementos.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">O exemplo demonstra que o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> ao tentar adicionar uma chave duplicada.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Já existe um elemento com a mesma chave no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Remove todos os elementos do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph> property is set to 0, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph> propriedade é definida como 0, e referências a outros objetos de elementos da coleção também são liberadas.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Clear">
          <source>This method is an O(1) operation, since the root of the internal data structures is simply released for garbage collection.</source>
          <target state="translated">Esse método é uma operação de (1), desde que a raiz das estruturas de dados interno é liberada simplesmente para coleta de lixo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> used to order the elements of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> usado para ordenar os elementos do <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> used to order the elements of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph></source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> usado para ordenar os elementos do <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requires a comparer implementation to perform key comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> requer uma implementação de comparador para executar comparações de chave.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Você pode especificar uma implementação do <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface genérica usando um construtor que aceite um <ph id="ph2">`comparer`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source>If you do not, the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, is used.</source>
          <target state="translated">Se você não fizer isso, o comparador de igualdade genérico padrão, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, é usado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default comparer uses that implementation.</source>
          <target state="translated">Se tipo <ph id="ph1">`TKey`</ph> implementa o <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface genérica, o comparador padrão usa a implementação.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Comparer">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">A chave a ser localizada no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contém um elemento com a chave especificada.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contiver um elemento com a chave especificada; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation.</source>
          <target state="translated">Esse método é um O (log <ph id="ph1">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A&gt;</ph> método para testar se uma chave existe antes de chamar o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</source>
          <target state="translated">Ele também mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> método para recuperar valores, que é uma maneira eficiente para recuperar valores quando um programa tenta frequentemente chaves que não estão no dicionário.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>Finally, it shows the least efficient way to test whether keys exist, by using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Finalmente, ele mostra a maneira menos eficiente para testar se chaves existirem, usando o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">O valor a ser localizado na <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contains an element with the specified value.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contém um elemento com o valor especificado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contains an element with the specified value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contiver um elemento com o valor especificado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for the value type <ph id="ph2">`TValue`</ph>.</source>
          <target state="translated">Este método determina a igualdade usando o comparador de igualdade padrão <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para o tipo de valor <ph id="ph2">`TValue`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph> property.</source>
          <target state="translated">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Ou seja, esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> structures that is the destination of the elements copied from the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> The array must have zero-based indexing.</source>
          <target state="translated">A matriz unidimensional das estruturas <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> que é o destino dos elementos copiados da <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> atual. A matriz deve ter indexação baseada em zero.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> to the specified array of <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> structures, starting at the specified index.</source>
          <target state="translated">Copia os elementos da <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> para a matriz especificada de estruturas <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>, começando no índice especificado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se o tipo da fonte de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> não pode ser convertido automaticamente para o tipo de destino <ph id="ph2">`array`</ph>, as implementações não genéricas de <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> gerar <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, enquanto as implementações genéricas lançam <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que 0.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O número de elementos na origem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> é maior do que o espaço disponível de <ph id="ph2">&lt;paramref name="index" /&gt;</ph> até o final do <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtém o número de pares chave-valor contidos no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">O número de pares chave-valor contidos no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Count">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Retorna um enumerador que itera por meio de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fins de enumeração, cada item é uma estrutura <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> que representa um valor e sua chave.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">A instrução <ph id="ph1">`foreach`</ph> da linguagem C# (<ph id="ph2">`for each`</ph> em C++, <ph id="ph3">`For Each`</ph> no Visual Basic) oculta a complexidade de enumeradores.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>The dictionary is maintained in a sorted order using an internal tree.</source>
          <target state="translated">O dicionário é mantido em uma ordem classificada, usando uma árvore interna.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</source>
          <target state="translated">Cada elemento novo é posicionado na posição de classificação correta e a árvore é ajustada para manter a ordem de classificação, sempre que um elemento seja removido.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>While enumerating, the sort order is maintained.</source>
          <target state="translated">Durante a enumeração, a ordem de classificação é mantida.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Nesta posição, o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> propriedade está definida.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property returns the same element until the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> method is called.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> propriedade retorna o mesmo elemento até que o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Caso a última chamada para <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> tenha retornado <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Não é possível definir <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções no namespace <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
          <source>This method is an O(log n) operation, where n is count.</source>
          <target state="translated">Esse método é uma operação do (log n), onde n é a contagem.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>The key of the value to get or set.</source>
          <target state="translated">A chave do valor a ser obtido ou definido.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Obtém ou define o valor associado à chave especificada.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>The value associated with the specified key.</source>
          <target state="translated">O valor associado à chave especificada.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>If the specified key is not found, a get operation throws a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>, and a set operation creates a new element with the specified key.</source>
          <target state="translated">Se a chave especificada não for encontrada, uma operação get lançará um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph> e uma operação set criará um novo elemento com a chave especificada.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a sintaxe c# a seguir: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>; por exemplo, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">No entanto, se a chave especificada já existe no <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, a definição de <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade substitui o valor antigo.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Em contraste, o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Add%2A&gt;</ph> método não modifica os elementos existentes.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Uma chave não pode ser <ph id="ph1">`null`</ph>, mas um valor possível, se o valor do tipo <ph id="ph2">`TValue`</ph> é um tipo de referência.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>Getting the value of this property is an O(log <ph id="ph1">`n`</ph>) operation; setting the property is also an O(log <ph id="ph2">`n`</ph>) operation.</source>
          <target state="translated">Obtendo o valor dessa propriedade é um O (log <ph id="ph1">`n`</ph>) operação; a configuração da propriedade é também um O (log <ph id="ph2">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade (indexador em c#) para recuperar valores, demonstrando que um <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> é lançada quando uma chave solicitada não está presente e mostrando que o valor associado com uma chave pode ser substituído.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</source>
          <target state="translated">O exemplo também mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> método como uma forma mais eficiente para recuperar valores, se um programa geralmente deve tentar valores de chave que não estão no dicionário.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">A propriedade é recuperada e <ph id="ph1">&lt;paramref name="key" /&gt;</ph> não existe na coleção.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtém uma coleção que contém as chaves do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> que contém as chaves no <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>The keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> are sorted according to the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> property and are in the same order as the associated values in the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">As chaves a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> são classificados de acordo com o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> propriedade e estão na mesma ordem que os valores associados no <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> retornado pelo <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">Retornado <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> não é uma cópia estática; em vez disso, o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> refere-se novamente para as chaves no original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">Portanto, as alterações para o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> continuar sejam refletidas no <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>The following code example shows how to enumerate the keys in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">O exemplo de código a seguir mostra como enumerar as chaves no dicionário usando o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A&gt;</ph> propriedade e como enumerar as chaves e valores no dicionário.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">Esse código é parte de um exemplo maior que pode ser compilado e executado.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">A chave do elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Remove o elemento com a chave especificada do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o elemento for removido com êxito; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Esse método também retornará <ph id="ph1">&lt;see langword="false" /&gt;</ph>, se <ph id="ph2">&lt;paramref name="key" /&gt;</ph> não tiver sido localizado no <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> remains unchanged.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> não contém um elemento com a chave especificada, o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> permanece inalterado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>No exception is thrown.</source>
          <target state="translated">Nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation.</source>
          <target state="translated">Esse método é um O (log <ph id="ph1">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como remover um par chave/valor do dicionário usando o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Remove%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">A matriz unidimensional que é o destino dos elementos copiados do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">A matriz deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> to an array, starting at the specified array index.</source>
          <target state="translated">Copia os elementos do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> para uma matriz, começando no índice da matriz especificada.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se o tipo da fonte de <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> não pode ser convertido automaticamente para o tipo de destino <ph id="ph2">`array`</ph>, as implementações não genéricas de <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> lançar um <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, enquanto as implementações genéricas lançam um <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que 0.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é multidimensional.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="array" /&gt;</ph> não tem indexação baseada em zero.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O número de elementos na origem <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> é maior do que o espaço disponível de <ph id="ph2">&lt;paramref name="index" /&gt;</ph> até o final do <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O tipo do <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> de origem não pode ser automaticamente convertido para o tipo de <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtém um valor que indica se o acesso à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é sincronizado (thread-safe).</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> caso o acesso ao <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> seja sincronizado (thread-safe); do contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções no namespace <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, que pode fazer com que o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A&gt;</ph> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">A sincronização é eficaz somente se todos os threads de bloquear o objeto antes de acessar a coleção.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtém um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções no namespace <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A&gt;</ph> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">A sincronização é eficaz somente se todos os threads de bloquear o objeto antes de acessar a coleção.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">O código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriedade para c#, C++ e Visual Basic.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">O objeto a ser usado como chave do elemento a ser adicionado.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">O objeto a ser usado como o valor do elemento a ser adicionado.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Adiciona um elemento com a chave fornecida e o valor para o <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no dicionário; por exemplo, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">No entanto, se a chave especificada já existe no dicionário, configurando o <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propriedade substitui o valor antigo.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Em contraste, o <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> método não modifica os elementos existentes.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(log <ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following code example shows how to access the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class through the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">O exemplo de código a seguir mostra como acessar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe por meio de <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">O exemplo de código cria um vazio <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método para adicionar alguns elementos.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</source>
          <target state="translated">O exemplo demonstra que o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método lança um <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> ao tentar adicionar uma chave duplicada ou uma chave ou valor de tipo de dados errado for fornecido.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example demonstrates the use of several other members of the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">O exemplo de código demonstra o uso de vários outros membros de <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="key" /&gt;</ph> é de um tipo que não é atribuível ao tipo de chave <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível ao tipo de valor <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Já existe um elemento com a mesma chave no <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">A chave a ser localizada no <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contém um elemento com a chave especificada.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contiver um elemento com a chave; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method returns <ph id="ph1">`false`</ph> if <ph id="ph2">`key`</ph> is of a type that is not assignable to the key type <ph id="ph3">`TKey`</ph> of the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">`false`</ph> se <ph id="ph2">`key`</ph> é de um tipo que não é atribuível ao tipo de chave <ph id="ph3">`TKey`</ph> do <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(log <ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> método o <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface com um <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The example demonstrates that the method returns <ph id="ph1">`false`</ph> if a key of the wrong data type is supplied.</source>
          <target state="translated">O exemplo demonstra que o método retorna <ph id="ph1">`false`</ph> se uma chave de tipo de dados errado for fornecida.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fins de enumeração, cada item é uma estrutura <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> que representa um valor e sua chave.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">A instrução <ph id="ph1">`foreach`</ph> da linguagem C# (<ph id="ph2">`for each`</ph> em C++, <ph id="ph3">`For Each`</ph> no Visual Basic) oculta a complexidade de enumeradores.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">O método <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> também retorna o enumerador a essa posição.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Nesta posição, o <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> propriedade está definida.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar o método <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> propriedade retorna o mesmo objeto até que o <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">Caso a última chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> tenha retornado <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para definir <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> como o primeiro elemento da coleção novamente, é possível chamar <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguido de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções no namespace <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The following code example shows how to enumerate the key/value pairs in the dictionary by using the <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++), which hides the use of the enumerator.</source>
          <target state="translated">O exemplo de código a seguir mostra como enumerar os pares chave/valor no dicionário usando o <ph id="ph1">`foreach`</ph> instrução (<ph id="ph2">`For Each`</ph> no Visual Basic, <ph id="ph3">`for each`</ph> em C++), que oculta o uso do enumerador.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>In particular, note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">Em particular, observe que o enumerador para o <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface retorna <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objetos em vez de <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> tiver um valor fixo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> for somente leitura; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the element to get.</source>
          <target state="translated">A chave do elemento a obter.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">Obtém ou define o elemento com a chave especificada.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The element with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph5">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">O elemento com a chave especificada, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se <ph id="ph2">&lt;paramref name="key" /&gt;</ph> não está no dicionário ou <ph id="ph3">&lt;paramref name="key" /&gt;</ph> é de um tipo que não é atribuível ao tipo de chave <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> do <ph id="ph5">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a sintaxe c# a seguir: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Você também pode usar o <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no dicionário; por exemplo, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">No entanto, se a chave especificada já existe no dicionário, configurando o <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> propriedade substitui o valor antigo.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Em contraste, o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> método não modifica os elementos existentes.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property.</source>
          <target state="translated">A linguagem c# usa o <bpt id="p1">[</bpt>isso<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> palavra-chave para definir os indexadores em vez de implementar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Getting the value of this property is an O(log <ph id="ph1">`n`</ph>) operation; setting the property is also an O(log <ph id="ph2">`n`</ph>) operation.</source>
          <target state="translated">Obtendo o valor dessa propriedade é um O (log <ph id="ph1">`n`</ph>) operação; a configuração da propriedade é também um O (log <ph id="ph2">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property (the indexer in C#) of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, and ways the property differs from the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> propriedade (indexador em c#) da <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface com um <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>e diferenças entre a propriedade de <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example shows that, like the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</source>
          <target state="translated">O exemplo mostra que, como o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> propriedade, o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> propriedade pode alterar o valor associado com uma chave existente e pode ser usada para adicionar um novo par de chave/valor se a chave especificada não está no dicionário.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example also shows that unlike the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property does not throw an exception if <ph id="ph3">`key`</ph> is not in the dictionary, returning a null reference instead.</source>
          <target state="translated">O exemplo também mostra que, ao contrário de <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> propriedade, o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> propriedade não lança uma exceção se <ph id="ph3">`key`</ph> não estiver no dicionário, retornando uma referência nula em vez disso.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Finally, the example demonstrates that getting the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property returns a null reference if <ph id="ph2">`key`</ph> is not the correct data type, and that setting the property throws an exception if <ph id="ph3">`key`</ph> is not the correct data type.</source>
          <target state="translated">Por fim, o exemplo demonstra que obtendo o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> propriedade retorna uma referência nula se <ph id="ph2">`key`</ph> não é do tipo de dados correto e que a configuração da propriedade gera uma exceção se <ph id="ph3">`key`</ph> não é do tipo de dados correto.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Um valor está sendo atribuído e <ph id="ph1">&lt;paramref name="key" /&gt;</ph> é de um tipo que não é atribuível ao tipo de chave <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Um valor está sendo atribuído e <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível ao tipo de valor <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contém as chaves do <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contém as chaves do <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>The keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted according to the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> property and are guaranteed to be in the same order as the corresponding values in the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">As chaves no retornado <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> são classificados de acordo com o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> propriedade e tem a garantia de estar na mesma ordem que os valores correspondentes no <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> retornado pelo <ph id="ph4">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, to list the keys in the dictionary.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface com um <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, para listar as chaves no dicionário.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">O exemplo também mostra como enumerar os pares de chave/valor no dicionário. Observe que o enumerador para o <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface retorna <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objetos em vez de <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">A chave do elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Remove o elemento com a chave especificada do <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation.</source>
          <target state="translated">Esse método é um O (log <ph id="ph1">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> do <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface com um <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contém os valores no <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contém os valores de <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>The values in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted according to the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> property, and are guaranteed to be in the same order as the corresponding keys in the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Os valores em retornado <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> são classificados de acordo com o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> propriedade e tem a garantia de estar na mesma ordem que as chaves correspondentes no <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> retornado pelo <ph id="ph4">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, to list the values in the dictionary.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface com um <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, para listar os valores no dicionário.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">O exemplo também mostra como enumerar os pares de chave/valor no dicionário. Observe que o enumerador para o <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface retorna <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objetos em vez de <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retorna um enumerador que itera pela coleção.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Para fins de enumeração, cada item é uma estrutura <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> que representa um valor e sua chave.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução de linguagem c# (<ph id="ph2">`for each`</ph> em C++, <ph id="ph3">`For Each`</ph> Visual Basic) oculta a complexidade de enumeradores.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Nesta posição, o <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> propriedade está definida.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar o método <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property returns the same element until the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method is called.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> propriedade retorna o mesmo elemento até que o <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Caso a última chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> tenha retornado <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Não é possível definir <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções no namespace <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>The key of the value to get.</source>
          <target state="translated">A chave do valor a ser obtido.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Quando este método retornar, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Obtém o valor associado à chave especificada.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> contiver um elemento com a chave especificada; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Esse método combina a funcionalidade do <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A&gt;</ph> método e o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the value type <ph id="ph2">`TValue`</ph>; for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Se a chave não for encontrada, o <ph id="ph1">`value`</ph> parâmetro obtém o valor padrão apropriado para o tipo de valor <ph id="ph2">`TValue`</ph>; por exemplo, 0 (zero) para tipos de inteiros, <ph id="ph3">`false`</ph> para tipos boolianos, e <ph id="ph4">`null`</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation.</source>
          <target state="translated">Esse método é um O (log <ph id="ph1">`n`</ph>) operação.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</source>
          <target state="translated">O exemplo mostra como usar o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A&gt;</ph> método como uma forma mais eficiente para recuperar os valores em um programa que tenta frequentemente chaves que não estão no dicionário.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>For contrast, the example also shows how the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">Para contraste, o exemplo também mostra como o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Item%2A&gt;</ph> propriedade (indexador em c#) lança exceções ao tentar recuperar as chaves que não existentes.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>Gets a collection containing the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Obtém uma coleção que contém os valores no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /&gt;</ph> que contém os valores no <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>The values in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> are sorted according to the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> property, and are in the same order as the associated keys in the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Os valores no <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> são classificados de acordo com o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A&gt;</ph> propriedade e estão na mesma ordem que as chaves associadas no <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> retornado pelo <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">Retornado <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> não é uma cópia estática; em vez disso, o <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> refere-se novamente para os valores originais <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph>.</source>
          <target state="translated">Portanto, as alterações para o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> continuar sejam refletidas no <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">A obtenção do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>This code example shows how to enumerate the values in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">Este exemplo de código mostra como enumerar os valores no dicionário usando o <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A&gt;</ph> propriedade e como enumerar as chaves e valores no dicionário.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>