<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="29635-101">Especifica o tipo dos elementos na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-101">Specifies the type of elements in the stack.</span></span></typeparam>
    <summary><span data-ttu-id="29635-102">Representa uma coleção UEPS (último a entrar, primeiro a sair) de tamanho variável das instâncias do mesmo tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="29635-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-103"><xref:System.Collections.Generic.Stack%601> é implementado como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="29635-104">Pilhas e filas são úteis quando você precisa de armazenamento temporário para informações. ou seja, quando você quiser descartar um elemento após recuperar seu valor.</span><span class="sxs-lookup"><span data-stu-id="29635-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="29635-105">Use <xref:System.Collections.Generic.Queue%601> se você precisar acessar as informações na mesma ordem em que ela está armazenada na coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="29635-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> se você precisar acessar as informações na ordem inversa.</span><span class="sxs-lookup"><span data-stu-id="29635-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="29635-107">Use o <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> e <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> tipos quando você precisa acessar a coleção de vários threads simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="29635-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="29635-108">Um uso comum para <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> é preservar a variáveis de estado durante chamadas a outros procedimentos.</span><span class="sxs-lookup"><span data-stu-id="29635-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="29635-109">Três operações principais podem ser executadas em um <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> e seus elementos:</span><span class="sxs-lookup"><span data-stu-id="29635-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="29635-110"><xref:System.Collections.Generic.Stack%601.Push%2A> Insere um elemento na parte superior do <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="29635-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="29635-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> Remove um elemento da parte superior do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="29635-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> Retorna um elemento que está na parte superior do <xref:System.Collections.Generic.Stack%601> , mas não removê-lo a <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-113">A capacidade de um <xref:System.Collections.Generic.Stack%601> é o número de elementos de <xref:System.Collections.Generic.Stack%601> pode conter.</span><span class="sxs-lookup"><span data-stu-id="29635-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="29635-114">Como os elementos são adicionados a um <xref:System.Collections.Generic.Stack%601>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="29635-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="29635-115">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="29635-116">Se <xref:System.Collections.Generic.Stack%601.Count%2A> é menor que a capacidade da pilha, <xref:System.Collections.Generic.Stack%601.Push%2A> é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="29635-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="29635-117">Se a capacidade precisa ser aumentado para acomodar o novo elemento, <xref:System.Collections.Generic.Stack%601.Push%2A> se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="29635-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="29635-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="29635-119"><xref:System.Collections.Generic.Stack%601> aceita `null` como um valor válido para a referência de tipos e permite que os elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="29635-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-120">O exemplo de código a seguir demonstra vários métodos de <xref:System.Collections.Generic.Stack%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="29635-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="29635-121">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-122">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-123">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-124">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-125">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-126">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-127">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-128">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-129">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="29635-130">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="29635-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="29635-131">Não há garantia de que qualquer membro de instância seja thread-safe.</span><span class="sxs-lookup"><span data-stu-id="29635-131">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="29635-132">Um <see cref="T:System.Collections.Generic.Stack`1" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</span><span class="sxs-lookup"><span data-stu-id="29635-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="29635-133">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe.</span><span class="sxs-lookup"><span data-stu-id="29635-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="29635-134">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="29635-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="29635-135">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="29635-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="29635-136">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-137">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Stack`1" /> que está vazia e tem a capacidade inicial padrão.</span><span class="sxs-lookup"><span data-stu-id="29635-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-138">A capacidade de um <xref:System.Collections.Generic.Stack%601> é o número de elementos que o <xref:System.Collections.Generic.Stack%601> pode conter.</span><span class="sxs-lookup"><span data-stu-id="29635-138">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="29635-139">Como os elementos são adicionados a um <xref:System.Collections.Generic.Stack%601>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="29635-139">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="29635-140">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-141">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-141">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="29635-142">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-143">O exemplo de código a seguir demonstra esse construtor e vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="29635-143">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="29635-144">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-144">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-145">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-145">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-146">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-146">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-147">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-147">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-148">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-148">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-149">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-149">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-150">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-150">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-151">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-151">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-152">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-152">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="29635-153">A coleção da qual os elementos serão copiados.</span><span class="sxs-lookup"><span data-stu-id="29635-153">The collection to copy elements from.</span></span></param>
        <summary><span data-ttu-id="29635-154">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Stack`1" />, que contém os elementos copiados da coleção especificada e tem capacidade suficiente para acomodar o número de elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="29635-154">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-155">A capacidade de um <xref:System.Collections.Generic.Stack%601> é o número de elementos que o <xref:System.Collections.Generic.Stack%601> pode conter.</span><span class="sxs-lookup"><span data-stu-id="29635-155">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="29635-156">Como os elementos são adicionados a um <xref:System.Collections.Generic.Stack%601>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="29635-156">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="29635-157">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-157">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-158">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-158">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="29635-159">Os elementos são copiados para o <xref:System.Collections.Generic.Stack%601> na mesma ordem em que são lidas pelo <xref:System.Collections.Generic.IEnumerator%601> da coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-159">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="29635-160">Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `collection`.</span><span class="sxs-lookup"><span data-stu-id="29635-160">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-161">O exemplo de código a seguir demonstra esse construtor e vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="29635-161">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="29635-162">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-162">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-163">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-163">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-164">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-164">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-165">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-165">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-166">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-166">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-167">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-167">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-168">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-168">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-169">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-169">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-170">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-170">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29635-171"><paramref name="collection" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="29635-171"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="29635-172">O número inicial de elementos que o <see cref="T:System.Collections.Generic.Stack`1" /> pode conter.</span><span class="sxs-lookup"><span data-stu-id="29635-172">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span></span></param>
        <summary><span data-ttu-id="29635-173">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Stack`1" /> que está vazia e tem a capacidade inicial especificada ou a capacidade inicial padrão, a que for maior.</span><span class="sxs-lookup"><span data-stu-id="29635-173">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-174">A capacidade de um <xref:System.Collections.Generic.Stack%601> é o número de elementos que o <xref:System.Collections.Generic.Stack%601> pode conter.</span><span class="sxs-lookup"><span data-stu-id="29635-174">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="29635-175">Como os elementos são adicionados a um <xref:System.Collections.Generic.Stack%601>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="29635-175">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="29635-176">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-176">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-177">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-177">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="29635-178">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="29635-178">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="29635-179"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="29635-179"><paramref name="capacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-180">Remove todos os objetos da <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-180">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-181"><xref:System.Collections.Generic.Stack%601.Count%2A> é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="29635-181"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="29635-182">A capacidade permanece inalterada.</span><span class="sxs-lookup"><span data-stu-id="29635-182">The capacity remains unchanged.</span></span> <span data-ttu-id="29635-183">Para redefinir a capacidade do <xref:System.Collections.Generic.Stack%601>, chame <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-183">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="29635-184">Cortar vazio <xref:System.Collections.Generic.Stack%601> define a capacidade do <xref:System.Collections.Generic.Stack%601> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="29635-184">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="29635-185">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-185">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-186">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.Clear%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-186">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="29635-187">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-187">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-188">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-188">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-189">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-189">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-190">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-190">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-191">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-191">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-192">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-192">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-193">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-193">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-194">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-194">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-195">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-195">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="29635-196">O objeto a ser localizado no <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-196">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="29635-197">O valor pode ser <see langword="null" /> para tipos de referência.</span><span class="sxs-lookup"><span data-stu-id="29635-197">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="29635-198">Determina se um elemento está no <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-198">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns>
          <span data-ttu-id="29635-199"><see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.Generic.Stack`1" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="29635-199"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-200">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="29635-200">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="29635-201">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-201">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-202">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-202">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="29635-203">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-203">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-204">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-204">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-205">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-205">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-206">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-206">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-207">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-207">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-208">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-208">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-209">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-209">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-210">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-210">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-211">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-211">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="29635-212">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-212">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="29635-213">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="29635-213">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="29635-214">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="29635-214">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="29635-215">Copia o <see cref="T:System.Collections.Generic.Stack`1" /> para um unidimensional <see cref="T:System.Array" /> existente, começando no índice da matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="29635-215">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-216">Os elementos são copiados para a matriz na ordem do último a entrar, primeiro a sair (UEPS), semelhante à ordem dos elementos retornados por uma sucessão de chamadas para <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-216">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="29635-217">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-217">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-218">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-218">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="29635-219">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-219">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-220">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-220">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-221">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-221">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-222">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-222">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-223">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-223">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-224">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-224">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-225">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-225">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-226">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-226">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-227">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-227">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29635-228"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="29635-228"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="29635-229"><paramref name="arrayIndex" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="29635-229"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="29635-230">O número de elementos na origem <see cref="T:System.Collections.Generic.Stack`1" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="29635-230">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29635-231">Obtém o número de elementos contidos no <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-231">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <value><span data-ttu-id="29635-232">O número de elementos contidos no <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-232">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-233">A capacidade do <xref:System.Collections.Generic.Stack%601> é o número de elementos que o <xref:System.Collections.Generic.Stack%601> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="29635-233">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="29635-234"><xref:System.Collections.Generic.Stack%601.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-234"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-235">A capacidade é sempre maior que ou igual a <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-235">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="29635-236">Se <xref:System.Collections.Generic.Stack%601.Count%2A> excede a capacidade durante a adição de elementos, a capacidade é aumentada, automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="29635-236">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="29635-237">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-237">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-238">O exemplo de código a seguir demonstra várias propriedades e métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="29635-238">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="29635-239">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-239">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-240">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-240">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-241">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-241">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-242">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-242">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-243">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-243">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-244">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-244">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-245">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-245">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-246">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-246">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-247">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-247">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-248">Retorna um enumerador para o <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-248">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="29635-249">Um <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> para o <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-249">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-250">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="29635-250">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="29635-251">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="29635-251">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="29635-252">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="29635-252">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="29635-253">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-253">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="29635-254">Nesta posição, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="29635-254">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="29635-255">Por isso, você deve chamar <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-255">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="29635-256"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="29635-256"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="29635-257"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> define <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="29635-257"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="29635-258">Caso <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="29635-258">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="29635-259">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="29635-259">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="29635-260">Caso a última chamada para <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="29635-260">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="29635-261">Não é possível definir <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="29635-261">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="29635-262">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="29635-262">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="29635-263">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="29635-263">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="29635-264">Se a coleção é modificada entre chamada <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> método e obter o valor da <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> propriedade <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="29635-264">If the collection is modified between calling <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="29635-265">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="29635-265">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="29635-266">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="29635-266">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="29635-267">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="29635-267">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="29635-268">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="29635-268">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="29635-269">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-269">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-270">O exemplo de código a seguir demonstra que o <xref:System.Collections.Generic.Stack%601> classe genérica é enumerável.</span><span class="sxs-lookup"><span data-stu-id="29635-270">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="29635-271">O `foreach` instrução (`For Each` no Visual Basic, `for each` em C++) é usada para enumerar a fila.</span><span class="sxs-lookup"><span data-stu-id="29635-271">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="29635-272">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-272">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-273">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-273">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-274">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-274">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-275">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-275">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-276">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-276">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-277">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-277">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-278">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-278">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-279">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-279">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-280">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-280">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-281">Remove o objeto na parte superior do <see cref="T:System.Collections.Generic.Stack`1" /> sem removê-lo.</span><span class="sxs-lookup"><span data-stu-id="29635-281">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="29635-282">O objeto na parte superior do <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-282">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-283">Esse método é semelhante do <xref:System.Collections.Generic.Stack%601.Pop%2A> método, mas <xref:System.Collections.Generic.Stack%601.Peek%2A> não modifica o <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-283">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-284">Se tipo `T` é um tipo de referência, `null` pode ser enviado para o <xref:System.Collections.Generic.Stack%601> como um espaço reservado, se necessário.</span><span class="sxs-lookup"><span data-stu-id="29635-284">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="29635-285">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-285">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-286">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.Peek%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-286">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="29635-287">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-287">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-288">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-288">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-289">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-289">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-290">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-290">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-291">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-291">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-292">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-292">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-293">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-293">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-294">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-294">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-295">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-295">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29635-296">O <see cref="T:System.Collections.Generic.Stack`1" /> está vazio.</span><span class="sxs-lookup"><span data-stu-id="29635-296">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-297">Remove e retorna o objeto na parte superior do <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-297">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="29635-298">O objeto foi removido da parte superior do <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-298">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-299">Esse método é semelhante do <xref:System.Collections.Generic.Stack%601.Peek%2A> método, mas <xref:System.Collections.Generic.Stack%601.Peek%2A> não modifica o <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="29635-299">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="29635-300">Se tipo `T` é um tipo de referência, `null` pode ser enviado para o <xref:System.Collections.Generic.Stack%601> como um espaço reservado, se necessário.</span><span class="sxs-lookup"><span data-stu-id="29635-300">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="29635-301"><xref:System.Collections.Generic.Stack%601> é implementado como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-301"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="29635-302">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-302">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-303">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.Pop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-303">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="29635-304">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-304">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-305">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-305">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-306">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-306">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-307">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-307">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-308">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-308">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-309">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-309">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-310">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-310">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-311">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-311">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-312">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-312">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29635-313">O <see cref="T:System.Collections.Generic.Stack`1" /> está vazio.</span><span class="sxs-lookup"><span data-stu-id="29635-313">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="29635-314">O objeto a ser enviado por push para o <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-314">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="29635-315">O valor pode ser <see langword="null" /> para tipos de referência.</span><span class="sxs-lookup"><span data-stu-id="29635-315">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="29635-316">Insere um objeto na parte superior do <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-316">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-317"><xref:System.Collections.Generic.Stack%601> é implementado como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-317"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="29635-318">Se <xref:System.Collections.Generic.Stack%601.Count%2A> já for igual à capacidade, a capacidade do <xref:System.Collections.Generic.Stack%601> é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="29635-318">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="29635-319">Se tipo `T` é um tipo de referência, `null` pode ser enviado para o <xref:System.Collections.Generic.Stack%601> como um espaço reservado, se necessário.</span><span class="sxs-lookup"><span data-stu-id="29635-319">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="29635-320">Ele ocupa um slot da pilha e é tratado como qualquer objeto.</span><span class="sxs-lookup"><span data-stu-id="29635-320">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="29635-321">Se <xref:System.Collections.Generic.Stack%601.Count%2A> é menor que a capacidade da pilha, <xref:System.Collections.Generic.Stack%601.Push%2A> é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="29635-321">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="29635-322">Se a capacidade precisa ser aumentado para acomodar o novo elemento, <xref:System.Collections.Generic.Stack%601.Push%2A> se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-322">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-323">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.Push%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-323">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="29635-324">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-324">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-325">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-325">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-326">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-326">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-327">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-327">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-328">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-328">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-329">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-329">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-330">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-330">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-331">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-331">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-332">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-332">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-333">Retorna um enumerador que itera pela coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-333">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="29635-334">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-334">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-335">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="29635-335">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="29635-336">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="29635-336">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="29635-337">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="29635-337">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="29635-338">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-338">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="29635-339">Nesta posição, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="29635-339">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="29635-340">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-340">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="29635-341"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="29635-341"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="29635-342"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="29635-342"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="29635-343">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="29635-343">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="29635-344">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="29635-344">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="29635-345">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="29635-345">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="29635-346">Não é possível definir <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="29635-346">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="29635-347">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="29635-347">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="29635-348">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="29635-348">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="29635-349">Se a coleção é modificada entre chamada <xref:System.Collections.IEnumerator.MoveNext%2A> método e obter o valor da <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriedade <xref:System.Collections.Generic.IEnumerator%601.Current%2A> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="29635-349">If the collection is modified between calling <xref:System.Collections.IEnumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="29635-350">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="29635-350">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="29635-351">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="29635-351">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="29635-352">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="29635-352">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="29635-353">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="29635-353">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="29635-354">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-354">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="29635-355">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="29635-355">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="29635-356">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="29635-356">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="29635-357">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="29635-357">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="29635-358">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="29635-358">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="29635-359">Se o tipo da fonte de <xref:System.Collections.ICollection> não pode ser convertido automaticamente para o tipo de destino `array`, as implementações não genérica de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> gerar <xref:System.InvalidCastException>, enquanto as implementações genéricas lançam <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="29635-359">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="29635-360">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-360">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29635-361"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="29635-361"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="29635-362"><paramref name="arrayIndex" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="29635-362"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29635-363"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="29635-363"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="29635-364">- ou -</span><span class="sxs-lookup"><span data-stu-id="29635-364">-or-</span></span>  
  
 <span data-ttu-id="29635-365">O <paramref name="array" /> não tem indexação baseada em zero.</span><span class="sxs-lookup"><span data-stu-id="29635-365"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
 <span data-ttu-id="29635-366">- ou -</span><span class="sxs-lookup"><span data-stu-id="29635-366">-or-</span></span>  
  
 <span data-ttu-id="29635-367">O número de elementos na origem <see cref="T:System.Collections.ICollection" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="29635-367">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="29635-368">- ou -</span><span class="sxs-lookup"><span data-stu-id="29635-368">-or-</span></span>  
  
 <span data-ttu-id="29635-369">O tipo do <see cref="T:System.Collections.ICollection" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="29635-369">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29635-370">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="29635-370">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="29635-371"><see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="29635-371"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="29635-372">Na implementação padrão de <see cref="T:System.Collections.Generic.Stack`1" />, essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="29635-372">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-373">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="29635-373">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="29635-374">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="29635-374">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="29635-375">Em casos raros em que enumerações enfrentar acessos de gravação, você deve bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="29635-375">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="29635-376">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="29635-376">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="29635-377"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="29635-377"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="29635-378">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-378">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="29635-379">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-379">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29635-380">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="29635-380">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="29635-381">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="29635-381">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="29635-382">Na implementação padrão da <see cref="T:System.Collections.Generic.Stack`1" />, essa propriedade sempre retorna a instância atual.</span><span class="sxs-lookup"><span data-stu-id="29635-382">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-383">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="29635-383">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="29635-384">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="29635-384">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="29635-385">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="29635-385">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="29635-386">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="29635-386">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="29635-387"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="29635-387"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="29635-388">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-388">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="29635-389">O código a seguir mostra o uso do <xref:System.Collections.ICollection.SyncRoot%2A> propriedade para c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="29635-389">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="29635-390">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-390">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-391">Retorna um enumerador que itera em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-391">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="29635-392">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-392">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-393">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="29635-393">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="29635-394">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="29635-394">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="29635-395">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="29635-395">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="29635-396">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-396">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="29635-397"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="29635-397"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="29635-398">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="29635-398">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="29635-399">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-399">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="29635-400"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="29635-400"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="29635-401"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="29635-401"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="29635-402">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="29635-402">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="29635-403">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="29635-403">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="29635-404">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="29635-404">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="29635-405">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-405">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="29635-406">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="29635-406">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="29635-407">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="29635-407">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="29635-408">Se a coleção é modificada entre chamada <xref:System.Collections.IEnumerator.MoveNext%2A> método e obter o valor da <xref:System.Collections.IEnumerator.Current%2A> propriedade <xref:System.Collections.IEnumerator.Current%2A> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="29635-408">If the collection is modified between calling <xref:System.Collections.IEnumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.IEnumerator.Current%2A> property, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="29635-409">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="29635-409">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="29635-410">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="29635-410">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="29635-411">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="29635-411">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="29635-412">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="29635-412">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="29635-413">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="29635-413">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-414">Copia o <see cref="T:System.Collections.Generic.Stack`1" /> em uma nova matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-414">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="29635-415">Uma nova matriz que contém cópias dos elementos do <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="29635-415">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-416">Os elementos são copiados para a matriz na ordem do último a entrar, primeiro a sair (UEPS), semelhante à ordem dos elementos retornados por uma sucessão de chamadas para <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-416">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="29635-417">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-417">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29635-418">O exemplo de código a seguir demonstra vários métodos para o <xref:System.Collections.Generic.Stack%601> classe genérica, incluindo o <xref:System.Collections.Generic.Stack%601.ToArray%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-418">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="29635-419">O exemplo de código cria uma pilha de cadeias de caracteres com capacidade padrão e usa o <xref:System.Collections.Generic.Stack%601.Push%2A> método para enviar por push cinco cadeias de caracteres para a pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-419">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="29635-420">Os elementos da pilha são enumerados, que não altera o estado da pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-420">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="29635-421">O <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para remover a primeira cadeia de caracteres na pilha.</span><span class="sxs-lookup"><span data-stu-id="29635-421">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="29635-422">O <xref:System.Collections.Generic.Stack%601.Peek%2A> método é usado para examinar o próximo item na pilha e, em seguida, o <xref:System.Collections.Generic.Stack%601.Pop%2A> método é usado para pop-.</span><span class="sxs-lookup"><span data-stu-id="29635-422">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="29635-423">O <xref:System.Collections.Generic.Stack%601.ToArray%2A> método é usado para criar uma matriz e copiar os elementos de pilha para ele, em seguida, a matriz é passada para o <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor <xref:System.Collections.Generic.IEnumerable%601>, criando uma cópia da pilha com a ordem dos elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="29635-423">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="29635-424">Os elementos da cópia são exibidos.</span><span class="sxs-lookup"><span data-stu-id="29635-424">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="29635-425">Uma matriz duas vezes o tamanho da pilha é criado e o <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método é usado para copiar os elementos de matriz, começando no meio da matriz.</span><span class="sxs-lookup"><span data-stu-id="29635-425">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="29635-426">O <xref:System.Collections.Generic.Stack%601.%23ctor%2A> construtor é usado novamente para criar uma cópia da pilha com a ordem dos elementos invertidos; assim, os três elementos nulo estão no final.</span><span class="sxs-lookup"><span data-stu-id="29635-426">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="29635-427">O <xref:System.Collections.Generic.Stack%601.Contains%2A> método é usado para mostrar que a cadeia de caracteres "quatro" é a primeira cópia da pilha, após o qual o <xref:System.Collections.Generic.Stack%601.Clear%2A> método limpa a cópia e o <xref:System.Collections.Generic.Stack%601.Count%2A> propriedade mostra que a pilha está vazia.</span><span class="sxs-lookup"><span data-stu-id="29635-427">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29635-428">Definirá a capacidade para o número real de elementos no <see cref="T:System.Collections.Generic.Stack`1" />, se esse número for menor que 90% da capacidade atual.</span><span class="sxs-lookup"><span data-stu-id="29635-428">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29635-429">Esse método pode ser usado para minimizar a memória da coleção sobrecarga se nenhum elemento novo será adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="29635-429">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="29635-430">O custo de realocar e copiar uma grande <xref:System.Collections.Generic.Stack%601> pode ser considerável, no entanto, para que o <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> método não fará nada se a lista estiver em mais de 90% da capacidade.</span><span class="sxs-lookup"><span data-stu-id="29635-430">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="29635-431">Isso evita a incorrer em um custo de realocação grande para um ganho relativamente pequeno.</span><span class="sxs-lookup"><span data-stu-id="29635-431">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="29635-432">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="29635-432">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="29635-433">Para redefinir um <xref:System.Collections.Generic.Stack%601> para seu estado inicial, chame o <xref:System.Collections.Generic.Stack%601.Clear%2A> método antes de chamar <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="29635-433">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="29635-434">Cortar vazio <xref:System.Collections.Generic.Stack%601> define a capacidade do <xref:System.Collections.Generic.Stack%601> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="29635-434">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>