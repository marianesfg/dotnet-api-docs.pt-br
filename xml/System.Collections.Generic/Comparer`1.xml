<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="3e26a-101">O tipo de objetos a serem comparados.</span><span class="sxs-lookup"><span data-stu-id="3e26a-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="3e26a-102">Fornece uma classe base para implementações da interface genérica <see cref="T:System.Collections.Generic.IComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e26a-103">Derivar desta classe para fornecer uma implementação personalizada do <xref:System.Collections.Generic.IComparer%601> interface para uso com classes de coleção, como o <xref:System.Collections.Generic.SortedList%602> e <xref:System.Collections.Generic.SortedDictionary%602> classes genéricas.</span><span class="sxs-lookup"><span data-stu-id="3e26a-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="3e26a-104">A diferença entre a derivação do <xref:System.Collections.Generic.Comparer%601> classe e implementando o <xref:System.IComparable?displayProperty=nameWithType> interface é o seguinte:</span><span class="sxs-lookup"><span data-stu-id="3e26a-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="3e26a-105">Para especificar como os dois objetos devem ser comparados por padrão, implementar a <xref:System.IComparable?displayProperty=nameWithType> interface em sua classe.</span><span class="sxs-lookup"><span data-stu-id="3e26a-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="3e26a-106">Isso garante que as operações de classificação usará o código de comparação padrão que você forneceu.</span><span class="sxs-lookup"><span data-stu-id="3e26a-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="3e26a-107">Para definir um comparador para usar em vez do comparador padrão, derivam de <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="3e26a-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="3e26a-108">Você pode usar essa comparação em operações de classificação que levam um comparador como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="3e26a-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="3e26a-109">O objeto retornado pelo <xref:System.Collections.Generic.Comparer%601.Default%2A> propriedade usa o <xref:System.IComparable%601?displayProperty=nameWithType> interface genérica (`IComparable<T>` em c#, `IComparable(Of T)` no Visual Basic) para comparar dois objetos.</span><span class="sxs-lookup"><span data-stu-id="3e26a-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="3e26a-110">Se tipo `T` não implementa o <xref:System.IComparable%601?displayProperty=nameWithType> interface genérica, a <xref:System.Collections.Generic.Comparer%601.Default%2A> propriedade retorna um <xref:System.Collections.Generic.Comparer%601> que usa o <xref:System.IComparable?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="3e26a-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e26a-111">O exemplo a seguir é uma classe derivada `BoxLengthFirst`, do <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="3e26a-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="3e26a-112">Desse comparador compara dois objetos do tipo `Box`.</span><span class="sxs-lookup"><span data-stu-id="3e26a-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="3e26a-113">Ele classifica primeiro por comprimento, pela altura e, em seguida, pela largura.</span><span class="sxs-lookup"><span data-stu-id="3e26a-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="3e26a-114">O `Box` classe implementa o <xref:System.IComparable%601> interface para controlar a comparação padrão entre dois `Box` objetos.</span><span class="sxs-lookup"><span data-stu-id="3e26a-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="3e26a-115">Esta implementação padrão classifica primeiro pela altura, por comprimento e, em seguida, pela largura.</span><span class="sxs-lookup"><span data-stu-id="3e26a-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="3e26a-116">O exemplo mostra as diferenças entre as duas comparações com a classificação de uma lista de `Box` objetos primeiro usando o `BoxLengthFirst` comparador e, em seguida, usando o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="3e26a-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="3e26a-117"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> e <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> podem se comportar de maneira diferente em termos de diferenciação de cultura e diferenciar maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="3e26a-117"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
 <span data-ttu-id="3e26a-118">Para comparações de cadeia de caracteres, o <see cref="T:System.StringComparer" /> classe é recomendável <c>comparador&lt;cadeia de caracteres&gt;</c>.</span><span class="sxs-lookup"><span data-stu-id="3e26a-118">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="3e26a-119">Propriedades da <see cref="T:System.StringComparer" /> classe retornar instâncias predefinidas que realizam comparações de cadeia de caracteres com diferentes combinações de diferenciação de cultura e diferenciar maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="3e26a-119">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="3e26a-120">A diferenciação e diferenciação de cultura são consistentes entre os membros do mesmo <see cref="T:System.StringComparer" /> instância.</span><span class="sxs-lookup"><span data-stu-id="3e26a-120">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
 <span data-ttu-id="3e26a-121">Para obter mais informações sobre as comparações de específicos de cultura, consulte o <see cref="N:System.Globalization" /> namespace e [globalização e localização](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="3e26a-121">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e26a-122">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.Comparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-122">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3e26a-123">O primeiro objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3e26a-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="3e26a-124">O segundo objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3e26a-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="3e26a-125">Quando substituído em uma classe derivada, executa uma comparação de dois objetos do mesmo tipo e retorna um valor que indica se um objeto é menor que, igual a ou maior que o outro.</span><span class="sxs-lookup"><span data-stu-id="3e26a-125">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="3e26a-126">Um inteiro assinado que indica os valores relativos de <paramref name="x" /> e <paramref name="y" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="3e26a-126">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="3e26a-127"><list type="table"><listheader><term> Valor</span><span class="sxs-lookup"><span data-stu-id="3e26a-127"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="3e26a-128"></term><description> Significado</span><span class="sxs-lookup"><span data-stu-id="3e26a-128"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="3e26a-129"></description></listheader><item><term> Menor que zero</span><span class="sxs-lookup"><span data-stu-id="3e26a-129"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="3e26a-130"></term><description><paramref name="x" /> é menor que <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-130"></term><description><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="3e26a-131"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="3e26a-131"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="3e26a-132"></term><description><paramref name="x" /> é igual a <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-132"></term><description><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="3e26a-133"></description></item><item><term> Maior que zero</span><span class="sxs-lookup"><span data-stu-id="3e26a-133"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="3e26a-134"></term><description><paramref name="x" /> é maior que <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-134"></term><description><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e26a-135">Implementar esse método para fornecer um personalizado comparação de ordem para o tipo de classificação `T`.</span><span class="sxs-lookup"><span data-stu-id="3e26a-135">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e26a-136">O exemplo a seguir define um comparador de `Box` objetos que podem ser usados em vez do comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="3e26a-136">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="3e26a-137">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="3e26a-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e26a-138">O tipo de <paramref name="T" /> não implementa a interface genérica <see cref="T:System.IComparable`1" /> ou a interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-138">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3e26a-139">Comparando <see langword="null" /> com qualquer referência de tipo é permitido e não gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e26a-139">Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="3e26a-140">Uma referência nula é considerada para ser menor do que qualquer referência que não seja nula.</span><span class="sxs-lookup"><span data-stu-id="3e26a-140">A null reference is considered to be less than any reference that is not null.</span></span>  
  
 <span data-ttu-id="3e26a-141">Para obter informações sobre as comparações de específicos de cultura, consulte o <see cref="N:System.Globalization" /> namespace e [globalização e localização](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="3e26a-141">For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison"><span data-ttu-id="3e26a-142">A comparação a se usar.</span><span class="sxs-lookup"><span data-stu-id="3e26a-142">The comparison to use.</span></span></param>
        <summary><span data-ttu-id="3e26a-143">Cria um comparador usando a comparação especificada.</span><span class="sxs-lookup"><span data-stu-id="3e26a-143">Creates a comparer by using the specified comparison.</span></span></summary>
        <returns><span data-ttu-id="3e26a-144">O novo comparador.</span><span class="sxs-lookup"><span data-stu-id="3e26a-144">The new comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e26a-145">Retorna um comparador de ordem de classificação padrão para o tipo especificado pelo argumento genérico.</span><span class="sxs-lookup"><span data-stu-id="3e26a-145">Returns a default sort order comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="3e26a-146">Um objeto que herda <see cref="T:System.Collections.Generic.Comparer`1" /> e serve como um comparador de ordem de classificação para o tipo <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-146">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e26a-147">O <xref:System.Collections.Generic.Comparer%601> retornada por esta propriedade usa o <xref:System.IComparable%601?displayProperty=nameWithType> interface genérica (`IComparable<T>` em c#, `IComparable(Of T)` no Visual Basic) para comparar dois objetos.</span><span class="sxs-lookup"><span data-stu-id="3e26a-147">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="3e26a-148">Se tipo `T` não implementa o <xref:System.IComparable%601?displayProperty=nameWithType> interface genérica, essa propriedade retorna um <xref:System.Collections.Generic.Comparer%601> que usa o <xref:System.IComparable?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="3e26a-148">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e26a-149">O exemplo a seguir mostra como usar o <xref:System.Collections.Generic.Comparer%601.Default%2A> propriedade para obter um objeto que executa a comparação padrão.</span><span class="sxs-lookup"><span data-stu-id="3e26a-149">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="3e26a-150">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="3e26a-150">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="3e26a-151">Para comparações de cadeia de caracteres, o <see cref="T:System.StringComparer" /> classe é recomendável <c>comparador&lt;cadeia de caracteres&gt; </c> (<c>comparador (Of String)</c> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3e26a-151">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).</span></span>  <span data-ttu-id="3e26a-152">Propriedades da <see cref="T:System.StringComparer" /> classe retornar instâncias predefinidas que realizam comparações de cadeia de caracteres com diferentes combinações de diferenciação de cultura e diferenciar maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="3e26a-152">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="3e26a-153">A diferenciação e diferenciação de cultura são consistentes entre os membros do mesmo <see cref="T:System.StringComparer" /> instância.</span><span class="sxs-lookup"><span data-stu-id="3e26a-153">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
 <span data-ttu-id="3e26a-154">Para obter mais informações sobre as comparações de específicos de cultura, consulte o <see cref="N:System.Globalization" /> namespace e [globalização e localização](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="3e26a-154">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="3e26a-155">O primeiro objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3e26a-155">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="3e26a-156">O segundo objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="3e26a-156">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="3e26a-157">Compara dois objetos e retorna um valor que indica se um é menor, igual ou maior do que o outro.</span><span class="sxs-lookup"><span data-stu-id="3e26a-157">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="3e26a-158">Um inteiro assinado que indica os valores relativos de <paramref name="x" /> e <paramref name="y" />, conforme mostrado na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="3e26a-158">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="3e26a-159"><list type="table"><listheader><term> Valor</span><span class="sxs-lookup"><span data-stu-id="3e26a-159"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="3e26a-160"></term><description> Significado</span><span class="sxs-lookup"><span data-stu-id="3e26a-160"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="3e26a-161"></description></listheader><item><term> Menor que zero</span><span class="sxs-lookup"><span data-stu-id="3e26a-161"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="3e26a-162"></term><description><paramref name="x" /> é menor que <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-162"></term><description><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="3e26a-163"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="3e26a-163"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="3e26a-164"></term><description><paramref name="x" /> é igual a <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-164"></term><description><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 <span data-ttu-id="3e26a-165"></description></item><item><term> Maior que zero</span><span class="sxs-lookup"><span data-stu-id="3e26a-165"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="3e26a-166"></term><description><paramref name="x" /> é maior que <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-166"></term><description><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e26a-167">Esse método é um wrapper para o <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> método, de modo `obj` devem ser convertidos para o tipo especificado pelo argumento genérico `T` da instância atual.</span><span class="sxs-lookup"><span data-stu-id="3e26a-167">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="3e26a-168">Se ele não pode ser convertido em `T`, uma <xref:System.ArgumentException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="3e26a-168">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="3e26a-169">Comparando `null` com qualquer referência de tipo é permitido e não gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e26a-169">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="3e26a-170">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="3e26a-170">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e26a-171">O exemplo a seguir mostra como usar o <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> método para comparar dois objetos.</span><span class="sxs-lookup"><span data-stu-id="3e26a-171">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="3e26a-172">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.Comparer%601> classe.</span><span class="sxs-lookup"><span data-stu-id="3e26a-172">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e26a-173"><paramref name="x" /> ou <paramref name="y" /> é de um tipo que não pode ser convertido para o tipo <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-173"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span></span>  
  
 <span data-ttu-id="3e26a-174">- ou -</span><span class="sxs-lookup"><span data-stu-id="3e26a-174">-or-</span></span>  
  
 <span data-ttu-id="3e26a-175"><paramref name="x" /> e <paramref name="y" /> não implementam a interface genérica do <see cref="T:System.IComparable`1" /> nem a interface do <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="3e26a-175"><paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="3e26a-176"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> e <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> se comportam diferentemente em termos de diferenciação de cultura e diferenciar maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="3e26a-176"><see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
 <span data-ttu-id="3e26a-177">Para comparações de cadeia de caracteres, o <see cref="T:System.StringComparer" /> classe é recomendável <c>comparador&lt;cadeia de caracteres&gt;</c>.</span><span class="sxs-lookup"><span data-stu-id="3e26a-177">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="3e26a-178">Propriedades da <see cref="T:System.StringComparer" /> classe retornar instâncias predefinidas que realizam comparações de cadeia de caracteres com diferentes combinações de diferenciação de cultura e diferenciar maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="3e26a-178">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="3e26a-179">A diferenciação e diferenciação de cultura são consistentes entre os membros do mesmo <see cref="T:System.StringComparer" /> instância.</span><span class="sxs-lookup"><span data-stu-id="3e26a-179">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
 <span data-ttu-id="3e26a-180">Para obter mais informações sobre as comparações de específicos de cultura, consulte o <see cref="N:System.Globalization" /> namespace e [globalização e localização](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span><span class="sxs-lookup"><span data-stu-id="3e26a-180">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span></para>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>