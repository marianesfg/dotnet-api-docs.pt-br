<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReadOnlyDictionary`2.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1085a08e24f5f95c18921ba74a94f939942bf27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1085a08e24f5f95c18921ba74a94f939942bf27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The type of keys in the read-only dictionary.</source>
          <target state="translated">O tipo de chaves no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The type of values in the read-only dictionary.</source>
          <target state="translated">O tipo de valores no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Represents a generic read-only collection of key/value pairs.</source>
          <target state="translated">Representa uma coleção somente leitura genérica de pares chave/valor.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Each element is a key/value pair that is stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> object.</source>
          <target state="translated">Cada elemento é um par chave/valor que é armazenado em um <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Each pair must have a unique key.</source>
          <target state="translated">Cada par deve ter uma chave exclusiva.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Implementations can vary in whether they allow you to specify a key that is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Implementações podem variar se elas permitem que você especifique uma chave que é <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The value can be <ph id="ph1">`null`</ph> and does not have to be unique.</source>
          <target state="translated">O valor pode ser <ph id="ph1">`null`</ph> e não precisa ser exclusivo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface permite que as chaves independentes e valores a serem enumerados, mas não implica em qualquer ordem de classificação específico.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) requires the type of each element in the collection.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução de linguagem c# (<ph id="ph2">`For Each`</ph> no Visual Basic, <ph id="ph3">`for each`</ph> em C++) requer que o tipo de cada elemento na coleção.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interface is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Como cada elemento de <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interface é um par chave/valor, o tipo de elemento não é o tipo de chave ou o tipo do valor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">Em vez disso, o tipo de elemento é <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IReadOnlyDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução é um wrapper em torno do enumerador; ela permite que somente leitura da coleção, não gravando à coleção.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>The key to locate.</source>
          <target state="translated">A chave a ser localizada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Determines whether the read-only dictionary contains an element that has the specified key.</source>
          <target state="translated">Determina se o dicionário somente leitura contém um elemento que tem a chave especificada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the read-only dictionary contains an element that has the specified key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o dicionário somente leitura contiver um elemento que tem a chave especificada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in how they determine the equality of objects; for example, the class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> might use the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property, or it might implement the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> method.</source>
          <target state="translated">Implementações podem variar em como elas determinam a igualdade de objetos; Por exemplo, a classe que implementa <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> pode usar o <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> propriedade ou ela pode implementar o <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Implementações podem variar se eles permitem <ph id="ph1">`key`</ph> ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The key to locate.</source>
          <target state="translated">A chave a ser localizada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Gets the element that has the specified key in the read-only dictionary.</source>
          <target state="translated">Obtém o elemento que tem a chave especificada no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The element that has the specified key in the read-only dictionary.</source>
          <target state="translated">O elemento que tem a chave especificada no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>This property lets you access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Essa propriedade permite que você acesse um elemento específico na coleção usando a seguinte sintaxe: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Implementations can vary in how they determine the equality of objects: for example, the class that implements <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> might use the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property, or it might implement the <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> method.</source>
          <target state="translated">Implementações podem variar em como elas determinam a igualdade de objetos: por exemplo, a classe que implementa <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> pode usar o <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> propriedade ou ela pode implementar o <ph id="ph3">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Implementações podem variar se eles permitem <ph id="ph1">`key`</ph> ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not found.</source>
          <target state="translated">A propriedade é recuperada e <ph id="ph1">&lt;paramref name="key" /&gt;</ph> não foi encontrado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>Gets an enumerable collection that contains the keys in the read-only dictionary.</source>
          <target state="translated">Obtém uma coleção enumerável que contém as chaves no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>An enumerable collection that contains the keys in the read-only dictionary.</source>
          <target state="translated">Uma coleção enumerável que contém as chaves no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
          <source>The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">A ordem das chaves na coleção enumerável é especificada, mas a implementação deve garantir que as chaves estejam na mesma ordem que os valores correspondentes na coleção enumerável que é retornado pelo <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>The key to locate.</source>
          <target state="translated">A chave a ser localizada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Quando este método retornar, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Este parâmetro é passado não inicializado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value that is associated with the specified key.</source>
          <target state="translated">Obtém o valor associado à chave especificada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that implements the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /&gt;</ph> interface contains an element that has the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto que implementa a interface <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /&gt;</ph> contiver um elemento que tem a chave especificada; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Esse método combina a funcionalidade do <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A&gt;</ph> método e o <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>: for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Se a chave não for encontrada, o <ph id="ph1">`value`</ph> parâmetro obtém o valor padrão apropriado para o tipo de <ph id="ph2">`TValue`</ph>: por exemplo, 0 (zero) para tipos de inteiros, <ph id="ph3">`false`</ph> para tipos boolianos, e <ph id="ph4">`null`</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>Gets an enumerable collection that contains the values in the read-only dictionary.</source>
          <target state="translated">Obtém uma coleção enumerável que contém os valores no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>An enumerable collection that contains the values in the read-only dictionary.</source>
          <target state="translated">Uma coleção enumerável que contém os valores no dicionário somente leitura.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
          <source>The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">A ordem dos valores na coleção enumerável é especificada, mas a implementação deve garantir que os valores estão na mesma ordem que as chaves correspondentes na coleção enumerável que é retornado pelo <ph id="ph1">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A&gt;</ph> propriedade.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>