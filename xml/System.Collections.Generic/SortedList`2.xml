<Type Name="SortedList&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedList&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72c1e1ae48ac3af90725e33b902861db5d83679a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370790" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedList&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedList`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedList : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="ee4c3-101">O tipo das chaves da coleção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="ee4c3-102">O tipo dos valores da coleção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-102">The type of values in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ee4c3-103">Representa uma coleção de pares chave/valor que são classificados por chave com base na implementação de <see cref="T:System.Collections.Generic.IComparer`1" /> associada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-103">Represents a collection of key/value pairs that are sorted by key based on the associated <see cref="T:System.Collections.Generic.IComparer`1" /> implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-104">O <xref:System.Collections.Generic.SortedList%602> classe genérica é uma matriz de pares chave/valor com O (log `n`) recuperação, onde n é o número de elementos no dicionário.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-104">The <xref:System.Collections.Generic.SortedList%602> generic class is an array of key/value pairs with O(log `n`) retrieval, where n is the number of elements in the dictionary.</span></span> <span data-ttu-id="ee4c3-105">Nesse ponto, ele é semelhante de <xref:System.Collections.Generic.SortedDictionary%602> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-105">In this, it is similar to the <xref:System.Collections.Generic.SortedDictionary%602> generic class.</span></span> <span data-ttu-id="ee4c3-106">As duas classes têm modelos de objeto semelhantes, e ambos possuem O (log `n`) recuperação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-106">The two classes have similar object models, and both have O(log `n`) retrieval.</span></span> <span data-ttu-id="ee4c3-107">Onde as duas classes diferem está em uso de memória e velocidade de inserção e remoção:</span><span class="sxs-lookup"><span data-stu-id="ee4c3-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="ee4c3-108"><xref:System.Collections.Generic.SortedList%602> usa menos memória do que <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="ee4c3-109"><xref:System.Collections.Generic.SortedDictionary%602> tem inserção mais rápida e operações de remoção de dados sem classificação, O (log `n`) em vez de O (`n`) para <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data, O(log `n`) as opposed to O(`n`) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="ee4c3-110">Se a lista é preenchida de uma só vez de dados classificados, <xref:System.Collections.Generic.SortedList%602> é mais rápido que <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-111">Outra diferença entre o <xref:System.Collections.Generic.SortedDictionary%602> e <xref:System.Collections.Generic.SortedList%602> classes é que <xref:System.Collections.Generic.SortedList%602> dá suporte a recuperação indexada eficiente de chaves e valores nas coleções retornadas pelo <xref:System.Collections.Generic.SortedList%602.Keys%2A> e <xref:System.Collections.Generic.SortedList%602.Values%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-111">Another difference between the <xref:System.Collections.Generic.SortedDictionary%602> and <xref:System.Collections.Generic.SortedList%602> classes is that <xref:System.Collections.Generic.SortedList%602> supports efficient indexed retrieval of keys and values through the collections returned by the <xref:System.Collections.Generic.SortedList%602.Keys%2A> and <xref:System.Collections.Generic.SortedList%602.Values%2A> properties.</span></span> <span data-ttu-id="ee4c3-112">Não é necessário gerar novamente as listas quando as propriedades são acessadas, como as listas são wrappers apenas para as matrizes internas de chaves e valores.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-112">It is not necessary to regenerate the lists when the properties are accessed, because the lists are just wrappers for the internal arrays of keys and values.</span></span> <span data-ttu-id="ee4c3-113">O código a seguir mostra o uso do <xref:System.Collections.Generic.SortedList%602.Values%2A> propriedade para a recuperação indexada de valores de uma lista ordenada de cadeias de caracteres:</span><span class="sxs-lookup"><span data-stu-id="ee4c3-113">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for indexed retrieval of values from a sorted list of strings:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="ee4c3-114"><xref:System.Collections.Generic.SortedList%602> é implementado como uma matriz de pares chave/valor, classificados por chave.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-114"><xref:System.Collections.Generic.SortedList%602> is implemented as an array of key/value pairs, sorted by the key.</span></span>  <span data-ttu-id="ee4c3-115">Cada elemento pode ser recuperado como um <xref:System.Collections.Generic.KeyValuePair%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-115">Each element can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="ee4c3-116">Objetos de chave devem ser imutáveis, desde que eles são usados como chaves no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-116">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-117">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-117">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique.</span></span> <span data-ttu-id="ee4c3-118">Uma chave não pode ser `null`, mas um valor possível, se o tipo de valores na lista, `TValue`, é um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-118">A key cannot be `null`, but a value can be, if the type of values in the list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="ee4c3-119"><xref:System.Collections.Generic.SortedList%602> requer uma implementação de comparador para classificar e executar comparações.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-119"><xref:System.Collections.Generic.SortedList%602> requires a comparer implementation to sort and to perform comparisons.</span></span>  <span data-ttu-id="ee4c3-120">O comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-120">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="ee4c3-121">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-121">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="ee4c3-122">Se a chave de tipo `TKey` não implementa a interface, você pode especificar um <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementação em uma sobrecarga de construtor que aceita um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-122">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="ee4c3-123">A capacidade de um <xref:System.Collections.Generic.SortedList%602> é o número de elementos de <xref:System.Collections.Generic.SortedList%602> pode conter.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-123">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements the <xref:System.Collections.Generic.SortedList%602> can hold.</span></span> <span data-ttu-id="ee4c3-124">Como os elementos são adicionados a um <xref:System.Collections.Generic.SortedList%602>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-124">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="ee4c3-125">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> ou definindo o <xref:System.Collections.Generic.SortedList%602.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-125">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="ee4c3-126">Reduzir a capacidade realoca a memória e copia todos os elementos de <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-126">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-127">Para grandes <xref:System.Collections.Generic.SortedList%602> objetos, você pode aumentar a capacidade máxima para 2 bilhões de elementos em um sistema de 64 bits definindo o `enabled` atributo do elemento de configuração para `true` no ambiente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-127">For very large <xref:System.Collections.Generic.SortedList%602> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="ee4c3-128">O `foreach` instrução de linguagem c# (`for each` em C++, `For Each` no Visual Basic) retorna um objeto do tipo dos elementos na coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-128">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="ee4c3-129">Desde que os elementos do <xref:System.Collections.Generic.SortedList%602> são pares chave/valor, o tipo de elemento não é o tipo de chave ou o tipo do valor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-129">Since the elements of the <xref:System.Collections.Generic.SortedList%602> are key/value pairs, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="ee4c3-130">Em vez disso, o tipo de elemento é <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-130">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="ee4c3-131">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="ee4c3-131">For example:</span></span>  
  
 [!code-cpp[Generic.SortedList#12](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#12)]
 [!code-csharp[Generic.SortedList#12](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#12)]
 [!code-vb[Generic.SortedList#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#12)]  
  
 <span data-ttu-id="ee4c3-132">O `foreach` instrução é um wrapper em torno de enumerador, que só permite ler, gravar não à coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-132">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-133">O exemplo de código a seguir cria um vazio <xref:System.Collections.Generic.SortedList%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.SortedList%602.Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-133">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="ee4c3-134">O exemplo demonstra que o <xref:System.Collections.Generic.SortedList%602.Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-134">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="ee4c3-135">O exemplo usa o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade (indexador em c#) para recuperar valores, demonstrando que um <xref:System.Collections.Generic.KeyNotFoundException> é lançada quando uma chave solicitada não está presente e mostrando que o valor associado com uma chave pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-135">The example uses the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="ee4c3-136">O exemplo mostra como usar o <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> método como uma forma mais eficiente para recuperar valores, se um programa geralmente deve tentar valores de chave que não estão na lista classificada, e ele mostra como usar o <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> método para testar se uma chave existe antes de chamar o <xref:System.Collections.Generic.SortedList%602.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-136">The example shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list, and it shows how to use the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedList%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="ee4c3-137">O exemplo mostra como enumerar as chaves e valores na lista classificada e como enumerar as chaves e valores usando apenas o <xref:System.Collections.Generic.SortedList%602.Keys%2A> propriedade e o <xref:System.Collections.Generic.SortedList%602.Values%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-137">The example shows how to enumerate the keys and values in the sorted list and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedList%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="ee4c3-138">Por fim, o exemplo demonstra o <xref:System.Collections.Generic.SortedList%602.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-138">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedList%602.Remove%2A> method.</span></span>  
  
 [!code-cpp[Generic.SortedList#1](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#1)]
 [!code-csharp[Generic.SortedList#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#1)]
 [!code-vb[Generic.SortedList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ee4c3-139">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-139">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="ee4c3-140">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-140">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="ee4c3-141">Um <see cref="T:System.Collections.Generic.SortedList`2" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-141">A <see cref="T:System.Collections.Generic.SortedList`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="ee4c3-142">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-142">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="ee4c3-143">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-143">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="ee4c3-144">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee4c3-144">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.IDictionary`2" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.Generic.SortedDictionary`2" />
    <altmember cref="T:System.Collections.Generic.KeyValuePair`2" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-145">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-145">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-146">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" /> que está vazia, tem a capacidade inicial padrão e usa o <see cref="T:System.Collections.Generic.IComparer`1" /> padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-146">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-147">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos de acordo com o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-147">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="ee4c3-148">Este construtor usa o valor padrão para a capacidade inicial igual a <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-148">This constructor uses the default value for the initial capacity of the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-149">Para definir a capacidade inicial, use o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-149">To set the initial capacity, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="ee4c3-150">Se o tamanho final da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-150">If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-151">Este construtor usa o comparador padrão para `TKey`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-151">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="ee4c3-152">Para especificar um comparador, use o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-152">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="ee4c3-153">O comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-153">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="ee4c3-154">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-154">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="ee4c3-155">Se a chave de tipo `TKey` não implementa a interface, você pode especificar um <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementação em uma sobrecarga de construtor que aceita um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-155">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="ee4c3-156">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-156">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-157">O exemplo de código a seguir cria um vazio <xref:System.Collections.Generic.SortedList%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.SortedList%602.Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-157">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="ee4c3-158">O exemplo demonstra que o <xref:System.Collections.Generic.SortedList%602.Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-158">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="ee4c3-159">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-159">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#2)]
 [!code-csharp[Generic.SortedList#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#2)]
 [!code-vb[Generic.SortedList#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="ee4c3-160">A implementação de <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada ao comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-160">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="ee4c3-161">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-161">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-162">
            <see langword="null" /> para usar o padrão <see cref="T:System.Collections.Generic.Comparer`1" /> para o tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-162">
              <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-163">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" /> que está vazia, tem a capacidade inicial padrão e usa o <see cref="T:System.Collections.Generic.IComparer`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-163">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-164">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos de acordo com o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-164">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="ee4c3-165">Este construtor usa o valor padrão para a capacidade inicial igual a <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-165">This constructor uses the default value for the initial capacity of the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-166">Para definir a capacidade inicial, use o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-166">To set the initial capacity, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="ee4c3-167">Se o tamanho final da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-167">If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-168">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-168">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-169">O exemplo de código a seguir cria uma lista classificada com um comparador de maiusculas e minúsculas para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-169">The following code example creates a sorted list with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="ee4c3-170">O exemplo adiciona quatro elementos, algumas com chaves em letras minúsculas e alguns com chaves de letras maiusculas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-170">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="ee4c3-171">O exemplo, em seguida, tentar adicionar um elemento com uma chave que difere de uma chave existente somente por maiusculas, captura a exceção resultante e exibe uma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-171">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="ee4c3-172">Por fim, o exemplo exibe os elementos em ordem de classificação de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-172">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="ee4c3-173">O <see cref="T:System.Collections.Generic.IDictionary`2" /> cujos elementos são copiados para o novo <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-173">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-174">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" /> que contém elementos copiados do <see cref="T:System.Collections.Generic.IDictionary`2" /> especificado, tem capacidade suficiente para acomodar o número de elementos copiados e usa o <see cref="T:System.Collections.Generic.IComparer`1" /> padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-175">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos de acordo com o padrão comparador; da mesma forma, cada chave na fonte `dictionary` também devem ser exclusivos de acordo com o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-175">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer; likewise, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="ee4c3-176">A capacidade do novo <xref:System.Collections.Generic.SortedList%602> é definido como o número de elementos no `dictionary`, portanto, nenhum redimensionamento ocorre enquanto a lista é preenchida.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-176">The capacity of the new <xref:System.Collections.Generic.SortedList%602> is set to the number of elements in `dictionary`, so no resizing takes place while the list is being populated.</span></span>  
  
 <span data-ttu-id="ee4c3-177">Este construtor usa o comparador padrão para `TKey`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-177">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="ee4c3-178">Para especificar um comparador, use o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-178">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="ee4c3-179">O comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-179">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="ee4c3-180">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-180">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="ee4c3-181">Se a chave de tipo `TKey` não implementa a interface, você pode especificar um <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementação em uma sobrecarga de construtor que aceita um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-181">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="ee4c3-182">Se os dados em `dictionary` são classificados, este construtor é um O (`n`) operação, onde `n` é o número de elementos em `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-182">If the data in `dictionary` are sorted, this constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span> <span data-ttu-id="ee4c3-183">Caso contrário, será um O (`n`\*`n`) operação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-183">Otherwise it is an O(`n`\*`n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-184">O exemplo de código a seguir mostra como usar <xref:System.Collections.Generic.SortedList%602> para criar uma cópia classificada de informações em um <xref:System.Collections.Generic.Dictionary%602>, passando o <xref:System.Collections.Generic.Dictionary%602> para o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-184">The following code example shows how to use <xref:System.Collections.Generic.SortedList%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29> constructor.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-185">
            <paramref name="dictionary" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-185">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee4c3-186">
            <paramref name="dictionary" /> contém uma ou mais chaves duplicadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-186">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="ee4c3-187">O número inicial de elementos que o <see cref="T:System.Collections.Generic.SortedList`2" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-187">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-188">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" /> que está vazia, tem a capacidade inicial especificada e usa o <see cref="T:System.Collections.Generic.IComparer`1" /> padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-188">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-189">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos de acordo com o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-189">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="ee4c3-190">A capacidade de um <xref:System.Collections.Generic.SortedList%602> é o número de elementos que o <xref:System.Collections.Generic.SortedList%602> pode conter antes de redimensionar.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-190">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can hold before resizing.</span></span> <span data-ttu-id="ee4c3-191">Como os elementos são adicionados a um <xref:System.Collections.Generic.SortedList%602>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-191">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ee4c3-192">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-192">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-193">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> ou definindo o <xref:System.Collections.Generic.SortedList%602.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-193">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="ee4c3-194">Reduzir a capacidade realoca a memória e copia todos os elementos de <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-194">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-195">Este construtor usa o comparador padrão para `TKey`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-195">This constructor uses the default comparer for `TKey`.</span></span> <span data-ttu-id="ee4c3-196">Para especificar um comparador, use o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-196">To specify a comparer, use the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="ee4c3-197">O comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-197">The default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="ee4c3-198">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se a chave de tipo `TKey` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-198">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the key type `TKey` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="ee4c3-199">Se a chave de tipo `TKey` não implementa a interface, você pode especificar um <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementação em uma sobrecarga de construtor que aceita um `comparer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-199">If the key type `TKey` does not implement either interface, you can specify a <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType> implementation in a constructor overload that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="ee4c3-200">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-200">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-201">O exemplo de código a seguir cria uma lista classificada com uma capacidade inicial de 4 e o preenche com 4 entradas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-201">The following code example creates a sorted list with an initial capacity of 4 and populates it with 4 entries.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_Int32#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_Int32/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_Int32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_Int32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ee4c3-202">
            <paramref name="capacity" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-202">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="ee4c3-203">O <see cref="T:System.Collections.Generic.IDictionary`2" /> cujos elementos são copiados para o novo <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-203">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="ee4c3-204">A implementação de <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada ao comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-204">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="ee4c3-205">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-205">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-206">
            <see langword="null" /> para usar o padrão <see cref="T:System.Collections.Generic.Comparer`1" /> para o tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-206">
              <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-207">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" />, que contém os elementos copiados do <see cref="T:System.Collections.Generic.IDictionary`2" /> especificado, tem capacidade suficiente para acomodar o número de elementos copiados e usa o <see cref="T:System.Collections.Generic.IComparer`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-207">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-208">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos de acordo com o especificado comparador; da mesma forma, cada chave na fonte `dictionary` também devem ser exclusivos de acordo com o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-208">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer; likewise, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="ee4c3-209">A capacidade do novo <xref:System.Collections.Generic.SortedList%602> é definido como o número de elementos no `dictionary`, portanto, nenhum redimensionamento ocorre enquanto a lista é preenchida.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-209">The capacity of the new <xref:System.Collections.Generic.SortedList%602> is set to the number of elements in `dictionary`, so no resizing takes place while the list is being populated.</span></span>  
  
 <span data-ttu-id="ee4c3-210">Se os dados em `dictionary` são classificados, este construtor é um O (`n`) operação, onde `n` é o número de elementos em `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-210">If the data in `dictionary` are sorted, this constructor is an O(`n`) operation, where `n` is the number of elements in `dictionary`.</span></span> <span data-ttu-id="ee4c3-211">Caso contrário, será um O (`n`\*`n`) operação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-211">Otherwise it is an O(`n`\*`n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-212">O exemplo de código a seguir mostra como usar <xref:System.Collections.Generic.SortedList%602> criar um maiusculas de minúsculas classificados cópia das informações em um maiusculas de minúsculas <xref:System.Collections.Generic.Dictionary%602>, passando o <xref:System.Collections.Generic.Dictionary%602> para o <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-212">The following code example shows how to use <xref:System.Collections.Generic.SortedList%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="ee4c3-213">Neste exemplo, os comparadores maiusculas e minúsculas são para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-213">In this example, the case-insensitive comparers are for the current culture.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_IDicIComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_IDicIComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_IDicIComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_IDicIComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-214">
            <paramref name="dictionary" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-214">
              <paramref name="dictionary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee4c3-215">
            <paramref name="dictionary" /> contém uma ou mais chaves duplicadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-215">
              <paramref name="dictionary" /> contains one or more duplicate keys.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int capacity, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int capacity, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="ee4c3-216">O número inicial de elementos que o <see cref="T:System.Collections.Generic.SortedList`2" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-216">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="ee4c3-217">A implementação de <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada ao comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-217">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="ee4c3-218">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-218">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-219">
            <see langword="null" /> para usar o padrão <see cref="T:System.Collections.Generic.Comparer`1" /> para o tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-219">
              <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-220">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedList`2" /> que está vazia, tem a capacidade inicial especificada e usa o <see cref="T:System.Collections.Generic.IComparer`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-220">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-221">Todas as chaves em um <xref:System.Collections.Generic.SortedList%602> devem ser exclusivos de acordo com o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-221">Every key in a <xref:System.Collections.Generic.SortedList%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="ee4c3-222">A capacidade de um <xref:System.Collections.Generic.SortedList%602> é o número de elementos que o <xref:System.Collections.Generic.SortedList%602> pode conter antes de redimensionar.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-222">The capacity of a <xref:System.Collections.Generic.SortedList%602> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can hold before resizing.</span></span> <span data-ttu-id="ee4c3-223">Como os elementos são adicionados a um <xref:System.Collections.Generic.SortedList%602>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-223">As elements are added to a <xref:System.Collections.Generic.SortedList%602>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="ee4c3-224">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-224">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-225">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> ou definindo o <xref:System.Collections.Generic.SortedList%602.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-225">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="ee4c3-226">Reduzir a capacidade realoca a memória e copia todos os elementos de <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-226">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-227">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-227">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-228">O exemplo de código a seguir cria uma lista classificada com uma capacidade inicial igual a 5 e um comparador de maiusculas e minúsculas para a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-228">The following code example creates a sorted list with an initial capacity of 5 and a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="ee4c3-229">O exemplo adiciona quatro elementos, algumas com chaves em letras minúsculas e alguns com chaves de letras maiusculas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-229">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="ee4c3-230">O exemplo, em seguida, tentar adicionar um elemento com uma chave que difere de uma chave existente somente por maiusculas, captura a exceção resultante e exibe uma mensagem de erro.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-230">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="ee4c3-231">Por fim, o exemplo exibe os elementos em ordem de classificação de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-231">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedList.ctor_Int32IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.ctor_Int32IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.ctor_Int32IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.ctor_Int32IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ee4c3-232">
            <paramref name="capacity" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-232">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-233">A chave do elemento a ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-233">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ee4c3-234">O valor do elemento a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-234">The value of the element to add.</span>
          </span>
          <span data-ttu-id="ee4c3-235">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-235">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-236">Adiciona um elemento com a chave e o valor especificados ao <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-236">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-237">Uma chave não pode ser `null`, mas um valor possível, se o tipo de valores na lista classificada, `TValue`, é um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-237">A key cannot be `null`, but a value can be, if the type of values in the sorted list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="ee4c3-238">Você também pode usar o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Generic.SortedList%602>; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-238">You can also use the <xref:System.Collections.Generic.SortedList%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedList%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="ee4c3-239">No entanto, se a chave especificada já existe no <xref:System.Collections.Generic.SortedList%602>, a definição de <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-239">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedList%602>, setting the <xref:System.Collections.Generic.SortedList%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ee4c3-240">Em contraste, o <xref:System.Collections.Generic.SortedList%602.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-240">In contrast, the <xref:System.Collections.Generic.SortedList%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ee4c3-241">Se <xref:System.Collections.Generic.SortedList%602.Count%2A> já for igual a <xref:System.Collections.Generic.SortedList%602.Capacity%2A>, a capacidade do <xref:System.Collections.Generic.SortedList%602> é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-241">If <xref:System.Collections.Generic.SortedList%602.Count%2A> already equals <xref:System.Collections.Generic.SortedList%602.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.SortedList%602> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="ee4c3-242">Esse método é um O (`n`) a operação de dados classificados, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-242">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-243">É um O (log `n`) se o novo elemento é adicionado ao final da lista de operação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-243">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="ee4c3-244">Se a inserção faz com que um redimensionamento, a operação é O (`n`).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-244">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-245">O exemplo de código a seguir cria um vazio <xref:System.Collections.Generic.SortedList%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.SortedList%602.Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-245">The following code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="ee4c3-246">O exemplo demonstra que o <xref:System.Collections.Generic.SortedList%602.Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-246">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="ee4c3-247">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-247">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#2](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#2)]
 [!code-csharp[Generic.SortedList#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#2)]
 [!code-vb[Generic.SortedList#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-248">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-248">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee4c3-249">Já existe um elemento com a mesma chave no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-249">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-250">Obtém ou define o número de elementos que o <see cref="T:System.Collections.Generic.SortedList`2" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-250">Gets or sets the number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-251">O número de elementos que o <see cref="T:System.Collections.Generic.SortedList`2" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-251">The number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-252"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> é o número de elementos que o <xref:System.Collections.Generic.SortedList%602> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-252"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can store.</span></span> <span data-ttu-id="ee4c3-253"><xref:System.Collections.Generic.SortedList%602.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-253"><xref:System.Collections.Generic.SortedList%602.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-254"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> sempre é maior que ou igual a <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-254"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-255">Se <xref:System.Collections.Generic.SortedList%602.Count%2A> excede <xref:System.Collections.Generic.SortedList%602.Capacity%2A> durante a adição de elementos, a capacidade é aumentada, automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-255">If <xref:System.Collections.Generic.SortedList%602.Count%2A> exceeds <xref:System.Collections.Generic.SortedList%602.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="ee4c3-256">A capacidade pode ser diminuída chamando <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> ou definindo o <xref:System.Collections.Generic.SortedList%602.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-256">The capacity can be decreased by calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or by setting the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="ee4c3-257">Quando o valor de <xref:System.Collections.Generic.SortedList%602.Capacity%2A> é definido explicitamente, a matriz interna também seja realocada para acomodar a capacidade especificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-257">When the value of <xref:System.Collections.Generic.SortedList%602.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="ee4c3-258">Recuperar o valor dessa propriedade é uma operação de (1); configuração da propriedade é um O (`n`) operação, onde `n` é a nova capacidade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-258">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ee4c3-259">
            <see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> é definido como um valor menor que <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-259">
              <see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="ee4c3-260">Não há memória suficiente disponível no sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-260">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Count" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.TrimExcess" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-261">Remove todos os elementos do <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-261">Removes all elements from the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-262"><xref:System.Collections.Generic.SortedList%602.Count%2A> é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-262"><xref:System.Collections.Generic.SortedList%602.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="ee4c3-263"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-263"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="ee4c3-264">Para redefinir a capacidade do <xref:System.Collections.Generic.SortedList%602>, chame <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> ou defina o <xref:System.Collections.Generic.SortedList%602.Capacity%2A> propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-264">To reset the capacity of the <xref:System.Collections.Generic.SortedList%602>, call <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> or set the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property directly.</span></span> <span data-ttu-id="ee4c3-265">Cortar vazio <xref:System.Collections.Generic.SortedList%602> define a capacidade do <xref:System.Collections.Generic.SortedList%602> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-265">Trimming an empty <xref:System.Collections.Generic.SortedList%602> sets the capacity of the <xref:System.Collections.Generic.SortedList%602> to the default capacity.</span></span>  
  
 <span data-ttu-id="ee4c3-266">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-266">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.TrimExcess" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-267">Obtém o <see cref="T:System.Collections.Generic.IComparer`1" /> da lista classificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-267">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> for the sorted list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-268">O <see cref="T:System.IComparable`1" /> atual <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-268">The <see cref="T:System.IComparable`1" /> for the current <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-269">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-269">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-270">A chave a ser localizada no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-270">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-271">Determina se a <see cref="T:System.Collections.Generic.SortedList`2" /> contém uma chave específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-271">Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-272">
            <see langword="true" /> se o <see cref="T:System.Collections.Generic.SortedList`2" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-272">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-273">Este método é uma operação O(log `n`), em que `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-273">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-274">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> método para testar se uma chave existe antes de chamar o <xref:System.Collections.Generic.SortedList%602.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-274">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedList%602.Add%2A> method.</span></span> <span data-ttu-id="ee4c3-275">Ele também mostra como usar o <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> método para recuperar valores, que é uma maneira eficiente para recuperar valores quando um programa tenta frequentemente chaves que não estão na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-275">It also shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the sorted list.</span></span> <span data-ttu-id="ee4c3-276">Finalmente, ele mostra a maneira menos eficiente para testar se chaves existirem, usando o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade (indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-276">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="ee4c3-277">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-277">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#6](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#6)]
 [!code-csharp[Generic.SortedList#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#6)]
 [!code-vb[Generic.SortedList#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#6)]  
[!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
[!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
[!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-278">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-278">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ee4c3-279">O valor a ser localizado na <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-279">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
          <span data-ttu-id="ee4c3-280">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-280">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-281">Determinará se o <see cref="T:System.Collections.Generic.SortedList`2" /> contiver um valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-281">Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-282">
            <see langword="true" /> se o <see cref="T:System.Collections.Generic.SortedList`2" /> contiver um elemento com o valor especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-282">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-283">Este método determina a igualdade usando o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> para o tipo de valor `TValue`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-283">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  <span data-ttu-id="ee4c3-284"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se o valor do tipo `TValue` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-284"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="ee4c3-285">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se o valor do tipo `TValue` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-285">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="ee4c3-286">Se o valor do tipo `TValue` implementa a interface, esse método usa <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-286">If the value type `TValue` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ee4c3-287">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-288">Ou seja, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-289">Obtém o número de pares chave-valor contidos no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-289">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-290">O número de pares chave-valor contidos no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-290">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-291"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> é o número de elementos que o <xref:System.Collections.Generic.SortedList%602> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-291"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.SortedList%602> can store.</span></span> <span data-ttu-id="ee4c3-292"><xref:System.Collections.Generic.SortedList%602.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-292"><xref:System.Collections.Generic.SortedList%602.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-293"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> sempre é maior que ou igual a <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-293"><xref:System.Collections.Generic.SortedList%602.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-294">Se <xref:System.Collections.Generic.SortedList%602.Count%2A> excede <xref:System.Collections.Generic.SortedList%602.Capacity%2A> durante a adição de elementos, a capacidade é aumentada, automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-294">If <xref:System.Collections.Generic.SortedList%602.Count%2A> exceeds <xref:System.Collections.Generic.SortedList%602.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="ee4c3-295">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-295">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-296">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-296">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-297">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> do tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" /> para <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-297">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> for the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-298">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-298">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ee4c3-299">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-299">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ee4c3-300">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-300">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ee4c3-301">O dicionário é mantido em uma ordem classificada, usando uma árvore interna.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-301">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="ee4c3-302">Cada elemento novo é posicionado na posição de classificação correta e a árvore é ajustada para manter a ordem de classificação, sempre que um elemento seja removido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-302">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="ee4c3-303">Durante a enumeração, a ordem de classificação é mantida.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-303">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="ee4c3-304">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-304">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ee4c3-305">Nesta posição, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-305">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="ee4c3-306">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-306">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="ee4c3-307"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-307"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="ee4c3-308"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-308"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ee4c3-309">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-309">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ee4c3-310">Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> retornar `false`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-310">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> return `false`.</span></span> <span data-ttu-id="ee4c3-311">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-311">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="ee4c3-312">Não é possível definir <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-312">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="ee4c3-313">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-313">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ee4c3-314">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-314">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ee4c3-315">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-315">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ee4c3-316">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-316">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ee4c3-317">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-317">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ee4c3-318">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-318">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="ee4c3-319">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-319">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public int IndexOfKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfKey (key As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfKey(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-320">A chave a ser localizada no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-320">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-321">Procura a chave especificada e retorna o índice baseado em zero em toda a <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-321">Searches for the specified key and returns the zero-based index within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-322">O índice baseado em zero de <paramref name="key" /> em toda a <see cref="T:System.Collections.Generic.SortedList`2" />, se encontrada; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-322">The zero-based index of <paramref name="key" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-323">Esse método executa uma pesquisa binária; Portanto, esse método é um O (log `n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-323">This method performs a binary search; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-324">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-324">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public int IndexOfValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfValue (value As TValue) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfValue(TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ee4c3-325">O valor a ser localizado na <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-325">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
          <span data-ttu-id="ee4c3-326">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-326">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-327">Pesquisa o valor especificado e retorna o índice baseado em zero da primeira ocorrência dentro de todo o <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-327">Searches for the specified value and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-328">O índice baseado em zero da primeira ocorrência de <paramref name="value" /> em todo o <see cref="T:System.Collections.Generic.SortedList`2" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-328">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-329">Este método determina a igualdade usando o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> para o tipo de valor `TValue`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-329">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  <span data-ttu-id="ee4c3-330"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se o valor do tipo `TValue` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-330"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="ee4c3-331">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se o valor do tipo `TValue` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-331">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether the value type `TValue` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="ee4c3-332">Se o valor do tipo `TValue` implementa a interface, esse método usa <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-332">If the value type `TValue` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ee4c3-333">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-333">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-334">Ou seja, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-334">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-335">A chave cujo valor será obtido ou definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-335">The key whose value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-336">Obtém ou define o valor associado à chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-336">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-337">O valor associado à chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-337">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="ee4c3-338">Se a chave especificada não for localizada, uma operação get lançará um <see cref="T:System.Collections.Generic.KeyNotFoundException" /> e uma operação de conjuntos criará um novo elemento com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-338">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new element using the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-339">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-339">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="ee4c3-340">Uma chave não pode ser `null`, mas um valor possível, se o tipo de valores na lista, `TValue`, é um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-340">A key cannot be `null`, but a value can be, if the type of values in the list, `TValue`, is a reference type.</span></span>  
  
 <span data-ttu-id="ee4c3-341">Se a chave não for encontrada quando um valor é recuperado, <xref:System.Collections.Generic.KeyNotFoundException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-341">If the key is not found when a value is being retrieved, <xref:System.Collections.Generic.KeyNotFoundException> is thrown.</span></span> <span data-ttu-id="ee4c3-342">Se a chave não for encontrada quando um valor está sendo definido, a chave e valor são adicionados.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-342">If the key is not found when a value is being set, the key and value are added.</span></span>  
  
 <span data-ttu-id="ee4c3-343">Você também pode usar o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Generic.SortedList%602>; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-343">You can also use the <xref:System.Collections.Generic.SortedList%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedList%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="ee4c3-344">No entanto, se a chave especificada já existe no <xref:System.Collections.Generic.SortedList%602>, a definição de <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-344">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedList%602>, setting the <xref:System.Collections.Generic.SortedList%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ee4c3-345">Em contraste, o <xref:System.Collections.Generic.SortedList%602.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-345">In contrast, the <xref:System.Collections.Generic.SortedList%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ee4c3-346">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-346">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedList%602.Item%2A> property.</span></span> <span data-ttu-id="ee4c3-347">Visual Basic implementa <xref:System.Collections.Generic.SortedList%602.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-347">Visual Basic implements <xref:System.Collections.Generic.SortedList%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="ee4c3-348">Recuperar o valor dessa propriedade é um O (log `n`) operação, onde n é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-348">Retrieving the value of this property is an O(log `n`) operation, where n is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-349">Configuração da propriedade é um O (log `n`) operação se a chave já está no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-349">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-350">Se a chave não estiver na lista, a configuração da propriedade é um O (`n`) a operação de dados classificados e O (log `n`) se o novo elemento é adicionado ao final da lista.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-350">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="ee4c3-351">Se a inserção faz com que um redimensionamento, a operação é O (`n`).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-351">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-352">O seguinte exemplo de código usa o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade (indexador em c#) para recuperar valores, demonstrando que um <xref:System.Collections.Generic.KeyNotFoundException> é lançada quando uma chave solicitada não está presente e mostrando que o valor associado com uma chave pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-352">The following code example uses the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="ee4c3-353">O exemplo também mostra como usar o <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> método como uma forma mais eficiente para recuperar valores, se um programa geralmente deve tentar valores de chave que não estão na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-353">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list.</span></span>  
  
 <span data-ttu-id="ee4c3-354">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-354">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#3](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#3)]
 [!code-csharp[Generic.SortedList#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#3)]
 [!code-vb[Generic.SortedList#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#3)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
[!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
[!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
[!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-355">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-355">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="ee4c3-356">A propriedade é recuperada e <paramref name="key" /> não existe na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-356">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IList(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;TKey&gt; ^ Keys { System::Collections::Generic::IList&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-357">Obtém uma coleção que contém as chaves no <see cref="T:System.Collections.Generic.SortedList`2" />, na ordem de classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-357">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />, in sorted order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-358">Um <see cref="T:System.Collections.Generic.IList`1" /> que contém as chaves no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-358">A <see cref="T:System.Collections.Generic.IList`1" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-359">A ordem das chaves no <xref:System.Collections.Generic.IList%601> é o mesmo que a ordem no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-359">The order of the keys in the <xref:System.Collections.Generic.IList%601> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-360">Retornado <xref:System.Collections.Generic.IList%601> não é uma cópia estática; em vez disso, o <xref:System.Collections.Generic.IList%601> refere-se novamente para as chaves no original <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-360">The returned <xref:System.Collections.Generic.IList%601> is not a static copy; instead, the <xref:System.Collections.Generic.IList%601> refers back to the keys in the original <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-361">Portanto, as alterações para o <xref:System.Collections.Generic.SortedList%602> continuar sejam refletidas no <xref:System.Collections.Generic.IList%601>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-361">Therefore, changes to the <xref:System.Collections.Generic.SortedList%602> continue to be reflected in the <xref:System.Collections.Generic.IList%601>.</span></span>  
  
 <span data-ttu-id="ee4c3-362">A coleção retornada pelo <xref:System.Collections.Generic.SortedList%602.Keys%2A> propriedade fornece uma maneira eficiente de recuperar chaves de índice.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-362">The collection returned by the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property provides an efficient way to retrieve keys by index.</span></span> <span data-ttu-id="ee4c3-363">Não é necessário gerar a lista quando a propriedade é acessada, pois a lista é apenas um wrapper para a matriz interna de chaves.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-363">It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of keys.</span></span> <span data-ttu-id="ee4c3-364">O código a seguir mostra o uso do <xref:System.Collections.Generic.SortedList%602.Keys%2A> propriedade para a recuperação indexada das chaves de uma lista ordenada de elementos com chaves de cadeia de caracteres:</span><span class="sxs-lookup"><span data-stu-id="ee4c3-364">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property for indexed retrieval of keys from a sorted list of elements with string keys:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="ee4c3-365">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-365">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-366">O exemplo de código a seguir mostra como enumerar as chaves usando a lista classificada de <xref:System.Collections.Generic.SortedList%602.Keys%2A> propriedade e como enumerar as chaves e valores na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-366">The following code example shows how to enumerate the keys in the sorted list using the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property, and how to enumerate the keys and values in the sorted list.</span></span>  
  
 <span data-ttu-id="ee4c3-367">O exemplo também mostra como usar o <xref:System.Collections.Generic.SortedList%602.Keys%2A> propriedade para a recuperação indexada eficiente de chaves.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-367">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.Keys%2A> property for efficient indexed retrieval of keys.</span></span>  
  
 <span data-ttu-id="ee4c3-368">Esse código é parte de um exemplo maior que pode ser compilado e executado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-368">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="ee4c3-369">Consulte <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-369">See <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 [!code-cpp[Generic.SortedList#9](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#9)]
 [!code-csharp[Generic.SortedList#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#9)]
 [!code-vb[Generic.SortedList#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#9)]  
[!code-cpp[Generic.SortedList#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#7)]
[!code-csharp[Generic.SortedList#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#7)]
[!code-vb[Generic.SortedList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-370">A chave do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-370">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-371">Remove o elemento com a chave especificada do <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-371">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-372">
            <see langword="true" /> se o elemento for removido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-372">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ee4c3-373">Esse método também retornará <see langword="false" /> se <paramref name="key" /> não tiver sido encontrado no <see cref="T:System.Collections.Generic.SortedList`2" /> original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-373">This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-374">Esse método executa uma pesquisa binária; No entanto, os elementos são movidos para preencher o ponto aberto, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-374">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-375">O exemplo de código a seguir mostra como remover um par chave/valor da lista classificada usando o <xref:System.Collections.Generic.SortedList%602.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-375">The following code example shows how to remove a key/value pair from the sorted list using the <xref:System.Collections.Generic.SortedList%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="ee4c3-376">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-376">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#10](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#10)]
 [!code-csharp[Generic.SortedList#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#10)]
 [!code-vb[Generic.SortedList#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-377">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-377">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ee4c3-378">O índice de base zero do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-378">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-379">Remove o elemento no índice especificado do <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-379">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-380">Esse método executa uma pesquisa binária; No entanto, os elementos são movidos para preencher o ponto aberto, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-380">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ee4c3-381">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-381">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="ee4c3-382">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-382">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-383">
            <paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-383">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="arrayIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="ee4c3-384">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-384">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="ee4c3-385">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-385">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="ee4c3-386">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-386">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-387">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-387">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ee4c3-388">Se o tipo da fonte de <xref:System.Collections.ICollection> não pode ser convertido automaticamente para o tipo de destino `array`, as implementações não genérica de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> gerar <xref:System.InvalidCastException>, enquanto as implementações genéricas lançam <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-388">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="ee4c3-389">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-389">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-390">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-390">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ee4c3-391">
            <paramref name="arrayIndex" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-391">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee4c3-392">
            <paramref name="array" /> é multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-392">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="ee4c3-393">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-393">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-394">O <paramref name="array" /> não tem indexação baseada em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-394">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="ee4c3-395">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-395">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-396">O número de elementos na origem <see cref="T:System.Collections.ICollection" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-396">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="ee4c3-397">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-397">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-398">O tipo do <see cref="T:System.Collections.ICollection" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-398">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-399">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-399">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-400">
            <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-400">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ee4c3-401">Na implementação padrão de <see cref="T:System.Collections.Generic.SortedList`2" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-401">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-402">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-402">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="ee4c3-403">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-403">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="ee4c3-404">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-404">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ee4c3-405">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-405">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ee4c3-406">O <xref:System.Collections.ICollection.SyncRoot%2A> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-406">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="ee4c3-407">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-407">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="ee4c3-408">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-408">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-409">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-409">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-410">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-410">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="ee4c3-411">Na implementação padrão da <see cref="T:System.Collections.Generic.SortedList`2" />, essa propriedade sempre retorna a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-411">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-412">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-412">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="ee4c3-413">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-413">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ee4c3-414">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-414">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="ee4c3-415">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-415">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ee4c3-416">O <xref:System.Collections.ICollection.SyncRoot%2A> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-416">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="ee4c3-417">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-417">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="ee4c3-418">O código a seguir mostra o uso do <xref:System.Collections.ICollection.SyncRoot%2A> propriedade para c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-418">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="ee4c3-419">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-419">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-420">O <see cref="T:System.Object" /> a ser usado como chave do elemento a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-420">The <see cref="T:System.Object" /> to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ee4c3-421">O <see cref="T:System.Object" /> a ser usado como valor do elemento a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-421">The <see cref="T:System.Object" /> to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-422">Adiciona um elemento com a chave fornecida e o valor para o <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-422">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-423">Você também pode usar o <xref:System.Collections.IDictionary.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no dicionário; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-423">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="ee4c3-424">No entanto, se a chave especificada já existe no dicionário, configurando o <xref:System.Collections.IDictionary.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-424">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ee4c3-425">Em contraste, o <xref:System.Collections.IDictionary.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-425">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ee4c3-426">Esse método é um O (`n`) a operação de dados classificados, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-426">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-427">É um O (log `n`) se o novo elemento é adicionado ao final da lista de operação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-427">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="ee4c3-428">Se a inserção faz com que um redimensionamento, a operação é O (`n`).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-428">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-429">O exemplo de código a seguir mostra como acessar o <xref:System.Collections.Generic.SortedList%602> classe por meio de <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-429">The following code example shows how to access the <xref:System.Collections.Generic.SortedList%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="ee4c3-430">O exemplo de código cria um vazio <xref:System.Collections.Generic.SortedList%602> de cadeias de caracteres com as chaves de cadeia de caracteres e usa o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> método para adicionar alguns elementos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-430">The code example creates an empty <xref:System.Collections.Generic.SortedList%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="ee4c3-431">O exemplo demonstra que o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> método lança um <xref:System.ArgumentException> ao tentar adicionar uma chave duplicada ou uma chave ou valor de tipo de dados errado for fornecido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-431">The example demonstrates that the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="ee4c3-432">O exemplo de código demonstra o uso de vários outros membros de <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-432">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedList.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-433">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-433">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee4c3-434">O <paramref name="key" /> é de um tipo que não é atribuível ao tipo de chave <paramref name="TKey" /> do <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-434">
              <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="ee4c3-435">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-435">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-436">
            <paramref name="value" /> é de um tipo que não é atribuível ao tipo de valor <paramref name="TValue" /> do <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-436">
              <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
          <span data-ttu-id="ee4c3-437">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-437">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-438">Já existe um elemento com a mesma chave no <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-438">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-439">A chave a ser localizada no <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-439">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-440">Determina se o <see cref="T:System.Collections.IDictionary" /> contém um elemento com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-440">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-441">
            <see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> contiver um elemento com a chave; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-441">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-442">Este método retorna `false` se `key` é de um tipo que não é atribuível ao tipo de chave `TKey` do <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-442">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-443">Este método é uma operação O(log `n`), em que `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-443">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-444">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A> método o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-444">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-445">O exemplo demonstra que o método retorna `false` se uma chave de tipo de dados errado for fornecida.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-445">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="ee4c3-446">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-446">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedList.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-447">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-447">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-448">Retorna um <see cref="T:System.Collections.IDictionaryEnumerator" /> para o <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-448">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-449">Um <see cref="T:System.Collections.IDictionaryEnumerator" /> para o <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-449">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-450">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-450">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ee4c3-451">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-451">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ee4c3-452">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-452">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ee4c3-453">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-453">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ee4c3-454"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-454"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="ee4c3-455">Nesta posição, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-455">At this position, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="ee4c3-456">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-456">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="ee4c3-457"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-457"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ee4c3-458"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IDictionaryEnumerator.Entry%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-458"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ee4c3-459">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-459">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ee4c3-460">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-460">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ee4c3-461">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-461">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="ee4c3-462">Para definir <xref:System.Collections.IDictionaryEnumerator.Entry%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-462">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ee4c3-463">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-463">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ee4c3-464">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-464">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ee4c3-465">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-465">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="ee4c3-466">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-466">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ee4c3-467">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-467">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ee4c3-468">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-468">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="ee4c3-469">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-469">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-470">O exemplo de código a seguir mostra como enumerar os pares chave/valor na lista classificada, usando o `foreach` instrução (`For Each` no Visual Basic, `for each` em C++), que oculta o uso do enumerador.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-470">The following code example shows how to enumerate the key/value pairs in the sorted list by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="ee4c3-471">Em particular, observe que o enumerador para o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface retorna <xref:System.Collections.DictionaryEntry> objetos em vez de <xref:System.Collections.Generic.KeyValuePair%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-471">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="ee4c3-472">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-472">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-473">Obtém um valor que indica se o <see cref="T:System.Collections.IDictionary" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-473">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-474">
            <see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-474">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ee4c3-475">Na implementação padrão de <see cref="T:System.Collections.Generic.SortedList`2" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-475">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-476">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-476">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="ee4c3-477">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-477">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="ee4c3-478">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-478">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IDictionary.IsFixedSize" />
        <altmember cref="P:System.Collections.IDictionary.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-479">Obtém um valor que indica se o <see cref="T:System.Collections.IDictionary" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-479">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-480">
            <see langword="true" /> se o <see cref="T:System.Collections.IDictionary" /> for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-480">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ee4c3-481">Na implementação padrão de <see cref="T:System.Collections.Generic.SortedList`2" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-481">In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-482">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-482">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="ee4c3-483">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-483">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="ee4c3-484">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-484">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IDictionary.IsReadOnly" />
        <altmember cref="P:System.Collections.IDictionary.IsFixedSize" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-485">A chave do elemento a ser obtida ou adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-485">The key of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-486">Obtém ou define o elemento com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-486">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-487">O elemento com a chave especificada, ou <see langword="null" /> se <paramref name="key" /> não está no dicionário ou <paramref name="key" /> é de um tipo que não é atribuível ao tipo de chave <paramref name="TKey" /> do <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-487">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-488">Essa propriedade retorna `null` se `key` é de um tipo que não é atribuível ao tipo de chave `TKey` do <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-488">This property returns `null` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-489">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-489">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="ee4c3-490">Você também pode usar o <xref:System.Collections.IDictionary.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no dicionário; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-490">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="ee4c3-491">No entanto, se a chave especificada já existe no dicionário, configurando o <xref:System.Collections.IDictionary.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-491">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ee4c3-492">Em contraste, o <xref:System.Collections.IDictionary.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-492">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ee4c3-493">A linguagem c# usa o [isso](~/docs/csharp/language-reference/keywords/this.md) palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-493">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="ee4c3-494">Visual Basic implementa <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-494">Visual Basic implements <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="ee4c3-495">Recuperar o valor dessa propriedade é um O (log `n`) operação, onde n é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-495">Retrieving the value of this property is an O(log `n`) operation, where n is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span> <span data-ttu-id="ee4c3-496">Configuração da propriedade é um O (log `n`) operação se a chave já está no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-496">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-497">Se a chave não estiver na lista, a configuração da propriedade é um O (`n`) a operação de dados classificados e O (log `n`) se o novo elemento é adicionado ao final da lista.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-497">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="ee4c3-498">Se a inserção faz com que um redimensionamento, a operação é O (`n`).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-498">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-499">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> propriedade (indexador em c#) da <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.SortedList%602>e diferenças entre a propriedade de <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-499">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ee4c3-500">O exemplo mostra que, como o <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> propriedade, o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> propriedade pode alterar o valor associado com uma chave existente e pode ser usada para adicionar um novo par de chave/valor se a chave especificada não está na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-500">The example shows that, like the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the sorted list.</span></span> <span data-ttu-id="ee4c3-501">O exemplo também mostra que, ao contrário de <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> propriedade, o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> propriedade não lança uma exceção se `key` não estiver na lista classificada, retornando uma referência nula em vez disso.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-501">The example also shows that unlike the <xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the sorted list, returning a null reference instead.</span></span> <span data-ttu-id="ee4c3-502">Por fim, o exemplo demonstra que obtendo o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> propriedade retorna uma referência nula se `key` não é do tipo de dados correto e que a configuração da propriedade gera uma exceção se `key` não é do tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-502">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="ee4c3-503">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-503">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedList.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedList.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedList.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-504">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-504">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee4c3-505">Um valor está sendo atribuído e <paramref name="key" /> é de um tipo que não é atribuível ao tipo de chave <paramref name="TKey" /> do <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-505">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
          <span data-ttu-id="ee4c3-506">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-506">-or-</span>
          </span>
          <span data-ttu-id="ee4c3-507">Um valor está sendo atribuído e <paramref name="value" /> é de um tipo que não é atribuível ao tipo de valor <paramref name="TValue" /> do <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-507">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-508">Obtém um <see cref="T:System.Collections.ICollection" /> que contém as chaves do <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-508">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-509">Um <see cref="T:System.Collections.ICollection" /> que contém as chaves do <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-509">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-510">A ordem das chaves no <xref:System.Collections.ICollection> é o mesmo que a ordem no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-510">The order of the keys in the <xref:System.Collections.ICollection> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-511">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-511">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-512">O exemplo de código a seguir mostra como usar o <xref:System.Collections.IDictionary.Keys%2A> propriedade o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.SortedDictionary%602>, para listar as chaves no dicionário.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-512">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="ee4c3-513">O exemplo também mostra como enumerar os pares chave/valor na lista classificada; Observe que o enumerador para o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface retorna <xref:System.Collections.DictionaryEntry> objetos em vez de <xref:System.Collections.Generic.KeyValuePair%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-513">The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="ee4c3-514">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-514">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedList.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-515">A chave do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-515">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-516">Remove o elemento com a chave especificada do <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-516">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-517">Esse método executa uma pesquisa binária; No entanto, os elementos são movidos para preencher o ponto aberto, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-517">This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-518">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A> do <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-518">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-519">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-519">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedList.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-520">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-520">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-521">Obtém um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-521">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-522">Um <see cref="T:System.Collections.ICollection" /> que contém os valores de <see cref="T:System.Collections.IDictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-522">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-523">A ordem dos valores a <xref:System.Collections.ICollection> é o mesmo que a ordem no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-523">The order of the values in the <xref:System.Collections.ICollection> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-524">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-524">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-525">O exemplo de código a seguir mostra como usar o <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A> propriedade o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface com um <xref:System.Collections.Generic.SortedList%602>, para listar os valores na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-525">The following code example shows how to use the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedList%602>, to list the values in the sorted list.</span></span> <span data-ttu-id="ee4c3-526">O exemplo também mostra como enumerar os pares chave/valor na lista classificada; Observe que o enumerador para o <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface retorna <xref:System.Collections.DictionaryEntry> objetos em vez de <xref:System.Collections.Generic.KeyValuePair%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-526">The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="ee4c3-527">O exemplo de código faz parte de um exemplo maior, inclusive saída, fornecido para o método <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-527">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedList.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedList.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedList.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedList.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedList.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedList.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedList.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedList.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-528">Retorna um enumerador que itera em uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-528">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-529">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-529">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-530">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-530">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ee4c3-531">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-531">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ee4c3-532">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-532">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ee4c3-533">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-533">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ee4c3-534"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-534"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="ee4c3-535">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-535">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ee4c3-536">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-536">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ee4c3-537"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-537"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ee4c3-538"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-538"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ee4c3-539">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-539">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ee4c3-540">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-540">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ee4c3-541">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-541">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ee4c3-542">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-542">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ee4c3-543">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-543">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ee4c3-544">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-544">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ee4c3-545">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-545">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="ee4c3-546">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-546">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ee4c3-547">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-547">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ee4c3-548">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-548">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="ee4c3-549">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-549">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-550">Definirá a capacidade para o número real de elementos no <see cref="T:System.Collections.Generic.SortedList`2" />, se esse número for menor que 90% da capacidade atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-550">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.SortedList`2" />, if that number is less than 90 percent of current capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-551">Esse método pode ser usado para minimizar a memória da coleção sobrecarga se nenhum elemento novo será adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-551">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="ee4c3-552">O custo de realocar e copiar uma grande <xref:System.Collections.Generic.SortedList%602> pode ser considerável, no entanto, para que o <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> método não fará nada se a lista estiver em mais de 90% da capacidade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-552">The cost of reallocating and copying a large <xref:System.Collections.Generic.SortedList%602> can be considerable, however, so the <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="ee4c3-553">Isso evita a incorrer em um custo de realocação grande para um ganho relativamente pequeno.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-553">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="ee4c3-554">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-554">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
 <span data-ttu-id="ee4c3-555">Para redefinir um <xref:System.Collections.Generic.SortedList%602> para seu estado inicial, chame o <xref:System.Collections.Generic.SortedList%602.Clear%2A> método antes de chamar <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-555">To reset a <xref:System.Collections.Generic.SortedList%602> to its initial state, call the <xref:System.Collections.Generic.SortedList%602.Clear%2A> method before calling <xref:System.Collections.Generic.SortedList%602.TrimExcess%2A> method.</span></span> <span data-ttu-id="ee4c3-556">Cortar vazio <xref:System.Collections.Generic.SortedList%602> define a capacidade do <xref:System.Collections.Generic.SortedList%602> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-556">Trimming an empty <xref:System.Collections.Generic.SortedList%602> sets the capacity of the <xref:System.Collections.Generic.SortedList%602> to the default capacity.</span></span>  
  
 <span data-ttu-id="ee4c3-557">A capacidade também pode ser definida usando o <xref:System.Collections.Generic.SortedList%602.Capacity%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-557">The capacity can also be set using the <xref:System.Collections.Generic.SortedList%602.Capacity%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedList`2.Clear" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Capacity" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ee4c3-558">A chave cujo valor será obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-558">The key whose value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ee4c3-559">Quando este método retornar, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-559">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span>
          </span>
          <span data-ttu-id="ee4c3-560">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-560">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee4c3-561">Obtém o valor associado à chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-561">Gets the value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee4c3-562">
            <see langword="true" /> se o <see cref="T:System.Collections.Generic.SortedList`2" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-562">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-563">Esse método combina a funcionalidade do <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> método e o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-563">This method combines the functionality of the <xref:System.Collections.Generic.SortedList%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedList%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="ee4c3-564">Se a chave não for encontrada, o `value` parâmetro obtém o valor padrão apropriado para o tipo de valor `TValue`; por exemplo, zero (0) para tipos de inteiros, `false` para tipos boolianos, e `null` para tipos de referência.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-564">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, zero (0) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="ee4c3-565">Esse método executa uma pesquisa binária; Portanto, esse método é um O (log `n`) operação, onde `n` é <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-565">This method performs a binary search; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedList%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-566">O exemplo mostra como usar o <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> método como uma forma mais eficiente para recuperar os valores em um programa que tenta frequentemente chaves que não estão na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-566">The example shows how to use the <xref:System.Collections.Generic.SortedList%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the sorted list.</span></span> <span data-ttu-id="ee4c3-567">Para contraste, o exemplo também mostra como o <xref:System.Collections.Generic.SortedList%602.Item%2A> propriedade (indexador em c#) lança exceções ao tentar recuperar as chaves que não existentes.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-567">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedList%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="ee4c3-568">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-568">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#5](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#5)]
 [!code-csharp[Generic.SortedList#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#5)]
 [!code-vb[Generic.SortedList#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#5)]  
[!code-cpp[Generic.SortedList#4](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#4)]
[!code-csharp[Generic.SortedList#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#4)]
[!code-vb[Generic.SortedList#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee4c3-569">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-569">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)" />
        <altmember cref="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedList`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;TValue&gt; ^ Values { System::Collections::Generic::IList&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee4c3-570">Obtém uma coleção que contém os valores no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-570">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee4c3-571">Um <see cref="T:System.Collections.Generic.IList`1" /> que contém os valores no <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee4c3-571">A <see cref="T:System.Collections.Generic.IList`1" /> containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee4c3-572">A ordem dos valores a <xref:System.Collections.Generic.IList%601> é o mesmo que a ordem no <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-572">The order of the values in the <xref:System.Collections.Generic.IList%601> is the same as the order in the <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
 <span data-ttu-id="ee4c3-573">Retornado <xref:System.Collections.Generic.IList%601> não é uma cópia estática; em vez disso, o <xref:System.Collections.Generic.IList%601> refere-se novamente para os valores originais <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-573">The returned <xref:System.Collections.Generic.IList%601> is not a static copy; instead, the <xref:System.Collections.Generic.IList%601> refers back to the values in the original <xref:System.Collections.Generic.SortedList%602>.</span></span> <span data-ttu-id="ee4c3-574">Portanto, as alterações para o <xref:System.Collections.Generic.SortedList%602> continuar sejam refletidas no <xref:System.Collections.Generic.IList%601>.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-574">Therefore, changes to the <xref:System.Collections.Generic.SortedList%602> continue to be reflected in the <xref:System.Collections.Generic.IList%601>.</span></span>  
  
 <span data-ttu-id="ee4c3-575">A coleção retornada pelo <xref:System.Collections.Generic.SortedList%602.Values%2A> propriedade fornece uma maneira eficiente para recuperar valores por índice.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-575">The collection returned by the <xref:System.Collections.Generic.SortedList%602.Values%2A> property provides an efficient way to retrieve values by index.</span></span> <span data-ttu-id="ee4c3-576">Não é necessário gerar a lista quando a propriedade é acessada, pois a lista é apenas um wrapper para a matriz interna de valores.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-576">It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of values.</span></span> <span data-ttu-id="ee4c3-577">O código a seguir mostra o uso do <xref:System.Collections.Generic.SortedList%602.Values%2A> propriedade para a recuperação indexada de valores de uma lista ordenada de cadeias de caracteres:</span><span class="sxs-lookup"><span data-stu-id="ee4c3-577">The following code shows the use of the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for indexed retrieval of values from a sorted list of strings:</span></span>  
  
 [!code-cpp[Generic.SortedList#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/remarks.cpp#11)]
 [!code-csharp[Generic.SortedList#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/remarks.cs#11)]
 [!code-vb[Generic.SortedList#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/remarks.vb#11)]  
  
 <span data-ttu-id="ee4c3-578">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ee4c3-578">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee4c3-579">Este exemplo de código mostra como enumerar os valores na lista classificada utilizando o <xref:System.Collections.Generic.SortedList%602.Values%2A> propriedade e como enumerar as chaves e valores na lista classificada.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-579">This code example shows how to enumerate the values in the sorted list using the <xref:System.Collections.Generic.SortedList%602.Values%2A> property, and how to enumerate the keys and values in the sorted list.</span></span>  
  
 <span data-ttu-id="ee4c3-580">O exemplo também mostra como usar o <xref:System.Collections.Generic.SortedList%602.Values%2A> recuperação indexada eficiente de valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-580">The example also shows how to use the <xref:System.Collections.Generic.SortedList%602.Values%2A> property for efficient indexed retrieval of values.</span></span>  
  
 <span data-ttu-id="ee4c3-581">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Collections.Generic.SortedList%602> classe.</span><span class="sxs-lookup"><span data-stu-id="ee4c3-581">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedList%602> class.</span></span>  
  
 [!code-cpp[Generic.SortedList#8](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#8)]
 [!code-csharp[Generic.SortedList#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#8)]
 [!code-vb[Generic.SortedList#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#8)]  
[!code-cpp[Generic.SortedList#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.SortedList/cpp/source.cpp#7)]
[!code-csharp[Generic.SortedList#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedList/CS/source.cs#7)]
[!code-vb[Generic.SortedList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedList/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="P:System.Collections.Generic.SortedList`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>