<Type Name="SortedDictionary&lt;TKey,TValue&gt;+KeyCollection" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection">
  <TypeSignature Language="C#" Value="public sealed class SortedDictionary&lt;TKey,TValue&gt;.KeyCollection : System.Collections.Generic.ICollection&lt;TKey&gt;, System.Collections.Generic.IEnumerable&lt;TKey&gt;, System.Collections.Generic.IReadOnlyCollection&lt;TKey&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit SortedDictionary`2/KeyCollection&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!TKey&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!TKey&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortedDictionary(Of TKey, TValue).KeyCollection&#xA;Implements ICollection, ICollection(Of TKey), IEnumerable(Of TKey), IReadOnlyCollection(Of TKey)" />
  <TypeSignature Language="C++ CLI" Value="public: ref class SortedDictionary&lt;TKey, TValue&gt;::KeyCollection sealed : System::Collections::Generic::ICollection&lt;TKey&gt;, System::Collections::Generic::IEnumerable&lt;TKey&gt;, System::Collections::Generic::IReadOnlyCollection&lt;TKey&gt;, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7d2e-101">Representa a coleção de chaves em um <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-101">Represents the collection of keys in a <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span> <span data-ttu-id="b7d2e-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-103">O <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A?displayProperty=nameWithType> propriedade retorna uma instância desse tipo, que contém todas as chaves em que <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-103">The <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A?displayProperty=nameWithType> property returns an instance of this type, containing all the keys in that <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  <span data-ttu-id="b7d2e-104">A ordem das chaves no <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> é o mesmo que a ordem dos elementos no <xref:System.Collections.Generic.SortedDictionary%602>, o mesmo que a ordem dos valores associados a <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> retornado pelo <xref:System.Collections.Generic.SortedDictionary%602.Values%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-104">The order of the keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is the same as the order of elements in the <xref:System.Collections.Generic.SortedDictionary%602>, the same as the order of the associated values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b7d2e-105">O <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> não é uma cópia estática; em vez disso, o <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refere-se novamente para as chaves no original <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-105">The <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="b7d2e-106">Portanto, as alterações para o <xref:System.Collections.Generic.SortedDictionary%602> continuar sejam refletidas no <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-106">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b7d2e-107">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-107">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="b7d2e-108">Não há garantia de que qualquer membro de instância seja thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-108">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="b7d2e-109">Um <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-109">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="b7d2e-110">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-110">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b7d2e-111">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-111">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b7d2e-112">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-112">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyCollection (System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.SortedDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As SortedDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyCollection(System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="b7d2e-113">O <see cref="T:System.Collections.Generic.SortedDictionary`2" /> cujas chaves são refletidas no novo <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-113">The <see cref="T:System.Collections.Generic.SortedDictionary`2" /> whose keys are reflected in the new <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></param>
        <summary><span data-ttu-id="b7d2e-114">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> que reflete as chaves no <see cref="T:System.Collections.Generic.SortedDictionary`2" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-114">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> class that reflects the keys in the specified <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-115">O <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> não é uma cópia estática; em vez disso, o <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refere-se novamente para as chaves no original <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-115">The <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="b7d2e-116">Portanto, as alterações para o <xref:System.Collections.Generic.SortedDictionary%602> continuar sejam refletidas no <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-116">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="b7d2e-117">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-117">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7d2e-118"><paramref name="dictionary" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-118"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TKey[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!TKey[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TKey(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;TKey&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TKey[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b7d2e-119">A matriz unidimensional que é o destino dos elementos copiados do <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-119">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span> <span data-ttu-id="b7d2e-120">A matriz deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-120">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="b7d2e-121">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-121">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="b7d2e-122">Copia os elementos <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> para uma matriz unidimensional existente, começando no índice especificado da matriz.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-122">Copies the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> elements to an existing one-dimensional array, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-123">Os elementos são copiados para a matriz na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-123">The elements are copied to the array in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="b7d2e-124">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-124">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7d2e-125"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-125"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b7d2e-126"><paramref name="index" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-126"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7d2e-127">O número de elementos na origem <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-127">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7d2e-128">Obtém o número de elementos contidos no <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-128">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></summary>
        <value><span data-ttu-id="b7d2e-129">O número de elementos contidos no <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-129">The number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-130">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-130">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.KeyCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedDictionary`2/KeyCollection/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedDictionary(Of TKey, TValue).KeyCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7d2e-131">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-131">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></summary>
        <returns><span data-ttu-id="b7d2e-132">A estrutura <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> do <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-132">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> structure for the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-133">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-133">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="b7d2e-134">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-134">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b7d2e-135">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-135">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b7d2e-136">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-136">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b7d2e-137">Nesta posição, o <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-137">At this position, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="b7d2e-138">Por isso, você deve chamar o método <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-138">Therefore, you must call the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b7d2e-139">O <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> propriedade retorna o mesmo objeto até <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-139">The <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b7d2e-140"><xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> define <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-140"><xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b7d2e-141">Caso <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-141">If <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b7d2e-142">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-142">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b7d2e-143">Caso a última chamada para <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-143">If the last call to <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b7d2e-144">Não é possível definir <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-144">You cannot set <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="b7d2e-145">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-145">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b7d2e-146">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-146">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="b7d2e-147">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-147">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b7d2e-148">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-148">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b7d2e-149">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-149">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b7d2e-150">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-150">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="b7d2e-151">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-151">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;TKey&gt;.Add (TKey item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;TKey&gt;.Add(!TKey item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As TKey) Implements ICollection(Of TKey).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;TKey&gt;.Add(TKey item) = System::Collections::Generic::ICollection&lt;TKey&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7d2e-152">O objeto a ser adicionado ao <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-152">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="b7d2e-153">Adiciona um item ao <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-153">Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span>  <span data-ttu-id="b7d2e-154">Essa implementação sempre gera um <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-154">This implementation always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7d2e-155">Sempre gerada; a coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-155">Always thrown; the collection is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;TKey&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;TKey&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of TKey).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;TKey&gt;.Clear() = System::Collections::Generic::ICollection&lt;TKey&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7d2e-156">Remove todos os itens do <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-156">Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span>  <span data-ttu-id="b7d2e-157">Essa implementação sempre gera um <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-157">This implementation always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-158">O <xref:System.Collections.Generic.ICollection%601.Count%2A> propriedade é definida como 0, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-158">The <xref:System.Collections.Generic.ICollection%601.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7d2e-159">Sempre gerada; a coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-159">Always thrown; the collection is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;TKey&gt;.Contains (TKey item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(!TKey item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As TKey) As Boolean Implements ICollection(Of TKey).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(TKey item) = System::Collections::Generic::ICollection&lt;TKey&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7d2e-160">O objeto a ser localizado no <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-160">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="b7d2e-161">Determina se o <see cref="T:System.Collections.Generic.ICollection`1" /> contém o valor especificado.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-161">Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains the specified value.</span></span></summary>
        <returns>
          <span data-ttu-id="b7d2e-162"><see langword="true" /> se o item for encontrado no <see cref="T:System.Collections.Generic.ICollection`1" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-162"><see langword="true" /> if item is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-163">Implementações podem variar em como elas determinam a igualdade de objetos; Por exemplo, <xref:System.Collections.Generic.List%601> usa <xref:System.Collections.Generic.Comparer%601.Default%2A>, enquanto <xref:System.Collections.Generic.SortedDictionary%602> permite que o usuário especifique o <xref:System.Collections.Generic.IComparer%601> implementação a ser usado para comparação de chaves.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-163">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas <xref:System.Collections.Generic.SortedDictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="b7d2e-164">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-164">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TKey).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;TKey&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7d2e-165">Obtém um valor que indica se o <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-165">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="b7d2e-166"><see langword="true" /> se o <see cref="T:System.Collections.Generic.ICollection`1" /> for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-166"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="b7d2e-167">Na implementação padrão de <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-167">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-168">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-168">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="b7d2e-169">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-169">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TKey&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;TKey&gt;.Remove (TKey item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(!TKey item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&lt;TKey&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As TKey) As Boolean Implements ICollection(Of TKey).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(TKey item) = System::Collections::Generic::ICollection&lt;TKey&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7d2e-170">O objeto a remover do <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-170">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="b7d2e-171">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-171">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span>  <span data-ttu-id="b7d2e-172">Essa implementação sempre gera um <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-172">This implementation always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns>
          <span data-ttu-id="b7d2e-173"><see langword="true" /> se o item for removido com êxito do <see cref="T:System.Collections.Generic.ICollection`1" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-173"><see langword="true" /> if item is successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b7d2e-174">Esse método também retornará <see langword="false" /> se o item não for encontrado no <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-174">This method also returns <see langword="false" /> if item is not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-175">Implementações podem variar em como elas determinam a igualdade de objetos; Por exemplo, <xref:System.Collections.Generic.List%601> usa <xref:System.Collections.Generic.Comparer%601.Default%2A>, enquanto <xref:System.Collections.Generic.SortedDictionary%602> permite que o usuário especifique o <xref:System.Collections.Generic.IComparer%601> implementação a ser usado para comparação de chaves.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-175">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas <xref:System.Collections.Generic.SortedDictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7d2e-176">Sempre gerada; a coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-176">Always thrown; the collection is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;TKey&gt; IEnumerable&lt;TKey&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TKey&gt; System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&lt;TKey&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of TKey) Implements IEnumerable(Of TKey).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;TKey&gt; ^ System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;TKey&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7d2e-177">Retorna um enumerador que itera pela coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-177">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="b7d2e-178">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-178">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-179">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-179">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="b7d2e-180">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-180">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b7d2e-181">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-181">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b7d2e-182">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-182">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b7d2e-183">Nesta posição, o <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-183">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="b7d2e-184">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-184">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="b7d2e-185">O <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriedade retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-185">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b7d2e-186"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-186"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b7d2e-187">Se <xref:System.Collections.IEnumerator.MoveNext%2A> passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna false.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-187">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false.</span></span> <span data-ttu-id="b7d2e-188">Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornará false.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-188">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false.</span></span> <span data-ttu-id="b7d2e-189">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-189">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b7d2e-190">Não é possível definir <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-190">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="b7d2e-191">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-191">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b7d2e-192">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-192">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="b7d2e-193">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-193">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b7d2e-194">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-194">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b7d2e-195">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-195">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b7d2e-196">As implementações padrão de coleções no namespace <xref:System.Collections.Generic> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-196">Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="b7d2e-197">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-197">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b7d2e-198">A matriz unidimensional que é o destino dos elementos copiados do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-198">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="b7d2e-199">A matriz deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-199">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="b7d2e-200">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-200">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="b7d2e-201">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para uma matriz, começando em um índice de matriz específico.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-201">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at a particular array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b7d2e-202">Se o tipo da fonte de <xref:System.Collections.ICollection> não pode ser convertido automaticamente para o tipo de destino `array`, as implementações não genéricas de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> lançar um <xref:System.InvalidCastException>, enquanto as implementações genéricas lançam um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-202">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="b7d2e-203">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-203">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7d2e-204"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-204"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b7d2e-205"><paramref name="index" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-205"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b7d2e-206"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-206"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="b7d2e-207">- ou -</span><span class="sxs-lookup"><span data-stu-id="b7d2e-207">-or-</span></span>  
  
 <span data-ttu-id="b7d2e-208">O <paramref name="array" /> não tem indexação baseada em zero.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-208"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
 <span data-ttu-id="b7d2e-209">- ou -</span><span class="sxs-lookup"><span data-stu-id="b7d2e-209">-or-</span></span>  
  
 <span data-ttu-id="b7d2e-210">O número de elementos na origem <see cref="T:System.Collections.ICollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-210">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="b7d2e-211">- ou -</span><span class="sxs-lookup"><span data-stu-id="b7d2e-211">-or-</span></span>  
  
 <span data-ttu-id="b7d2e-212">O tipo do <see cref="T:System.Collections.ICollection" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-212">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7d2e-213">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-213">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="b7d2e-214"><see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-214"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="b7d2e-215">Na implementação padrão de <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, essa propriedade sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-215">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-216">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-216">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="b7d2e-217">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-217">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b7d2e-218">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-218">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b7d2e-219">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-219">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b7d2e-220">O <xref:System.Collections.ICollection.SyncRoot%2A> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-220">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="b7d2e-221">A sincronização é eficaz somente se todos os threads de bloquear o objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-221">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="b7d2e-222">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-222">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7d2e-223">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-223">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="b7d2e-224">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-224">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="b7d2e-225">Na implementação padrão da <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, essa propriedade sempre retorna a instância atual.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-225">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-226">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-226">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="b7d2e-227">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-227">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b7d2e-228">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-228">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b7d2e-229">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-229">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b7d2e-230">O <xref:System.Collections.ICollection.SyncRoot%2A> propriedade retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-230">The <xref:System.Collections.ICollection.SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="b7d2e-231">A sincronização é eficaz somente se todos os threads de bloquear o objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-231">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="b7d2e-232">O código a seguir mostra o uso do <xref:System.Collections.ICollection.SyncRoot%2A> propriedade para c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-232">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="b7d2e-233">A obtenção do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-233">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7d2e-234">Retorna um enumerador que itera pela coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-234">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="b7d2e-235">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-235">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7d2e-236">A instrução `foreach` da linguagem C# (`for each` em C++, `For Each` no Visual Basic) oculta a complexidade de enumeradores.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-236">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="b7d2e-237">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-237">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b7d2e-238">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-238">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b7d2e-239">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-239">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b7d2e-240"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-240"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="b7d2e-241">Nesta posição, o <xref:System.Collections.IEnumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-241">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="b7d2e-242">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-242">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b7d2e-243">O <xref:System.Collections.IEnumerator.Current%2A> propriedade retorna o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-243">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="b7d2e-244"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-244"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b7d2e-245">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-245">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b7d2e-246">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-246">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b7d2e-247">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-247">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b7d2e-248">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-248">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="b7d2e-249">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-249">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b7d2e-250">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-250">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="b7d2e-251">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-251">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b7d2e-252">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-252">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b7d2e-253">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-253">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b7d2e-254">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="b7d2e-254">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="b7d2e-255">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b7d2e-255">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>