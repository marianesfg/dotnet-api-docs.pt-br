<Type Name="Dictionary&lt;TKey,TValue&gt;+Enumerator" FullName="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa8e3efc752a5de8618171e3bcd5ce6f31b59888" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701741" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Dictionary&lt;TKey,TValue&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit Dictionary`2/Enumerator&lt;TKey, TValue&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IDictionaryEnumerator, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Dictionary`2.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Dictionary(Of TKey, TValue).Enumerator&#xA;Implements IDictionaryEnumerator, IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
  <TypeSignature Language="C++ CLI" Value="public: value class Dictionary&lt;TKey, TValue&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::IDictionaryEnumerator" />
  <TypeSignature Language="F#" Value="type Dictionary&lt;'Key, 'Value&gt;.Enumerator = struct&#xA;    interface IEnumerator&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IDictionaryEnumerator&#xA;    interface IDisposable&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionaryEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enumera os elementos de uma <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A instrução `foreach` da linguagem C# (`for each` em C++, `For Each` no Visual Basic) oculta a complexidade de enumeradores. Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.  
  
 Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.  
  
 Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção. Nesta posição, <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> está indefinido. Você deve chamar <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A>.  
  
 <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> é chamado. <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> define <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> como o próximo elemento.  
  
 Caso <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retorna `false`. Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> também retornam `false`. Caso a última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> está indefinido. Não é possível definir <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.  
  
 Um enumerador permanece válido desde que a coleção continue inalterada. Se as alterações são feitas na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lança um <xref:System.InvalidOperationException>.  
  
 O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco. Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.  Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.  
  
 As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As KeyValuePair(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; Current { System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o elemento na posição atual do enumerador.</summary>
        <value>O elemento no <see cref="T:System.Collections.Generic.Dictionary`2" /> na posição atual do enumerador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> o não está definida em qualquer uma das seguintes condições:  
  
- O enumerador está posicionado antes do primeiro elemento da coleção. Isso acontece após a criação de um enumerador ou depois do <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> método é chamado. O <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade.  
  
- A última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retornou `false`, que indica o final da coleção e que o enumerador está posicionado após o último elemento da coleção.

- O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.

 <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> retornar o mesmo objeto até que <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> é chamado.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos os recursos usados pelo <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avança o enumerador para o próximo elemento do <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
        <returns>
          <see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Depois que um enumerador é criado, o enumerador está posicionado antes do primeiro elemento na coleção e a primeira chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> avança o enumerador para o primeiro elemento da coleção.  
  
 Caso <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retorna `false`. Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> também retornam `false`.  
  
 Um enumerador permanece válido desde que a coleção continue inalterada. Se as alterações são feitas na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lança um <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A coleção foi modificada depois da criação do enumerador.</exception>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionaryEnumerator.Entry">
      <MemberSignature Language="C#" Value="System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Entry As DictionaryEntry Implements IDictionaryEnumerator.Entry" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::DictionaryEntry System.Collections.IDictionaryEnumerator.Entry { System::Collections::DictionaryEntry get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.Enumerator.System.Collections.IDictionaryEnumerator.Entry" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionaryEnumerator.Entry</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o elemento na posição atual do enumerador.</summary>
        <value>O elemento no dicionário da posição atual do enumerador, como um <see cref="T:System.Collections.DictionaryEntry" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Entry%2A> o não está definida em qualquer uma das seguintes condições:  
  
- O enumerador está posicionado antes do primeiro elemento da coleção. Isso acontece após a criação de um enumerador ou depois do <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> método é chamado. O <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Entry%2A> propriedade.  
  
- A última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retornou `false`, que indica o final da coleção e que o enumerador está posicionado após o último elemento da coleção.

- O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.

 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Entry%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Entry%2A> retornar o mesmo objeto até que <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> é chamado.  
    
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionaryEnumerator.Key">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionaryEnumerator.Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Key As Object Implements IDictionaryEnumerator.Key" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionaryEnumerator.Key { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.Enumerator.System.Collections.IDictionaryEnumerator.Key" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionaryEnumerator.Key</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a chave do elemento na posição atual do enumerador.</summary>
        <value>A chave do elemento no dicionário da posição atual do enumerador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Key%2A> o não está definida em qualquer uma das seguintes condições:  
  
- O enumerador está posicionado antes do primeiro elemento da coleção. Isso acontece após a criação de um enumerador ou depois do <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> método é chamado. O <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Key%2A> propriedade.  
  
- A última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retornou `false`, que indica o final da coleção e que o enumerador está posicionado após o último elemento da coleção.

- O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos. 

 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Key%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Key%2A> retornar o mesmo objeto até que <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> é chamado.  
    
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionaryEnumerator.Value">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionaryEnumerator.Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Value As Object Implements IDictionaryEnumerator.Value" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionaryEnumerator.Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.Enumerator.System.Collections.IDictionaryEnumerator.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionaryEnumerator.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do elemento na posição atual do enumerador.</summary>
        <value>O valor do elemento no dicionário da posição atual do enumerador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Value%2A> o não está definida em qualquer uma das seguintes condições:  
  
- O enumerador está posicionado antes do primeiro elemento da coleção. Isso acontece após a criação de um enumerador ou depois do <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> método é chamado. O <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Value%2A> propriedade.  
  
- A última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retornou `false`, que indica o final da coleção e que o enumerador está posicionado após o último elemento da coleção.

- O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.

 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Value%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IDictionaryEnumerator%23Value%2A> retornar o mesmo objeto até que <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> é chamado.  
    
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.Enumerator.System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o elemento na posição atual do enumerador.</summary>
        <value>O elemento na coleção na posição atual do enumerador, como um <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Current%2A> o não está definida em qualquer uma das seguintes condições:  
  
- O enumerador está posicionado antes do primeiro elemento da coleção. Isso acontece após a criação de um enumerador ou depois do <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> método é chamado. O <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Current%2A> propriedade.  
  
- A última chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> retornou `false`, que indica o final da coleção e que o enumerador está posicionado após o último elemento da coleção.

- O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.

 <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Current%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Current%2A> retornar o mesmo objeto até que <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> é chamado.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Depois de chamar o <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> método, você deve chamar o <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> método para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A> propriedade.  
  
 Um enumerador permanece válido desde que a coleção continue inalterada. Se as alterações são feitas na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.Dictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lança um <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A coleção foi modificada depois da criação do enumerador.</exception>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>