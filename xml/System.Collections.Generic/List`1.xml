<Type Name="List&lt;T&gt;" FullName="System.Collections.Generic.List&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05dd2d33958afd2ac9deacf41e0ba2b74bfdcd7b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36646265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class List&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit List`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1" />
  <TypeSignature Language="VB.NET" Value="Public Class List(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class List : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type List&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="f9279-101">O tipo dos elementos na lista.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-101">The type of elements in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="f9279-102">Representa uma lista fortemente tipada de objetos que podem ser acessados por índice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-102">Represents a strongly typed list of objects that can be accessed by index.</span>
      </span>
      <span data-ttu-id="f9279-103">Fornece métodos para pesquisar, classificar e manipular listas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-103">Provides methods to search, sort, and manipulate lists.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-104">O <xref:System.Collections.Generic.List%601> classe é o equivalente genérico de <xref:System.Collections.ArrayList> classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-104">The <xref:System.Collections.Generic.List%601> class is the generic equivalent of the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="f9279-105">Ele implementa o <xref:System.Collections.Generic.IList%601> interface genérica usando uma matriz cujo tamanho é aumentado dinamicamente conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="f9279-105">It implements the <xref:System.Collections.Generic.IList%601> generic interface by using an array whose size is dynamically increased as required.</span></span>  
  
 <span data-ttu-id="f9279-106">Você pode adicionar itens a um <xref:System.Collections.Generic.List%601> usando o <xref:System.Collections.Generic.List%601.Add%2A> ou <xref:System.Collections.Generic.List%601.AddRange%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f9279-106">You can add items to a <xref:System.Collections.Generic.List%601> by using the <xref:System.Collections.Generic.List%601.Add%2A> or <xref:System.Collections.Generic.List%601.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="f9279-107">O <xref:System.Collections.Generic.List%601> classe usa uma comparação de igualdade e um comparador de classificação.</span><span class="sxs-lookup"><span data-stu-id="f9279-107">The <xref:System.Collections.Generic.List%601> class uses both an equality comparer and an ordering comparer.</span></span>  
  
-   <span data-ttu-id="f9279-108">Métodos como <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, e <xref:System.Collections.Generic.Dictionary%602.Remove%2A> usar um comparador de igualdade para os elementos da lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-108">Methods such as <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, and <xref:System.Collections.Generic.Dictionary%602.Remove%2A> use an equality comparer for the list elements.</span></span> <span data-ttu-id="f9279-109">O comparador de igualdade padrão para o tipo `T` é determinado como segue.</span><span class="sxs-lookup"><span data-stu-id="f9279-109">The default equality comparer for type `T` is determined as follows.</span></span> <span data-ttu-id="f9279-110">Se tipo `T` implementa o <xref:System.IEquatable%601> interface genérica e, em seguida, o comparador de igualdade é o <xref:System.IEquatable%601.Equals%28%600%29> método da interface; caso contrário, o comparador de igualdade padrão é <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-110">If type `T` implements the <xref:System.IEquatable%601> generic interface, then the equality comparer is the <xref:System.IEquatable%601.Equals%28%600%29> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="f9279-111">Métodos como <xref:System.Collections.Generic.List%601.BinarySearch%2A> e <xref:System.Collections.Generic.List%601.Sort%2A> usar um comparador de classificação para os elementos da lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-111">Methods such as <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> use an ordering comparer for the list elements.</span></span> <span data-ttu-id="f9279-112">O comparador padrão para o tipo `T` é determinado como segue.</span><span class="sxs-lookup"><span data-stu-id="f9279-112">The default comparer for type `T` is determined as follows.</span></span>  <span data-ttu-id="f9279-113">Se tipo `T` implementa o <xref:System.IComparable%601> interface genérica e, em seguida, o comparador padrão será o <xref:System.IComparable%601.CompareTo%28%600%29> método da interface; caso contrário, se tipo `T` implementa não genérica <xref:System.IComparable> interface e, em seguida, o padrão comparador é o <xref:System.IComparable.CompareTo%28System.Object%29> método da interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-113">If type `T` implements the <xref:System.IComparable%601> generic interface, then the default comparer is the <xref:System.IComparable%601.CompareTo%28%600%29> method of that interface; otherwise, if type `T` implements the nongeneric <xref:System.IComparable> interface, then the default comparer is the <xref:System.IComparable.CompareTo%28System.Object%29> method of that interface.</span></span> <span data-ttu-id="f9279-114">Se tipo `T` implementa nenhuma interface, em seguida, não há nenhum comparador padrão e um delegado de comparação ou comparação deve ser fornecido explicitamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-114">If type `T` implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</span></span>  
  
 <span data-ttu-id="f9279-115">O <xref:System.Collections.Generic.List%601> não é garantida a ser classificada.</span><span class="sxs-lookup"><span data-stu-id="f9279-115">The <xref:System.Collections.Generic.List%601> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="f9279-116">Você deve classificar o <xref:System.Collections.Generic.List%601> antes de executar operações (como <xref:System.Collections.Generic.List%601.BinarySearch%2A>) que exigem o <xref:System.Collections.Generic.List%601> a ser classificada.</span><span class="sxs-lookup"><span data-stu-id="f9279-116">You must sort the <xref:System.Collections.Generic.List%601> before performing operations (such as <xref:System.Collections.Generic.List%601.BinarySearch%2A>) that require the <xref:System.Collections.Generic.List%601> to be sorted.</span></span>  
  
 <span data-ttu-id="f9279-117">Elementos nesta coleção podem ser acessados usando um índice de inteiro.</span><span class="sxs-lookup"><span data-stu-id="f9279-117">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="f9279-118">Índices nesta coleção são baseadas em zero.</span><span class="sxs-lookup"><span data-stu-id="f9279-118">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="f9279-119">Para grandes <xref:System.Collections.Generic.List%601> objetos, você pode aumentar a capacidade máxima para 2 bilhões de elementos em um sistema de 64 bits definindo o `enabled` atributo do elemento de configuração para `true` no ambiente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="f9279-119">For very large <xref:System.Collections.Generic.List%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="f9279-120"><xref:System.Collections.Generic.List%601> aceita `null` como um valor válido para a referência de tipos e permite que os elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="f9279-120"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f9279-121">Para obter uma versão imutável o <xref:System.Collections.Generic.List%601> de classe, consulte <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-121">For an immutable version of the <xref:System.Collections.Generic.List%601> class, see <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="f9279-122">Considerações sobre desempenho</span><span class="sxs-lookup"><span data-stu-id="f9279-122">Performance Considerations</span></span>  
 <span data-ttu-id="f9279-123">Ao decidir se deve usar o <xref:System.Collections.Generic.List%601> ou <xref:System.Collections.ArrayList> classe, ambos com funcionalidade semelhante, lembre-se de que o <xref:System.Collections.Generic.List%601> classe melhor na maioria dos casos e é do tipo seguro.</span><span class="sxs-lookup"><span data-stu-id="f9279-123">In deciding whether to use the <xref:System.Collections.Generic.List%601> or <xref:System.Collections.ArrayList> class, both of which have similar functionality, remember that the <xref:System.Collections.Generic.List%601> class performs better in most cases and is type safe.</span></span> <span data-ttu-id="f9279-124">Se um tipo de referência for usado para o tipo `T` do <xref:System.Collections.Generic.List%601> classe, o comportamento das duas classes é idêntico.</span><span class="sxs-lookup"><span data-stu-id="f9279-124">If a reference type is used for type `T` of the <xref:System.Collections.Generic.List%601> class, the behavior of the two classes is identical.</span></span> <span data-ttu-id="f9279-125">No entanto, se um tipo de valor é usado para o tipo `T`, você precisa considerar os problemas de conversão boxing e implementação.</span><span class="sxs-lookup"><span data-stu-id="f9279-125">However, if a value type is used for type `T`, you need to consider implementation and boxing issues.</span></span>  
  
 <span data-ttu-id="f9279-126">Se um tipo de valor é usado para o tipo `T`, o compilador gera uma implementação de <xref:System.Collections.Generic.List%601> classe especificamente para esse tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="f9279-126">If a value type is used for type `T`, the compiler generates an implementation of the <xref:System.Collections.Generic.List%601> class specifically for that value type.</span></span> <span data-ttu-id="f9279-127">Isso significa que um elemento de lista de um <xref:System.Collections.Generic.List%601> objeto não tem que ser boxed antes que o elemento pode ser usado, e depois de aproximadamente 500 elementos da lista são criados a memória salva não conversão boxing elementos da lista é maior que a memória usada para gerar a implementação da classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-127">That means a list element of a <xref:System.Collections.Generic.List%601> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</span></span>  
  
 <span data-ttu-id="f9279-128">Verifique se o tipo de valor usado para o tipo `T` implementa o <xref:System.IEquatable%601> interface genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-128">Make certain the value type used for type `T` implements the <xref:System.IEquatable%601> generic interface.</span></span> <span data-ttu-id="f9279-129">Se não, os métodos como <xref:System.Collections.Generic.List%601.Contains%2A> deve chamar o <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método, que caixas o elemento de lista afetados.</span><span class="sxs-lookup"><span data-stu-id="f9279-129">If not, methods such as <xref:System.Collections.Generic.List%601.Contains%2A> must call the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, which boxes the affected list element.</span></span> <span data-ttu-id="f9279-130">Se o tipo de valor implementa o <xref:System.IComparable> interface e você possuir o código-fonte, também implemente o <xref:System.IComparable%601> interface genérica para impedir que o <xref:System.Collections.Generic.List%601.BinarySearch%2A> e <xref:System.Collections.Generic.List%601.Sort%2A> métodos de conversão boxing elementos da lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-130">If the value type implements the <xref:System.IComparable> interface and you own the source code, also implement the <xref:System.IComparable%601> generic interface to prevent the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods from boxing list elements.</span></span> <span data-ttu-id="f9279-131">Se você não possui o código-fonte, passar um <xref:System.Collections.Generic.IComparer%601> o objeto para o <xref:System.Collections.Generic.List%601.BinarySearch%2A> e <xref:System.Collections.Generic.List%601.Sort%2A> métodos</span><span class="sxs-lookup"><span data-stu-id="f9279-131">If you do not own the source code, pass an <xref:System.Collections.Generic.IComparer%601> object to the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods</span></span>  
  
 <span data-ttu-id="f9279-132">É vantajoso usar a implementação de um tipo específico do <xref:System.Collections.Generic.List%601> classe em vez de usar o <xref:System.Collections.ArrayList> classe ou gravar uma coleção fortemente tipada de wrapper por conta própria.</span><span class="sxs-lookup"><span data-stu-id="f9279-132">It is to your advantage to use the type-specific implementation of the <xref:System.Collections.Generic.List%601> class instead of using the <xref:System.Collections.ArrayList> class or writing a strongly typed wrapper collection yourself.</span></span> <span data-ttu-id="f9279-133">O motivo é sua implementação deve fazer o que o .NET Framework faz para você já, e o common language runtime pode compartilhar código Microsoft intermediate language e metadados, que não é de sua implementação.</span><span class="sxs-lookup"><span data-stu-id="f9279-133">The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</span></span>  
  
## <a name="f-considerations"></a><span data-ttu-id="f9279-134">Considerações de F #</span><span class="sxs-lookup"><span data-stu-id="f9279-134">F# Considerations</span></span>  
 <span data-ttu-id="f9279-135">O <xref:System.Collections.Generic.List%601> classe é usada com pouca frequência em código F #.</span><span class="sxs-lookup"><span data-stu-id="f9279-135">The <xref:System.Collections.Generic.List%601> class is used infrequently in F# code.</span></span>  <span data-ttu-id="f9279-136">Em vez disso, [lista](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), que são listas imutáveis, vinculados individualmente, são geralmente preferido.</span><span class="sxs-lookup"><span data-stu-id="f9279-136">Instead, [Lists](http://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), which are immutable, singly-linked lists, are typically preferred.</span></span> <span data-ttu-id="f9279-137">Uma lista de F # fornece uma série de imutável, ordenada de valores e tem suporte para uso em desenvolvimento de estilo funcional.</span><span class="sxs-lookup"><span data-stu-id="f9279-137">An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</span></span> <span data-ttu-id="f9279-138">Quando usado de F #, a <xref:System.Collections.Generic.List%601> classe costuma ser referenciada pelo [ResizeArray\<' t >](https://msdn.microsoft.com/library/ee353447.aspx) abreviação para evitar conflitos com F # lista de nomes de tipo</span><span class="sxs-lookup"><span data-stu-id="f9279-138">When used from F#, the <xref:System.Collections.Generic.List%601> class is typically referred to by the  [ResizeArray\<'T>](https://msdn.microsoft.com/library/ee353447.aspx) type abbreviation to avoid naming conflicts with F# Lists</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-139">O exemplo a seguir demonstra como adicionar, remover e inserir um objeto de negócios simples em um <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-139">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f9279-140">O exemplo a seguir demonstra várias propriedades e métodos para o <xref:System.Collections.Generic.List%601> classe genérica do tipo cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-140">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class of type string.</span></span> <span data-ttu-id="f9279-141">(Para obter um exemplo de um <xref:System.Collections.Generic.List%601> de tipos complexos, consulte o <xref:System.Collections.Generic.List%601.Contains%2A> método.)</span><span class="sxs-lookup"><span data-stu-id="f9279-141">(For an example of a <xref:System.Collections.Generic.List%601> of complex types, see the <xref:System.Collections.Generic.List%601.Contains%2A> method.)</span></span>  
  
 <span data-ttu-id="f9279-142">O construtor padrão é usado para criar uma lista de cadeias de caracteres com a capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="f9279-142">The default constructor is used to create a list of strings with the default capacity.</span></span> <span data-ttu-id="f9279-143">O <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade é exibida e, em seguida, o <xref:System.Collections.Generic.List%601.Add%2A> método é usado para adicionar vários itens.</span><span class="sxs-lookup"><span data-stu-id="f9279-143">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="f9279-144">Os itens são listados e o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade é exibida novamente, juntamente com o <xref:System.Collections.Generic.List%601.Count%2A> propriedade, para mostrar que a capacidade foi aumentada conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="f9279-144">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="f9279-145">O <xref:System.Collections.Generic.List%601.Contains%2A> método é usado para testar a presença de um item na lista, o <xref:System.Collections.Generic.List%601.Insert%2A> método é usado para inserir um novo item no meio da lista e o conteúdo da lista é exibido novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-145">The <xref:System.Collections.Generic.List%601.Contains%2A> method is used to test for the presence of an item in the list, the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</span></span>  
  
 <span data-ttu-id="f9279-146">O padrão <xref:System.Collections.Generic.List%601.Item%2A> propriedade (indexador em c#) é usada para recuperar um item, o <xref:System.Collections.Generic.List%601.Remove%2A> método é usado para remover a primeira instância do item duplicado adicionada anteriormente e o conteúdo é exibido novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-146">The default <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) is used to retrieve an item, the <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</span></span> <span data-ttu-id="f9279-147">O <xref:System.Collections.Generic.List%601.Remove%2A> método sempre remove a primeira instância que encontrar.</span><span class="sxs-lookup"><span data-stu-id="f9279-147">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 <span data-ttu-id="f9279-148">O <xref:System.Collections.Generic.List%601.TrimExcess%2A> método é usado para reduzir a capacidade de corresponder à contagem e o <xref:System.Collections.Generic.List%601.Capacity%2A> e <xref:System.Collections.Generic.List%601.Count%2A> propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-148">The <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="f9279-149">Se a capacidade não utilizada tivesse sido menos de 10% da capacidade total, a lista seria não foram redimensionada.</span><span class="sxs-lookup"><span data-stu-id="f9279-149">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span>  
  
 <span data-ttu-id="f9279-150">Por fim, o <xref:System.Collections.Generic.List%601.Clear%2A> método é usado para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.Capacity%2A> e <xref:System.Collections.Generic.List%601.Count%2A> propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-150">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f9279-151">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-151">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="f9279-152">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-152">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="f9279-153">É seguro executar várias operações de leitura em um <see cref="T:System.Collections.Generic.List`1" />, mas os problemas podem ocorrer se a coleção é modificada enquanto está sendo lido.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-153">It is safe to perform multiple read operations on a <see cref="T:System.Collections.Generic.List`1" />, but issues can occur if the collection is modified while it’s being read.</span>
      </span>
      <span data-ttu-id="f9279-154">Para garantir a segurança do thread, bloquear a coleção durante uma leitura ou operação de gravação.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-154">To ensure thread safety, lock the collection during a read or write operation.</span>
      </span>
      <span data-ttu-id="f9279-155">Para habilitar uma coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua sincronização.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-155">To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
      <span data-ttu-id="f9279-156">Para coleções com sincronização interna, consulte as classes de <see cref="N:System.Collections.Concurrent" /> namespace.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-156">For collections with built-in synchronization, see the classes in the <see cref="N:System.Collections.Concurrent" /> namespace.</span>
      </span>
      <span data-ttu-id="f9279-157">Para obter uma alternativa inerentemente thread-safe, consulte o <see cref="T:System.Collections.Immutable.ImmutableList`1" /> classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9279-157">For an inherently thread–safe alternative, see the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Immutable.ImmutableList`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-158">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-159">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.List`1" /> que está vazia e tem a capacidade inicial padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-159">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-160">A capacidade de um <xref:System.Collections.Generic.List%601> é o número de elementos que o <xref:System.Collections.Generic.List%601> pode conter.</span><span class="sxs-lookup"><span data-stu-id="f9279-160">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="f9279-161">Como os elementos são adicionados a um <xref:System.Collections.Generic.List%601>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="f9279-161">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f9279-162">Se o tamanho da coleção pode ser previsto, usando o <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> construtor e especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-162">If the size of the collection can be estimated, using the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-163">A capacidade pode ser diminuída chamando o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método ou definindo o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-163">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="f9279-164">Reduzir a capacidade realoca a memória e copia todos os elementos de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-164">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-165">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-165">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-166">O exemplo a seguir demonstra o construtor padrão da <xref:System.Collections.Generic.List%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-166">The following example demonstrates the default constructor of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f9279-167">O construtor padrão cria uma lista com a capacidade padrão, conforme demonstrado exibindo o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9279-167">The default constructor creates a list with the default capacity, as demonstrated by displaying the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
 <span data-ttu-id="f9279-168">O exemplo adiciona, insere e remove itens, mostrando como a capacidade muda à medida que esses métodos são usados.</span><span class="sxs-lookup"><span data-stu-id="f9279-168">The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="f9279-169">A coleção cujos elementos são copiados para a nova lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-169">The collection whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-170">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.List`1" />, que contém os elementos copiados da coleção especificada e tem capacidade suficiente para acomodar o número de elementos copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-171">Os elementos são copiados para o <xref:System.Collections.Generic.List%601> na mesma ordem em que são lidas pelo enumerador da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-171">The elements are copied onto the <xref:System.Collections.Generic.List%601> in the same order they are read by the enumerator of the collection.</span></span>  
  
 <span data-ttu-id="f9279-172">Este construtor é um O (*n*) operação, onde *n* é o número de elementos em `collection`.</span><span class="sxs-lookup"><span data-stu-id="f9279-172">This constructor is an O(*n*) operation, where *n* is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-173">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.%23ctor%2A> construtor e vários métodos para o <xref:System.Collections.Generic.List%601> classe que atuam em intervalos.</span><span class="sxs-lookup"><span data-stu-id="f9279-173">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor and various methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f9279-174">Uma matriz de cadeias de caracteres é criada e transferida ao construtor, preencher a lista com os elementos da matriz.</span><span class="sxs-lookup"><span data-stu-id="f9279-174">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="f9279-175">O <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade, em seguida, é exibida para mostrar que a capacidade inicial é exatamente o que é necessário para manter os elementos de entrada.</span><span class="sxs-lookup"><span data-stu-id="f9279-175">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-176">
            <paramref name="collection" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-176">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="f9279-177">O número de elementos que a nova lista pode armazenar inicialmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-177">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-178">Inicializa uma nova instância da classe <see cref="T:System.Collections.Generic.List`1" /> que está vazia e tem a capacidade inicial especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-178">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-179">A capacidade de um <xref:System.Collections.Generic.List%601> é o número de elementos que o <xref:System.Collections.Generic.List%601> pode conter.</span><span class="sxs-lookup"><span data-stu-id="f9279-179">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="f9279-180">Como os elementos são adicionados a um <xref:System.Collections.Generic.List%601>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="f9279-180">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f9279-181">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-181">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-182">A capacidade pode ser diminuída chamando o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método ou definindo o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-182">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="f9279-183">Reduzir a capacidade realoca a memória e copia todos os elementos de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-183">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-184">Este construtor é um O (*n*) operação, onde *n* é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="f9279-184">This constructor is an O(*n*) operation, where *n* is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-185">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="f9279-185">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="f9279-186">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres com uma capacidade de 4 é criado, porque o tamanho máximo da lista é conhecido por ser exatamente 4.</span><span class="sxs-lookup"><span data-stu-id="f9279-186">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="f9279-187">A lista é preenchida com quatro cadeias de caracteres e uma cópia somente leitura é criada usando o <xref:System.Collections.Generic.List%601.AsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-187">The list is populated with four strings, and a read-only copy is created by using the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-188">
            <paramref name="capacity" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-188">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="list.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-189">O objeto a ser adicionado ao final do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-189">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-190">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-190">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-191">Adiciona um objeto ao final do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-191">Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-192"><xref:System.Collections.Generic.List%601> aceita `null` como um valor válido para a referência de tipos e permite que os elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="f9279-192"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f9279-193">Se <xref:System.Collections.Generic.List%601.Count%2A> já for igual a <xref:System.Collections.Generic.List%601.Capacity%2A>, a capacidade do <xref:System.Collections.Generic.List%601> é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-193">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f9279-194">Se <xref:System.Collections.Generic.List%601.Count%2A> é menor que <xref:System.Collections.Generic.List%601.Capacity%2A>, esse método é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="f9279-194">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="f9279-195">Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-195">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-196">O exemplo a seguir demonstra como adicionar, remover e inserir um objeto de negócios simples em um <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-196">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f9279-197">O exemplo a seguir demonstra várias propriedades e métodos para o <xref:System.Collections.Generic.List%601> classe genérica, incluindo o <xref:System.Collections.Generic.List%601.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-197">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class, including the <xref:System.Collections.Generic.List%601.Add%2A> method.</span></span> <span data-ttu-id="f9279-198">O construtor padrão é usado para criar uma lista de cadeias de caracteres com uma capacidade de 0.</span><span class="sxs-lookup"><span data-stu-id="f9279-198">The default constructor is used to create a list of strings with a capacity of 0.</span></span> <span data-ttu-id="f9279-199">Esses dois métodos estão localizados na função nomeada <xref:System.Collections.Generic.List%601.Capacity%2A>, junto com o código para levar o complemento bit a bit (o ~ operador em c# e Visual C++, <xref:System.Collections.Generic.List%601.Add%2A> -1 no Visual Basic) do número negativo retornado por  e usá-lo como um índice para Inserir nova cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-199">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed, and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="f9279-200">Os itens são listados e o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade é exibida novamente, juntamente com o <xref:System.Collections.Generic.List%601.Count%2A> propriedade, para mostrar que a capacidade foi aumentada conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="f9279-200">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="f9279-201">é o número de elementos que o  pode armazenar antes de redimensionamento é necessário, enquanto  é o número de elementos que estão realmente no .</span><span class="sxs-lookup"><span data-stu-id="f9279-201">Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'T&gt; -&gt; unit" Usage="list.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="f9279-202">A coleção cujos elementos devem ser adicionados ao final do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-202">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-203">A coleção em si não pode ser <see langword="null" />, mas poderá conter elementos que são <see langword="null" />, se tipo <c>T</c> for um tipo de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-203">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-204">Adiciona os elementos da coleção especificada ao final do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-204">Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-205">A ordem dos elementos na coleção é preservada no <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-205">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-206">Se o novo <xref:System.Collections.Generic.List%601.Count%2A> (atual <xref:System.Collections.Generic.List%601.Count%2A> mais o tamanho da coleção) será maior <xref:System.Collections.Generic.List%601.Capacity%2A>, a capacidade do <xref:System.Collections.Generic.List%601> é aumentado, automaticamente realocando a matriz interna para acomodar os novos elementos e o elementos existentes são copiados para a nova matriz antes que os novos elementos são adicionados.</span><span class="sxs-lookup"><span data-stu-id="f9279-206">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="f9279-207">Se a capacidade é significativamente maior do que a contagem de e para reduzir a memória usada pelo <xref:System.Collections.Generic.List%601>, você pode diminuir a capacidade chamando o <xref:System.Collections.Generic.List%601.Capacity%2A> método ou definindo o \* propriedade explicitamente um valor inferior.</span><span class="sxs-lookup"><span data-stu-id="f9279-207">If the <xref:System.Collections.Generic.List%601> can accommodate the new elements without increasing the <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(*n*) operation, where *n* is the number of elements to be added.</span></span> <span data-ttu-id="f9279-208">Quando o valor de \* é definido explicitamente, a matriz interna também seja realocada para acomodar a capacidade especificada e todos os elementos são copiados.</span><span class="sxs-lookup"><span data-stu-id="f9279-208">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(*n* + *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-209">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.AddRange%2A> método e vários outros métodos do <xref:System.Collections.Generic.List%601> classe que atuam em intervalos.</span><span class="sxs-lookup"><span data-stu-id="f9279-209">The following example demonstrates the <xref:System.Collections.Generic.List%601.AddRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f9279-210">Uma matriz de cadeias de caracteres é criada e transferida ao construtor, preencher a lista com os elementos da matriz.</span><span class="sxs-lookup"><span data-stu-id="f9279-210">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="f9279-211">Recuperar o valor dessa propriedade é uma operação de (1); configuração da propriedade é um O (<xref:System.Collections.Generic.List%601.AddRange%2A>n) operação, onde n é a nova capacidade.</span><span class="sxs-lookup"><span data-stu-id="f9279-211">The <xref:System.Collections.Generic.List%601.AddRange%2A> method is called, with the list as its argument.</span></span> <span data-ttu-id="f9279-212">O exemplo a seguir demonstra como verificar a capacidade e a contagem de um  que contém um objeto de negócios simples e ilustra o uso de  método para remover uma capacidade extra.</span><span class="sxs-lookup"><span data-stu-id="f9279-212">The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-213">
            <paramref name="collection" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-213">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnly">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt; AsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadOnly () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.AsReadOnly : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="list.AsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-214">Retorna um wrapper <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> somente leitura para a coleção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-214">Returns a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the current collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-215">Um objeto que atua como um wrapper somente leitura em torno do <see cref="T:System.Collections.Generic.List`1" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-215">An object that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-216">A exemplo a seguir mostra o <xref:System.Collections.Generic.List%601> propriedade em vários pontos da vida útil de uma lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-216">To prevent any modifications to the <xref:System.Collections.Generic.List%601> object, expose it only through this wrapper.</span></span> <span data-ttu-id="f9279-217">O construtor padrão é usado para criar uma lista de cadeias de caracteres com uma capacidade de 0 e o <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> propriedade é exibida para demonstrar isso.</span><span class="sxs-lookup"><span data-stu-id="f9279-217">A  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object does not expose methods that modify the collection.</span></span> <span data-ttu-id="f9279-218">Após o <xref:System.Collections.Generic.List%601> método foi usado para adicionar vários itens, os itens são listados e, em seguida, o  propriedade é exibida novamente, juntamente com o  propriedade, para mostrar que a capacidade foi aumentada conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="f9279-218">However, if changes are made to the underlying <xref:System.Collections.Generic.List%601> object, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f9279-219">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-219">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-220">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.AsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-220">The following example demonstrates the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span> <span data-ttu-id="f9279-221">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres com uma capacidade de 4 é criado, porque o tamanho máximo da lista é conhecido por ser exatamente 4.</span><span class="sxs-lookup"><span data-stu-id="f9279-221">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="f9279-222">O <xref:System.Collections.Generic.List%601.AsReadOnly%2A> propriedade é exibida novamente após o <xref:System.Collections.Generic.IList%601> método é usado para reduzir a capacidade de corresponder à contagem.</span><span class="sxs-lookup"><span data-stu-id="f9279-222">The list is populated with four strings, and the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method is used to get a read-only <xref:System.Collections.Generic.IList%601> generic interface implementation that wraps the original list.</span></span>  
  
 <span data-ttu-id="f9279-223">Por fim, o <xref:System.Collections.Generic.List%601.Item%2A> método é usado para remover todos os itens da lista e o  e  propriedades são exibidas novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-223">An element of the original list is set to "Coelophysis" using the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-224">Usa um algoritmo de pesquisa binária para localizar um elemento específico no <see cref="T:System.Collections.Generic.List`1" /> classificado ou parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-224">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T -&gt; int" Usage="list.BinarySearch item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-225">O objeto a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-225">The object to locate.</span>
          </span>
          <span data-ttu-id="f9279-226">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-226">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-227">Pesquisa todo o <see cref="T:System.Collections.Generic.List`1" /> classificado para um elemento usando o comparador padrão e retorna o índice baseado em zero do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-227">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-228">O índice baseado em zero da <paramref name="item" /> no <see cref="T:System.Collections.Generic.List`1" /> classificado, se <paramref name="item" /> for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="item" />, ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-228">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-229">Esse método usa o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> para tipo `T` para determinar a ordem dos elementos da lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-229">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="f9279-230">O <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verificações de propriedade se tipo `T` implementa o <xref:System.IComparable%601> interface genérica e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="f9279-230">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f9279-231">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-231">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f9279-232">Se tipo `T` não implementa a interface <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-232">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-233">é definido como 0, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-233">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="f9279-234">Para redefinir a capacidade do `null`, chamar o <xref:System.IComparable%601> método ou conjunto de  propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-234">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="f9279-235">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="f9279-235">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="f9279-236">Se o <xref:System.Collections.Generic.List%601> contém mais de um elemento com o mesmo valor, o método retornará somente uma das ocorrências e pode retornar qualquer uma das ocorrências, não necessariamente o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="f9279-236">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="f9279-237">Caso o <xref:System.Collections.Generic.List%601> não contenha o valor especificado, o método retorna um inteiro negativo.</span><span class="sxs-lookup"><span data-stu-id="f9279-237">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="f9279-238">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento que é maior do que o valor de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-238">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="f9279-239">Ao inserir o valor para o <xref:System.Collections.Generic.List%601>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="f9279-239">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="f9279-240">O exemplo a seguir demonstra o * método e várias outras propriedades e métodos do * classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-240">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-241">O <xref:System.Collections.Generic.List%601.Sort> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> e  propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-241">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="f9279-242">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com quatro cadeias de caracteres, em nenhuma ordem específica.</span><span class="sxs-lookup"><span data-stu-id="f9279-242">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f9279-243">Este método determina igualdade usando o comparador de igualdade padrão, conforme definido pela implementação do objeto do  método para  (o tipo de valores na lista).</span><span class="sxs-lookup"><span data-stu-id="f9279-243">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="f9279-244">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> e <xref:System.Collections.Generic.List%601.Insert%2A> métodos em um  que contém um objeto de negócios simples que implementa .</span><span class="sxs-lookup"><span data-stu-id="f9279-244">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="f9279-245">O exemplo a seguir contém uma lista de objetos complexos do tipo <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29>.</span><span class="sxs-lookup"><span data-stu-id="f9279-245">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="f9279-246">O `Xor` classe implementa o  método para que os dois cubos são considerados iguais se suas dimensões forem iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-246">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="f9279-247">Neste exemplo, o  método retorna , pois um cubo com as dimensões especificadas já está na coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-247">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-248">O comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" /> não consegue encontrar uma implementação da interface genérica <see cref="T:System.IComparable`1" /> ou a interface <see cref="T:System.IComparable" /> para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-248">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-249">O objeto a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-249">The object to locate.</span>
          </span>
          <span data-ttu-id="f9279-250">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-250">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f9279-251">A implementação de <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada durante a comparação de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-251">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="f9279-252">-ou-  <see langword="null" /> para usar o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-252">-or-  <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-253">Pesquisa um elemento em todo o <see cref="T:System.Collections.Generic.List`1" /> classificado usando o comparador especificado e retorna o índice baseado em zero do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-253">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-254">O índice baseado em zero da <paramref name="item" /> no <see cref="T:System.Collections.Generic.List`1" /> classificado, se <paramref name="item" /> for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="item" />, ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-254">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-255">A comparação personaliza como os elementos são comparados.</span><span class="sxs-lookup"><span data-stu-id="f9279-255">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="f9279-256">Por exemplo, você pode usar um <xref:System.Collections.CaseInsensitiveComparer> instância como o comparador para executar pesquisas de cadeia de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f9279-256">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="f9279-257">Se `comparer` for fornecido, os elementos do <xref:System.Collections.Generic.List%601> são comparados com o valor especificado usando especificado <xref:System.Collections.Generic.IComparer%601> implementação.</span><span class="sxs-lookup"><span data-stu-id="f9279-257">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f9279-258">Os elementos da atual `comparer` individualmente são passados para o `null` delegado e os elementos convertidos são salvos na nova <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-258">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f9279-259">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-259">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f9279-260">Atual `T` permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="f9279-260">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-261">é definido como 0, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-261">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="f9279-262">Para redefinir a capacidade do `null`, chamar o <xref:System.IComparable%601> método ou conjunto de  propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-262">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="f9279-263">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="f9279-263">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="f9279-264">Se o <xref:System.Collections.Generic.List%601> contém mais de um elemento com o mesmo valor, o método retornará somente uma das ocorrências e pode retornar qualquer uma das ocorrências, não necessariamente o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="f9279-264">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="f9279-265">Caso o <xref:System.Collections.Generic.List%601> não contenha o valor especificado, o método retorna um inteiro negativo.</span><span class="sxs-lookup"><span data-stu-id="f9279-265">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="f9279-266">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento que é maior do que o valor de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-266">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="f9279-267">Ao inserir o valor para o <xref:System.Collections.Generic.List%601>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="f9279-267">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="f9279-268">O exemplo a seguir demonstra o * método e várias outras propriedades e métodos do * classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-268">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-269">O <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> e  propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-269">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f9279-270">O exemplo a seguir define um método chamado `IComparer<string>` que converte um `IComparer(Of String)` estrutura para um `IComparer<String^>` estrutura.</span><span class="sxs-lookup"><span data-stu-id="f9279-270">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f9279-271">Um `null` de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-271">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f9279-272">Segundo, os comprimentos de cadeia de caracteres são comparados, e a cadeia de caracteres mais longa é considerada maior.</span><span class="sxs-lookup"><span data-stu-id="f9279-272">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f9279-273">Em terceiro lugar, se os tamanhos forem iguais, a comparação de cadeia de caracteres comum é usada.</span><span class="sxs-lookup"><span data-stu-id="f9279-273">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f9279-274">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com quatro cadeias de caracteres, em nenhuma ordem específica.</span><span class="sxs-lookup"><span data-stu-id="f9279-274">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f9279-275">Na primeira vez, ele procura a primeira  do objeto cuja  campo começa com "J"; pela segunda vez, ele procura a primeira  do objeto cuja  campo começa com "Ju".</span><span class="sxs-lookup"><span data-stu-id="f9279-275">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="f9279-276">O exemplo cria um <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> de objeto, adiciona um número de  objetos a ele e, em seguida, chama o  método duas vezes para pesquisar toda a coleção (ou seja, os membros do índice 0 para índice  - 1).</span><span class="sxs-lookup"><span data-stu-id="f9279-276">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="f9279-277">Os elementos da atual <xref:System.Collections.Generic.List%601.Insert%2A> individualmente são passados para o  delegado, mover para trás no , começando com o último elemento e terminando com o primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-277">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="f9279-278">Esses dois métodos estão localizados na função nomeada `SearchAndInsert`, junto com o código para levar o complemento bit a bit (o ~ operador em c# e Visual C++, `Xor` -1 no Visual Basic) do número negativo retornado por <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> e usá-lo como um índice para Inserir nova cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-278">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-279">
            <paramref name="comparer" /> é <see langword="null" /> e o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" /> não consegue encontrar uma implementação da interface genérica <see cref="T:System.IComparable`1" /> ou a interface <see cref="T:System.IComparable" /> para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-279">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (index, count, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-280">O índice baseado em zero inicial do intervalo a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-280">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-281">O tamanho do intervalo a ser procurado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-281">The length of the range to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f9279-282">O objeto a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-282">The object to locate.</span>
          </span>
          <span data-ttu-id="f9279-283">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-283">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f9279-284">A implementação <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada na comparação de elementos ou <see langword="null" /> para usar o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-284">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-285">Pesquisa um intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> classificado para encontrar um elemento que usa o comparador especificado e retorna o índice baseado em zero do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-285">Searches a range of elements in the sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-286">O índice baseado em zero da <paramref name="item" /> no <see cref="T:System.Collections.Generic.List`1" /> classificado, se <paramref name="item" /> for encontrado; caso contrário, um número negativo que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="item" />, ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-286">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-287">A comparação personaliza como os elementos são comparados.</span><span class="sxs-lookup"><span data-stu-id="f9279-287">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="f9279-288">Por exemplo, você pode usar um <xref:System.Collections.CaseInsensitiveComparer> instância como o comparador para executar pesquisas de cadeia de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f9279-288">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="f9279-289">Se `comparer` for fornecido, os elementos do <xref:System.Collections.Generic.List%601> são comparados com o valor especificado usando especificado <xref:System.Collections.Generic.IComparer%601> implementação.</span><span class="sxs-lookup"><span data-stu-id="f9279-289">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f9279-290">Os elementos da atual `comparer` individualmente são passados para o `null` delegado e os elementos convertidos são salvos na nova <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-290">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f9279-291">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-291">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f9279-292">Atual `T` permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="f9279-292">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-293">é definido como 0, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-293">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="f9279-294">Para redefinir a capacidade do `null`, chamar o <xref:System.IComparable%601> método ou conjunto de  propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-294">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="f9279-295">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="f9279-295">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="f9279-296">Se o <xref:System.Collections.Generic.List%601> contém mais de um elemento com o mesmo valor, o método retornará somente uma das ocorrências e pode retornar qualquer uma das ocorrências, não necessariamente o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="f9279-296">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="f9279-297">Caso o <xref:System.Collections.Generic.List%601> não contenha o valor especificado, o método retorna um inteiro negativo.</span><span class="sxs-lookup"><span data-stu-id="f9279-297">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="f9279-298">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento que é maior do que o valor de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-298">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="f9279-299">Ao inserir o valor para o <xref:System.Collections.Generic.List%601>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="f9279-299">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="f9279-300">O exemplo a seguir demonstra o * método e várias outras propriedades e métodos do * classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-300">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-301">O <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> e  propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-301">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f9279-302">O exemplo a seguir define um método chamado `IComparer<string>` que converte um `IComparer(Of String)` estrutura para um `IComparer<String^>` estrutura.</span><span class="sxs-lookup"><span data-stu-id="f9279-302">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f9279-303">Um `null` de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-303">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f9279-304">Segundo, os comprimentos de cadeia de caracteres são comparados, e a cadeia de caracteres mais longa é considerada maior.</span><span class="sxs-lookup"><span data-stu-id="f9279-304">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f9279-305">Em terceiro lugar, se os tamanhos forem iguais, a comparação de cadeia de caracteres comum é usada.</span><span class="sxs-lookup"><span data-stu-id="f9279-305">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f9279-306">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com os nomes de cinco dinossauros herbivorous e três dinossauros carnivorous.</span><span class="sxs-lookup"><span data-stu-id="f9279-306">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="f9279-307">Em cada um dos dois grupos, os nomes não estão em qualquer ordem de classificação específico.</span><span class="sxs-lookup"><span data-stu-id="f9279-307">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="f9279-308">A lista é exibida, o intervalo de herbivores é classificado usando o comparador alternativo e a lista é exibida novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-308">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="f9279-309">O <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga do método é usada para pesquisar somente o intervalo de herbivores "Brachiosaurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-309">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="f9279-310">A cadeia de caracteres não for encontrada e o complemento bit a bit (o ~ operador em c# e Visual C++, `Xor` -1 no Visual Basic) do número negativo retornado pelo <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> método é usado como um índice para inserir a nova cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-310">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-311">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-311">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-312">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-312">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-313">
            <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-313">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-314">
            <paramref name="comparer" /> é <see langword="null" /> e o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" /> não consegue encontrar uma implementação da interface genérica <see cref="T:System.IComparable`1" /> ou a interface <see cref="T:System.IComparable" /> para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-314">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-315">Obtém ou define o número total de elementos que a estrutura de dados interna pode manter sem redimensionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-315">Gets or sets the total number of elements the internal data structure can hold without resizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-316">O número de elementos que <see cref="T:System.Collections.Generic.List`1" /> pode conter antes que o redimensionamento seja necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-316">The number of elements that the <see cref="T:System.Collections.Generic.List`1" /> can contain before resizing is required.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-317"><xref:System.Collections.Generic.List%601.Capacity%2A> é o número de elementos que o <xref:System.Collections.Generic.List%601> pode armazenar antes de redimensionamento é necessário, enquanto <xref:System.Collections.Generic.List%601.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-317"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required, whereas <xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-318"><xref:System.Collections.Generic.List%601.Capacity%2A> sempre é maior que ou igual a <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-318"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="f9279-319">Se <xref:System.Collections.Generic.List%601.Count%2A> excede <xref:System.Collections.Generic.List%601.Capacity%2A> durante a adição de elementos, a capacidade é aumentada, automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-319">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f9279-320">Se a capacidade é significativamente maior do que a contagem de e para reduzir a memória usada pelo <xref:System.Collections.Generic.List%601>, você pode diminuir a capacidade chamando o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método ou definindo o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade explicitamente um valor inferior.</span><span class="sxs-lookup"><span data-stu-id="f9279-320">If the capacity is significantly larger than the count and you want to reduce the memory used by the <xref:System.Collections.Generic.List%601>,  you can  decrease capacity by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly to a lower value.</span></span> <span data-ttu-id="f9279-321">Quando o valor de <xref:System.Collections.Generic.List%601.Capacity%2A> é definido explicitamente, a matriz interna também seja realocada para acomodar a capacidade especificada e todos os elementos são copiados.</span><span class="sxs-lookup"><span data-stu-id="f9279-321">When the value of <xref:System.Collections.Generic.List%601.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</span></span>  
  
 <span data-ttu-id="f9279-322">Recuperar o valor dessa propriedade é uma operação de (1); configuração da propriedade é um O (*n*) operação, onde *n* é a nova capacidade.</span><span class="sxs-lookup"><span data-stu-id="f9279-322">Retrieving the value of this property is an O(1) operation; setting the property is an O(*n*) operation, where *n* is the new capacity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-323">O exemplo a seguir demonstra como verificar a capacidade e a contagem de um <xref:System.Collections.Generic.List%601> que contém um objeto de negócios simples e ilustra o uso de <xref:System.Collections.Generic.List%601.TrimExcess%2A> método para remover uma capacidade extra.</span><span class="sxs-lookup"><span data-stu-id="f9279-323">The following example demonstrates how to check the capacity and count of a <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-324">A exemplo a seguir mostra o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade em vários pontos da vida útil de uma lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-324">The following example shows the <xref:System.Collections.Generic.List%601.Capacity%2A> property at several points in the life of a list.</span></span> <span data-ttu-id="f9279-325">O construtor padrão é usado para criar uma lista de cadeias de caracteres com uma capacidade de 0 e o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade é exibida para demonstrar isso.</span><span class="sxs-lookup"><span data-stu-id="f9279-325">The default constructor is used to create a list of strings with a capacity of 0, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed to demonstrate this.</span></span> <span data-ttu-id="f9279-326">Após o <xref:System.Collections.Generic.List%601.Add%2A> método foi usado para adicionar vários itens, os itens são listados e, em seguida, o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade é exibida novamente, juntamente com o <xref:System.Collections.Generic.List%601.Count%2A> propriedade, para mostrar que a capacidade foi aumentada conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="f9279-326">After the <xref:System.Collections.Generic.List%601.Add%2A> method has been used to add several items, the items are listed, and then the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="f9279-327">O <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade é exibida novamente após o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método é usado para reduzir a capacidade de corresponder à contagem.</span><span class="sxs-lookup"><span data-stu-id="f9279-327">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count.</span></span> <span data-ttu-id="f9279-328">Por fim, o <xref:System.Collections.Generic.List%601.Clear%2A> método é usado para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.Capacity%2A> e <xref:System.Collections.Generic.List%601.Count%2A> propriedades são exibidas novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-328">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed again.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-329">
            <see cref="P:System.Collections.Generic.List`1.Capacity" /> é definido como um valor menor que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-329">
              <see cref="P:System.Collections.Generic.List`1.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f9279-330">Não há memória suficiente disponível no sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-330">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="list.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-331">Remove todos os elementos do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-331">Removes all elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-332"><xref:System.Collections.Generic.List%601.Count%2A> é definido como 0, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-332"><xref:System.Collections.Generic.List%601.Count%2A> is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="f9279-333"><xref:System.Collections.Generic.List%601.Capacity%2A> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="f9279-333"><xref:System.Collections.Generic.List%601.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="f9279-334">Para redefinir a capacidade do <xref:System.Collections.Generic.List%601>, chamar o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método ou conjunto de <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-334">To reset the capacity of the <xref:System.Collections.Generic.List%601>, call the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or set the <xref:System.Collections.Generic.List%601.Capacity%2A> property directly.</span></span> <span data-ttu-id="f9279-335">Reduzir a capacidade realoca a memória e copia todos os elementos de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-335">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="f9279-336">Cortar vazio <xref:System.Collections.Generic.List%601> define a capacidade do <xref:System.Collections.Generic.List%601> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="f9279-336">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="f9279-337">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-337">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-338">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Clear%2A> método e várias outras propriedades e métodos do <xref:System.Collections.Generic.List%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-338">The following example demonstrates the <xref:System.Collections.Generic.List%601.Clear%2A> method and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f9279-339">O <xref:System.Collections.Generic.List%601.Clear%2A> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.Capacity%2A> e <xref:System.Collections.Generic.List%601.Count%2A> propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-339">The <xref:System.Collections.Generic.List%601.Clear%2A> method is used at the end of the program, to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are then displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.TrimExcess" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="list.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-340">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-340">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-341">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-341">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-342">Determina se um elemento está no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-342">Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-343">
            <see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.Generic.List`1" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-343">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.List`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-344">Este método determina igualdade usando o comparador de igualdade padrão, conforme definido pela implementação do objeto do <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método para `T` (o tipo de valores na lista).</span><span class="sxs-lookup"><span data-stu-id="f9279-344">This method determines equality by using the default equality comparer, as defined by the object's implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method for `T` (the type of values in the list).</span></span>  
  
 <span data-ttu-id="f9279-345">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-345">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-346">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Contains%2A> e <xref:System.Collections.Generic.List%601.Exists%2A> métodos em um <xref:System.Collections.Generic.List%601> que contém um objeto de negócios simples que implementa <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-346">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-347">O exemplo a seguir contém uma lista de objetos complexos do tipo `Cube`.</span><span class="sxs-lookup"><span data-stu-id="f9279-347">The following example contains a list of complex objects of type `Cube`.</span></span> <span data-ttu-id="f9279-348">O `Cube` classe implementa o <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método para que os dois cubos são considerados iguais se suas dimensões forem iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-348">The `Cube` class implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method so that two cubes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="f9279-349">Neste exemplo, o <xref:System.Collections.Generic.List%601.Contains%2A> método retorna `true`, pois um cubo com as dimensões especificadas já está na coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-349">In this example, the <xref:System.Collections.Generic.List%601.Contains%2A> method returns `true`, because a cube that has the specified dimensions is already in the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.contains/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.contains/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Converter&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Converter`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Converter(Of T, TOutput)) As List(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Generic::List&lt;TOutput&gt; ^ ConvertAll(Converter&lt;T, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="member this.ConvertAll : Converter&lt;'T, 'Output&gt; -&gt; System.Collections.Generic.List&lt;'Output&gt;" Usage="list.ConvertAll converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Converter&lt;T,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="f9279-350">O tipo dos elementos da matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-350">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="converter">
          <span data-ttu-id="f9279-351">Um delegado <see cref="T:System.Converter`2" /> que converte cada elemento de um tipo em outro tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-351">A <see cref="T:System.Converter`2" /> delegate that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-352">Converte os elementos no <see cref="T:System.Collections.Generic.List`1" /> atual para outro tipo e retorna uma lista contendo os elementos convertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-352">Converts the elements in the current <see cref="T:System.Collections.Generic.List`1" /> to another type, and returns a list containing the converted elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-353">Um <see cref="T:System.Collections.Generic.List`1" /> do tipo de destino que contém os elementos convertidos do <see cref="T:System.Collections.Generic.List`1" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-353">A <see cref="T:System.Collections.Generic.List`1" /> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-354">O <xref:System.Converter%602> é um delegado para um método que converte um objeto para o tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="f9279-354">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="f9279-355">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Converter%602> delegado e os elementos convertidos são salvos na nova <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-355">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Converter%602> delegate, and the converted elements are saved in the new <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-356">Atual <xref:System.Collections.Generic.List%601> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="f9279-356">The current <xref:System.Collections.Generic.List%601> remains unchanged.</span></span>  
  
 <span data-ttu-id="f9279-357">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-357">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-358">O exemplo a seguir define um método chamado `PointFToPoint` que converte um <xref:System.Drawing.PointF> estrutura para um <xref:System.Drawing.Point> estrutura.</span><span class="sxs-lookup"><span data-stu-id="f9279-358">The following example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="f9279-359">O exemplo cria um <xref:System.Collections.Generic.List%601> de <xref:System.Drawing.PointF> estruturas, cria um `Converter\<PointF, Point>` delegar (`Converter(Of PointF, Point)` no Visual Basic) para representar o `PointFToPoint` método e passa o delegado para o <xref:System.Collections.Generic.List%601.ConvertAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-359">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method.</span></span> <span data-ttu-id="f9279-360">O <xref:System.Collections.Generic.List%601.ConvertAll%2A> método passa cada elemento da lista de entrada para o `PointFToPoint` método e coloca os elementos convertidos em uma nova lista de <xref:System.Drawing.Point> estruturas.</span><span class="sxs-lookup"><span data-stu-id="f9279-360">The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="f9279-361">Ambas as listas são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-361">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-362">
            <paramref name="converter" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-362">
              <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-363">Copia o <see cref="T:System.Collections.Generic.List`1" /> ou parte dele para uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-363">Copies the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it to an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="list.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f9279-364">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-364">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-365">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-365">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-366">Copia todo o <see cref="T:System.Collections.Generic.List`1" /> em uma matriz unidimensional compatível, a partir do início da matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-366">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-367">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-367">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f9279-368">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-368">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-369">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-369">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-370">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-370">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="f9279-371">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-371">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="f9279-372">Uma matriz de cadeia de caracteres vazia de 15 elementos é criada e o <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> sobrecarga do método é usada para copiar todos os elementos da lista para a matriz a partir do primeiro elemento da matriz.</span><span class="sxs-lookup"><span data-stu-id="f9279-372">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="f9279-373">O <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> sobrecarga do método é usada para copiar todos os elementos da lista para o início da matriz em 6 de índice de matriz (deixar vazio de índice 5).</span><span class="sxs-lookup"><span data-stu-id="f9279-373">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="f9279-374">Por fim, o <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para copiar 3 elementos na lista, começando com o índice 2, para o início da matriz na matriz de índice 12 (deixar vazio 11 índice).</span><span class="sxs-lookup"><span data-stu-id="f9279-374">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="f9279-375">O conteúdo da matriz é exibido.</span><span class="sxs-lookup"><span data-stu-id="f9279-375">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-376">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-376">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-377">O número de elementos no <see cref="T:System.Collections.Generic.List`1" /> de origem é maior que o número de elementos que o <paramref name="array" /> de destino pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-377">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="list.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f9279-378">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-378">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-379">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-379">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f9279-380">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-380">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-381">Copia todo o <see cref="T:System.Collections.Generic.List`1" /> para uma matriz unidimensional compatível, iniciando no índice especificado da matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-381">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-382">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-382">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f9279-383">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-383">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-384">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-384">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-385">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-385">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="f9279-386">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-386">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="f9279-387">Uma matriz de cadeia de caracteres vazia de 15 elementos é criada e o <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> sobrecarga do método é usada para copiar todos os elementos da lista para a matriz a partir do primeiro elemento da matriz.</span><span class="sxs-lookup"><span data-stu-id="f9279-387">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="f9279-388">O <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> sobrecarga do método é usada para copiar todos os elementos da lista para o início da matriz em 6 de índice de matriz (deixar vazio de índice 5).</span><span class="sxs-lookup"><span data-stu-id="f9279-388">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="f9279-389">Por fim, o <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para copiar 3 elementos na lista, começando com o índice 2, para o início da matriz na matriz de índice 12 (deixar vazio 11 índice).</span><span class="sxs-lookup"><span data-stu-id="f9279-389">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="f9279-390">O conteúdo da matriz é exibido.</span><span class="sxs-lookup"><span data-stu-id="f9279-390">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-391">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-391">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-392">
            <paramref name="arrayIndex" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-392">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-393">O número de elementos na origem <see cref="T:System.Collections.Generic.List`1" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-393">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * 'T[] * int * int -&gt; unit" Usage="list.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-394">O índice baseado em zero no <see cref="T:System.Collections.Generic.List`1" /> de origem em que a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-394">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="f9279-395">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-395">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-396">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-396">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f9279-397">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-397">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-398">O número de elementos a serem copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-398">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-399">Copia um intervalo de elementos do <see cref="T:System.Collections.Generic.List`1" /> para uma matriz unidimensional compatível, começando pelo índice especificado da matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-399">Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-400">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-400">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f9279-401">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-401">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-402">Esse método é um O (*n*) operação, onde *n* é `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-402">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-403">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-403">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="f9279-404">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-404">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="f9279-405">Uma matriz de cadeia de caracteres vazia de 15 elementos é criada e o <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> sobrecarga do método é usada para copiar todos os elementos da lista para a matriz a partir do primeiro elemento da matriz.</span><span class="sxs-lookup"><span data-stu-id="f9279-405">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="f9279-406">O <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> sobrecarga do método é usada para copiar todos os elementos da lista para o início da matriz em 6 de índice de matriz (deixar vazio de índice 5).</span><span class="sxs-lookup"><span data-stu-id="f9279-406">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="f9279-407">Por fim, o <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para copiar 3 elementos na lista, começando com o índice 2, para o início da matriz na matriz de índice 12 (deixar vazio 11 índice).</span><span class="sxs-lookup"><span data-stu-id="f9279-407">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="f9279-408">O conteúdo da matriz é exibido.</span><span class="sxs-lookup"><span data-stu-id="f9279-408">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-409">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-409">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-410">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-410">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-411">-ou-  <paramref name="arrayIndex" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-411">-or-  <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-412">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-412">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-413">
            <paramref name="index" /> é igual a ou maior que o <see cref="P:System.Collections.Generic.List`1.Count" /> do <see cref="T:System.Collections.Generic.List`1" /> de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-413">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.Generic.List`1.Count" /> of the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-414">-ou-  O número de elementos de <paramref name="index" /> até o final do <see cref="T:System.Collections.Generic.List`1" /> de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-414">-or-  The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.List&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-415">Obtém o número de elementos contidos no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-415">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-416">O número de elementos contidos no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-416">The number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-417"><xref:System.Collections.Generic.List%601.Capacity%2A> é o número de elementos que o <xref:System.Collections.Generic.List%601> pode armazenar antes de redimensionamento é necessário.</span><span class="sxs-lookup"><span data-stu-id="f9279-417"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required.</span></span> <span data-ttu-id="f9279-418"><xref:System.Collections.Generic.List%601.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-418"><xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-419"><xref:System.Collections.Generic.List%601.Capacity%2A> sempre é maior que ou igual a <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-419"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="f9279-420">Se <xref:System.Collections.Generic.List%601.Count%2A> excede <xref:System.Collections.Generic.List%601.Capacity%2A> durante a adição de elementos, a capacidade é aumentada, automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-420">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f9279-421">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-421">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-422">O exemplo a seguir demonstra como verificar a capacidade e a contagem de um <xref:System.Collections.Generic.List%601> que contém um objeto de negócios simples e ilustra o uso de <xref:System.Collections.Generic.List%601.TrimExcess%2A> método para remover uma capacidade extra.</span><span class="sxs-lookup"><span data-stu-id="f9279-422">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-423">O exemplo a seguir mostra o valor de <xref:System.Collections.Generic.List%601.Count%2A> propriedade em vários pontos da vida útil de uma lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-423">The following example shows the value of the <xref:System.Collections.Generic.List%601.Count%2A> property at various points in the life of a list.</span></span> <span data-ttu-id="f9279-424">Depois que a lista foi criada e preenchida e seus elementos exibidos, o <xref:System.Collections.Generic.List%601.Capacity%2A> e <xref:System.Collections.Generic.List%601.Count%2A> propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-424">After the list has been created and populated and its elements displayed, the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="f9279-425">Essas propriedades são exibidas novamente após o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método foi chamado e novamente após o conteúdo da lista é limpos.</span><span class="sxs-lookup"><span data-stu-id="f9279-425">These properties are displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method has been called, and again after the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Exists : Predicate&lt;'T&gt; -&gt; bool" Usage="list.Exists match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-426">O delegado <see cref="T:System.Predicate`1" /> que define as condições dos elementos a serem pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-426">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-427">Determina se o <see cref="T:System.Collections.Generic.List`1" /> contém elementos que correspondem às condições definidas pelo predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-427">Determines whether the <see cref="T:System.Collections.Generic.List`1" /> contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-428">
            <see langword="true" /> se o <see cref="T:System.Collections.Generic.List`1" /> contiver um ou mais elementos que correspondem às condições definidas pelo predicado especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-428">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.List`1" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-429">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-429">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-430">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegado e o processamento é interrompido quando uma correspondência for encontrada.</span><span class="sxs-lookup"><span data-stu-id="f9279-430">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="f9279-431">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-431">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-432">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Contains%2A> e <xref:System.Collections.Generic.List%601.Exists%2A> métodos em um <xref:System.Collections.Generic.List%601> que contém um objeto de negócios simples que implementa <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-432">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-433">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Exists%2A> método e vários outros métodos que usam o <xref:System.Predicate%601> delegado genérico.</span><span class="sxs-lookup"><span data-stu-id="f9279-433">The following example demonstrates the <xref:System.Collections.Generic.List%601.Exists%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="f9279-434">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, que contém nomes de dinossauro 8, dois deles (em posições 1 e 5) terminam com "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-434">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="f9279-435">O exemplo também define um método de predicado de pesquisa denominado `EndsWithSaurus`, que aceita um parâmetro de cadeia de caracteres e retorna um valor booleano um valor que indica se a cadeia de caracteres de entrada termina em "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-435">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="f9279-436">O <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, e <xref:System.Collections.Generic.List%601.FindAll%2A> métodos são usados para a lista de pesquisa com o método de predicado de pesquisa e, em seguida, o <xref:System.Collections.Generic.List%601.RemoveAll%2A> método é usado para remover todas as entradas que terminam com "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-436">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method, and then the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span>  
  
 <span data-ttu-id="f9279-437">Por fim, o <xref:System.Collections.Generic.List%601.Exists%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="f9279-437">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method is called.</span></span> <span data-ttu-id="f9279-438">Ele percorre a lista desde o início, passando a cada elemento sucessivamente para o `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="f9279-438">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="f9279-439">A pesquisa é interrompida e o método retorna `true` se o `EndsWithSaurus` método retorna `true` para qualquer elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-439">The search stops and the method returns `true` if the `EndsWithSaurus` method returns `true` for any element.</span></span> <span data-ttu-id="f9279-440">O <xref:System.Collections.Generic.List%601.Exists%2A> método retorna `false` porque todos os elementos foram removidos.</span><span class="sxs-lookup"><span data-stu-id="f9279-440">The <xref:System.Collections.Generic.List%601.Exists%2A> method returns `false` because all such elements have been removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9279-441">No C# e no Visual Basic, não é necessário criar o representante `Predicate<string>` (`Predicate(Of String)` no Visual Basic) explicitamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-441">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="f9279-442">Essas linguagens inferem o representante correto pelo contexto e criam-no automaticamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-442">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-443">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-443">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Find : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.Find match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-444">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-444">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-445">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna a primeira ocorrência em toda a <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-445">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-446">O primeiro elemento que corresponde às condições definidas pelo predicado especificado, se encontrado; caso contrário, o valor padrão para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-446">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-447">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-447">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-448">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegado, avançando <xref:System.Collections.Generic.List%601>, começando com o primeiro elemento e terminando com o último elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-448">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving forward in the <xref:System.Collections.Generic.List%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="f9279-449">O processamento será interrompido quando uma correspondência for encontrada.</span><span class="sxs-lookup"><span data-stu-id="f9279-449">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9279-450">Ao procurar uma lista que contém os tipos de valor, verifique se que o valor padrão para o tipo não satisfaz o predicado de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-450">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="f9279-451">Caso contrário, não é possível distinguir entre um elemento de lista que acontece com o valor padrão para o tipo e um valor padrão indicando que nenhuma correspondência foi encontrada.</span><span class="sxs-lookup"><span data-stu-id="f9279-451">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="f9279-452">Se o valor padrão satisfaz o predicado de pesquisa, use o <xref:System.Collections.Generic.List%601.FindIndex%2A> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="f9279-452">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="f9279-453">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-453">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-454">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Find%2A> método em um <xref:System.Collections.Generic.List%601> que contém um objeto complexo simple.</span><span class="sxs-lookup"><span data-stu-id="f9279-454">The following example demonstrates the <xref:System.Collections.Generic.List%601.Find%2A> method on a <xref:System.Collections.Generic.List%601> that contains a simple complex object.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-455">O exemplo a seguir demonstra os métodos de localização para o <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-455">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f9279-456">O exemplo para o <xref:System.Collections.Generic.List%601> classe contém `book` objetos da classe `Book`, usando os dados a [arquivo XML de exemplo: livros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f9279-456">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f9279-457">O `FillList` usa o método no exemplo [LINQ para XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analisar os valores do XML para valores de propriedade do `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="f9279-457">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f9279-458">A tabela a seguir descreve os exemplos fornecidos para os métodos de localização.</span><span class="sxs-lookup"><span data-stu-id="f9279-458">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f9279-459">Método</span><span class="sxs-lookup"><span data-stu-id="f9279-459">Method</span></span>|<span data-ttu-id="f9279-460">Exemplo</span><span class="sxs-lookup"><span data-stu-id="f9279-460">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-461">Localiza um catálogo usando uma ID de `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-461">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-462">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-462">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-463">Localizar todos os livros que cujo `Genre` propriedade é "Computador" usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-463">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-464">Localiza o último registro na coleção que tem uma data de publicação antes de 2001, usando o `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-464">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-465">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-465">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-466">Localiza o índice do primeiro registro de computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-466">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-467">Localiza o índice do último registro computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-467">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-468">Localiza o índice do primeiro registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-468">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-469">Localiza o índice do último registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-469">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-470">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-470">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindAll : Predicate&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-471">O delegado <see cref="T:System.Predicate`1" /> que define as condições dos elementos a serem pesquisados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-471">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-472">Recupera todos os elementos que correspondem às condições definidas pelo predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-472">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-473">Um <see cref="T:System.Collections.Generic.List`1" /> que contém todos os elementos que correspondem às condições definidas pelo predicado especificado, se encontrados; caso contrário, um <see cref="T:System.Collections.Generic.List`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-473">A <see cref="T:System.Collections.Generic.List`1" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-474">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-474">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-475">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegado e os elementos que correspondem às condições são salvos no retornado <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-475">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are saved in the returned <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-476">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-476">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-477">O exemplo a seguir demonstra os métodos de localização para o <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-477">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f9279-478">O exemplo para o <xref:System.Collections.Generic.List%601> classe contém `book` objetos da classe `Book`, usando os dados a [arquivo XML de exemplo: livros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f9279-478">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f9279-479">O `FillList` usa o método no exemplo [LINQ para XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analisar os valores do XML para valores de propriedade do `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="f9279-479">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f9279-480">A tabela a seguir descreve os exemplos fornecidos para os métodos de localização.</span><span class="sxs-lookup"><span data-stu-id="f9279-480">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f9279-481">Método</span><span class="sxs-lookup"><span data-stu-id="f9279-481">Method</span></span>|<span data-ttu-id="f9279-482">Exemplo</span><span class="sxs-lookup"><span data-stu-id="f9279-482">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-483">Localiza um catálogo usando uma ID de `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-483">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-484">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-484">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-485">Localizar todos os livros que cujo `Genre` propriedade é "Computador" usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-485">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-486">Localiza o último registro na coleção que tem uma data de publicação antes de 2001, usando o `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-486">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-487">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-487">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-488">Localiza o índice do primeiro registro de computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-488">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-489">Localiza o índice do último registro computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-489">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-490">Localiza o índice do primeiro registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-490">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-491">Localiza o índice do último registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-491">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-492">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-492">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-493">Pesquisa um elemento que corresponda às condições definidas por um predicado especificado e retorna o índice baseado em zero da primeira ocorrência no <see cref="T:System.Collections.Generic.List`1" /> ou parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-493">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
          <span data-ttu-id="f9279-494">Esse método retornará -1 se não for encontrado um item que corresponda às condições.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-494">This method returns -1 if an item that matches the conditions is not found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-495">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-495">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-496">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência em toda a <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-496">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-497">O índice baseado em zero da primeira ocorrência de um elemento que corresponde às condições definidas por <paramref name="match" />, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-497">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-498">O <xref:System.Collections.Generic.List%601> é pesquisado forward iniciando no primeiro elemento e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-498">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="f9279-499">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-499">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-500">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-500">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="f9279-501">O representante tem a assinatura:</span><span class="sxs-lookup"><span data-stu-id="f9279-501">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="f9279-502">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-502">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-503">O exemplo a seguir define uma `Employee` classe com dois campos, `Name` e `Id`.</span><span class="sxs-lookup"><span data-stu-id="f9279-503">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="f9279-504">Ele também define um `EmployeeSearch` classe com um único método, `StartsWith`, que indica se o `Employee.Name` campo começa com uma subcadeia de caracteres especificada que é fornecida para o `EmployeeSearch` construtor da classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-504">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="f9279-505">Observe a assinatura do método</span><span class="sxs-lookup"><span data-stu-id="f9279-505">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="f9279-506">corresponde à assinatura do delegado que pode ser passado para o <xref:System.Collections.Generic.List%601.FindIndex%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-506">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="f9279-507">O exemplo cria um `List<Employee>` de objeto, adiciona um número de `Employee` objetos a ele e, em seguida, chama o <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> método duas vezes para pesquisar toda a coleção, na primeira vez para o primeiro `Employee` do objeto cuja `Name` campo começa com "J" e a segunda vez para a primeira `Employee` do objeto cuja `Name` campo começa com "Ju".</span><span class="sxs-lookup"><span data-stu-id="f9279-507">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection , the first time for the first `Employee` object whose `Name` field begins with "J", and the second time for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex2.cs#2)]
 [!code-vb[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-508">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-508">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f9279-509">O índice inicial com base em zero da pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-509">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f9279-510">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-510">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-511">Pesquisa um elemento que corresponda às condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que se estende do índice especificado ao último elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-511">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-512">O índice baseado em zero da primeira ocorrência de um elemento que corresponde às condições definidas por <paramref name="match" />, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-512">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-513">O <xref:System.Collections.Generic.List%601> é pesquisado forward começando em `startIndex` e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-513">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="f9279-514">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-514">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-515">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-515">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="f9279-516">O representante tem a assinatura:</span><span class="sxs-lookup"><span data-stu-id="f9279-516">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="f9279-517">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é o número de elementos do `startIndex` ao final do <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-517">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `startIndex` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-518">O exemplo a seguir define uma `Employee` classe com dois campos, `Name` e `Id`.</span><span class="sxs-lookup"><span data-stu-id="f9279-518">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="f9279-519">Ele também define um `EmployeeSearch` classe com um único método, `StartsWith`, que indica se o `Employee.Name` campo começa com uma subcadeia de caracteres especificada que é fornecida para o `EmployeeSearch` construtor da classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-519">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="f9279-520">Observe a assinatura do método</span><span class="sxs-lookup"><span data-stu-id="f9279-520">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="f9279-521">corresponde à assinatura do delegado que pode ser passado para o <xref:System.Collections.Generic.List%601.FindIndex%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-521">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="f9279-522">O exemplo cria um `List<Employee>` de objeto, adiciona um número de `Employee` objetos a ele e, em seguida, chama o <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> método duas vezes para pesquisar a coleção começando com o membro quinto (ou seja, o membro no índice 4).</span><span class="sxs-lookup"><span data-stu-id="f9279-522">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the collection starting with its fifth member (that is, the member at index 4).</span></span> <span data-ttu-id="f9279-523">Na primeira vez, ele procura a primeira `Employee` do objeto cuja `Name` campo começa com "J"; pela segunda vez, ele procura a primeira `Employee` do objeto cuja `Name` campo começa com "Ju".</span><span class="sxs-lookup"><span data-stu-id="f9279-523">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex3.cs#3)]
 [!code-vb[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-524">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-524">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-525">
            <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-525">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f9279-526">O índice inicial com base em zero da pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-526">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-527">O número de elementos na seção a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-527">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f9279-528">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-528">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-529">Pesquisa um elemento que coincida com as condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos na <see cref="T:System.Collections.Generic.List`1" /> que começa no índice especificado e contém o número de elementos especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-529">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-530">O índice baseado em zero da primeira ocorrência de um elemento que corresponde às condições definidas por <paramref name="match" />, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-530">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-531">O <xref:System.Collections.Generic.List%601> é pesquisado forward começando em `startIndex` e final em `startIndex` mais `count` menos 1, se `count` for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="f9279-531">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f9279-532">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-532">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-533">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-533">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="f9279-534">O representante tem a assinatura:</span><span class="sxs-lookup"><span data-stu-id="f9279-534">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="f9279-535">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-535">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-536">O exemplo a seguir define uma `Employee` classe com dois campos, `Name` e `Id`.</span><span class="sxs-lookup"><span data-stu-id="f9279-536">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="f9279-537">Ele também define um `EmployeeSearch` classe com um único método, `StartsWith`, que indica se o `Employee.Name` campo começa com uma subcadeia de caracteres especificada que é fornecida para o `EmployeeSearch` construtor da classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-537">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="f9279-538">Observe a assinatura do método</span><span class="sxs-lookup"><span data-stu-id="f9279-538">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="f9279-539">corresponde à assinatura do delegado que pode ser passado para o <xref:System.Collections.Generic.List%601.FindIndex%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-539">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="f9279-540">O exemplo cria um `List<Employee>` de objeto, adiciona um número de `Employee` objetos a ele e, em seguida, chama o <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> método duas vezes para pesquisar toda a coleção (ou seja, os membros do índice 0 para índice <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span><span class="sxs-lookup"><span data-stu-id="f9279-540">The example instantiates a `List<Employee>` object, adds a number of `Employee` objets to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice  to search the entire collection (that is, the members from index 0 to index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span></span> <span data-ttu-id="f9279-541">Na primeira vez, ele procura a primeira `Employee` do objeto cuja `Name` campo começa com "J"; pela segunda vez, ele procura a primeira `Employee` do objeto cuja `Name` campo começa com "Ju".</span><span class="sxs-lookup"><span data-stu-id="f9279-541">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex1.cs#1)]
 [!code-vb[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-542">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-542">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-543">
            <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-543">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-544">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-544">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-545">-ou-  <paramref name="startIndex" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-545">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLast : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.FindLast match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-546">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-546">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-547">Pesquisa um elemento que corresponda às condições definidas pelo predicado especificado e retorna a primeira ocorrência em toda a <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-547">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-548">O último elemento que corresponde às condições definidas pelo predicado especificado, se encontrado; caso contrário, o valor padrão para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-548">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-549">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-549">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-550">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegado, mover para trás no <xref:System.Collections.Generic.List%601>, começando com o último elemento e terminando com o primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-550">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving backward in the <xref:System.Collections.Generic.List%601>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="f9279-551">O processamento será interrompido quando uma correspondência for encontrada.</span><span class="sxs-lookup"><span data-stu-id="f9279-551">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9279-552">Ao procurar uma lista que contém os tipos de valor, verifique se que o valor padrão para o tipo não satisfaz o predicado de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-552">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="f9279-553">Caso contrário, não é possível distinguir entre um elemento de lista que acontece com o valor padrão para o tipo e um valor padrão indicando que nenhuma correspondência foi encontrada.</span><span class="sxs-lookup"><span data-stu-id="f9279-553">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="f9279-554">Se o valor padrão satisfaz o predicado de pesquisa, use o <xref:System.Collections.Generic.List%601.FindLastIndex%2A> método em vez disso.</span><span class="sxs-lookup"><span data-stu-id="f9279-554">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindLastIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="f9279-555">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-555">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-556">O exemplo a seguir demonstra os métodos de localização para o <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-556">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f9279-557">O exemplo para o <xref:System.Collections.Generic.List%601> classe contém `book` objetos da classe `Book`, usando os dados a [arquivo XML de exemplo: livros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f9279-557">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f9279-558">O `FillList` usa o método no exemplo [LINQ para XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analisar os valores do XML para valores de propriedade do `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="f9279-558">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f9279-559">A tabela a seguir descreve os exemplos fornecidos para os métodos de localização.</span><span class="sxs-lookup"><span data-stu-id="f9279-559">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f9279-560">Método</span><span class="sxs-lookup"><span data-stu-id="f9279-560">Method</span></span>|<span data-ttu-id="f9279-561">Exemplo</span><span class="sxs-lookup"><span data-stu-id="f9279-561">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-562">Localiza um catálogo usando uma ID de `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-562">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-563">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-563">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-564">Localizar todos os livros que cujo `Genre` propriedade é "Computador" usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-564">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-565">Localiza o último registro na coleção que tem uma data de publicação antes de 2001, usando o `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-565">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-566">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-566">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-567">Localiza o índice do primeiro registro de computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-567">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-568">Localiza o índice do último registro computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-568">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-569">Localiza o índice do primeiro registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-569">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-570">Localiza o índice do último registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-570">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-571">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-571">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-572">Pesquisa um elemento que corresponda às condições definidas por um predicado especificado e retorna o índice baseado em zero da última ocorrência no <see cref="T:System.Collections.Generic.List`1" /> ou parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-572">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-573">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-573">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-574">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna o índice baseado em zero da última ocorrência em toda a <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-574">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-575">O índice baseado em zero da última ocorrência de um elemento que corresponde às condições definidas por <paramref name="match" />, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-575">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-576">O <xref:System.Collections.Generic.List%601> é pesquisado para trás, começando no último elemento e terminando no primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-576">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="f9279-577">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-577">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-578">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-578">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="f9279-579">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-579">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-580">O exemplo a seguir demonstra os métodos de localização para o <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-580">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f9279-581">O exemplo para o <xref:System.Collections.Generic.List%601> classe contém `book` objetos da classe `Book`, usando os dados a [arquivo XML de exemplo: livros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f9279-581">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f9279-582">O `FillList` usa o método no exemplo [LINQ para XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analisar os valores do XML para valores de propriedade do `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="f9279-582">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f9279-583">A tabela a seguir descreve os exemplos fornecidos para os métodos de localização.</span><span class="sxs-lookup"><span data-stu-id="f9279-583">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f9279-584">Método</span><span class="sxs-lookup"><span data-stu-id="f9279-584">Method</span></span>|<span data-ttu-id="f9279-585">Exemplo</span><span class="sxs-lookup"><span data-stu-id="f9279-585">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-586">Localiza um catálogo usando uma ID de `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-586">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-587">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-587">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-588">Localizar todos os livros que cujo `Genre` propriedade é "Computador" usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-588">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-589">Localiza o último registro na coleção que tem uma data de publicação antes de 2001, usando o `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-589">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-590">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-590">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-591">Localiza o índice do primeiro registro de computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-591">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-592">Localiza o índice do último registro computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-592">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-593">Localiza o índice do primeiro registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-593">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-594">Localiza o índice do último registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-594">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-595">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-595">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f9279-596">O índice inicial com base em zero da pesquisa inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-596">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f9279-597">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-597">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-598">Pesquisa um elemento que corresponde às condições definidas pelo predicado especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que se estende do primeiro elemento ao índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-598">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-599">O índice baseado em zero da última ocorrência de um elemento que corresponde às condições definidas por <paramref name="match" />, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-599">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-600">O <xref:System.Collections.Generic.List%601> é pesquisada começando com versões anteriores em `startIndex` e terminando no primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-600">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="f9279-601">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-601">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-602">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-602">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="f9279-603">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é o número de elementos desde o início do <xref:System.Collections.Generic.List%601> para `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="f9279-603">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `startIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-604">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-604">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-605">
            <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-605">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="f9279-606">O índice inicial com base em zero da pesquisa inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-606">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-607">O número de elementos na seção a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-607">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="f9279-608">O delegado <see cref="T:System.Predicate`1" /> que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-608">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-609">Pesquisa por um elemento que corresponda às condições definidas pelo predicado especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que contém o número de elementos especificado e termina no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-609">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-610">O índice baseado em zero da última ocorrência de um elemento que corresponde às condições definidas por <paramref name="match" />, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-610">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-611">O <xref:System.Collections.Generic.List%601> é pesquisada começando com versões anteriores em `startIndex` e final em `startIndex` menos `count` mais 1, se `count` for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="f9279-611">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f9279-612">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-612">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-613">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-613">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="f9279-614">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-614">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-615">O exemplo a seguir demonstra os métodos de localização para o <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="f9279-615">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="f9279-616">O exemplo para o <xref:System.Collections.Generic.List%601> classe contém `book` objetos da classe `Book`, usando os dados a [arquivo XML de exemplo: livros (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="f9279-616">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](http://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="f9279-617">O `FillList` usa o método no exemplo [LINQ para XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) para analisar os valores do XML para valores de propriedade do `book` objetos.</span><span class="sxs-lookup"><span data-stu-id="f9279-617">The `FillList` method in the example uses [LINQ to XML](http://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="f9279-618">A tabela a seguir descreve os exemplos fornecidos para os métodos de localização.</span><span class="sxs-lookup"><span data-stu-id="f9279-618">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="f9279-619">Método</span><span class="sxs-lookup"><span data-stu-id="f9279-619">Method</span></span>|<span data-ttu-id="f9279-620">Exemplo</span><span class="sxs-lookup"><span data-stu-id="f9279-620">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-621">Localiza um catálogo usando uma ID de `IDToFind` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-621">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-622">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-622">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-623">Localizar todos os livros que cujo `Genre` propriedade é "Computador" usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-623">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-624">Localiza o último registro na coleção que tem uma data de publicação antes de 2001, usando o `PubBefore2001` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-624">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="f9279-625">O exemplo c# usa um delegado anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-625">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-626">Localiza o índice do primeiro registro de computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-626">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-627">Localiza o índice do último registro computador usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-627">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-628">Localiza o índice do primeiro registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-628">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="f9279-629">Localiza o índice do último registro de computador na segunda metade da coleção, usando o `FindComputer` delegado de predicado.</span><span class="sxs-lookup"><span data-stu-id="f9279-629">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-630">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-630">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-631">
            <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-631">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-632">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-632">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-633">-ou-  <paramref name="startIndex" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-633">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="member this.ForEach : Action&lt;'T&gt; -&gt; unit" Usage="list.ForEach action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="f9279-634">O delegado <see cref="T:System.Action`1" /> a ser executado em cada elemento do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-634">The <see cref="T:System.Action`1" /> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-635">Executa a ação especificada em cada elemento do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-635">Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-636">O <xref:System.Action%601> um delegado para um método que executa uma ação no objeto passado para ele.</span><span class="sxs-lookup"><span data-stu-id="f9279-636">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="f9279-637">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Action%601> delegate.</span><span class="sxs-lookup"><span data-stu-id="f9279-637">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Action%601> delegate.</span></span>  
  
 <span data-ttu-id="f9279-638">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-638">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f9279-639">Modificar a coleção subjacente no corpo do <xref:System.Action%601> delegado não tem suporte e causa um comportamento indefinido.</span><span class="sxs-lookup"><span data-stu-id="f9279-639">Modifying the underlying collection in the body of the <xref:System.Action%601> delegate is not supported and causes undefined behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-640">O exemplo a seguir demonstra o uso do <xref:System.Action%601> delegado para imprimir o conteúdo de um <xref:System.Collections.Generic.List%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="f9279-640">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="f9279-641">Neste exemplo o `Print` método é usado para exibir o conteúdo da lista para o console.</span><span class="sxs-lookup"><span data-stu-id="f9279-641">In this example the `Print` method is used to display the contents of the list to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9279-642">Além de exibir o conteúdo usando o `Print` método, o exemplo c# demonstra o uso de exibir os resultados para o console.</span><span class="sxs-lookup"><span data-stu-id="f9279-642">In addition to displaying the contents using the `Print` method, the C# example demonstrates the use of  to display the results to the console.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-643">
            <paramref name="action" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-643">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-644">Um elemento na coleção foi modificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-644">An element in the collection has been modified.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As List(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.List&lt;'T&gt;.Enumerator" Usage="list.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-645">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-645">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-646">Um <see cref="T:System.Collections.Generic.List`1.Enumerator" /> para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-646">A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-647">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="f9279-647">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f9279-648">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="f9279-648">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f9279-649">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="f9279-649">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f9279-650">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-650">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f9279-651">Nesta posição, o <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="f9279-651">At this position, the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="f9279-652">Por isso, você deve chamar o método <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-652">Therefore, you must call the <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f9279-653">O <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> propriedade retorna o mesmo objeto até <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="f9279-653">The <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f9279-654"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> define <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-654"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f9279-655">Caso <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-655">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f9279-656">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-656">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f9279-657">Caso a última chamada para <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="f9279-657">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f9279-658">Não é possível definir <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="f9279-658">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f9279-659">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="f9279-659">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f9279-660">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> ou <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-660">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-661">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="f9279-661">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f9279-662">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="f9279-662">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9279-663">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="f9279-663">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9279-664">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-664">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9279-665">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-665">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.List`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetRange : int * int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-666">O índice <see cref="T:System.Collections.Generic.List`1" /> baseado em zero no qual é iniciado o intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-666">The zero-based <see cref="T:System.Collections.Generic.List`1" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-667">O número de elementos no intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-667">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-668">Cria uma cópia superficial de um intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-668">Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-669">Uma cópia superficial de um intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-669">A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-670">Uma cópia superficial de uma coleção de tipos de referência ou um subconjunto da coleção, contém somente as referências para os elementos da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-670">A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</span></span> <span data-ttu-id="f9279-671">Os objetos em si não são copiados.</span><span class="sxs-lookup"><span data-stu-id="f9279-671">The objects themselves are not copied.</span></span> <span data-ttu-id="f9279-672">As referências na nova lista apontam para os mesmos objetos as referências da lista original.</span><span class="sxs-lookup"><span data-stu-id="f9279-672">The references in the new list point to the same objects as the references in the original list.</span></span>  
  
 <span data-ttu-id="f9279-673">Uma cópia superficial de uma coleção de tipos de valor ou um subconjunto da coleção, contém os elementos da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-673">A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</span></span> <span data-ttu-id="f9279-674">No entanto, se os elementos da coleção contém referências a outros objetos, esses objetos não são copiados.</span><span class="sxs-lookup"><span data-stu-id="f9279-674">However, if the elements of the collection contain references to other objects, those objects are not copied.</span></span> <span data-ttu-id="f9279-675">As referências de elementos da nova coleção apontam para os mesmos objetos as referências de elementos da coleção original.</span><span class="sxs-lookup"><span data-stu-id="f9279-675">The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</span></span>  
  
 <span data-ttu-id="f9279-676">Em contraste, uma cópia profunda de uma coleção copia os elementos e tudo direta ou indiretamente referenciado por elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-676">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="f9279-677">Esse método é um O (*n*) operação, onde *n* é `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-677">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-678">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.GetRange%2A> método e outros métodos para o <xref:System.Collections.Generic.List%601> classe que atuam em intervalos.</span><span class="sxs-lookup"><span data-stu-id="f9279-678">The following example demonstrates the <xref:System.Collections.Generic.List%601.GetRange%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f9279-679">No final do exemplo, o <xref:System.Collections.Generic.List%601.GetRange%2A> método é usado para obter três itens na lista, começando com o local do índice 2.</span><span class="sxs-lookup"><span data-stu-id="f9279-679">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="f9279-680">O <xref:System.Collections.Generic.List%601.ToArray%2A> método é chamado em resultante <xref:System.Collections.Generic.List%601>, criando uma matriz de três elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-680">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="f9279-681">Os elementos da matriz são exibidos.</span><span class="sxs-lookup"><span data-stu-id="f9279-681">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-682">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-682">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-683">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-683">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-684">
            <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-684">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-685">Retorna o índice baseado em zero da primeira ocorrência de um valor no <see cref="T:System.Collections.Generic.List`1" /> ou em uma parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-685">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="list.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-686">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-686">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-687">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-687">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-688">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro de todo o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-688">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-689">O índice baseado em zero da primeira ocorrência de <paramref name="item" /> em todo o <see cref="T:System.Collections.Generic.List`1" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-689">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-690">O <xref:System.Collections.Generic.List%601> é pesquisado forward iniciando no primeiro elemento e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-690">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="f9279-691">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-691">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-692">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-692">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-693">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-693">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="f9279-694">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, com uma entrada que aparece duas vezes no local de índice 0 e o local de índice 5.</span><span class="sxs-lookup"><span data-stu-id="f9279-694">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f9279-695">O <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> sobrecarga do método de pesquisa a lista desde o início e localiza a primeira ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-695">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="f9279-696">O <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar o lista começando com o local de índice 3 e continua até o fim da lista e localiza a segunda ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-696">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f9279-697">Por fim, o <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar um intervalo de duas entradas, começando no local de índice dois; ele retorna -1, porque não há nenhuma instância da cadeia de caracteres de pesquisa nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="f9279-697">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int -&gt; int" Usage="list.IndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-698">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-698">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-699">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-699">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f9279-700">O índice inicial com base em zero da pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-700">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="f9279-701">0 (zero) é válido em uma lista vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-701">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-702">Procura o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos em <see cref="T:System.Collections.Generic.List`1" /> que se estende do índice especificado para o último elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-702">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-703">O índice baseado em zero da primeira ocorrência de <paramref name="item" /> dentro do intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que se estende do <paramref name="index" /> ao último elemento, se for encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-703">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from <paramref name="index" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-704">O <xref:System.Collections.Generic.List%601> é pesquisado forward começando em `index` e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-704">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at the last element.</span></span>  
  
 <span data-ttu-id="f9279-705">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-705">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-706">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é o número de elementos do `index` ao final do <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-706">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `index` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-707">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-707">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="f9279-708">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, com uma entrada que aparece duas vezes no local de índice 0 e o local de índice 5.</span><span class="sxs-lookup"><span data-stu-id="f9279-708">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f9279-709">O <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> sobrecarga do método de pesquisa a lista desde o início e localiza a primeira ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-709">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="f9279-710">O <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar o lista começando com o local de índice 3 e continua até o fim da lista e localiza a segunda ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-710">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f9279-711">Por fim, o <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar um intervalo de duas entradas, começando no local de índice dois; ele retorna -1, porque não há nenhuma instância da cadeia de caracteres de pesquisa nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="f9279-711">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-712">
            <paramref name="index" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-712">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * int -&gt; int" Usage="list.IndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-713">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-713">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-714">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-714">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f9279-715">O índice inicial com base em zero da pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-715">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="f9279-716">0 (zero) é válido em uma lista vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-716">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-717">O número de elementos na seção a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-717">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-718">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência em um intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que começa no índice especificado e contém o número de elementos especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-718">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-719">O índice baseado em zero da primeira ocorrência de <paramref name="item" /> no intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que começa em <paramref name="index" /> e contém o número de elementos <paramref name="count" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-719">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-720">O <xref:System.Collections.Generic.List%601> é pesquisado forward começando em `index` e final em `index` mais `count` menos 1, se `count` for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="f9279-720">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at `index` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f9279-721">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-721">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-722">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-722">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-723">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.IndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-723">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="f9279-724">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, com uma entrada que aparece duas vezes no local de índice 0 e o local de índice 5.</span><span class="sxs-lookup"><span data-stu-id="f9279-724">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f9279-725">O <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> sobrecarga do método de pesquisa a lista desde o início e localiza a primeira ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-725">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="f9279-726">O <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar o lista começando com o local de índice 3 e continua até o fim da lista e localiza a segunda ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-726">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f9279-727">Por fim, o <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar um intervalo de duas entradas, começando no local de índice dois; ele retorna -1, porque não há nenhuma instância da cadeia de caracteres de pesquisa nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="f9279-727">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-728">
            <paramref name="index" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-728">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-729">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-729">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-730">-ou-  <paramref name="index" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-730">-or-  <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="list.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-731">O índice baseado em zero no qual o <c>item</c> deve ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-731">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f9279-732">O objeto a ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-732">The object to insert.</span>
          </span>
          <span data-ttu-id="f9279-733">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-733">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-734">Insere um elemento no <see cref="T:System.Collections.Generic.List`1" />, no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-734">Inserts an element into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-735"><xref:System.Collections.Generic.List%601> aceita `null` como um valor válido para a referência de tipos e permite que os elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="f9279-735"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f9279-736">Se <xref:System.Collections.Generic.List%601.Count%2A> já for igual a <xref:System.Collections.Generic.List%601.Capacity%2A>, a capacidade do <xref:System.Collections.Generic.List%601> é aumentado, automaticamente realocando matriz interna, e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-736">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f9279-737">Se `index` é igual a <xref:System.Collections.Generic.List%601.Count%2A>, `item` é adicionada ao final da <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-737">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, `item` is added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-738">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-738">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-739">O exemplo a seguir demonstra como adicionar, remover e inserir um objeto de negócios simples em um <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-739">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f9279-740">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Insert%2A> método, juntamente com várias propriedades e métodos do <xref:System.Collections.Generic.List%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-740">The following example demonstrates the <xref:System.Collections.Generic.List%601.Insert%2A> method, along with various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f9279-741">Depois que a lista é criada, os elementos são adicionados.</span><span class="sxs-lookup"><span data-stu-id="f9279-741">After the list is created, elements are added.</span></span> <span data-ttu-id="f9279-742">O <xref:System.Collections.Generic.List%601.Insert%2A> método é usado para inserir um item no meio da lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-742">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert an item into the middle of the list.</span></span> <span data-ttu-id="f9279-743">O item inserido é uma duplicata, que é removida posteriormente usando o <xref:System.Collections.Generic.List%601.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-743">The item inserted is a duplicate, which is later removed using the <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-744">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-744">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-745">-ou-  <paramref name="index" /> é maior que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-745">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * seq&lt;'T&gt; -&gt; unit" Usage="list.InsertRange (index, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-746">O índice baseado em zero no qual os novos elementos devem ser inseridos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-746">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="f9279-747">A coleção cujos elementos devem ser inseridos no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-747">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-748">A coleção em si não pode ser <see langword="null" />, mas poderá conter elementos que são <see langword="null" />, se tipo <c>T</c> for um tipo de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-748">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-749">Insere os elementos de uma coleção no <see cref="T:System.Collections.Generic.List`1" /> no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-749">Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-750"><xref:System.Collections.Generic.List%601> aceita `null` como um valor válido para a referência de tipos e permite que os elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="f9279-750"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f9279-751">Se o novo <xref:System.Collections.Generic.List%601.Count%2A> (atual <xref:System.Collections.Generic.List%601.Count%2A> mais o tamanho da coleção) será maior <xref:System.Collections.Generic.List%601.Capacity%2A>, a capacidade do <xref:System.Collections.Generic.List%601> é aumentado, automaticamente realocando a matriz interna para acomodar os novos elementos e o elementos existentes são copiados para a nova matriz antes que os novos elementos são adicionados.</span><span class="sxs-lookup"><span data-stu-id="f9279-751">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="f9279-752">Se `index` é igual a <xref:System.Collections.Generic.List%601.Count%2A>, os elementos são adicionados ao final da <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-752">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, the elements are added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-753">A ordem dos elementos na coleção é preservada no <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-753">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-754">Esse método é um O (*n* \* *m*) operação, onde *n* é o número de elementos a serem adicionados e *m* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-754">This method is an O(*n* \* *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-755">O exemplo a seguir demonstra <xref:System.Collections.Generic.List%601.InsertRange%2A> método e vários outros métodos do <xref:System.Collections.Generic.List%601> classe que atuam em intervalos.</span><span class="sxs-lookup"><span data-stu-id="f9279-755">The following example demonstrates <xref:System.Collections.Generic.List%601.InsertRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f9279-756">Depois que a lista foi criada e preenchida com os nomes dos vários tranquilo destruidores de fábrica dinossauros, o <xref:System.Collections.Generic.List%601.InsertRange%2A> método é usado para inserir uma matriz de três dinossauros um Feroz comer a parte mais importante na lista, começando no local de índice 3.</span><span class="sxs-lookup"><span data-stu-id="f9279-756">After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <xref:System.Collections.Generic.List%601.InsertRange%2A> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-757">
            <paramref name="collection" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-757">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-758">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-758">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-759">-ou-  <paramref name="index" /> é maior que <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-759">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-760">O índice com base em zero do elemento a ser obtido ou definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-760">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-761">Obtém ou define o elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-761">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-762">O elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-762">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-763"><xref:System.Collections.Generic.List%601> aceita `null` como um valor válido para a referência de tipos e permite que os elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="f9279-763"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="f9279-764">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="f9279-764">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="f9279-765">Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="f9279-765">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-766">O exemplo nesta seção demonstra o <xref:System.Collections.Generic.List%601.Item%2A> propriedade (indexador em c#) e várias outras propriedades e métodos do <xref:System.Collections.Generic.List%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="f9279-766">The example in this section demonstrates the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="f9279-767">Depois que a lista foi criada e preenchida usando o <xref:System.Collections.Generic.List%601.Add%2A> método, um elemento é recuperado e exibido usando o <xref:System.Collections.Generic.List%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9279-767">After the list has been created and populated using the <xref:System.Collections.Generic.List%601.Add%2A> method, an element is retrieved and displayed using the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="f9279-768">(Para obter um exemplo que usa o <xref:System.Collections.Generic.List%601.Item%2A> propriedade para definir o valor de um elemento da lista, consulte <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span><span class="sxs-lookup"><span data-stu-id="f9279-768">(For an example that uses the <xref:System.Collections.Generic.List%601.Item%2A> property to set the value of a list element, see <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9279-769">Visual Basic, c# e C++ todos têm sintaxe para acessar o <xref:System.Collections.Generic.List%601.Item%2A> propriedade sem usar seu nome.</span><span class="sxs-lookup"><span data-stu-id="f9279-769">Visual Basic, C#, and C++ all have syntax for accessing the <xref:System.Collections.Generic.List%601.Item%2A> property without using its name.</span></span> <span data-ttu-id="f9279-770">Em vez disso, a variável que contém o <xref:System.Collections.Generic.List%601> é usado como se fosse uma matriz.</span><span class="sxs-lookup"><span data-stu-id="f9279-770">Instead, the variable containing the <xref:System.Collections.Generic.List%601> is used as if it were an array.</span></span>  
  
 <span data-ttu-id="f9279-771">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Generic.List%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9279-771">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="f9279-772">Visual Basic implementa <xref:System.Collections.Generic.List%601.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="f9279-772">Visual Basic implements <xref:System.Collections.Generic.List%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 [!code-csharp[List`1_Class#2](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#2)]
 [!code-vb[List`1_Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#2)]  
[!code-csharp[List`1_Class#3](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#3)]
[!code-vb[List`1_Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-773">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-773">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-774">-ou-  <paramref name="index" /> é igual ou superior a <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-774">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-775">Retorna o índice baseado em zero da última ocorrência de um valor no <see cref="T:System.Collections.Generic.List`1" /> ou em uma parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-775">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T -&gt; int" Usage="list.LastIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-776">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-776">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-777">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-777">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-778">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro de todo o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-778">Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-779">O índice baseado em zero da última ocorrência de <paramref name="item" /> em todo o <see cref="T:System.Collections.Generic.List`1" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-779">The zero-based index of the last occurrence of <paramref name="item" /> within the entire the <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-780">O <xref:System.Collections.Generic.List%601> é pesquisado para trás, começando no último elemento e terminando no primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-780">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="f9279-781">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-781">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-782">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-782">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-783">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-783">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="f9279-784">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, com uma entrada que aparece duas vezes no local de índice 0 e o local de índice 5.</span><span class="sxs-lookup"><span data-stu-id="f9279-784">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f9279-785">O <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> sobrecarga do método de pesquisa a lista inteira do final e localiza a segunda ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-785">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f9279-786">O <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar a lista de versões anteriores, começando com o local de índice 3 e continuando até o início da lista, para que ele localiza a primeira ocorrência da cadeia de caracteres na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-786">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="f9279-787">Por fim, o <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar um intervalo de quatro entradas, começando no local de índice 4 e estendendo para trás (ou seja, ele procura os itens nos locais 4, 3, 2 e 1); a pesquisa retorna -1 porque não há nenhuma instância da pesquisa cadeia de caracteres nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="f9279-787">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int -&gt; int" Usage="list.LastIndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-788">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-788">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-789">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-789">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f9279-790">O índice inicial com base em zero da pesquisa inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-790">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-791">Procura o objeto especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos em <see cref="T:System.Collections.Generic.List`1" /> que se estende do primeiro elemento ao índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-791">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-792">O índice baseado em zero da última ocorrência de <paramref name="item" /> dentro do intervalo de elementos em <see cref="T:System.Collections.Generic.List`1" /> que se estende do primeiro elemento a <paramref name="index" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-792">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-793">O <xref:System.Collections.Generic.List%601> é pesquisada começando com versões anteriores em `index` e terminando no primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-793">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at the first element.</span></span>  
  
 <span data-ttu-id="f9279-794">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-794">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-795">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é o número de elementos desde o início do <xref:System.Collections.Generic.List%601> para `index`.</span><span class="sxs-lookup"><span data-stu-id="f9279-795">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-796">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-796">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="f9279-797">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, com uma entrada que aparece duas vezes no local de índice 0 e o local de índice 5.</span><span class="sxs-lookup"><span data-stu-id="f9279-797">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f9279-798">O <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> sobrecarga do método de pesquisa a lista inteira do final e localiza a segunda ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-798">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f9279-799">O <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar a lista de versões anteriores, começando com o local de índice 3 e continuando até o início da lista, para que ele localiza a primeira ocorrência da cadeia de caracteres na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-799">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="f9279-800">Por fim, o <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar um intervalo de quatro entradas, começando no local de índice 4 e estendendo para trás (ou seja, ele procura os itens nos locais 4, 3, 2 e 1); a pesquisa retorna -1 porque não há nenhuma instância da pesquisa cadeia de caracteres nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="f9279-800">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-801">
            <paramref name="index" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-801">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int * int -&gt; int" Usage="list.LastIndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-802">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-802">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-803">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-803">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f9279-804">O índice inicial com base em zero da pesquisa inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-804">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-805">O número de elementos na seção a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-805">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-806">Pesquisa o objeto especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na <see cref="T:System.Collections.Generic.List`1" /> que contém o número de elementos especificado e termina no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-806">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-807">O índice baseado em zero da última ocorrência de <paramref name="item" /> dentro do intervalo de elementos no <see cref="T:System.Collections.Generic.List`1" /> que contém a <paramref name="count" /> de número de elementos e termina no <paramref name="index" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-807">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-808">O <xref:System.Collections.Generic.List%601> é pesquisada começando com versões anteriores em `index` e final em `index` menos `count` mais 1, se `count` for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="f9279-808">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at `index` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="f9279-809">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-809">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-810">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-810">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-811">O exemplo a seguir demonstra todos os três sobrecargas do <xref:System.Collections.Generic.List%601.LastIndexOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-811">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="f9279-812">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, com uma entrada que aparece duas vezes no local de índice 0 e o local de índice 5.</span><span class="sxs-lookup"><span data-stu-id="f9279-812">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="f9279-813">O <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> sobrecarga do método de pesquisa a lista inteira do final e localiza a segunda ocorrência da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-813">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="f9279-814">O <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar a lista de versões anteriores, começando com o local de índice 3 e continuando até o início da lista, para que ele localiza a primeira ocorrência da cadeia de caracteres na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-814">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="f9279-815">Por fim, o <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> sobrecarga do método é usada para pesquisar um intervalo de 4 entradas, começando no local de índice 4 e estendendo para trás (ou seja, ele procura os itens nos locais 4, 3, 2 e 1); a pesquisa retorna -1 porque não há nenhuma instância da pesquisa cadeia de caracteres nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="f9279-815">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-816">
            <paramref name="index" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-816">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-817">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-817">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-818">-ou-  <paramref name="index" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-818">-or-  <paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="list.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-819">O objeto a remover do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-819">The object to remove from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-820">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-820">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-821">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-821">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-822">
            <see langword="true" /> se <paramref name="item" /> for removido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-822">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9279-823">Esse método também retornará <see langword="false" /> se <paramref name="item" /> não tiver sido encontrado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-823">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-824">Se tipo `T` implementa o <xref:System.IEquatable%601> interface genérica, o comparador de igualdade é o <xref:System.IEquatable%601.Equals%2A> método da interface; caso contrário, o comparador de igualdade padrão é <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-824">If type `T` implements the <xref:System.IEquatable%601> generic interface, the equality comparer is the <xref:System.IEquatable%601.Equals%2A> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f9279-825">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-825">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-826">O exemplo a seguir demonstra como adicionar, remover e inserir um objeto de negócios simples em um <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-826">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="f9279-827">O exemplo a seguir demonstra <xref:System.Collections.Generic.List%601.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-827">The following example demonstrates <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span> <span data-ttu-id="f9279-828">Várias propriedades e métodos para o <xref:System.Collections.Generic.List%601> classe genérica são usados para adicionar, insert e a lista de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-828">Several properties and methods of the <xref:System.Collections.Generic.List%601> generic class are used to add, insert, and search the list.</span></span> <span data-ttu-id="f9279-829">Depois que essas operações, a lista contém uma duplicata.</span><span class="sxs-lookup"><span data-stu-id="f9279-829">After these operations, the list contains a duplicate.</span></span> <span data-ttu-id="f9279-830">O <xref:System.Collections.Generic.List%601.Remove%2A> método é usado para remover a primeira instância do item duplicado e o conteúdo é exibido.</span><span class="sxs-lookup"><span data-stu-id="f9279-830">The <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item, and the contents are displayed.</span></span> <span data-ttu-id="f9279-831">O <xref:System.Collections.Generic.List%601.Remove%2A> método sempre remove a primeira instância que encontrar.</span><span class="sxs-lookup"><span data-stu-id="f9279-831">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Predicate&lt;'T&gt; -&gt; int" Usage="list.RemoveAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-832">O delegado <see cref="T:System.Predicate`1" /> que define as condições dos elementos a serem removidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-832">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-833">Remove todos os elementos que correspondem às condições definidas pelo predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-833">Removes all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-834">O número de elementos removidos de <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-834">The number of elements removed from the <see cref="T:System.Collections.Generic.List`1" /> .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-835">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-835">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-836">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegado e os elementos que correspondem às condições são removidos do <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-836">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are removed from the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="f9279-837">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-837">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-838">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.RemoveAll%2A> método e vários outros métodos que usam o <xref:System.Predicate%601> delegado genérico.</span><span class="sxs-lookup"><span data-stu-id="f9279-838">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="f9279-839">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, que contém nomes de dinossauro 8, dois deles (em posições 1 e 5) terminam com "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-839">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="f9279-840">O exemplo também define um método de predicado de pesquisa denominado `EndsWithSaurus`, que aceita um parâmetro de cadeia de caracteres e retorna um valor booleano um valor que indica se a cadeia de caracteres de entrada termina em "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-840">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="f9279-841">O <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, e <xref:System.Collections.Generic.List%601.FindAll%2A> métodos são usados para a lista de pesquisa com o método de predicado de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="f9279-841">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method.</span></span>  
  
 <span data-ttu-id="f9279-842">O <xref:System.Collections.Generic.List%601.RemoveAll%2A> método é usado para remover todas as entradas que terminam com "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-842">The <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span> <span data-ttu-id="f9279-843">Ele percorre a lista desde o início, passando a cada elemento sucessivamente para o `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="f9279-843">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="f9279-844">O elemento seja removido se a `EndsWithSaurus` método retornará `true`.</span><span class="sxs-lookup"><span data-stu-id="f9279-844">The element is removed if the `EndsWithSaurus` method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9279-845">No C# e no Visual Basic, não é necessário criar o representante `Predicate<string>` (`Predicate(Of String)` no Visual Basic) explicitamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-845">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="f9279-846">Essas linguagens inferir o representante correto do contexto e criá-lo automaticamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-846">These languages infer the correct delegate from context, and create it automatically.</span></span>  
  
 <span data-ttu-id="f9279-847">Por fim, o <xref:System.Collections.Generic.List%601.Exists%2A> método verifica se não há nenhum cadeias de caracteres na lista que terminam com "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-847">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method verifies that there are no strings in the list that end with "saurus".</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-848">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-848">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="list.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-849">O índice de base zero do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-849">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-850">Remove o elemento no índice especificado do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-850">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-851">Quando você chama <xref:System.Collections.Generic.List%601.RemoveAt%2A> para remover um item, os itens restantes na lista são renumerados para substituir o item removido.</span><span class="sxs-lookup"><span data-stu-id="f9279-851">When you call <xref:System.Collections.Generic.List%601.RemoveAt%2A> to remove an item, the remaining items in the list are renumbered to replace the removed item.</span></span> <span data-ttu-id="f9279-852">Por exemplo, se você remover o item no índice 3, o item no índice 4 é movido para a posição de 3.</span><span class="sxs-lookup"><span data-stu-id="f9279-852">For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</span></span> <span data-ttu-id="f9279-853">Além disso, o número de itens na lista (conforme representado pelo <xref:System.Collections.Generic.List%601.Count%2A> propriedade) é reduzida em 1.</span><span class="sxs-lookup"><span data-stu-id="f9279-853">In addition, the number of items in the list (as represented by the <xref:System.Collections.Generic.List%601.Count%2A> property) is reduced by 1.</span></span>  
  
 <span data-ttu-id="f9279-854">Esse método é um O (*n*) operação, onde *n* é (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span><span class="sxs-lookup"><span data-stu-id="f9279-854">This method is an O(*n*) operation, where *n* is (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-855">O exemplo a seguir demonstra como adicionar, remover e inserir um objeto de negócios simples em um <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-855">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-856">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-856">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-857">-ou-  <paramref name="index" /> é igual ou superior a <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-857">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="list.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-858">O índice inicial baseado em zero do intervalo de elementos a serem removidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-858">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-859">O número de elementos a serem removidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-859">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-860">Remove um intervalo de elementos do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-860">Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-861">Os itens serão removidos e todos os elementos a seguir no <xref:System.Collections.Generic.List%601> ter seus índices reduzidas `count`.</span><span class="sxs-lookup"><span data-stu-id="f9279-861">The items are removed and all the elements following them in the <xref:System.Collections.Generic.List%601> have their indexes reduced by `count`.</span></span>  
  
 <span data-ttu-id="f9279-862">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-862">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-863">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.RemoveRange%2A> método e vários outros métodos do <xref:System.Collections.Generic.List%601> classe que atuam em intervalos.</span><span class="sxs-lookup"><span data-stu-id="f9279-863">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f9279-864">Depois que a lista foi criada e modificada, o <xref:System.Collections.Generic.List%601.RemoveRange%2A> método é usado para remover os dois elementos da lista, começando no local do índice 2.</span><span class="sxs-lookup"><span data-stu-id="f9279-864">After the list has been created and modified, the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method is used to remove two elements from the list, beginning at index location 2.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-865">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-865">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-866">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-866">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-867">
            <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-867">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-868">Inverte a ordem dos elementos no <see cref="T:System.Collections.Generic.List`1" /> em uma parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-868">Reverses the order of the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="list.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-869">Inverte a ordem dos elementos em todo o <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-869">Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-870">Esse método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para inverter a ordem dos elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-870">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="f9279-871">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-871">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-872">O exemplo a seguir demonstra as duas sobrecargas do <xref:System.Collections.Generic.List%601.Reverse%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-872">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="f9279-873">O exemplo cria um <xref:System.Collections.Generic.List%601> de cadeias de caracteres e adiciona seis cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-873">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="f9279-874">O <xref:System.Collections.Generic.List%601.Reverse> sobrecarga do método usada para reverter a lista e, em seguida, o <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> sobrecarga do método usada para reverter o meio da lista, começando com o elemento 1 e abrangendo quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-874">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Reverse : int * int -&gt; unit" Usage="list.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-875">O índice inicial baseado em zero do intervalo a ser revertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-875">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-876">O número de elementos no intervalo a serem revertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-876">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-877">Inverte a ordem dos elementos no intervalo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-877">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-878">Esse método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para inverter a ordem dos elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-878">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="f9279-879">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-879">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-880">O exemplo a seguir demonstra as duas sobrecargas do <xref:System.Collections.Generic.List%601.Reverse%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-880">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="f9279-881">O exemplo cria um <xref:System.Collections.Generic.List%601> de cadeias de caracteres e adiciona seis cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-881">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="f9279-882">O <xref:System.Collections.Generic.List%601.Reverse> sobrecarga do método usada para reverter a lista e, em seguida, o <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> sobrecarga do método usada para reverter o meio da lista, começando com o elemento 1 e abrangendo quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-882">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-883">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-883">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-884">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-884">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-885">
            <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-885">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-886">Classifica os elementos no <see cref="T:System.Collections.Generic.List`1" /> ou parte dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-886">Sorts the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overloaded-method-syntax"></a><span data-ttu-id="f9279-887">Sintaxe de método sobrecarregada</span><span class="sxs-lookup"><span data-stu-id="f9279-887">Overloaded method syntax</span></span>  
 <span data-ttu-id="f9279-888">O <xref:System.Collections.Generic.List%601.Sort%2A> métodos permitem que você classifique com o comparador padrão para o tipo de objeto na lista ou especifique um método de classificação do cliente.</span><span class="sxs-lookup"><span data-stu-id="f9279-888">The  <xref:System.Collections.Generic.List%601.Sort%2A> methods enable you to sort with the default comparer for the object type in the list, or specify a customer sort method.</span></span>  
  
 <span data-ttu-id="f9279-889">[Lista\<T >. Sort](xref:System.Collections.Generic.List`1.Sort*) classifica os elementos em toda a lista usando o comparador padrão do tipo de objeto são mantidos na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-889">[List\<T>.Sort()](xref:System.Collections.Generic.List`1.Sort*) Sorts the elements in the entire list using the default comparer of the object type held in the list.</span></span>  
  
 <span data-ttu-id="f9279-890">[Lista\<T >. Classificação M (comparação\<T > comparação)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) classifica os elementos em toda a lista usando o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="f9279-890">[List\<T>.Sort M(Comparison\<T> comparison)](xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29) Sorts the elements in the entire list using the specified comparer.</span></span>  
  
 <span data-ttu-id="f9279-891">[Lista\<T >. Classificar (IComparer\<T > comparador)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) classifica os elementos na lista de inteiros usando especificado <xref:System.Comparison%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-891">[List\<T>.Sort(IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in the entire list using the specified <xref:System.Comparison%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f9279-892">[Lista\<T >. Classificar (índice de Int32, contagem de Int32 IComparer\<T > comparador)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) classifica os elementos em um intervalo de elementos na lista usando o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="f9279-892">[List\<T>.Sort(Int32 index, Int32 count, IComparer\<T> comparer)](xref:System.Collections.Generic.List%601.Sort%28System.Int32,System.Int32,System.Collections.Generic.IComparer%7B%600%7D%29) Sorts the elements in a range of elements in list using the specified comparer.</span></span>  
  
## <a name="parameters"></a><span data-ttu-id="f9279-893">Parâmetros</span><span class="sxs-lookup"><span data-stu-id="f9279-893">Parameters</span></span>  
  
|<span data-ttu-id="f9279-894">Parâmetro</span><span class="sxs-lookup"><span data-stu-id="f9279-894">Parameter</span></span>|<span data-ttu-id="f9279-895">Tipo</span><span class="sxs-lookup"><span data-stu-id="f9279-895">Type</span></span>|<span data-ttu-id="f9279-896">Descrição</span><span class="sxs-lookup"><span data-stu-id="f9279-896">Description</span></span>|  
|---------------|----------|-----------------|  
|`comparison`|<xref:System.Comparison%601>|<span data-ttu-id="f9279-897">O método delegado para uso na comparação entre elementos</span><span class="sxs-lookup"><span data-stu-id="f9279-897">The delegate method to use when comparing elements</span></span>|  
|<span data-ttu-id="f9279-898">comparador</span><span class="sxs-lookup"><span data-stu-id="f9279-898">comparer</span></span>|<xref:System.Collections.Generic.IComparer%601>|<span data-ttu-id="f9279-899">O <xref:System.Collections.Generic.IComparer%601> implementação para usar ao comparar os elementos, ou null para usar o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default>.</span><span class="sxs-lookup"><span data-stu-id="f9279-899">The <xref:System.Collections.Generic.IComparer%601> implementation to use when comparing elements, or null to use the default comparer <xref:System.Collections.Generic.Comparer%601.Default>.</span></span>|  
|`index`|<xref:System.Int32>|<span data-ttu-id="f9279-900">O índice inicial baseado em zero do intervalo a ser classificado.</span><span class="sxs-lookup"><span data-stu-id="f9279-900">The zero-based starting index of the range to sort.</span></span>|  
|`count`|<xref:System.Int32>|<span data-ttu-id="f9279-901">O tamanho do intervalo a ser classificado.</span><span class="sxs-lookup"><span data-stu-id="f9279-901">The length of the range to sort.</span></span>|  
  
## <a name="exceptions"></a><span data-ttu-id="f9279-902">Exceções</span><span class="sxs-lookup"><span data-stu-id="f9279-902">Exceptions</span></span>  
  
|<span data-ttu-id="f9279-903">Exceção</span><span class="sxs-lookup"><span data-stu-id="f9279-903">Exception</span></span>|<span data-ttu-id="f9279-904">Condição</span><span class="sxs-lookup"><span data-stu-id="f9279-904">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="f9279-905">`comparer` não foi especificado ou `null`e o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> não é possível encontrar a implementação do <xref:System.IComparable%601?displayProperty=nameWithType> interface genérica ou <xref:System.IComparable?displayProperty=nameWithType> interface para o tipo T.</span><span class="sxs-lookup"><span data-stu-id="f9279-905">`comparer` is not specified or `null`, and the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> cannot find implementation of the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface or the <xref:System.IComparable?displayProperty=nameWithType> interface for type T.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="f9279-906">`comparison` é `null`.</span><span class="sxs-lookup"><span data-stu-id="f9279-906">`comparison` is `null`.</span></span>|  
|<xref:System.ArgumentException>|<span data-ttu-id="f9279-907">A implementação de `comparison` ou `comparer` causou um erro durante a classificação.</span><span class="sxs-lookup"><span data-stu-id="f9279-907">The implementation of `comparison` or `comparer` caused an error during the sort.</span></span> <span data-ttu-id="f9279-908">Por exemplo, `comparison` não pode retornar 0 ao comparar um item com ele próprio.</span><span class="sxs-lookup"><span data-stu-id="f9279-908">For example, `comparison` might not return 0 when comparing an item with itself.</span></span><br /><br /> <span data-ttu-id="f9279-909">- ou -</span><span class="sxs-lookup"><span data-stu-id="f9279-909">-or-</span></span><br /><br /> <span data-ttu-id="f9279-910">`index` e `count` não especificam um intervalo válido no <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="f9279-910">`index` and `count` do not specify a valid range in the <xref:System.Collections.Generic.List%601>.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="f9279-911">`index` é menor que 0 ou `count` é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="f9279-911">`index` is less than 0 or `count` is less than 0.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="list.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-912">Classifica os elementos em todo o <see cref="T:System.Collections.Generic.List`1" /> usando o comparador padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-912">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the default comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-913">Esse método usa o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> para tipo `T` para determinar a ordem dos elementos da lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-913">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="f9279-914">O <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verificações de propriedade se tipo `T` implementa o <xref:System.IComparable%601> interface genérica e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="f9279-914">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f9279-915">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-915">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f9279-916">Se tipo `T` não implementa a interface <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-916">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-917">Esse método usa o <xref:System.Array.Sort%2A?displayProperty=nameWithType> método, que se aplica a classificação introspectiva da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="f9279-917">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f9279-918">Se o tamanho da partição é menos do que 16 elementos, ele usa um algoritmo de classificação de inserção.</span><span class="sxs-lookup"><span data-stu-id="f9279-918">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="f9279-919">Se o número de partições exceder 2 log *n*, onde *n* é o intervalo da matriz de entrada, ele usa um algoritmo de Heapsort.</span><span class="sxs-lookup"><span data-stu-id="f9279-919">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="f9279-920">Caso contrário, ele usa um algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="f9279-920">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f9279-921">Esta implementação realiza uma classificação instável; ou seja, se dois elementos são iguais, a ordem não deve ser preservada.</span><span class="sxs-lookup"><span data-stu-id="f9279-921">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f9279-922">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-922">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f9279-923">Em média, esse método é um O (*n* log *n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>; no pior caso é um O (*n* <sup>2</sup>) operação.</span><span class="sxs-lookup"><span data-stu-id="f9279-923">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-924">O exemplo a seguir adiciona alguns nomes para um `List<String>` objeto, exibe a lista em ordem não classificado, chama o <xref:System.Collections.Generic.List%601.Sort%2A> método e, em seguida, exibe a lista classificada.</span><span class="sxs-lookup"><span data-stu-id="f9279-924">The following example adds some names to a `List<String>` object, displays the list in unsorted order, calls the <xref:System.Collections.Generic.List%601.Sort%2A> method, and then displays the sorted list.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/Sort1.cs#2)]
 [!code-vb[System.Collections.Generic.List.Sort#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/Sort1.vb#2)]  
  
 <span data-ttu-id="f9279-925">O código a seguir demonstra o <xref:System.Collections.Generic.List%601.Sort> e <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> sobrecargas de método em um objeto de negócios simples.</span><span class="sxs-lookup"><span data-stu-id="f9279-925">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort> and <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overloads on a simple business object.</span></span> <span data-ttu-id="f9279-926">Chamando o <xref:System.Collections.Generic.List%601.Sort> método resulta no uso do comparador padrão para o tipo de parte e o <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> método é implementado usando um método anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-926">Calling the <xref:System.Collections.Generic.List%601.Sort> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method is implemented by using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-927">O <xref:System.Collections.Generic.List%601.Sort> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> e  propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-927">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="f9279-928">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com quatro cadeias de caracteres, em nenhuma ordem específica.</span><span class="sxs-lookup"><span data-stu-id="f9279-928">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f9279-929">Este método determina igualdade usando o comparador de igualdade padrão, conforme definido pela implementação do objeto do  método para  (o tipo de valores na lista).</span><span class="sxs-lookup"><span data-stu-id="f9279-929">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="f9279-930">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> e <xref:System.Collections.Generic.List%601.Insert%2A> métodos em um  que contém um objeto de negócios simples que implementa .</span><span class="sxs-lookup"><span data-stu-id="f9279-930">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="f9279-931">O exemplo a seguir contém uma lista de objetos complexos do tipo <xref:System.Collections.Generic.List%601.BinarySearch%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-931">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%2A> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="f9279-932">O `Xor` classe implementa o  método para que os dois cubos são considerados iguais se suas dimensões forem iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-932">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="f9279-933">Neste exemplo, o  método retorna , pois um cubo com as dimensões especificadas já está na coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-933">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-934">O comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" /> não consegue encontrar uma implementação da interface genérica <see cref="T:System.IComparable`1" /> ou a interface <see cref="T:System.IComparable" /> para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-934">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="f9279-935">A implementação <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada na comparação de elementos ou <see langword="null" /> para usar o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-935">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-936">Classifica os elementos em todo o <see cref="T:System.Collections.Generic.List`1" /> usando o comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-936">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-937">Se `comparer` for fornecido, os elementos do <xref:System.Collections.Generic.List%601> são classificados usando especificado <xref:System.Collections.Generic.IComparer%601> implementação.</span><span class="sxs-lookup"><span data-stu-id="f9279-937">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f9279-938">Os elementos da atual `comparer` individualmente são passados para o `null` delegado e os elementos convertidos são salvos na nova <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-938">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f9279-939">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-939">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f9279-940">Se tipo `T` não implementa a interface <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-940">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-941">Esse método usa o <xref:System.Array.Sort%2A?displayProperty=nameWithType> método, que se aplica a classificação introspectiva da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="f9279-941">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f9279-942">Se o tamanho da partição é menos do que 16 elementos, ele usa um algoritmo de classificação de inserção.</span><span class="sxs-lookup"><span data-stu-id="f9279-942">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="f9279-943">Se o número de partições exceder 2 log *n*, onde *n* é o intervalo da matriz de entrada, ele usa um algoritmo de Heapsort.</span><span class="sxs-lookup"><span data-stu-id="f9279-943">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="f9279-944">Caso contrário, ele usa um algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="f9279-944">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f9279-945">Esta implementação realiza uma classificação instável; ou seja, se dois elementos são iguais, a ordem não deve ser preservada.</span><span class="sxs-lookup"><span data-stu-id="f9279-945">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f9279-946">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-946">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f9279-947">Em média, esse método é um O (*n* log *n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>; no pior caso é um O (*n* <sup>2</sup>) operação.</span><span class="sxs-lookup"><span data-stu-id="f9279-947">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-948">O <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> e  propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-948">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f9279-949">O exemplo a seguir define um método chamado `IComparer<string>` que converte um `IComparer(Of String)` estrutura para um `IComparer<String^>` estrutura.</span><span class="sxs-lookup"><span data-stu-id="f9279-949">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f9279-950">Um `null` de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-950">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f9279-951">Segundo, os comprimentos de cadeia de caracteres são comparados, e a cadeia de caracteres mais longa é considerada maior.</span><span class="sxs-lookup"><span data-stu-id="f9279-951">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f9279-952">Em terceiro lugar, se os tamanhos forem iguais, a comparação de cadeia de caracteres comum é usada.</span><span class="sxs-lookup"><span data-stu-id="f9279-952">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f9279-953">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com quatro cadeias de caracteres, em nenhuma ordem específica.</span><span class="sxs-lookup"><span data-stu-id="f9279-953">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f9279-954">Na primeira vez, ele procura a primeira  do objeto cuja  campo começa com "J"; pela segunda vez, ele procura a primeira  do objeto cuja  campo começa com "Ju".</span><span class="sxs-lookup"><span data-stu-id="f9279-954">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="f9279-955">O exemplo cria um <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> de objeto, adiciona um número de  objetos a ele e, em seguida, chama o  método duas vezes para pesquisar toda a coleção (ou seja, os membros do índice 0 para índice  - 1).</span><span class="sxs-lookup"><span data-stu-id="f9279-955">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="f9279-956">Os elementos da atual <xref:System.Collections.Generic.List%601.Insert%2A> individualmente são passados para o  delegado, mover para trás no , começando com o último elemento e terminando com o primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-956">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="f9279-957">Esses dois métodos estão localizados na função nomeada `SearchAndInsert`, junto com o código para levar o complemento bit a bit (o ~ operador em c# e Visual C++, `Xor` -1 no Visual Basic) do número negativo retornado por <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> e usá-lo como um índice para Inserir nova cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-957">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-958">
            <paramref name="comparer" /> é <see langword="null" />, e o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" /> não pode encontrar a implementação da interface genérica <see cref="T:System.IComparable`1" /> ou da interface <see cref="T:System.IComparable" /> para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-958">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-959">A implementação de <paramref name="comparer" /> causou um erro durante a classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-959">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="f9279-960">Por exemplo, <paramref name="comparer" /> não pode retornar 0 ao comparar um item com ele próprio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-960">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="member this.Sort : Comparison&lt;'T&gt; -&gt; unit" Usage="list.Sort comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="f9279-961">O <see cref="T:System.Comparison`1" /> a ser usado na comparação de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-961">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-962">Classifica os elementos em todo o <see cref="T:System.Collections.Generic.List`1" /> usando o <see cref="T:System.Comparison`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-962">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-963">Se `comparison` for fornecido, os elementos de <xref:System.Collections.Generic.List%601> são classificados usando o método representado pelo delegado.</span><span class="sxs-lookup"><span data-stu-id="f9279-963">If `comparison` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the method represented by the delegate.</span></span>  
  
 <span data-ttu-id="f9279-964">Se `comparison` é `null`, uma <xref:System.ArgumentNullException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="f9279-964">If `comparison` is `null`, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="f9279-965">Esse método usa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, que se aplica a classificação introspectiva da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="f9279-965">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f9279-966">Se o tamanho da partição é menos do que 16 elementos, ele usa um algoritmo de classificação de inserção</span><span class="sxs-lookup"><span data-stu-id="f9279-966">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="f9279-967">Se o número de partições exceder 2 log *n*, onde *n* é o intervalo da matriz de entrada, ele usa um [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="f9279-967">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="f9279-968">Caso contrário, ele usa um algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="f9279-968">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f9279-969">Esta implementação realiza uma classificação instável; ou seja, se dois elementos são iguais, a ordem não deve ser preservada.</span><span class="sxs-lookup"><span data-stu-id="f9279-969">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f9279-970">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-970">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f9279-971">Em média, esse método é um O (*n* log *n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>; no pior caso é um O (*n* <sup>2</sup>) operação.</span><span class="sxs-lookup"><span data-stu-id="f9279-971">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-972">O código a seguir demonstra o <xref:System.Collections.Generic.List%601.Sort%2A> e <xref:System.Collections.Generic.List%601.Sort%2A> sobrecargas de método em um objeto de negócios simples.</span><span class="sxs-lookup"><span data-stu-id="f9279-972">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> method overloads on a simple business object.</span></span> <span data-ttu-id="f9279-973">Chamando o <xref:System.Collections.Generic.List%601.Sort%2A> método resulta no uso do comparador padrão para o tipo de parte e o <xref:System.Collections.Generic.List%601.Sort%2A> método é implementado usando um método anônimo.</span><span class="sxs-lookup"><span data-stu-id="f9279-973">Calling the <xref:System.Collections.Generic.List%601.Sort%2A> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%2A> method is implemented using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-974">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="f9279-974">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f9279-975">O exemplo define um método alternativo de comparação para cadeias de caracteres, denominado `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="f9279-975">The example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="f9279-976">Esse método funciona da seguinte maneira: primeiro, os termos de comparação são testados para `null`, e uma referência nula é tratada como menor que não null.</span><span class="sxs-lookup"><span data-stu-id="f9279-976">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f9279-977">Segundo, os comprimentos de cadeia de caracteres são comparados, e a cadeia de caracteres mais longa é considerada maior.</span><span class="sxs-lookup"><span data-stu-id="f9279-977">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f9279-978">Em terceiro lugar, se os tamanhos forem iguais, a comparação de cadeia de caracteres comum é usada.</span><span class="sxs-lookup"><span data-stu-id="f9279-978">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f9279-979">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com quatro cadeias de caracteres, em nenhuma ordem específica.</span><span class="sxs-lookup"><span data-stu-id="f9279-979">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="f9279-980">A lista também inclui uma cadeia de caracteres vazia e uma referência nula.</span><span class="sxs-lookup"><span data-stu-id="f9279-980">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="f9279-981">A lista é exibida, classificados usando um <xref:System.Comparison%601> delegado genérico que representa o `CompareDinosByLength` método e exibida novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-981">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-982">
            <paramref name="comparison" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-982">
              <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-983">A implementação de <paramref name="comparison" /> causou um erro durante a classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-983">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="f9279-984">Por exemplo, <paramref name="comparison" /> não pode retornar 0 ao comparar um item com ele próprio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-984">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <altmember cref="T:System.Comparison`1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-985">O índice inicial baseado em zero do intervalo a ser classificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-985">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f9279-986">O tamanho do intervalo a ser classificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-986">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="f9279-987">A implementação <see cref="T:System.Collections.Generic.IComparer`1" /> a ser usada na comparação de elementos ou <see langword="null" /> para usar o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-987">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-988">Classifica os elementos em um intervalo de elementos em <see cref="T:System.Collections.Generic.List`1" /> usando o comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-988">Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-989">Se `comparer` for fornecido, os elementos do <xref:System.Collections.Generic.List%601> são classificados usando especificado <xref:System.Collections.Generic.IComparer%601> implementação.</span><span class="sxs-lookup"><span data-stu-id="f9279-989">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="f9279-990">Os elementos da atual `comparer` individualmente são passados para o `null` delegado e os elementos convertidos são salvos na nova <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9279-990">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="f9279-991">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa o <xref:System.IComparable> interface.</span><span class="sxs-lookup"><span data-stu-id="f9279-991">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="f9279-992">Se tipo `T` não implementa a interface <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-992">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-993">Esse método usa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, que se aplica a classificação introspectiva da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="f9279-993">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="f9279-994">Se o tamanho da partição é menos do que 16 elementos, ele usa um algoritmo de classificação de inserção</span><span class="sxs-lookup"><span data-stu-id="f9279-994">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="f9279-995">Se o número de partições exceder 2 log *n*, onde *n* é o intervalo da matriz de entrada, ele usa um [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algoritmo.</span><span class="sxs-lookup"><span data-stu-id="f9279-995">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="f9279-996">Caso contrário, ele usa um algoritmo Quicksort.</span><span class="sxs-lookup"><span data-stu-id="f9279-996">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="f9279-997">Esta implementação realiza uma classificação instável; ou seja, se dois elementos são iguais, a ordem não deve ser preservada.</span><span class="sxs-lookup"><span data-stu-id="f9279-997">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="f9279-998">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="f9279-998">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="f9279-999">Em média, esse método é um O (*n* log *n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>; no pior caso é um O (*n* <sup>2</sup>) operação.</span><span class="sxs-lookup"><span data-stu-id="f9279-999">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-1000">O <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> método é usado no final do programa, para remover todos os itens da lista e o <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> e  propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-1000">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="f9279-1001">O exemplo a seguir define um método chamado `IComparer<string>` que converte um `IComparer(Of String)` estrutura para um `IComparer<String^>` estrutura.</span><span class="sxs-lookup"><span data-stu-id="f9279-1001">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="f9279-1002">Um `null` de cadeias de caracteres é criada e preenchida com 5 cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-1002">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="f9279-1003">Segundo, os comprimentos de cadeia de caracteres são comparados, e a cadeia de caracteres mais longa é considerada maior.</span><span class="sxs-lookup"><span data-stu-id="f9279-1003">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="f9279-1004">Em terceiro lugar, se os tamanhos forem iguais, a comparação de cadeia de caracteres comum é usada.</span><span class="sxs-lookup"><span data-stu-id="f9279-1004">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="f9279-1005">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criada e preenchida com os nomes de cinco dinossauros herbivorous e três dinossauros carnivorous.</span><span class="sxs-lookup"><span data-stu-id="f9279-1005">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="f9279-1006">Em cada um dos dois grupos, os nomes não estão em qualquer ordem de classificação específico.</span><span class="sxs-lookup"><span data-stu-id="f9279-1006">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="f9279-1007">A lista é exibida, o intervalo de herbivores é classificado usando o comparador alternativo e a lista é exibida novamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-1007">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="f9279-1008">O <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> sobrecarga do método é usada para pesquisar somente o intervalo de herbivores "Brachiosaurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-1008">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="f9279-1009">A cadeia de caracteres não for encontrada e o complemento bit a bit (o ~ operador em c# e Visual C++, `Xor` -1 no Visual Basic) do número negativo retornado pelo <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> método é usado como um índice para inserir a nova cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-1009">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-1010">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1010">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="f9279-1011">-ou-  <paramref name="count" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1011">-or-  <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1012">
            <paramref name="index" /> e <paramref name="count" /> não especificam um intervalo válido no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1012">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="f9279-1013">-ou-  A implementação de <paramref name="comparer" /> causou um erro durante a classificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1013">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="f9279-1014">Por exemplo, <paramref name="comparer" /> não pode retornar 0 ao comparar um item com ele próprio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1014">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9279-1015">
            <paramref name="comparer" /> é <see langword="null" />, e o comparador padrão <see cref="P:System.Collections.Generic.Comparer`1.Default" /> não pode encontrar a implementação da interface genérica <see cref="T:System.IComparable`1" /> ou da interface <see cref="T:System.IComparable" /> para o tipo <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1015">
              <paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1016">Obtém um valor que indica se o <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1016">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-1017">
            <see langword="true" /> se o <see cref="T:System.Collections.Generic.ICollection`1" /> for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1017">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9279-1018">Na implementação padrão de <see cref="T:System.Collections.Generic.List`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1018">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1019">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="f9279-1019">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f9279-1020">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="f9279-1020">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f9279-1021">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1021">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1022">Retorna um enumerador que itera em uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1022">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1023">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1023">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1024">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="f9279-1024">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f9279-1025">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="f9279-1025">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f9279-1026">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="f9279-1026">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f9279-1027">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-1027">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f9279-1028">Nesta posição, o <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="f9279-1028">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="f9279-1029">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1029">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="f9279-1030">O <xref:System.Collections.Generic.IEnumerator%601.Current%2A> propriedade retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="f9279-1030">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f9279-1031"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-1031"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f9279-1032">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-1032">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f9279-1033">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-1033">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f9279-1034">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="f9279-1034">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="f9279-1035">Não é possível definir <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="f9279-1035">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f9279-1036">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="f9279-1036">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f9279-1037">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1037">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-1038">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="f9279-1038">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f9279-1039">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="f9279-1039">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9279-1040">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="f9279-1040">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9279-1041">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-1041">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9279-1042">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1042">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f9279-1043">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1043">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="f9279-1044">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1044">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="f9279-1045">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1045">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1046">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1046">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9279-1047">Se o tipo da fonte de <xref:System.Collections.ICollection> não pode ser convertido automaticamente para o tipo de destino `array`, as implementações não genéricas de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> gerar <xref:System.InvalidCastException>, enquanto as implementações genéricas lançam <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1047">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="f9279-1048">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1048">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-1049">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1049">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-1050">
            <paramref name="arrayIndex" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1050">
              <paramref name="arrayIndex" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1051">
            <paramref name="array" /> é multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1051">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="f9279-1052">-ou- <paramref name="array" /> não tem indexação baseada em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1052">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="f9279-1053">-ou- O número de elementos na <see cref="T:System.Collections.ICollection" /> de origem é maior que o espaço disponível de <paramref name="arrayIndex" /> até o final da <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1053">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="f9279-1054">-ou- O tipo da <see cref="T:System.Collections.ICollection" /> de origem não pode ser convertido automaticamente no tipo da <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1054">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1055">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1055">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-1056">
            <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1056">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9279-1057">Na implementação padrão de <see cref="T:System.Collections.Generic.List`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1057">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1058">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-1058">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9279-1059">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="f9279-1059">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f9279-1060">Em casos raros em que a enumeração afirma com acessos de gravação, você pode bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="f9279-1060">In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9279-1061">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="f9279-1061">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9279-1062"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1062"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f9279-1063">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-1063">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="f9279-1064">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1064">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1065">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1065">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-1066">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1066">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="f9279-1067">Na implementação padrão da <see cref="T:System.Collections.Generic.List`1" />, essa propriedade sempre retorna a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1067">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1068">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-1068">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9279-1069">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="f9279-1069">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f9279-1070">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="f9279-1070">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9279-1071">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="f9279-1071">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9279-1072"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto que pode ser usado para sincronizar o acesso a <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1072"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f9279-1073">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-1073">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="f9279-1074">O código a seguir mostra o uso do <xref:System.Collections.ICollection.SyncRoot%2A> propriedade para c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f9279-1074">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="f9279-1075">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1075">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1076">Retorna um enumerador que itera em uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1076">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1077">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1077">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1078">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="f9279-1078">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f9279-1079">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="f9279-1079">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f9279-1080">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="f9279-1080">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f9279-1081">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-1081">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f9279-1082"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="f9279-1082"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="f9279-1083">Nesta posição, o <xref:System.Collections.IEnumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="f9279-1083">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="f9279-1084">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1084">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f9279-1085">O <xref:System.Collections.IEnumerator.Current%2A> propriedade retorna o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="f9279-1085">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f9279-1086"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-1086"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f9279-1087">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-1087">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f9279-1088">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-1088">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f9279-1089">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="f9279-1089">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f9279-1090">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1090">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f9279-1091">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="f9279-1091">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f9279-1092">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1092">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9279-1093">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="f9279-1093">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f9279-1094">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="f9279-1094">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9279-1095">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="f9279-1095">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9279-1096">As implementações padrão de coleções no namespace <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="f9279-1096">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9279-1097">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1097">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-1098">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1098">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1099">Adiciona um item ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1099">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1100">A posição na qual o novo elemento foi inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1100">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1101">Se <xref:System.Collections.Generic.List%601.Count%2A> é menor que <xref:System.Collections.Generic.List%601.Capacity%2A>, esse método é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1101">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="f9279-1102">Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1102">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1103">O <paramref name="item" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1103">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-1104">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1104">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1105">Determinará se o <see cref="T:System.Collections.IList" /> contiver um valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1105">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1106">
            <see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1106">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1107">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-1107">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-1108">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1108">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-1109">O objeto a ser localizado no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1109">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1110">Determina o índice de um item específico em <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1110">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1111">O índice de <paramref name="item" /> se encontrado na lista; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1111">The index of <paramref name="item" /> if found in the list; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1112">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-1112">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-1113">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1113">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1114">O <paramref name="item" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1114">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-1115">O índice baseado em zero no qual o <c>item</c> deve ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1115">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f9279-1116">O objeto a ser inserido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1116">The object to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1117">Insere um item na <see cref="T:System.Collections.IList" /> no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1117">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1118">Se `index` é igual ao número de itens no <xref:System.Collections.IList>, em seguida, `item` é acrescentado ao final.</span><span class="sxs-lookup"><span data-stu-id="f9279-1118">If `index` equals the number of items in the <xref:System.Collections.IList>, then `item` is appended to the end.</span></span>  
  
 <span data-ttu-id="f9279-1119">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1119">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-1120">
            <paramref name="index" /> não é um índice válido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1120">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1121">O <paramref name="item" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1121">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1122">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1122">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-1123">
            <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1123">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9279-1124">Na implementação padrão de <see cref="T:System.Collections.Generic.List`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1124">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1125">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="f9279-1125">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="f9279-1126">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="f9279-1126">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f9279-1127">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1127">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1128">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1128">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-1129">
            <see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1129">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9279-1130">Na implementação padrão de <see cref="T:System.Collections.Generic.List`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1130">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1131">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="f9279-1131">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f9279-1132">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="f9279-1132">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f9279-1133">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1133">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.List&lt;'T&gt;.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f9279-1134">O índice com base em zero do elemento a ser obtido ou definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1134">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1135">Obtém ou define o elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1135">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9279-1136">O elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1136">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1137">A linguagem c# usa o [isso](~/docs/csharp/language-reference/keywords/this.md) palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9279-1137">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="f9279-1138">Visual Basic implementa <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="f9279-1138">Visual Basic implements <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="f9279-1139">Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="f9279-1139">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9279-1140">
            <paramref name="index" /> não é um índice válido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1140">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1141">A propriedade é definida e <paramref name="value" /> é de um tipo que não é atribuível ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1141">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="f9279-1142">O objeto a remover do <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1142">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1143">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1143">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1144">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo de valores na lista.</span><span class="sxs-lookup"><span data-stu-id="f9279-1144">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f9279-1145">Esse método executa uma pesquisa linear; Portanto, esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1145">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9279-1146">O <paramref name="item" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1146">
              <paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="list.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1147">Copia os elementos do <see cref="T:System.Collections.Generic.List`1" /> em uma nova matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1147">Copies the elements of the <see cref="T:System.Collections.Generic.List`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1148">Uma matriz que contém cópias dos elementos do <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1148">An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1149">Os elementos são copiados usando <xref:System.Array.Copy%2A?displayProperty=nameWithType>, que é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1149">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f9279-1150">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1150">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-1151">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.ToArray%2A> método e outros métodos para o <xref:System.Collections.Generic.List%601> classe que atuam em intervalos.</span><span class="sxs-lookup"><span data-stu-id="f9279-1151">The following example demonstrates the <xref:System.Collections.Generic.List%601.ToArray%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="f9279-1152">No final do exemplo, o <xref:System.Collections.Generic.List%601.GetRange%2A> método é usado para obter três itens na lista, começando com o local do índice 2.</span><span class="sxs-lookup"><span data-stu-id="f9279-1152">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="f9279-1153">O <xref:System.Collections.Generic.List%601.ToArray%2A> método é chamado em resultante <xref:System.Collections.Generic.List%601>, criando uma matriz de três elementos.</span><span class="sxs-lookup"><span data-stu-id="f9279-1153">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="f9279-1154">Os elementos da matriz são exibidos.</span><span class="sxs-lookup"><span data-stu-id="f9279-1154">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="list.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9279-1155">Define a capacidade para o número real de elementos de <see cref="T:System.Collections.Generic.List`1" />, se esse número for menor que um valor limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1155">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1" />, if that number is less than a threshold value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1156">Esse método pode ser usado para minimizar a memória da coleção sobrecarga se nenhum elemento novo será adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="f9279-1156">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="f9279-1157">O custo de realocar e copiar uma grande <xref:System.Collections.Generic.List%601> pode ser considerável, no entanto, para que o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método não fará nada se a lista estiver em mais de 90% da capacidade.</span><span class="sxs-lookup"><span data-stu-id="f9279-1157">The cost of reallocating and copying a large <xref:System.Collections.Generic.List%601> can be considerable, however, so the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="f9279-1158">Isso evita a incorrer em um custo de realocação grande para um ganho relativamente pequeno.</span><span class="sxs-lookup"><span data-stu-id="f9279-1158">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9279-1159">O limite atual de 90 por cento pode mudar em versões futuras.</span><span class="sxs-lookup"><span data-stu-id="f9279-1159">The current threshold of 90 percent might change in future releases.</span></span>  
  
 <span data-ttu-id="f9279-1160">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1160">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f9279-1161">Para redefinir um <xref:System.Collections.Generic.List%601> para seu estado inicial, chame o <xref:System.Collections.Generic.List%601.Clear%2A> método antes de chamar o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-1161">To reset a <xref:System.Collections.Generic.List%601> to its initial state, call the <xref:System.Collections.Generic.List%601.Clear%2A> method before calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="f9279-1162">Cortar vazio <xref:System.Collections.Generic.List%601> define a capacidade do <xref:System.Collections.Generic.List%601> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="f9279-1162">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="f9279-1163">A capacidade também pode ser definida usando o <xref:System.Collections.Generic.List%601.Capacity%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f9279-1163">The capacity can also be set using the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-1164">O exemplo a seguir demonstra como verificar a capacidade e a contagem de um <xref:System.Collections.Generic.List%601> que contém um objeto de negócios simples e ilustra o uso de <xref:System.Collections.Generic.List%601.TrimExcess%2A> método para remover uma capacidade extra.</span><span class="sxs-lookup"><span data-stu-id="f9279-1164">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="f9279-1165">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f9279-1165">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="f9279-1166">Várias propriedades e métodos para o <xref:System.Collections.Generic.List%601> classe são usados para adicionar, inserir e remover itens de uma lista de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f9279-1166">Several properties and methods of the <xref:System.Collections.Generic.List%601> class are used to add, insert, and remove items from a list of strings.</span></span> <span data-ttu-id="f9279-1167">Em seguida, o <xref:System.Collections.Generic.List%601.TrimExcess%2A> método é usado para reduzir a capacidade de corresponder à contagem e o <xref:System.Collections.Generic.List%601.Capacity%2A> e <xref:System.Collections.Generic.List%601.Count%2A> propriedades são exibidas.</span><span class="sxs-lookup"><span data-stu-id="f9279-1167">Then the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="f9279-1168">Se a capacidade não utilizada tivesse sido menos de 10% da capacidade total, a lista seria não foram redimensionada.</span><span class="sxs-lookup"><span data-stu-id="f9279-1168">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span> <span data-ttu-id="f9279-1169">Por fim, o conteúdo da lista é desmarcado.</span><span class="sxs-lookup"><span data-stu-id="f9279-1169">Finally, the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Clear" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.TrueForAll : Predicate&lt;'T&gt; -&gt; bool" Usage="list.TrueForAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="f9279-1170">O delegado <see cref="T:System.Predicate`1" /> que define as condições a serem verificadas nos elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1170">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9279-1171">Determina se cada elemento do <see cref="T:System.Collections.Generic.List`1" /> corresponde às condições definidas pelo predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1171">Determines whether every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9279-1172">
            <see langword="true" /> se cada elemento do <see cref="T:System.Collections.Generic.List`1" /> corresponder às condições definidas pelo predicado especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1172">
              <see langword="true" /> if every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9279-1173">Se a lista não tiver elementos, o valor retornado será <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1173">If the list has no elements, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9279-1174">O <xref:System.Predicate%601> é um representante para um método que retorna `true` caso o objeto passado para ele corresponda às condições definidas no representante.</span><span class="sxs-lookup"><span data-stu-id="f9279-1174">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="f9279-1175">Os elementos da atual <xref:System.Collections.Generic.List%601> individualmente são passados para o <xref:System.Predicate%601> delegado e o processamento é interrompido quando o delegado retorna `false` para qualquer elemento.</span><span class="sxs-lookup"><span data-stu-id="f9279-1175">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when the delegate returns `false` for any element.</span></span> <span data-ttu-id="f9279-1176">Os elementos são processados em ordem, e todas as chamadas são feitas em um único thread.</span><span class="sxs-lookup"><span data-stu-id="f9279-1176">The elements are processed in order, and all calls are made on a single thread.</span></span>  
  
 <span data-ttu-id="f9279-1177">Esse método é um O (*n*) operação, onde *n* é <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9279-1177">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9279-1178">O exemplo a seguir demonstra o <xref:System.Collections.Generic.List%601.TrueForAll%2A> método e vários outros métodos que usam <xref:System.Predicate%601> delegado genérico.</span><span class="sxs-lookup"><span data-stu-id="f9279-1178">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrueForAll%2A> method and several other methods that use <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="f9279-1179">Um <xref:System.Collections.Generic.List%601> de cadeias de caracteres é criado, que contém nomes de dinossauro 8, dois deles (em posições 1 e 5) terminam com "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-1179">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="f9279-1180">O exemplo também define um método de predicado de pesquisa denominado `EndsWithSaurus`, que aceita um parâmetro de cadeia de caracteres e retorna um valor booleano um valor que indica se a cadeia de caracteres de entrada termina em "saurus".</span><span class="sxs-lookup"><span data-stu-id="f9279-1180">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="f9279-1181">O <xref:System.Collections.Generic.List%601.TrueForAll%2A> método percorre a lista desde o início, passando a cada elemento sucessivamente para o `EndsWithSaurus` método.</span><span class="sxs-lookup"><span data-stu-id="f9279-1181">The <xref:System.Collections.Generic.List%601.TrueForAll%2A> method traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="f9279-1182">A pesquisa é interrompida quando o `EndsWithSaurus` método retornará `false`.</span><span class="sxs-lookup"><span data-stu-id="f9279-1182">The search stops when the `EndsWithSaurus` method returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9279-1183">No C# e no Visual Basic, não é necessário criar o representante `Predicate<string>` (`Predicate(Of String)` no Visual Basic) explicitamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-1183">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="f9279-1184">Essas linguagens inferem o representante correto pelo contexto e criam-no automaticamente.</span><span class="sxs-lookup"><span data-stu-id="f9279-1184">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9279-1185">
            <paramref name="match" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9279-1185">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>