<Type Name="EventRecordWrittenEventArgs" FullName="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4d0fc36b68637a02fb2a9317c42b1a216b4c197" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39752119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventRecordWrittenEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRecordWrittenEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRecordWrittenEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRecordWrittenEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type EventRecordWrittenEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e8d09-101">Quando o <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> é acionado, uma instância do objeto é passada para o método de delegado que manipula o evento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8d09-101">When the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised, an instance of this object is passed to the delegate method that handles the event.</span>
      </span>
      <span data-ttu-id="e8d09-102">Este objeto contém o evento que foi publicado para o log de eventos ou a exceção que ocorreu quando a assinatura do evento falhou.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8d09-102">This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8d09-103">Por exemplo de código usando essa classe, consulte [como: assinar eventos em um Log de eventos](http://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span><span class="sxs-lookup"><span data-stu-id="e8d09-103">For example code using this class, see [How to: Subscribe to Events in an Event Log](http://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EventException">
      <MemberSignature Language="C#" Value="public Exception EventException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception EventException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ EventException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventException : Exception" Usage="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d09-104">Obtém a exceção que ocorreu quando a assinatura do evento falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d09-104">Gets the exception that occurred when the event subscription failed.</span>
          </span>
          <span data-ttu-id="e8d09-105">A exceção contém uma descrição do motivo pelo qual a assinatura falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d09-105">The exception has a description of why the subscription failed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d09-106">Retorna um objeto <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d09-106">Returns an <see cref="T:System.Exception" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventRecord">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventRecord EventRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventRecord EventRecord" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventRecord As EventRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventRecord ^ EventRecord { System::Diagnostics::Eventing::Reader::EventRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventRecord : System.Diagnostics.Eventing.Reader.EventRecord" Usage="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8d09-107">Obtém o registro de evento que é publicado para o log de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d09-107">Gets the event record that is published to the event log.</span>
          </span>
          <span data-ttu-id="e8d09-108">Esse evento corresponde aos critérios da consulta especificada na assinatura do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d09-108">This event matches the criteria from the query specified in the event subscription.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8d09-109">Retorna um objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8d09-109">Returns a <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>