<Type Name="EventLogMode" FullName="System.Diagnostics.Eventing.Reader.EventLogMode">
  <TypeSignature Language="C#" Value="public enum EventLogMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventLogMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventLogMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventLogMode" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="3057a-101">Determina o comportamento do serviço de log de eventos que manipula um log de eventos quando o log atingir seu tamanho máximo permitido (quando o log de eventos estiver cheio).</span><span class="sxs-lookup"><span data-stu-id="3057a-101">Determines the behavior for the event log service handles an event log when the log reaches its maximum allowed size (when the event log is full).</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoBackup">
      <MemberSignature Language="C#" Value="AutoBackup" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Eventing.Reader.EventLogMode AutoBackup = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup" />
      <MemberSignature Language="VB.NET" Value="AutoBackup" />
      <MemberSignature Language="C++ CLI" Value="AutoBackup" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3057a-102">Arquive o log quando estiver cheio, não substitua os eventos.</span><span class="sxs-lookup"><span data-stu-id="3057a-102">Archive the log when full, do not overwrite events.</span></span> <span data-ttu-id="3057a-103">O log será arquivado automaticamente quando necessário.</span><span class="sxs-lookup"><span data-stu-id="3057a-103">The log is automatically archived when necessary.</span></span> <span data-ttu-id="3057a-104">Nenhum evento foi substituído.</span><span class="sxs-lookup"><span data-stu-id="3057a-104">No events are overwritten.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Circular">
      <MemberSignature Language="C#" Value="Circular" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Eventing.Reader.EventLogMode Circular = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular" />
      <MemberSignature Language="VB.NET" Value="Circular" />
      <MemberSignature Language="C++ CLI" Value="Circular" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3057a-105">Novos eventos continuam a ser armazenados quando o arquivo de log está cheio.</span><span class="sxs-lookup"><span data-stu-id="3057a-105">New events continue to be stored when the log file is full.</span></span> <span data-ttu-id="3057a-106">Cada novo evento de entrada substitui o evento mais antigo no log.</span><span class="sxs-lookup"><span data-stu-id="3057a-106">Each new incoming event replaces the oldest event in the log.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Retain">
      <MemberSignature Language="C#" Value="Retain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Eventing.Reader.EventLogMode Retain = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain" />
      <MemberSignature Language="VB.NET" Value="Retain" />
      <MemberSignature Language="C++ CLI" Value="Retain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3057a-107">Não substitua eventos.</span><span class="sxs-lookup"><span data-stu-id="3057a-107">Do not overwrite events.</span></span> <span data-ttu-id="3057a-108">Limpe o log manualmente em vez de automaticamente.</span><span class="sxs-lookup"><span data-stu-id="3057a-108">Clear the log manually rather than automatically.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>