<Type Name="ProviderMetadata" FullName="System.Diagnostics.Eventing.Reader.ProviderMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4336c6b55fbb453874d0e68469d0c783d4914a01" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37665780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProviderMetadata : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProviderMetadata extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProviderMetadata&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderMetadata : IDisposable" />
  <TypeSignature Language="F#" Value="type ProviderMetadata = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="00e89-101">Contém informações estáticas sobre um provedor de eventos, como o nome e a ID do provedor e a coleção de eventos definida no provedor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="00e89-101">Contains static information about an event provider, such as the name and id of the provider, and the collection of events defined in the provider.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00e89-102">Por exemplo de código usando essa classe, consulte [como: recuperar informações sobre um publicador do evento](http://msdn.microsoft.com/library/2a3e897f-25a9-4dad-8541-171ac49970a3).</span><span class="sxs-lookup"><span data-stu-id="00e89-102">For example code using this class, see [How to: Retrieve Information About an Event Publisher](http://msdn.microsoft.com/library/2a3e897f-25a9-4dad-8541-171ac49970a3).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-103">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-103">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderMetadata (string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderMetadata(System::String ^ providerName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.ProviderMetadata : string -&gt; System.Diagnostics.Eventing.Reader.ProviderMetadata" Usage="new System.Diagnostics.Eventing.Reader.ProviderMetadata providerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">
          <span data-ttu-id="00e89-104">O nome do provedor de eventos sobre o qual você deseja recuperar informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-104">The name of the event provider that you want to retrieve information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00e89-105">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> especificando o nome do provedor sobre o qual você deseja recuperar informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-105">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> class by specifying the name of the provider that you want to retrieve information about.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderMetadata (string providerName, System.Diagnostics.Eventing.Reader.EventLogSession session, System.Globalization.CultureInfo targetCultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Diagnostics.Eventing.Reader.EventLogSession session, class System.Globalization.CultureInfo targetCultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, session As EventLogSession, targetCultureInfo As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderMetadata(System::String ^ providerName, System::Diagnostics::Eventing::Reader::EventLogSession ^ session, System::Globalization::CultureInfo ^ targetCultureInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.ProviderMetadata : string * System.Diagnostics.Eventing.Reader.EventLogSession * System.Globalization.CultureInfo -&gt; System.Diagnostics.Eventing.Reader.ProviderMetadata" Usage="new System.Diagnostics.Eventing.Reader.ProviderMetadata (providerName, session, targetCultureInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" />
        <Parameter Name="targetCultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="providerName">
          <span data-ttu-id="00e89-106">O nome do provedor de eventos sobre o qual você deseja recuperar informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-106">The name of the event provider that you want to retrieve information about.</span>
          </span>
        </param>
        <param name="session">
          <span data-ttu-id="00e89-107">O objeto <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> que especifica se as informações do provedor devem ser obtidas de um provedor no computador local ou de um provedor em um computador remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-107">The <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object that specifies whether to get the provider information from a provider on the local computer or a provider on a remote computer.</span>
          </span>
        </param>
        <param name="targetCultureInfo">
          <span data-ttu-id="00e89-108">A cultura que especifica o idioma no qual as informações devem ser retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-108">The culture that specifies the language that the information should be returned in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00e89-109">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> especificando o nome do provedor sobre o qual você deseja recuperar informações, o serviço de log de eventos no qual o provedor está registrado e o idioma no qual você deseja retornar as informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-109">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> class by specifying the name of the provider that you want to retrieve information about, the event log service that the provider is registered with, and the language that you want to return the information in.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-110">Obtém o nome localizado do provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-110">Gets the localized name of the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-111">Retorna uma cadeia de caracteres que contém o nome localizado do provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-111">Returns a string that contains the localized name of the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-112">Libera os recursos usados por este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-112">Releases the resources used by this object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="providerMetadata.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00e89-113">Libera todos os recursos usados por este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-113">Releases all the resources used by this object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="providerMetadata.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="00e89-114">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-114">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00e89-115">Libera os recursos não gerenciados usados por este objeto e, opcionalmente, libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-115">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Eventing.Reader.EventMetadata&gt; Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Eventing.Reader.EventMetadata&gt; Events" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Events As IEnumerable(Of EventMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Eventing::Reader::EventMetadata ^&gt; ^ Events { System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Eventing::Reader::EventMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : seq&lt;System.Diagnostics.Eventing.Reader.EventMetadata&gt;" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Eventing.Reader.EventMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-116">Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> e cada um deles representa um evento definido no provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-116">Gets an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> objects, each of which represents an event that is defined in the provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-117">Retorna uma coleção enumerável de <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-117">Returns an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public Uri HelpLink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpLink As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HelpLink { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : Uri" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-118">Obtém a base da URL usada para formar solicitações de ajuda para os eventos neste provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-118">Gets the base of the URL used to form help requests for the events in this event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-119">Retorna um valor <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-119">Returns a <see cref="T:System.Uri" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-120">Obtém o GUID (identificador global exclusivo) do provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-120">Gets the globally unique identifier (GUID) for the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-121">Retorna o valor GUID do provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-121">Returns the GUID value for the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventKeyword&gt; Keywords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventKeyword&gt; Keywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keywords As IList(Of EventKeyword)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventKeyword ^&gt; ^ Keywords { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventKeyword ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keywords : System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventKeyword&gt;" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventKeyword&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-122">Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> e cada um deles representa uma palavra-chave de evento definida no provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-122">Gets an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> objects, each of which represent an event keyword that is defined in the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-123">Retorna uma coleção enumerável de <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-123">Returns an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Levels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLevel&gt; Levels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventLevel&gt; Levels" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Levels As IList(Of EventLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventLevel ^&gt; ^ Levels { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventLevel ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Levels : System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLevel&gt;" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-124">Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> e cada um deles representa um nível definido no provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-124">Gets an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> objects, each of which represent a level that is defined in the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-125">Retorna uma coleção enumerável de <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-125">Returns an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLogLink&gt; LogLinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventLogLink&gt; LogLinks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLinks As IList(Of EventLogLink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventLogLink ^&gt; ^ LogLinks { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventLogLink ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogLinks : System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLogLink&gt;" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventLogLink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-126">Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> e cada um deles representa um link para um log de eventos que é usado pelo provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-126">Gets an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> objects, each of which represent a link to an event log that is used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-127">Retorna uma coleção enumerável de <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-127">Returns an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilePath">
      <MemberSignature Language="C#" Value="public string MessageFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageFilePath : string" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-128">Obtém o caminho do arquivo que contém o recurso de tabela de mensagens que contém as cadeias de caracteres associadas aos metadados do provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-128">Gets the path of the file that contains the message table resource that has the strings associated with the provider metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-129">Retorna uma cadeia de caracteres que contém o caminho do provedor de arquivo de mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-129">Returns a string that contains the path of the provider message file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-130">Obtém o nome exclusivo do provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-130">Gets the unique name of the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-131">Retorna uma cadeia de caracteres que contém o nome exclusivo do provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-131">Returns a string that contains the unique name of the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opcodes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventOpcode&gt; Opcodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventOpcode&gt; Opcodes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Opcodes As IList(Of EventOpcode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventOpcode ^&gt; ^ Opcodes { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventOpcode ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Opcodes : System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventOpcode&gt;" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventOpcode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-132">Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> e cada um deles representa um opcode definido no provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-132">Gets an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> objects, each of which represent an opcode that is defined in the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-133">Retorna uma coleção enumerável de <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-133">Returns an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterFilePath">
      <MemberSignature Language="C#" Value="public string ParameterFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterFilePath : string" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-134">Obtém o caminho do arquivo que contém o recurso de tabela de mensagem que contém as cadeias de caracteres usadas para substituições de parâmetro nas descrições de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-134">Gets the path of the file that contains the message table resource that has the strings used for parameter substitutions in event descriptions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-135">Retorna uma cadeia de caracteres que contém o caminho do arquivo que contém o recurso de tabela que tem as cadeias de caracteres usadas para substituições de parâmetro nas descrições de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-135">Returns a string that contains the path of the file that contains the message table resource that has the strings used for parameter substitutions in event descriptions.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceFilePath">
      <MemberSignature Language="C#" Value="public string ResourceFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceFilePath : string" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-136">Obtém o caminho para o arquivo que contém os metadados associados ao provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-136">Gets the path to the file that contains the metadata associated with the provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-137">Retorna uma cadeia de caracteres que contém o caminho para o arquivo que contém os metadados associados com o provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-137">Returns a string that contains the path to the file that contains the metadata associated with the provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tasks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventTask&gt; Tasks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Diagnostics.Eventing.Reader.EventTask&gt; Tasks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tasks As IList(Of EventTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventTask ^&gt; ^ Tasks { System::Collections::Generic::IList&lt;System::Diagnostics::Eventing::Reader::EventTask ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tasks : System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventTask&gt;" Usage="System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Diagnostics.Eventing.Reader.EventTask&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00e89-138">Obtém uma coleção enumerável de objetos <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> e cada um deles representa uma tarefa definida no provedor de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-138">Gets an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> objects, each of which represent a task that is defined in the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00e89-139">Retorna uma coleção enumerável de <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00e89-139">Returns an enumerable collection of <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>