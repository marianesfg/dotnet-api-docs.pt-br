<Type Name="RibbonControl" FullName="System.Windows.Controls.Ribbon.RibbonControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bf54e59f2c802b391a78039758be2a424be3c45" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RibbonControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonControl" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonControl : System::Windows::Controls::ContentControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentPresenter", Type=typeof(System.Windows.Controls.Ribbon.RibbonContentPresenter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fab2d-101">Representa um contêiner para os controles em uma faixa de opções.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fab2d-101">Represents a container for controls in a ribbon.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab2d-102">A ilustração a seguir mostra exemplos de <xref:System.Windows.Controls.Ribbon.RibbonCheckBox>, <xref:System.Windows.Controls.Ribbon.RibbonTextBox>, <xref:System.Windows.Controls.Ribbon.RibbonComboBox>, <xref:System.Windows.Controls.Ribbon.RibbonButton>, <xref:System.Windows.Controls.Ribbon.RibbonToggleButton>, <xref:System.Windows.Controls.Ribbon.RibbonMenuButton>, e <xref:System.Windows.Controls.Ribbon.RibbonSplitButton> controles.</span><span class="sxs-lookup"><span data-stu-id="fab2d-102">The following illustration shows examples of <xref:System.Windows.Controls.Ribbon.RibbonCheckBox>, <xref:System.Windows.Controls.Ribbon.RibbonTextBox>, <xref:System.Windows.Controls.Ribbon.RibbonComboBox>, <xref:System.Windows.Controls.Ribbon.RibbonButton>, <xref:System.Windows.Controls.Ribbon.RibbonToggleButton>, <xref:System.Windows.Controls.Ribbon.RibbonMenuButton>, and <xref:System.Windows.Controls.Ribbon.RibbonSplitButton> controls.</span></span>  
  
 <span data-ttu-id="fab2d-103">![Controles de faixa de opções](~/add/media/wpfribbon-controls.png "controles de faixa de opções")</span><span class="sxs-lookup"><span data-stu-id="fab2d-103">![Ribbon controls](~/add/media/wpfribbon-controls.png "Ribbon controls")</span></span>  
<span data-ttu-id="fab2d-104">Controles de faixa de opções</span><span class="sxs-lookup"><span data-stu-id="fab2d-104">Ribbon controls</span></span>  
  
 <span data-ttu-id="fab2d-105">A ilustração a seguir mostra como alguns desses controles aparecem quando eles estiverem selecionados.</span><span class="sxs-lookup"><span data-stu-id="fab2d-105">The following illustration shows how some of these controls appear when they are selected.</span></span>  
  
 <span data-ttu-id="fab2d-106">![Controles que estão selecionados da faixa de opções](~/add/media/wpfribbon-controls-selection.png "controles que estão selecionados da faixa de opções")</span><span class="sxs-lookup"><span data-stu-id="fab2d-106">![Ribbon controls that are selected](~/add/media/wpfribbon-controls-selection.png "Ribbon controls that are selected")</span></span>  
<span data-ttu-id="fab2d-107">Controles de faixa de opções que estão selecionados</span><span class="sxs-lookup"><span data-stu-id="fab2d-107">Ribbon controls that are selected</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-108">Inicializa uma nova instância da classe <see cref="T:System.Windows.Controls.Ribbon.RibbonControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-108">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonControl" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlSizeDefinition">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonControlSizeDefinition ControlSizeDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Ribbon.RibbonControlSizeDefinition ControlSizeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControl.ControlSizeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlSizeDefinition As RibbonControlSizeDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonControlSizeDefinition ^ ControlSizeDefinition { System::Windows::Controls::Ribbon::RibbonControlSizeDefinition ^ get(); void set(System::Windows::Controls::Ribbon::RibbonControlSizeDefinition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonControlSizeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-109">Obtém ou define o <see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" /> para esse controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-109">Gets or sets the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" /> for this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab2d-110">O <see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" /> para esse controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-110">The <see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" /> for this control.</span>
          </span>
          <span data-ttu-id="fab2d-111">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-111">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab2d-112">Um <xref:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition> contém propriedades que especificam as informações de tamanho e a visibilidade para a imagem e o rótulo associado ao controle.</span><span class="sxs-lookup"><span data-stu-id="fab2d-112">A <xref:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition> contains properties that specify size and visibility information for the image and label associated with a control.</span></span>  
  
<a name="dependencyPropertyInfo_ControlSizeDefinition"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fab2d-113">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="fab2d-113">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fab2d-114">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="fab2d-114">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonControl.ControlSizeDefinitionProperty>|  
|<span data-ttu-id="fab2d-115">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="fab2d-115">Metadata properties set to `true`</span></span>|<span data-ttu-id="fab2d-116">Nenhum</span><span class="sxs-lookup"><span data-stu-id="fab2d-116">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlSizeDefinitionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ControlSizeDefinitionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ControlSizeDefinitionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonControl.ControlSizeDefinitionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlSizeDefinitionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ControlSizeDefinitionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-117">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Ribbon.RibbonButton.ControlSizeDefinition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-117">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonButton.ControlSizeDefinition" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInControlGroup">
      <MemberSignature Language="C#" Value="public bool IsInControlGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInControlGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControl.IsInControlGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInControlGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInControlGroup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-118">Obtém um valor que indica se o controle está hospedado em um <see cref="T:System.Windows.Controls.Ribbon.RibbonControlGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-118">Gets a value that indicates whether the control is hosted in a <see cref="T:System.Windows.Controls.Ribbon.RibbonControlGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab2d-119">
            <see langword="true" /> Se o controle é hospedado em um <see cref="T:System.Windows.Controls.Ribbon.RibbonControlGroup" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-119">
              <see langword="true" /> if the control is hosted in a <see cref="T:System.Windows.Controls.Ribbon.RibbonControlGroup" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInControlGroup"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fab2d-120">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="fab2d-120">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fab2d-121">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="fab2d-121">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonControl.IsInControlGroupProperty>|  
|<span data-ttu-id="fab2d-122">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="fab2d-122">Metadata properties set to `true`</span></span>|<span data-ttu-id="fab2d-123">Nenhum</span><span class="sxs-lookup"><span data-stu-id="fab2d-123">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInControlGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInControlGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInControlGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonControl.IsInControlGroupProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInControlGroupProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInControlGroupProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-124">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Ribbon.RibbonButton.IsInControlGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-124">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonButton.IsInControlGroup" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInQuickAccessToolBar">
      <MemberSignature Language="C#" Value="public bool IsInQuickAccessToolBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInQuickAccessToolBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControl.IsInQuickAccessToolBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInQuickAccessToolBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInQuickAccessToolBar { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-125">Obtém um valor que indica se o controle está hospedado na Barra de Ferramentas de Acesso Rápido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-125">Gets a value that indicates whether the control is hosted in the Quick Access Toolbar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab2d-126">
            <see langword="true" /> Se o controle estiver hospedado na barra de ferramentas de acesso rápido; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-126">
              <see langword="true" /> if the control is hosted in the Quick Access Toolbar; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInQuickAccessToolBar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fab2d-127">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="fab2d-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fab2d-128">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="fab2d-128">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonControl.IsInQuickAccessToolBarProperty>|  
|<span data-ttu-id="fab2d-129">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="fab2d-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="fab2d-130">Nenhum</span><span class="sxs-lookup"><span data-stu-id="fab2d-130">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInQuickAccessToolBarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInQuickAccessToolBarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInQuickAccessToolBarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonControl.IsInQuickAccessToolBarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInQuickAccessToolBarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInQuickAccessToolBarProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-131">Identifica a propriedade de dependência <see cref="P:System.Windows.Controls.Ribbon.RibbonButton.IsInQuickAccessToolBar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-131">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonButton.IsInQuickAccessToolBar" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControl.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-132">Compila a árvore visual para o <see cref="T:System.Windows.Controls.Ribbon.RibbonControl" /> quando um novo modelo é aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-132">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonControl" /> when a new template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab2d-133">Esse método é chamado sempre que o código do aplicativo ou um processo interno, como uma passagem de layout de recriação, chama o <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fab2d-133">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fab2d-134">Cria um novo objeto <see cref="T:System.Windows.Automation.Peers.RibbonControlAutomationPeer" /> para este controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-134">Creates a new <see cref="T:System.Windows.Automation.Peers.RibbonControlAutomationPeer" /> object for this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fab2d-135">Um novo objeto de automação par para este controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-135">A new automation peer object for this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControl.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">
          <span data-ttu-id="fab2d-136">O antigo modelo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-136">The old data template.</span>
          </span>
        </param>
        <param name="newTemplate">
          <span data-ttu-id="fab2d-137">O novo modelo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-137">The new data template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fab2d-138">Invocado quando o modelo de dados muda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab2d-138">Invoked when the data template changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>