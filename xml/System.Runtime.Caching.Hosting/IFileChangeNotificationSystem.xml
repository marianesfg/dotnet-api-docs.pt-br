<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="11a02d4fad4f8938df4cd402b81a6e257d7f1bac" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52207560" /></Metadata><TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <TypeSignature Language="F#" Value="type IFileChangeNotificationSystem = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define uma maneira de expor um objeto <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> personalizado para uma implementação de cache.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No ASP.NET, o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface fornece acesso ao gerenciamento de notificação de alteração de arquivo interno.  
  
 O <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface é usada internamente pelo <xref:System.Runtime.Caching.HostFileChangeMonitor> classe.  
  
 Quando uma implementação de cache é executado em um domínio de aplicativo do ASP.NET, ASP.NET implementa um <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> por meio da interface de <xref:System.Runtime.Caching.ObjectCache.Host%2A> propriedade. O <xref:System.Runtime.Caching.HostFileChangeMonitor> detecta essa propriedade de classe e usa o sistema de notificação de alteração de arquivo do ASP.NET para remover entradas de cache com base em notificação de alteração de arquivo.  
  
 Em aplicativos não-ASP.NET, há um ambiente de host que implementa um personalizado <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface. Como resultado, o <xref:System.Runtime.Caching.HostFileChangeMonitor> classe usa o <xref:System.IO.FileSystemWatcher> classe do CLR.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoring : string * System.Runtime.Caching.OnChangedCallback *  *  *  -&gt; unit" Usage="iFileChangeNotificationSystem.StartMonitoring (filePath, onChangedCallback, state, lastWriteTime, fileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">O caminho físico totalmente qualificado de um diretório ou arquivo no qual monitorar alterações.</param>
        <param name="onChangedCallback">Uma referência a um método que implementa o delegado <see cref="T:System.Runtime.Caching.OnChangedCallback" />. Quando o diretório ou arquivo monitorado é alterado, a implementação do ambiente do host da interface <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> gera um evento chamando a classe <see cref="T:System.Runtime.Caching.OnChangedCallback" />.</param>
        <param name="state">O estado que é fornecido pelo ambiente de host. Implementações de cache e os monitores de alteração personalizada devem tratar o valor de estado como opaco. No entanto, o estado deve ser armazenado para que possa ser enviado para o ambiente de host quando a implementação de cache chama o método <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />.</param>
        <param name="lastWriteTime">Quando este método retorna, contém a última data e hora em que ocorreu uma operação de gravação em <paramref name="filePath" />. Este parâmetro é passado não inicializado. Esse parâmetro é retornado do ambiente de host.</param>
        <param name="fileSize">Quando este método retornar, ele conterá o tamanho total do <paramref name="filePath" /> monitorado. Este parâmetro é passado não inicializado. Esse parâmetro é retornado do ambiente de host.</param>
        <summary>Registra um caminho de arquivo para monitorar com o ambiente de host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado por objetos de cache personalizadas e monitores que implementam o ambiente de host de alteração personalizada <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface para registrar os caminhos de arquivo para o monitoramento com o ambiente de host. O <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> método é chamado pelos implementadores do <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface para registrar um arquivo ou diretório para o monitoramento de alterações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoring : string * obj -&gt; unit" Usage="iFileChangeNotificationSystem.StopMonitoring (filePath, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">O caminho do arquivo ou pasta para interromper o monitoramento. Isso deve corresponder a um valor de caminho de arquivo que foi passado em uma chamada anterior para o método <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />.</param>
        <param name="state">As informações de estado que foram fornecidas originalmente pelo ambiente de host durante uma chamada anterior para o método <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />.</param>
        <summary>O monitoramento das extremidades muda.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> método deve ser chamado por caches personalizados e monitores que estão sendo descartados pelo ambiente de host para interromper o monitoramento de caminhos de arquivos e diretórios de alteração personalizada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>