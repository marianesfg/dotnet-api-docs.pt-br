<Type Name="SecurityKeyIdentifierClauseSerializer" FullName="System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e19c1675e41e286ef0f0e9466418c22898542b20" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36480447" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityKeyIdentifierClauseSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyIdentifierClauseSerializer abstract" />
  <TypeSignature Language="F#" Value="type SecurityKeyIdentifierClauseSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a3717-101">Classe base abstrata para um serializador que pode serializar e desserializar cláusulas de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="a3717-101">Abstract base class for a serializer that can serialize and deserialize key identifier clauses.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3717-102">Cláusulas de identificador de chave são representadas pelo <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> de classe e por classes derivadas dela.</span><span class="sxs-lookup"><span data-stu-id="a3717-102">Key identifier clauses are represented by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class and by classes derived from it.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClauseSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClauseSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3717-103">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="a3717-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a3717-104">Um leitor de XML posicionado no elemento inicial da cláusula do identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="a3717-104">An XML reader positioned at the start element of the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="a3717-105">Quando substituído em uma classe derivada, retorna um valor que indica se o elemento em que o leitor especificado é posicionado pode ser lido como uma cláusula de identificador de chave pelo manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3717-105">When overridden in a derived class, returns a value that indicates whether the element where the specified reader is positioned can be read as a key identifier clause by the handler.</span></span></summary>
        <returns><span data-ttu-id="a3717-106"><see langword="true" /> se o XML pode ser desserializado para uma cláusula do identificador de chave pelo manipulador; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3717-106"><see langword="true" /> if the XML can be deserialized to a key identifier clause by the handler; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3717-107">Verifica se o XML pode ser lido como um <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> do <xref:System.Type> processada pelo manipulador de derivada.</span><span class="sxs-lookup"><span data-stu-id="a3717-107">Checks whether the XML can be read as a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> of the <xref:System.Type> processed by the derived handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="a3717-108">A cláusula do identificador de chave a ser verificada.</span><span class="sxs-lookup"><span data-stu-id="a3717-108">The key identifier clause to check.</span></span></param>
        <summary><span data-ttu-id="a3717-109">Quando substituído em uma classe derivada, retorna um valor que indica se a cláusula do identificador de chave especificada pode ser serializada pelo manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3717-109">When overridden in a derived class, returns a value that indicates whether the specified key identifier clause can be serialized by the handler.</span></span></summary>
        <returns><span data-ttu-id="a3717-110"><see langword="true" /> se a cláusula do identificador de chave pode ser serializada pelo manipulador; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3717-110"><see langword="true" /> if the key identifier clause can be serialized by the handler, otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a3717-111">Um leitor de XML posicionado no elemento inicial da cláusula do identificador de chave a ser lida.</span><span class="sxs-lookup"><span data-stu-id="a3717-111">An XML reader positioned at the start element of the key identifier clause to read.</span></span></param>
        <summary><span data-ttu-id="a3717-112">Quando substituído em uma classe derivada, desserializa uma cláusula do identificador de chave usando o leitor de XML especificado.</span><span class="sxs-lookup"><span data-stu-id="a3717-112">When overridden in a derived class, deserializes a key identifier clause from by using the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="a3717-113">A cláusula do identificador de chave que foi desserializada do XML.</span><span class="sxs-lookup"><span data-stu-id="a3717-113">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public abstract void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a3717-114">O gravador de XML a ser usado para serializar a cláusula do identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="a3717-114">The XML Writer to use to serialized the key identifier clause.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="a3717-115">A cláusula do identificador de chave a ser serializada.</span><span class="sxs-lookup"><span data-stu-id="a3717-115">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="a3717-116">Quando substituído em uma classe derivada, serializa a cláusula de identificador de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="a3717-116">When overridden in a derived class, serializes the specified key identifier clause.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>