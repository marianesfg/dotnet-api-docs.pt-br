<Type Name="SymmetricProofDescriptor" FullName="System.IdentityModel.Tokens.SymmetricProofDescriptor">
  <TypeSignature Language="C#" Value="public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricProofDescriptor extends System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricProofDescriptor&#xA;Inherits ProofDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricProofDescriptor : System::IdentityModel::Tokens::ProofDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.ProofDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ccb52-101">Essa classe pode ser usada para emitir o token baseado em chave simétrica.</span><span class="sxs-lookup"><span data-stu-id="ccb52-101">This class can be used for issuing the symmetric key based token.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb52-102">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="ccb52-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-103">O <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> a ser usado.</span><span class="sxs-lookup"><span data-stu-id="ccb52-103">The <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> to be used.</span></span></param>
        <summary><span data-ttu-id="ccb52-104">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> com as credenciais de criptografia especificadas.</span><span class="sxs-lookup"><span data-stu-id="ccb52-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-105">Use este construtor, se você quiser que o STS usar especificado <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span><span class="sxs-lookup"><span data-stu-id="ccb52-105">Use this constructor if you want the STS to use the specified <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(cli::array &lt;System::Byte&gt; ^ key, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ccb52-106">A chave simétrica que é usada dentro do token emitido.</span><span class="sxs-lookup"><span data-stu-id="ccb52-106">The symmetric key that is used inside the issued token.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-107">As credenciais de criptografia de chave da terceira parte confiável.</span><span class="sxs-lookup"><span data-stu-id="ccb52-107">The key encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="ccb52-108">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> com o material de chave especificado.</span><span class="sxs-lookup"><span data-stu-id="ccb52-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified key material.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-109">Use este construtor, se você quiser que o STS para usar os bytes de chave especificados.</span><span class="sxs-lookup"><span data-stu-id="ccb52-109">Use this constructor if you want the STS to use the specified key bytes.</span></span> <span data-ttu-id="ccb52-110">Isso ocorre quando o cliente envia a entropia e o STS seria simplesmente usá-la como a chave para o token emitido.</span><span class="sxs-lookup"><span data-stu-id="ccb52-110">This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb52-111"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb52-111"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="ccb52-112">O tamanho da chave simétrica.</span><span class="sxs-lookup"><span data-stu-id="ccb52-112">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-113">As credenciais de criptografia de chave do destino da solicitação.</span><span class="sxs-lookup"><span data-stu-id="ccb52-113">The key encrypting credentials for the target of the request.</span></span></param>
        <summary><span data-ttu-id="ccb52-114">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> com uma chave gerada automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ccb52-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-115">Se você quiser que o STS para gerar automaticamente a chave usando um gerador de número aleatório e enviá-lo no token de prova como um segredo binário, use este construtor.</span><span class="sxs-lookup"><span data-stu-id="ccb52-115">Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="ccb52-116">O tamanho da chave simétrica.</span><span class="sxs-lookup"><span data-stu-id="ccb52-116">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-117">As credenciais de criptografia de chave do destino da solicitação.</span><span class="sxs-lookup"><span data-stu-id="ccb52-117">The key encrypting credentials for the target of the request.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="ccb52-118">As credenciais de criptografia de chave do solicitante.</span><span class="sxs-lookup"><span data-stu-id="ccb52-118">The key encrypting credentials for the requestor.</span></span></param>
        <summary><span data-ttu-id="ccb52-119">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> com uma chave gerada automaticamente.</span><span class="sxs-lookup"><span data-stu-id="ccb52-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-120">Use este construtor, se você quiser que o STS para gerar automaticamente a chave e enviá-lo no token de prova como chave criptografada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-120">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="ccb52-121">Dois casos podem ser abrangidos usando este construtor:</span><span class="sxs-lookup"><span data-stu-id="ccb52-121">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="ccb52-122">O cliente envia a entropia, mas o servidor rejeita-lo.</span><span class="sxs-lookup"><span data-stu-id="ccb52-122">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="ccb52-123">O cliente não envia a entropia, a entropia do servidor é usado.</span><span class="sxs-lookup"><span data-stu-id="ccb52-123">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccb52-124"><paramref name="keySizeInBits" /> é menor que ou igual a zero.</span><span class="sxs-lookup"><span data-stu-id="ccb52-124"><paramref name="keySizeInBits" /> is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="ccb52-125">O tamanho da chave simétrica.</span><span class="sxs-lookup"><span data-stu-id="ccb52-125">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-126">As credenciais de criptografia de chave do destino da solicitação.</span><span class="sxs-lookup"><span data-stu-id="ccb52-126">The key encrypting credentials for the target of the request.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="ccb52-127">As credenciais de criptografia do solicitante usadas para criptografar a entropia ou o token de prova.</span><span class="sxs-lookup"><span data-stu-id="ccb52-127">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span></span></param>
        <param name="sourceEntropy"><span data-ttu-id="ccb52-128">A entropia do solicitante.</span><span class="sxs-lookup"><span data-stu-id="ccb52-128">The requestor's entropy.</span></span></param>
        <summary><span data-ttu-id="ccb52-129">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> a ser usada para enviar a entropia combinada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-129">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-130">Use este construtor, se você quiser enviar uma entropia combinada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-130">Use this constructor if you want to send a combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb52-131"><paramref name="sourceEntropy" /> é <see langword="null" /> ou uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="ccb52-131"><paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccb52-132"><paramref name="keySize" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="ccb52-132"><paramref name="keySize" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, System::String ^ encryptWith);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="ccb52-133">O tamanho da chave simétrica.</span><span class="sxs-lookup"><span data-stu-id="ccb52-133">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-134">As credenciais de criptografia de chave da terceira parte confiável.</span><span class="sxs-lookup"><span data-stu-id="ccb52-134">The key encrypting credentials for the relying party.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="ccb52-135">As credenciais de criptografia de chave do solicitante.</span><span class="sxs-lookup"><span data-stu-id="ccb52-135">The key encrypting credentials for the requestor.</span></span></param>
        <param name="encryptWith"><span data-ttu-id="ccb52-136">O algoritmo (URI) especificado no elemento <see langword="&lt;EncryptWith&gt;" /> do RST.</span><span class="sxs-lookup"><span data-stu-id="ccb52-136">The algorithm (URI) specified in the <see langword="&lt;EncryptWith&gt;" /> element of the RST.</span></span></param>
        <summary><span data-ttu-id="ccb52-137">Use este construtor para fazer com que o STS gere uma chave automaticamente e envie-a no token de prova como chave criptografada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-137">Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="ccb52-138">Dois casos são cobertos aqui 1.</span><span class="sxs-lookup"><span data-stu-id="ccb52-138">Two cases are covered here 1.</span></span> <span data-ttu-id="ccb52-139">o cliente envia a entropia, mas o servidor rejeita-a 2.</span><span class="sxs-lookup"><span data-stu-id="ccb52-139">client sends the entropy, but server rejects it 2.</span></span> <span data-ttu-id="ccb52-140">o cliente não envia uma entropia, portanto, basta usar a entropia do servidor</span><span class="sxs-lookup"><span data-stu-id="ccb52-140">client did not send a entropy, so just use server's entropy</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-141">Se `encryptWith` é um algoritmo DES, a chave é garantida não deve ser uma chave DES fraca.</span><span class="sxs-lookup"><span data-stu-id="ccb52-141">If `encryptWith` is a DES algorithm, the key is guaranteed not to be a weak DES key.</span></span>  
  
 <span data-ttu-id="ccb52-142">Use este construtor, se você quiser que o STS para gerar automaticamente a chave e enviá-lo no token de prova como chave criptografada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-142">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="ccb52-143">Dois casos podem ser abrangidos usando este construtor:</span><span class="sxs-lookup"><span data-stu-id="ccb52-143">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="ccb52-144">O cliente envia a entropia, mas o servidor rejeita-lo.</span><span class="sxs-lookup"><span data-stu-id="ccb52-144">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="ccb52-145">O cliente não envia a entropia, a entropia do servidor é usado.</span><span class="sxs-lookup"><span data-stu-id="ccb52-145">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccb52-146"><paramref name="keySizeInBits" /> é menor que ou igual a zero.</span><span class="sxs-lookup"><span data-stu-id="ccb52-146"><paramref name="keySizeInBits" /> is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte(), encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy, System::String ^ encryptWith);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="ccb52-147">O tamanho da chave simétrica.</span><span class="sxs-lookup"><span data-stu-id="ccb52-147">The size of the symmetric key.</span></span></param>
        <param name="targetWrappingCredentials"><span data-ttu-id="ccb52-148">As credenciais de criptografia para a terceira parte confiável usadas para criptografar a chave na propriedade SecurityKeyIdentifier.</span><span class="sxs-lookup"><span data-stu-id="ccb52-148">The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</span></span></param>
        <param name="requestorWrappingCredentials"><span data-ttu-id="ccb52-149">As credenciais de criptografia do solicitante usadas para criptografar a entropia ou o token de prova.</span><span class="sxs-lookup"><span data-stu-id="ccb52-149">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span></span></param>
        <param name="sourceEntropy"><span data-ttu-id="ccb52-150">A entropia do solicitante.</span><span class="sxs-lookup"><span data-stu-id="ccb52-150">The requestor's entropy.</span></span></param>
        <param name="encryptWith"><span data-ttu-id="ccb52-151">O URI do algoritmo a ser usado para criptografar a chave de prova.</span><span class="sxs-lookup"><span data-stu-id="ccb52-151">The URI of the algorithm to use to encrypt the proof key.</span></span></param>
        <summary><span data-ttu-id="ccb52-152">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> a ser usada para enviar a entropia combinada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-152">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-153">Use este construtor para enviar entropia combinada.</span><span class="sxs-lookup"><span data-stu-id="ccb52-153">Use this constructor to send combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ccb52-154"><paramref name="keySizeInBits" /> é menor que ou igual a zero.</span><span class="sxs-lookup"><span data-stu-id="ccb52-154"><paramref name="keySizeInBits" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb52-155"><paramref name="sourceEntropy" /> é <see langword="null" /> ou uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="ccb52-155"><paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyTo(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyTo (response As RequestSecurityTokenResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyTo(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
      </Parameters>
      <Docs>
        <param name="response"><span data-ttu-id="ccb52-156">O RSTR ao qual o descritor de prova deve ser aplicado.</span><span class="sxs-lookup"><span data-stu-id="ccb52-156">The RSTR to which to apply the proof descriptor.</span></span></param>
        <summary><span data-ttu-id="ccb52-157">Modifica o RSTR especificado com base nas configurações desse descritor de prova.</span><span class="sxs-lookup"><span data-stu-id="ccb52-157">Modifies the specified RSTR based on the settings in this proof descriptor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb52-158">Define os artefatos apropriados, como o token de prova solicitado no RSTR com base no que é dentro da instância do descritor de prova.</span><span class="sxs-lookup"><span data-stu-id="ccb52-158">Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb52-159"><paramref name="response" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ccb52-159"><paramref name="response" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyBytes">
      <MemberSignature Language="C#" Value="public byte[] GetKeyBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetKeyBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetKeyBytes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb52-160">Obtém o material da chave.</span><span class="sxs-lookup"><span data-stu-id="ccb52-160">Gets the key material.</span></span></summary>
        <returns><span data-ttu-id="ccb52-161">Uma matriz de bytes que contém o material da chave.</span><span class="sxs-lookup"><span data-stu-id="ccb52-161">A byte array that contains the key material.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetSourceEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetSourceEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSourceEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetSourceEntropy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb52-162">Obtém a entropia de origem em bytes simples.</span><span class="sxs-lookup"><span data-stu-id="ccb52-162">Gets the source entropy in plain bytes.</span></span></summary>
        <returns><span data-ttu-id="ccb52-163">Uma matriz de bytes que contém a entropia de origem.</span><span class="sxs-lookup"><span data-stu-id="ccb52-163">A byte array that contains the source entropy.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetTargetEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetTargetEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTargetEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetTargetEntropy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb52-164">Obtém a entropia de destino em bytes simples</span><span class="sxs-lookup"><span data-stu-id="ccb52-164">Gets the target entropy in plain bytes</span></span></summary>
        <returns><span data-ttu-id="ccb52-165">Uma matriz de bytes que contém a entropia de destino.</span><span class="sxs-lookup"><span data-stu-id="ccb52-165">A byte array that contains the target entropy.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyIdentifier">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ KeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb52-166">Obtém o identificador de chave que pode ser usado dentro do token emitido para definir a chave.</span><span class="sxs-lookup"><span data-stu-id="ccb52-166">Gets the key identifier that can be used inside the issued token to define the key.</span></span> <span data-ttu-id="ccb52-167">Ele geralmente é o segredo binário ou a chave criptografada;</span><span class="sxs-lookup"><span data-stu-id="ccb52-167">It is usually the binary secret or the encrypted key;</span></span></summary>
        <value><span data-ttu-id="ccb52-168">O identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="ccb52-168">The key identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestorEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RequestorEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ RequestorEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb52-169">Obtém as credenciais de criptografia do solicitante, que podem ser usadas para criptografar o token de prova solicitado ou a entropia na resposta.</span><span class="sxs-lookup"><span data-stu-id="ccb52-169">Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</span></span></summary>
        <value><span data-ttu-id="ccb52-170">As credenciais do solicitante com criptografia.</span><span class="sxs-lookup"><span data-stu-id="ccb52-170">The requestor’s encrypting credentials.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TargetEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ TargetEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ccb52-171">Obtém as credenciais de criptografia da terceira parte confiável, que podem ser usadas para criptografar o token de segurança solicitado na resposta.</span><span class="sxs-lookup"><span data-stu-id="ccb52-171">Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</span></span></summary>
        <value><span data-ttu-id="ccb52-172">A terceira parte confiável criptografar credenciais.</span><span class="sxs-lookup"><span data-stu-id="ccb52-172">The relying party encrypting credentials.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>