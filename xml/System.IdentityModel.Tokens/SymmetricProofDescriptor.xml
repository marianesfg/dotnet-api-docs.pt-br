<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SymmetricProofDescriptor.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ffe999e82c07080d3a3d05a07ffe07550a5204a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ffe999e82c07080d3a3d05a07ffe07550a5204a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
          <source>This class can be used for issuing the symmetric key based token.</source>
          <target state="translated">Essa classe pode ser usada para emitir o token baseado em chave simétrica.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /&gt;</ph> to be used.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /&gt;</ph> a ser usado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with the specified encrypting credentials.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> com as credenciais de criptografia especificadas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to use the specified <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptingCredentials&gt;</ph>.</source>
          <target state="translated">Use este construtor, se você quiser que o STS usar especificado <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptingCredentials&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The symmetric key that is used inside the issued token.</source>
          <target state="translated">A chave simétrica que é usada dentro do token emitido.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the relying party.</source>
          <target state="translated">As credenciais de criptografia de chave da terceira parte confiável.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with the specified key material.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> com o material de chave especificado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to use the specified key bytes.</source>
          <target state="translated">Use este construtor, se você quiser que o STS para usar os bytes de chave especificados.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</source>
          <target state="translated">Isso ocorre quando o cliente envia a entropia e o STS seria simplesmente usá-la como a chave para o token emitido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The size of the symmetric key.</source>
          <target state="translated">O tamanho da chave simétrica.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the target of the request.</source>
          <target state="translated">As credenciais de criptografia de chave do destino da solicitação.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with an auto-generated key.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> com uma chave gerada automaticamente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</source>
          <target state="translated">Se você quiser que o STS para gerar automaticamente a chave usando um gerador de número aleatório e enviá-lo no token de prova como um segredo binário, use este construtor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The size of the symmetric key.</source>
          <target state="translated">O tamanho da chave simétrica.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the target of the request.</source>
          <target state="translated">As credenciais de criptografia de chave do destino da solicitação.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the requestor.</source>
          <target state="translated">As credenciais de criptografia de chave do solicitante.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with an auto-generated key.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> com uma chave gerada automaticamente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</source>
          <target state="translated">Use este construtor, se você quiser que o STS para gerar automaticamente a chave e enviá-lo no token de prova como chave criptografada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Two cases can be covered by using this constructor:</source>
          <target state="translated">Dois casos podem ser abrangidos usando este construtor:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The client sends the entropy, but the server rejects it.</source>
          <target state="translated">O cliente envia a entropia, mas o servidor rejeita-lo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The client does not send the entropy, so the server's entropy is used.</source>
          <target state="translated">O cliente não envia a entropia, a entropia do servidor é usado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The size of the symmetric key.</source>
          <target state="translated">O tamanho da chave simétrica.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The key encrypting credentials for the target of the request.</source>
          <target state="translated">As credenciais de criptografia de chave do destino da solicitação.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</source>
          <target state="translated">As credenciais de criptografia do solicitante usadas para criptografar a entropia ou o token de prova.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The requestor's entropy.</source>
          <target state="translated">A entropia do solicitante.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class to use for sending combined entropy.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> a ser usada para enviar a entropia combinada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>Use this constructor if you want to send a combined entropy.</source>
          <target state="translated">Use este construtor, se você quiser enviar uma entropia combinada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The size of the symmetric key.</source>
          <target state="translated">O tamanho da chave simétrica.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The key encrypting credentials for the relying party.</source>
          <target state="translated">As credenciais de criptografia de chave da terceira parte confiável.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The key encrypting credentials for the requestor.</source>
          <target state="translated">As credenciais de criptografia de chave do solicitante.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The algorithm (URI) specified in the <ph id="ph1">&lt;see langword="&amp;lt;EncryptWith&amp;gt;" /&gt;</ph> element of the RST.</source>
          <target state="translated">O algoritmo (URI) especificado no elemento <ph id="ph1">&lt;see langword="&amp;lt;EncryptWith&amp;gt;" /&gt;</ph> do RST.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</source>
          <target state="translated">Use este construtor para fazer com que o STS gere uma chave automaticamente e envie-a no token de prova como chave criptografada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Two cases are covered here 1.</source>
          <target state="translated">Dois casos são cobertos aqui 1.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>client sends the entropy, but server rejects it 2.</source>
          <target state="translated">o cliente envia a entropia, mas o servidor rejeita-a 2.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>client did not send a entropy, so just use server's entropy</source>
          <target state="translated">o cliente não envia uma entropia, portanto, basta usar a entropia do servidor</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>If <ph id="ph1">`encryptWith`</ph> is a DES algorithm, the key is guaranteed not to be a weak DES key.</source>
          <target state="translated">Se <ph id="ph1">`encryptWith`</ph> é um algoritmo DES, a chave é garantida não deve ser uma chave DES fraca.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</source>
          <target state="translated">Use este construtor, se você quiser que o STS para gerar automaticamente a chave e enviá-lo no token de prova como chave criptografada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Two cases can be covered by using this constructor:</source>
          <target state="translated">Dois casos podem ser abrangidos usando este construtor:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The client sends the entropy, but the server rejects it.</source>
          <target state="translated">O cliente envia a entropia, mas o servidor rejeita-lo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The client does not send the entropy, so the server's entropy is used.</source>
          <target state="translated">O cliente não envia a entropia, a entropia do servidor é usado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The size of the symmetric key.</source>
          <target state="translated">O tamanho da chave simétrica.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</source>
          <target state="translated">As credenciais de criptografia para a terceira parte confiável usadas para criptografar a chave na propriedade SecurityKeyIdentifier.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</source>
          <target state="translated">As credenciais de criptografia do solicitante usadas para criptografar a entropia ou o token de prova.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The requestor's entropy.</source>
          <target state="translated">A entropia do solicitante.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The URI of the algorithm to use to encrypt the proof key.</source>
          <target state="translated">O URI do algoritmo a ser usado para criptografar a chave de prova.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class to use for sending combined entropy.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> a ser usada para enviar a entropia combinada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>Use this constructor to send combined entropy.</source>
          <target state="translated">Use este construtor para enviar entropia combinada.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> é menor que ou igual a zero.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source>The RSTR to which to apply the proof descriptor.</source>
          <target state="translated">O RSTR ao qual o descritor de prova deve ser aplicado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source>Modifies the specified RSTR based on the settings in this proof descriptor.</source>
          <target state="translated">Modifica o RSTR especificado com base nas configurações desse descritor de prova.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source>Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</source>
          <target state="translated">Define os artefatos apropriados, como o token de prova solicitado no RSTR com base no que é dentro da instância do descritor de prova.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source><ph id="ph1">&lt;paramref name="response" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="response" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes">
          <source>Gets the key material.</source>
          <target state="translated">Obtém o material da chave.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes">
          <source>A byte array that contains the key material.</source>
          <target state="translated">Uma matriz de bytes que contém o material da chave.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy">
          <source>Gets the source entropy in plain bytes.</source>
          <target state="translated">Obtém a entropia de origem em bytes simples.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy">
          <source>A byte array that contains the source entropy.</source>
          <target state="translated">Uma matriz de bytes que contém a entropia de origem.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy">
          <source>Gets the target entropy in plain bytes</source>
          <target state="translated">Obtém a entropia de destino em bytes simples</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy">
          <source>A byte array that contains the target entropy.</source>
          <target state="translated">Uma matriz de bytes que contém a entropia de destino.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
          <source>Gets the key identifier that can be used inside the issued token to define the key.</source>
          <target state="translated">Obtém o identificador de chave que pode ser usado dentro do token emitido para definir a chave.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
          <source>It is usually the binary secret or the encrypted key;</source>
          <target state="translated">Ele geralmente é o segredo binário ou a chave criptografada;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
          <source>The key identifier.</source>
          <target state="translated">O identificador de chave.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials">
          <source>Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</source>
          <target state="translated">Obtém as credenciais de criptografia do solicitante, que podem ser usadas para criptografar o token de prova solicitado ou a entropia na resposta.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials">
          <source>The requestor’s encrypting credentials.</source>
          <target state="translated">As credenciais do solicitante com criptografia.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials">
          <source>Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</source>
          <target state="translated">Obtém as credenciais de criptografia da terceira parte confiável, que podem ser usadas para criptografar o token de segurança solicitado na resposta.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials">
          <source>The relying party encrypting credentials.</source>
          <target state="translated">A terceira parte confiável criptografar credenciais.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>