<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb9943aefb6ba2f295be7ff7f864be1ec607810" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3f798-101">A classe base abstrata para manipuladores de token de segurança.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f798-101">The abstract base class for security token handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-102">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe é a classe base da qual segurança todos os manipuladores de token derivam.</span><span class="sxs-lookup"><span data-stu-id="3f798-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="3f798-103">Um manipulador de token de segurança é responsável por:</span><span class="sxs-lookup"><span data-stu-id="3f798-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="3f798-104">Validando tokens de segurança (<xref:System.IdentityModel.Tokens.SecurityToken>) do tipo que ele foi projetado para o processo e empacotamento as declarações contidas no token de em um <xref:System.Security.Claims.ClaimsIdentity> objeto.</span><span class="sxs-lookup"><span data-stu-id="3f798-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="3f798-105">Serialização e desserialização de tokens de segurança do tipo que é projetado para processar.</span><span class="sxs-lookup"><span data-stu-id="3f798-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="3f798-106">Serialização e desserialização de cláusulas de identificador de chave (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) que se referem aos tokens do tipo é projetado para processar do `<wsse:SecurityTokenReference>` elementos.</span><span class="sxs-lookup"><span data-stu-id="3f798-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="3f798-107">Criar tokens de segurança de um <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> objeto passado por implementações de <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="3f798-108">Criar cláusulas de identificador de chave de um token de segurança para implementações do <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="3f798-109">Windows Identity Foundation (WIF) os manipuladores de token de segurança a seguir é fornecido pronto para uso:</span><span class="sxs-lookup"><span data-stu-id="3f798-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="3f798-110">A maioria dessas classes expõe membros adicionais que implementam a funcionalidade que é específica para o processamento dos tokens para o qual a classe é criada.</span><span class="sxs-lookup"><span data-stu-id="3f798-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="3f798-111">Em muitos casos talvez seja melhor derivar de uma dessas classes em vez de diretamente a partir de <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="3f798-112">Um manipulador de token de segurança pode ser adicionado ou removido de uma coleção de manipulador de token, especificando o [ &lt;adicionar&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;remover&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), ou [ &lt;limpar&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elementos sob o [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) elemento em um arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="3f798-113">O <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> objeto que contém as definições de configuração para a coleção de manipuladores que pode ser acessado por meio de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriedade e que o manipulador de token é um membro da coleção manipulador podem ser acessados do <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3f798-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="3f798-114">Você pode substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> método para processar os elementos de configuração personalizada que usa o manipulador.</span><span class="sxs-lookup"><span data-stu-id="3f798-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="3f798-115">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler> classe expõe várias propriedades e métodos.</span><span class="sxs-lookup"><span data-stu-id="3f798-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="3f798-116">Dependendo da funcionalidade que você optar por implementar, você pode substituir alguns ou todos esses membros.</span><span class="sxs-lookup"><span data-stu-id="3f798-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="3f798-117">Você deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propriedade e o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> método para fornecer a infraestrutura do WIF com informações sobre o tipo de token de segurança que a classe é projetado para processar.</span><span class="sxs-lookup"><span data-stu-id="3f798-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="3f798-118">Validação, serialização e desserialização funcionalidade é exposta por meio de propriedades ou métodos que indicam se o manipulador pode executar uma função específica, combinada com o método ou métodos que implementam a funcionalidade.</span><span class="sxs-lookup"><span data-stu-id="3f798-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="3f798-119">A lista a seguir pares as propriedades ou métodos que indicam a funcionalidade com os métodos que implementam esta funcionalidade:</span><span class="sxs-lookup"><span data-stu-id="3f798-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="3f798-120">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> propriedade e o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método: valida um token e declarações contidas no token em um pacote com um <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="3f798-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="3f798-121">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriedade e o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> métodos: Token de serialização.</span><span class="sxs-lookup"><span data-stu-id="3f798-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="3f798-122">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> métodos e <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> métodos: desserialização de Token.</span><span class="sxs-lookup"><span data-stu-id="3f798-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="3f798-123">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> método e o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> método: desserialização de cláusulas de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="3f798-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="3f798-124">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> método e o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> método: serializando cláusulas de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="3f798-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="3f798-125">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> e <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> métodos são chamados de pipeline em implementações do <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="3f798-126">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> método é chamado pela infraestrutura do WIF para determinar se o token especificado já foi recebido.</span><span class="sxs-lookup"><span data-stu-id="3f798-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="3f798-127">Por padrão este método retorna `false`, que indica que o token já não foi recebido.</span><span class="sxs-lookup"><span data-stu-id="3f798-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="3f798-128">Você pode substituir o método e fornecer a lógica para detectar tokens reproduzidos.</span><span class="sxs-lookup"><span data-stu-id="3f798-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-129">Os exemplos de código em todos os <xref:System.IdentityModel.Tokens.SecurityTokenHandler> tópicos são tirados o `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-130">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-131">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="3f798-132">O XML a seguir mostra como adicionar o manipulador de token SWT para a coleção de manipuladores de token.</span><span class="sxs-lookup"><span data-stu-id="3f798-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f798-133">Chamado de construtores em classes derivadas para inicializar a classe <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3f798-134">Um leitor de XML posicionado no elemento inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-134">An XML reader positioned at the start element.</span>
          </span>
          <span data-ttu-id="3f798-135">O leitor não deve ser adiantado por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-135">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-136">Retorna um valor que indica que se o elemento XML consultado pelo leitor de XML especificado é uma cláusula de identificador de chave que pode ser desserializada por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-137">
            <see langword="true" /> se o método <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> pode ler o elemento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-137">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f798-138">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-138">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-139">A implementação padrão retorna `false` para indicar que a cláusula de identificador de chave não pode ser lido.</span><span class="sxs-lookup"><span data-stu-id="3f798-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="3f798-140">Uma classe derivada verifica se o elemento que o leitor se refere a fim de determinar se a instância pode desserializar uma cláusula de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="3f798-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="3f798-141">Normalmente, isso é feito por meio de uma chamada para o <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> método com os elemento e namespace cadeias de caracteres apropriadas especificado.</span><span class="sxs-lookup"><span data-stu-id="3f798-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="3f798-142">Se você substituir <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> método para fornecer a lógica para desserializar a cláusula de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="3f798-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-143">Retorna um valor que indica se o token especificado pode ser desserializado como um token do tipo processado por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="3f798-144">A cadeia de token a ser lida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-144">The token string to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-145">Retorna um valor que indica se a cadeia de caracteres especificada pode ser desserializada como um token do tipo processado por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-146">
            <see langword="true" /> se o método <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> pode ler o elemento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-146">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f798-147">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-147">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-148">A implementação padrão sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="3f798-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="3f798-149">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método para fornecer a lógica para desserializar o token.</span><span class="sxs-lookup"><span data-stu-id="3f798-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3f798-150">Um leitor de XML posicionado em um elemento inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-150">An XML reader positioned at a start element.</span>
          </span>
          <span data-ttu-id="3f798-151">O leitor não deve ser adiantado por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-151">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-152">Retorna um valor que indica se o elemento XML referenciado pelo leitor de XML especificado pode ser lido como um token do tipo processado por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-153">
            <see langword="true" /> se o método <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> pode ler o elemento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-153">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f798-154">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-154">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-155">A implementação padrão sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="3f798-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="3f798-156">Uma classe derivada verifica se o elemento que o leitor se refere a fim de determinar se a instância pode desserializar um token de segurança.</span><span class="sxs-lookup"><span data-stu-id="3f798-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="3f798-157">Normalmente, isso é feito por meio de uma chamada para o <xref:System.Xml.XmlReader.IsStartElement%2A> método com os elemento e namespace cadeias de caracteres apropriadas especificado.</span><span class="sxs-lookup"><span data-stu-id="3f798-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="3f798-158">Se você substituir <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método ou o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método para fornecer a lógica para desserializar a cláusula de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="3f798-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-159">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> método para determinar se um token pode ser lido por um manipulador.</span><span class="sxs-lookup"><span data-stu-id="3f798-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="3f798-160">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-161">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-162">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-163">Obtém um valor que indica se o manipulador dá suporte à validação de tokens de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-163">Gets a value that indicates whether the handler supports validation of security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f798-164">
            <see langword="true" /> Se a classe é capaz de validar os tokens de segurança; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-164">
              <see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f798-165">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-166">Para implementar a validação em uma classe derivada, substituir essa propriedade para retornar `true` e substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método para implementar a lógica de validação.</span><span class="sxs-lookup"><span data-stu-id="3f798-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-167">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> propriedade para indicar que um manipulador personalizado pode validar tokens.</span><span class="sxs-lookup"><span data-stu-id="3f798-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="3f798-168">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-169">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-170">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="3f798-171">A cláusula do identificador de chave a ser verificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-171">The key identifier clause to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-172">Retorna um valor que indica se a cláusula de identificador de chave especificada pode ser serializada por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-173">
            <see langword="true" /> se a cláusula de identificador de chave pode ser serializada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-173">
              <see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f798-174">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-174">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-175">A implementação padrão sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="3f798-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="3f798-176">Se você substituir <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> método para fornecer a lógica para serializar a cláusula de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="3f798-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-177">Obtém um valor que indica se o manipulador pode serializar tokens de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-177">Gets a value that indicates whether the handler can serialize security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f798-178">
            <see langword="true" /> Se a classe é capaz de serializar tokens; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-178">
              <see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3f798-179">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-180">Para implementar a serialização em uma classe derivada, substituir essa propriedade para retornar `true` e substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> métodos para implementar a lógica de serialização.</span><span class="sxs-lookup"><span data-stu-id="3f798-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-181">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriedade para indicar que um manipulador personalizado pode serializar tokens.</span><span class="sxs-lookup"><span data-stu-id="3f798-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="3f798-182">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-183">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-184">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-185">Obtém ou define o objeto <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> que fornece a configuração para a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f798-186">O objeto de configuração para a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-186">The configuration object for the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-187">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriedade normalmente é definida pela infraestrutura de configuração do [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) elemento no arquivo de configuração durante a aplicação de inicialização.</span><span class="sxs-lookup"><span data-stu-id="3f798-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="3f798-188">Em classes derivadas, você deve usar o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriedade para acessar as definições de configuração, por exemplo, o registro de nome do emissor para usar no <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método pode ser acessado a partir do <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> propriedade do objeto de configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-189">Obtém a coleção de manipuladores de token que contém a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-189">Gets the token handler collection that contains the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f798-190">A coleção de manipulador de token que contém a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-190">The token handler collection that contains the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-191">Quando o manipulador de token é adicionado a um <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instância, essa propriedade é definida automaticamente.</span><span class="sxs-lookup"><span data-stu-id="3f798-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="3f798-192">O token para o qual a referência deve ser criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-192">The token for which the reference is to be created.</span>
          </span>
        </param>
        <param name="attached">
          <span data-ttu-id="3f798-193">
            <see langword="true" /> se uma referência anexada deve ser criada; <see langword="false" /> se uma referência desanexada deve ser criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-193">
              <see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-194">Quando substituído em uma classe derivada, cria a referência de token de segurança para tokens processados por essa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span>
          </span>
          <span data-ttu-id="3f798-195">Este método é geralmente chamado por um STS (serviço de token de segurança).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-195">This method is typically called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-196">Uma cláusula de identificador de chave que referencia o token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-196">A key identifier clause that references the specified token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-197">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-198">As classes derivadas substituir este método para retornar uma cláusula de identificador de chave (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) que pode ser usado para criar um `<wsse:SecurityTokenReference>` elemento para o token especificado.</span><span class="sxs-lookup"><span data-stu-id="3f798-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="3f798-199">Chamado a partir de implementações de <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="3f798-200">Normalmente, um <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> não precisa ser usada, diferente de quando um serviço de token de segurança personalizada é criado.</span><span class="sxs-lookup"><span data-stu-id="3f798-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="3f798-201">Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não.</span><span class="sxs-lookup"><span data-stu-id="3f798-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="3f798-202">Consultem referências associadas aos tokens de segurança que estão contidos dentro do cabeçalho de segurança de uma mensagem SOAP e referências não referenciam tokens de segurança que não estão incluídas no cabeçalho de segurança de uma mensagem SOAP.</span><span class="sxs-lookup"><span data-stu-id="3f798-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="3f798-203">Normalmente, essas referências confirmar a autenticidade do token de segurança emitido.</span><span class="sxs-lookup"><span data-stu-id="3f798-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-204">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> método para criar uma cláusula de identificador de chave de token especificado.</span><span class="sxs-lookup"><span data-stu-id="3f798-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="3f798-205">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-206">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-207">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="3f798-208">O descritor do token de segurança do qual o token deve ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-208">The security token descriptor from which the token is to be created.</span>
          </span>
          <span data-ttu-id="3f798-209">Propriedades do descritor de token são definidas antes deste método ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-209">Properties of the token descriptor are set before this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-210">Quando substituído em uma classe derivada, cria um token de segurança usando o descritor de token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span>
          </span>
          <span data-ttu-id="3f798-211">Este método é chamado por um STS (serviço de token de segurança).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-211">This method is called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-212">Um token de segurança que coincide com as propriedades do descritor de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-212">A security token that matches the properties of the token descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-213">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-214">Chamado a partir de implementações de <xref:System.IdentityModel.SecurityTokenService> classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-215">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> método para criar e retorna um token de um descritor de token.</span><span class="sxs-lookup"><span data-stu-id="3f798-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="3f798-216">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-217">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-218">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="3f798-219">O token a ser verificado para reprodução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-219">The token to check for replay.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-220">Quando substituído em uma classe derivada, gera uma exceção se o token especificado é detectado como sendo reproduzido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-221">A implementação padrão não fará nada.</span><span class="sxs-lookup"><span data-stu-id="3f798-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="3f798-222">Classes derivadas devem lançar um <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> se o token já foi usado.</span><span class="sxs-lookup"><span data-stu-id="3f798-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="3f798-223">Windows Identity Foundation (WIF) fornece o <xref:System.IdentityModel.Tokens.TokenReplayCache> classe da qual reprodução caches podem ser derivados e [ &lt;tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) elemento de configuração, que pode ser usado para configurar o cache de reprodução usado por manipuladores de token em um aplicativo. No entanto, a implementação exata do <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> método é até o designer de classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3f798-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f798-224">Quando substituído em uma classe derivada, retorna o conjunto de URIs que são usados em solicitações para identificar um token do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-225">O conjunto de URIs que identificam o tipo de token ao qual este manipulador dá suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-225">The set of URIs that identify the token type that this handler supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-226">O <xref:System.Type> do token processado pela instância atual é acessada por meio de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3f798-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="3f798-227">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> método retorna o conjunto de identificadores aceitáveis que pode ser usado em mensagens para se referir ao tipo de token.</span><span class="sxs-lookup"><span data-stu-id="3f798-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="3f798-228">Por exemplo, o valor URI usado no `<wst:TokenType>` elemento sob o `<wst:RequestSecurityToken>` elemento para solicitar um tipo específico de token (representado pelo <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> propriedade no modelo de objeto).</span><span class="sxs-lookup"><span data-stu-id="3f798-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-229">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> método para retornar os identificadores de tipo de token para um token personalizado.</span><span class="sxs-lookup"><span data-stu-id="3f798-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="3f798-230">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-231">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-232">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="3f798-233">Os elementos XML de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-233">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="3f798-234">Cada nó na lista é do tipo <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-235">Quando substituído em uma classe derivada, carrega a configuração personalizada do XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-235">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-236">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> método é chamado pela infraestrutura de configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="3f798-237">Quando este método é chamado, o `nodelist` conterá os elementos filho de nível superior do manipulador de token [ &lt;adicionar&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) elemento do arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler’s [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="3f798-238">Cada um deles pode, por sua vez, contêm atributos ou elementos filho dependendo do esquema de configuração que você definir para a sua classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3f798-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="3f798-239">A implementação padrão gera um <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="3f798-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="3f798-240">Substitua este método em sua classe derivada para habilitar a inicialização do seu manipulador de token de segurança de um arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3f798-241">Um leitor de XML posicionado no elemento inicial do XML a ser desserializado na cláusula de identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-242">Quando substituído em uma classe derivada, desserializa o XML referenciado pelo leitor de XML especificado para uma cláusula de identificador de chave que referencia um token processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-243">A cláusula do identificador de chave que foi desserializada do XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-243">The key identifier clause that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-244">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-245">Substitua este método para fornecer a lógica para desserializar uma cláusula de identificador de chave do XML.</span><span class="sxs-lookup"><span data-stu-id="3f798-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="3f798-246">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3f798-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-247">Quando substituído em uma classe derivada, desserializa o XML especificado para um token do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="3f798-248">A cadeia de caracteres a ser desserializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-248">The string to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-249">Quando substituído em uma classe derivada, desserializa a cadeia de caracteres especificada para um token do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-250">O token de segurança que foi desserializado da cadeia de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-250">The security token that was deserialized from the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3f798-251">Chamar esse método com dados não confiáveis é um risco de segurança.</span><span class="sxs-lookup"><span data-stu-id="3f798-251">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="3f798-252">Chame este método apenas com dados confiáveis.</span><span class="sxs-lookup"><span data-stu-id="3f798-252">Call this method only with trusted data.</span></span> <span data-ttu-id="3f798-253">Para obter mais informações, consulte [validação de dados](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="3f798-253">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="3f798-254">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-254">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-255">Substitua este método para fornecer a funcionalidade que pode desserializar um token de segurança de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="3f798-255">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="3f798-256">Se você substituir, esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3f798-256">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3f798-257">Um leitor XML posicionado no elemento inicial do token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-257">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-258">Quando substituído em uma classe derivada, desserializa o XML referenciado pelo leitor XML especificado para um token do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-258">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-259">O token de segurança que foi desserializado do XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-259">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3f798-260">Chamar esse método com dados não confiáveis é um risco de segurança.</span><span class="sxs-lookup"><span data-stu-id="3f798-260">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="3f798-261">Chame este método apenas com dados confiáveis.</span><span class="sxs-lookup"><span data-stu-id="3f798-261">Call this method only with trusted data.</span></span> <span data-ttu-id="3f798-262">Para obter mais informações, consulte [validação de dados](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="3f798-262">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="3f798-263">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-263">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-264">Substitua este método para fornecer a lógica para desserializar um token de segurança do XML.</span><span class="sxs-lookup"><span data-stu-id="3f798-264">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="3f798-265">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3f798-265">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3f798-266">Normalmente, em classes derivadas, se o método não é possível desserializar o token do XML referenciado, ele gerará um <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="3f798-266">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-267">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> método para ler um token personalizado do leitor XML especificado.</span><span class="sxs-lookup"><span data-stu-id="3f798-267">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="3f798-268">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-268">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-269">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-269">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-270">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-270">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3f798-271">Um leitor XML posicionado no elemento inicial do token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-271">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="3f798-272">Um resolvedor de token que contém tokens fora de banda e armazenados em cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-272">A token resolver that contains out-of-band and cached tokens.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-273">Quando substituído em uma classe derivada, desserializa o XML referenciado pelo leitor de XML especificado para um token do tipo processado pela classe derivada usando o resolvedor de token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-273">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-274">O token de segurança que foi desserializado do XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-274">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3f798-275">Chamar esse método com dados não confiáveis é um risco de segurança.</span><span class="sxs-lookup"><span data-stu-id="3f798-275">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="3f798-276">Chame este método apenas com dados confiáveis.</span><span class="sxs-lookup"><span data-stu-id="3f798-276">Call this method only with trusted data.</span></span> <span data-ttu-id="3f798-277">Para obter mais informações, consulte [validação de dados](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="3f798-277">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="3f798-278">A implementação padrão ignora o `tokenResolver` parâmetro e delega a chamada para o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3f798-278">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3f798-279">Substitua este método para fornecer a lógica para desserializar um token de segurança do XML.</span><span class="sxs-lookup"><span data-stu-id="3f798-279">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="3f798-280">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3f798-280">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3f798-281">Normalmente, em classes derivadas, se o método não é possível desserializar o token do XML referenciado, ele gerará um <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="3f798-281">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-282">Quando substituído em uma classe derivada, obtém o tipo de token de segurança que é processado por esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-282">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f798-283">O tipo de token de segurança que é processado por essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-283">The type of the security token that is processed by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-284">Você deve substituir essa propriedade em classes derivadas e retornar o <xref:System.Type> o token de segurança (<xref:System.IdentityModel.Tokens.SecurityToken>) que é processado pela classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3f798-284">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-285">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propriedade para retornar o <xref:System.Type> de tokens de segurança que são processados por um manipulador personalizado.</span><span class="sxs-lookup"><span data-stu-id="3f798-285">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="3f798-286">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-286">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-287">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-287">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-288">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-288">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="3f798-289">O token de segurança que está sendo validado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-289">The security token that is being validated.</span>
          </span>
        </param>
        <param name="errorMessage">
          <span data-ttu-id="3f798-290">A mensagem a ser gravada no rastreamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-290">The message to write to the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-291">Rastreia o evento de falha durante a validação dos tokens de segurança quando o rastreamento está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-291">Traces the failure event during the validation of security tokens when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-292">Esse método deve ser chamado a partir de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método quando houver falha na validação do token.</span><span class="sxs-lookup"><span data-stu-id="3f798-292">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="3f798-293">O token que foi validado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-293">The token that was validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-294">Rastreia a validação bem-sucedida do evento de tokens de segurança quando o rastreamento está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-294">Traces the successful validation of security tokens event when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-295">Esse método deve ser chamado a partir de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método depois que o token foi validado com êxito.</span><span class="sxs-lookup"><span data-stu-id="3f798-295">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="3f798-296">O token a ser validado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-296">The token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-297">Quando substituído em uma classe derivada, valida o token de segurança especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-297">When overridden in a derived class, validates the specified security token.</span>
          </span>
          <span data-ttu-id="3f798-298">O token deve ser do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-298">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-299">As identidades contidas no token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-299">The identities contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-300">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-300">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-301">O <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método é chamado pela infraestrutura para validar e extrair as declarações do token de segurança desserializado.</span><span class="sxs-lookup"><span data-stu-id="3f798-301">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="3f798-302">Essas declarações são retornadas na coleção de <xref:System.Security.Claims.ClaimsIdentity> objetos retornados pelo método.</span><span class="sxs-lookup"><span data-stu-id="3f798-302">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="3f798-303">O caso típico, essa coleção conterá uma única identidade.</span><span class="sxs-lookup"><span data-stu-id="3f798-303">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="3f798-304">Em classes derivadas, validação normalmente inclui Validando o público-alvo especificado no token em relação a audiência URIs especificados no <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> propriedade do objeto de configuração do manipulador de token especificado no <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3f798-304">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="3f798-305">Esses URIs geralmente são definidos no arquivo de configuração sob o [ &lt;audienceUris&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="3f798-305">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="3f798-306">Se o público não pode ser validado, um <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exceção deverá ser lançada.</span><span class="sxs-lookup"><span data-stu-id="3f798-306">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="3f798-307">Ao processar o token, o emissor normalmente é validado, passando o token do emissor para um do <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> métodos no <xref:System.IdentityModel.Tokens.IssuerNameRegistry> objeto que é configurado para o manipulador por meio de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3f798-307">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="3f798-308">O registro do nome do emissor normalmente é configurado por meio de [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-308">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="3f798-309">O <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> retorna o nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="3f798-309">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="3f798-310">Esse nome deve ser usado para definir o <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> propriedade em declarações contidas no token.</span><span class="sxs-lookup"><span data-stu-id="3f798-310">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="3f798-311">Se o registro do nome do emissor não contém uma entrada para o token do emissor, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="3f798-311">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="3f798-312">Nesse caso um <xref:System.IdentityModel.Tokens.SecurityTokenException> normalmente é gerada em classes derivadas, mas esse comportamento é até o designer de classe.</span><span class="sxs-lookup"><span data-stu-id="3f798-312">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-313">O código a seguir mostra uma substituição do <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método para um manipulador de token de segurança que processa tokens web simples (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-313">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="3f798-314">O código é obtido a `CustomToken` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-314">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="3f798-315">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-315">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="3f798-316">O código a seguir mostra `CreateClaims` que é chamado de substituição do método de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método no exemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="3f798-316">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="3f798-317">Este método retorna um <xref:System.Security.Claims.ClaimsIdentity> objeto que é criado a partir de declarações no token.</span><span class="sxs-lookup"><span data-stu-id="3f798-317">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="3f798-318">O código é obtido a `CustomToken` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-318">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="3f798-319">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-319">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="3f798-320">O código a seguir mostra `ValidateSignature` que é chamado de substituição do método de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método no manipulador de token web simples.</span><span class="sxs-lookup"><span data-stu-id="3f798-320">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="3f798-321">Esse método valida a assinatura no token usando configurado <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="3f798-321">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="3f798-322">O código é obtido a `CustomToken` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-322">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="3f798-323">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-323">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="3f798-324">O código a seguir mostra `ValidateAudience` que é chamado de substituição do método de <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método no manipulador de token web simples.</span><span class="sxs-lookup"><span data-stu-id="3f798-324">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="3f798-325">Esse método valida o público-alvo contido no token em relação a audiência URIs que foram especificados na configuração.</span><span class="sxs-lookup"><span data-stu-id="3f798-325">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="3f798-326">O código é obtido a `CustomToken` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-326">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="3f798-327">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-327">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="3f798-328">O gravador XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-328">The XML writer.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="3f798-329">A cláusula do identificador de chave a ser serializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-329">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-330">Quando substituído em uma classe derivada, serializa a cláusula de identificador de chave especificado no XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-330">When overridden in a derived class, serializes the specified key identifier clause to XML.</span>
          </span>
          <span data-ttu-id="3f798-331">A cláusula do identificador de chave deve ser do tipo com suporte na classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-331">The key identifier clause must be of the type supported by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-332">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-333">Substitua este método para fornecer a lógica para serializar uma cláusula de identificador de chave para XML.</span><span class="sxs-lookup"><span data-stu-id="3f798-333">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="3f798-334">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3f798-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3f798-335">Quando substituído em uma classe derivada, serializa o token de segurança especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-335">When overridden in a derived class, serializes the specified security token.</span>
          </span>
          <span data-ttu-id="3f798-336">O token deve ser do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-336">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="3f798-337">O token a ser serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-337">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-338">Quando substituído em uma classe derivada, serializa o token de segurança especificado em uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-338">When overridden in a derived class, serializes the specified security token to a string.</span>
          </span>
          <span data-ttu-id="3f798-339">O token deve ser do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-339">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f798-340">O token serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-340">The serialized token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-341">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-341">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-342">Substitua este método para fornecer a lógica para serializar um token de segurança para XML.</span><span class="sxs-lookup"><span data-stu-id="3f798-342">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="3f798-343">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3f798-343">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="3f798-344">O gravador XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-344">The XML writer.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="3f798-345">O token a ser serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-345">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f798-346">Quando substituído em uma classe derivada, serializa o token de segurança especificado no XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-346">When overridden in a derived class, serializes the specified security token to XML.</span>
          </span>
          <span data-ttu-id="3f798-347">O token deve ser do tipo processado pela classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f798-347">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f798-348">Por padrão este método lança um <xref:System.NotImplementedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="3f798-348">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="3f798-349">Substitua este método para fornecer a lógica para serializar um token de segurança para XML.</span><span class="sxs-lookup"><span data-stu-id="3f798-349">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="3f798-350">Se você substituir esse método, você também deve substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3f798-350">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f798-351">O código a seguir mostra como substituir o <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> método para serializar um token personalizado.</span><span class="sxs-lookup"><span data-stu-id="3f798-351">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="3f798-352">O código é obtido a `Custom Token` exemplo.</span><span class="sxs-lookup"><span data-stu-id="3f798-352">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="3f798-353">Este exemplo fornece classes personalizadas que permitem que o processamento do Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="3f798-353">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="3f798-354">Para obter informações sobre esse exemplo e outros exemplos disponíveis para o WIF e onde baixá-los, consulte [índice de exemplo de código do WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="3f798-354">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>