<Type Name="X509CertificateStoreTokenResolver" FullName="System.IdentityModel.Tokens.X509CertificateStoreTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="379344b86c1d95191c891deff88ddc431c6c757d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39753055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509CertificateStoreTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509CertificateStoreTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class X509CertificateStoreTokenResolver&#xA;Inherits SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateStoreTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver" />
  <TypeSignature Language="F#" Value="type X509CertificateStoreTokenResolver = class&#xA;    inherit SecurityTokenResolver" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="099fe-101">Representa um resolvedor de token que pode resolver tokens do tipo <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> em relação a um repositório de certificados X.509 especificado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="099fe-101">Represents a token resolver that can resolve tokens of type <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> against a specified X.509 certificate store.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="099fe-102">Inicializa uma instância da classe <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-102">Initializes an instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509CertificateStoreTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509CertificateStoreTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="099fe-103">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> com um repositório de certificados X.509 padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class with a default X.509 certificate store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="099fe-104">O local de armazenamento padrão é <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span><span class="sxs-lookup"><span data-stu-id="099fe-104">The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="099fe-105">É o nome do repositório padrão <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.</span><span class="sxs-lookup"><span data-stu-id="099fe-105">The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509CertificateStoreTokenResolver (System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509CertificateStoreTokenResolver(System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver : System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.StoreLocation -&gt; System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" Usage="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver (storeName, storeLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
      </Parameters>
      <Docs>
        <param name="storeName">
          <span data-ttu-id="099fe-106">Um dos valores de enumeração que especifica o nome do repositório de certificados X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-106">One of the enumeration values that specify the name of the X.509 certificate store.</span>
          </span>
        </param>
        <param name="storeLocation">
          <span data-ttu-id="099fe-107">Um dos valores de enumeração que especifica o local do repositório de certificados X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-107">One of the enumeration values that specify the location of the X.509 certificate store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="099fe-108">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> que usa o repositório de certificados X.509 com o local especificado e nome para resolver tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class that uses the X.509 certificate store with the specified location and name to resolve tokens.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509CertificateStoreTokenResolver (string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509CertificateStoreTokenResolver(System::String ^ storeName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver : string * System.Security.Cryptography.X509Certificates.StoreLocation -&gt; System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" Usage="new System.IdentityModel.Tokens.X509CertificateStoreTokenResolver (storeName, storeLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
      </Parameters>
      <Docs>
        <param name="storeName">
          <span data-ttu-id="099fe-109">O nome do repositório de certificados X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-109">The name of the X.509 certificate store.</span>
          </span>
        </param>
        <param name="storeLocation">
          <span data-ttu-id="099fe-110">Um dos valores de enumeração que especifica o local de um repositório de certificados X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-110">One of the enumeration values that specify the location of an X.509 certificate store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="099fe-111">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> que usa o repositório de certificados X.509 com o local especificado e nome para resolver tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" /> class that uses the X.509 certificate store with the specified location and name to resolve tokens.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="099fe-112">
            <paramref name="storeLocation" /> é <see langword="null" /> ou é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-112">
              <paramref name="storeLocation" /> is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StoreLocation">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreLocation As StoreLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::StoreLocation StoreLocation { System::Security::Cryptography::X509Certificates::StoreLocation get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreLocation : System.Security.Cryptography.X509Certificates.StoreLocation" Usage="System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.StoreLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="099fe-113">Obtém o local do repositório de certificados X.509 usado por este resolvedor de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-113">Gets the location of the X.509 certificate store that is used by this token resolver.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="099fe-114">Um dos valores de enumeração que especifica o local de um repositório de certificados X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-114">One of the enumeration values that specify the location of an X.509 certificate store.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreName">
      <MemberSignature Language="C#" Value="public string StoreName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoreName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoreName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreName : string" Usage="System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="099fe-115">Obtém o nome do repositório de certificados X.509 usado por este resolvedor de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-115">Gets the name of the X.509 certificate store that is used by this token resolver.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="099fe-116">O nome do repositório de certificados X.509 que é usado por este resolvedor de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-116">The name of the X.509 certificate store that is used by this token resolver.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="x509CertificateStoreTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="099fe-117">A cláusula do identificador de chave do qual resolver a chave de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-117">The key identifier clause from which to resolve the security key.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="099fe-118">Quando este método é retornado, contém a chave de segurança resolvida usando a cláusula de identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-118">When this method returns, contains the security key that was resolved from the key identifier clause.</span>
          </span>
          <span data-ttu-id="099fe-119">Esse parâmetro é tratado como não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-119">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="099fe-120">Tenta resolver a cláusula de identificador de chave especificado para uma chave de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-120">Attempts to resolve the specified key identifier clause to a security key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="099fe-121">
            <see langword="true" /> se a cláusula do identificador de chave for resolvida com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-121">
              <see langword="true" /> if the key identifier clause is successfully resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="099fe-122">
            <paramref name="keyIdentifierClause" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-122">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="099fe-123">Resolve a cláusula de identificador de chave ou o identificador de chave especificado para um token de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-123">Resolves the specified key identifier or key identifier clause to a security token.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="x509CertificateStoreTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="099fe-124">O identificador de chave a resolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-124">The key identifier to resolve.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="099fe-125">Quando este método é retornado, contém o token de segurança resolvido usando o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-125">When this method returns, contains the security token that was resolved from the key identifier.</span>
          </span>
          <span data-ttu-id="099fe-126">Esse parâmetro é tratado como não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-126">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="099fe-127">Resolve o identificador de chave especificado para um token de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-127">Resolves the specified key identifier to a security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="099fe-128">
            <see langword="true" /> se o identificador de chave tiver sido resolvido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-128">
              <see langword="true" /> if the key identifier is successfully resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="099fe-129">
            <paramref name="keyIdentifier" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-129">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="x509CertificateStoreTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="099fe-130">A cláusula de identificador de chave a resolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-130">The key identifier clause to resolve.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="099fe-131">Quando este método é retornado, contém o token de segurança resolvido usando a cláusula de identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-131">When this method returns, contains the security token that was resolved from the key identifier clause.</span>
          </span>
          <span data-ttu-id="099fe-132">Esse parâmetro é tratado como não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-132">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="099fe-133">Resolve a cláusula de identificador de chave especificada para um token de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-133">Resolves the specified key identifier clause to a security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="099fe-134">
            <see langword="true" /> se a cláusula do identificador de chave for resolvida com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-134">
              <see langword="true" /> if the key identifier clause is successfully resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="099fe-135">
            <paramref name="keyIdentifierClause" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="099fe-135">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>