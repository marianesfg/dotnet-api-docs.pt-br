<Type Name="SigningCredentials" FullName="System.IdentityModel.Tokens.SigningCredentials">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b47676596107e8ffd27b4877752ae9b1b59a1310" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36556575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SigningCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SigningCredentials extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class SigningCredentials" />
  <TypeSignature Language="C++ CLI" Value="public ref class SigningCredentials" />
  <TypeSignature Language="F#" Value="type SigningCredentials = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b14b3-101">Representa a chave de criptografia e os algoritmos de segurança usados para gerar uma assinatura digital.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b14b3-101">Represents the cryptographic key and security algorithms that are used to generate a digital signature.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-102">Use o <xref:System.IdentityModel.Tokens.SigningCredentials> classe para especificar a chave de assinatura, identificador de chave de autenticação e algoritmos de segurança que são usados pelo WCF para gerar a assinatura digital de um <xref:System.IdentityModel.Tokens.SamlAssertion>.</span><span class="sxs-lookup"><span data-stu-id="b14b3-102">Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by WCF to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>.</span></span> <span data-ttu-id="b14b3-103">Para definir os detalhes de assinatura digital, definir o <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> propriedade o <xref:System.IdentityModel.Tokens.SamlAssertion> classe.</span><span class="sxs-lookup"><span data-stu-id="b14b3-103">To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b14b3-104">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SigningCredentials : System.IdentityModel.Tokens.SecurityKey * string * string -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="new System.IdentityModel.Tokens.SigningCredentials (signingKey, signatureAlgorithm, digestAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signingKey">
          <span data-ttu-id="b14b3-105">Um <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contém a chave de criptografia usada para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-105">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span>
          </span>
        </param>
        <param name="signatureAlgorithm">
          <span data-ttu-id="b14b3-106">Um URI que representa o algoritmo de criptografia usado para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-106">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span>
          </span>
        </param>
        <param name="digestAlgorithm">
          <span data-ttu-id="b14b3-107">Um URI que representa o algoritmo de criptografia usado para calcular o resumo da parte da mensagem SOAP que deve ser assinada digitalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-107">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b14b3-108">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-109">Use o <xref:System.IdentityModel.Tokens.SecurityAlgorithms> classe para especificar o `signatureAlgorithm` e `digestAlgorithm` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="b14b3-109">Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters.</span></span> <span data-ttu-id="b14b3-110">O <xref:System.IdentityModel.Tokens.SecurityAlgorithms> classe contém um conjunto de cadeias de caracteres estáticas e constantes que representam os algoritmos de criptografia.</span><span class="sxs-lookup"><span data-stu-id="b14b3-110">The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms.</span></span> <span data-ttu-id="b14b3-111">Os membros que têm um `Signature` sufixo pode ser usado para especificar o `signatureAlgoritm` parâmetro e os membros que têm um `Digest` sufixo pode ser usado para especificar o `digestAlgorithm` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b14b3-111">The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, class System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String, signingKeyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ signingKeyIdentifier);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SigningCredentials : System.IdentityModel.Tokens.SecurityKey * string * string * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="new System.IdentityModel.Tokens.SigningCredentials (signingKey, signatureAlgorithm, digestAlgorithm, signingKeyIdentifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
        <Parameter Name="signingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="signingKey">
          <span data-ttu-id="b14b3-112">Um <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contém a chave de criptografia usada para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-112">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span>
          </span>
        </param>
        <param name="signatureAlgorithm">
          <span data-ttu-id="b14b3-113">Um URI que representa o algoritmo de criptografia usado para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-113">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span>
          </span>
        </param>
        <param name="digestAlgorithm">
          <span data-ttu-id="b14b3-114">Um URI que representa o algoritmo de criptografia usado para calcular o resumo da parte da mensagem SOAP que deve ser assinada digitalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-114">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span>
          </span>
        </param>
        <param name="signingKeyIdentifier">
          <span data-ttu-id="b14b3-115">Um <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que especifica o identificador que representa a chave que é usada para criar uma assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-115">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b14b3-116">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-117">Use o <xref:System.IdentityModel.Tokens.SecurityAlgorithms> classe para especificar o `signatureAlgorithm` e `digestAlgorithm` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="b14b3-117">Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters.</span></span> <span data-ttu-id="b14b3-118">O <xref:System.IdentityModel.Tokens.SecurityAlgorithms> classe contém um conjunto de constantes cadeias de caracteres estáticas que representam os algoritmos de criptografia.</span><span class="sxs-lookup"><span data-stu-id="b14b3-118">The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms.</span></span> <span data-ttu-id="b14b3-119">Os membros que têm um `Signature` sufixo pode ser usado para especificar o `signatureAlgoritm` parâmetro e os membros que têm um `Digest` sufixo pode ser usado para especificar o `digestAlgorithm` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b14b3-119">The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestAlgorithm">
      <MemberSignature Language="C#" Value="public string DigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DigestAlgorithm : string" Usage="System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b14b3-120">Obtém o algoritmo de criptografia usado para calcular o resumo da parte da mensagem SOAP que deve ser assinada digitalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-120">Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b14b3-121">Um URI que representa o algoritmo de criptografia usado para calcular o resumo da parte da mensagem SOAP que deve ser assinada digitalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-121">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-122">Para definir o <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> propriedade, use um dos construtores que usam um `digestAlgorithm` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b14b3-122">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> property, use one of the constructors that take a `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b14b3-123">Obtém o algoritmo de criptografia usado para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-123">Gets the cryptographic algorithm that is used to generate the digital signature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b14b3-124">Um URI que representa o algoritmo de criptografia usado para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-124">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-125">Para definir o <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> propriedade, use um dos construtores que usam um `signatureAlgorithm` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b14b3-125">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> property, use one of the constructors that take a `signatureAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKey SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKey As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKey ^ SigningKey { System::IdentityModel::Tokens::SecurityKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.IdentityModel.Tokens.SecurityKey" Usage="System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b14b3-126">Obtém a chave de criptografia usada para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-126">Gets the cryptographic key that is used to generate the digital signature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b14b3-127">Um <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contém a chave de criptografia usada para gerar a assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-127">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-128">Para definir o <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> propriedade, use um construtor que usa um `signingKey` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b14b3-128">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> property, use a constructor that takes a `signingKey` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ SigningKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b14b3-129">Obtém o identificador que representa a chave que é usada para criar uma assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-129">Gets the identifier that represents the key that is used to create a digital signature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b14b3-130">Um <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que especifica o identificador que representa a chave que é usada para criar uma assinatura digital.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b14b3-130">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b14b3-131">Para definir o <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> propriedade, use o construtor que assume um `signingKeyIdentifier` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b14b3-131">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> property, use the constructor that takes a `signingKeyIdentifier` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>