<Type Name="X509DataSecurityKeyIdentifierClauseSerializer" FullName="System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99ca0a43f87ded15bbcc31701aa78062ae75669b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36556334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509DataSecurityKeyIdentifierClauseSerializer : System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509DataSecurityKeyIdentifierClauseSerializer extends System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class X509DataSecurityKeyIdentifierClauseSerializer&#xA;Inherits SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509DataSecurityKeyIdentifierClauseSerializer : System::IdentityModel::Tokens::SecurityKeyIdentifierClauseSerializer" />
  <TypeSignature Language="F#" Value="type X509DataSecurityKeyIdentifierClauseSerializer = class&#xA;    inherit SecurityKeyIdentifierClauseSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="26d77-101">Representa um <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" /> que pode processar tipos de referência de certificado X.509.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26d77-101">Represents a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" /> that can process X.509 certificate reference types.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509DataSecurityKeyIdentifierClauseSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509DataSecurityKeyIdentifierClauseSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d77-102">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="x509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="26d77-103">Um leitor de XML posicionado no elemento inicial da cláusula do identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-103">An XML reader positioned at the start element of the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d77-104">Retorna um valor que indica se o leitor especificado está posicionado em um elemento <see langword="&lt;ds:X509Data&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-104">Returns a value that indicates whether the specified reader is positioned at an <see langword="&lt;ds:X509Data&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d77-105">
            <see langword="true" /> se o leitor estiver referenciando um elemento <see langword="&lt;ds:X509Data&gt;" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-105">
              <see langword="true" /> if the reader is referring to an <see langword="&lt;ds:X509Data&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26d77-106">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-106">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="x509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="26d77-107">A cláusula do identificador de chave a ser verificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-107">The key identifier clause to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d77-108">Retorna um valor que indica se a cláusula do identificador de chave especificada pode ser serializada por este manipulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-108">Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d77-109">
            <see langword="true" /> se a cláusula do identificador de chave for compatível com este manipulador, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-109">
              <see langword="true" /> if the key identifier clause is supported by this handler; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d77-110">Os tipos de cláusula de identificador de chave com suporte são:</span><span class="sxs-lookup"><span data-stu-id="26d77-110">The supported key identifier clause types are:</span></span>  
  
1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26d77-111">
            <paramref name="securityKeyIdentifierClause" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-111">
              <paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="x509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="26d77-112">Um leitor de XML posicionado no elemento de início da cláusula do identificador de chave a ser lida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-112">An XML reader positioned at the start element of the key identifier clause to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d77-113">Desserializa uma cláusula do identificador de chave do XML usando o leitor de XML especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-113">Deserializes a key identifier clause from XML by using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d77-114">A cláusula do identificador de chave que foi desserializada do XML ou <see langword="null" /> se uma cláusula do identificador de chave não puder ser lida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-114">The key identifier clause that was deserialized from the XML or <see langword="null" /> if a key identifier clause could not be read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d77-115">O <xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause%2A> método leituras `<ds:X509IssuerSerial>`, `<ds:X509SKI>`, e `<ds:X509Certificate>` elementos e retorna o primeiro deles é encontrado como uma <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, um <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, ou um <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>.</span><span class="sxs-lookup"><span data-stu-id="26d77-115">The <xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause%2A> method reads `<ds:X509IssuerSerial>`, `<ds:X509SKI>`, and `<ds:X509Certificate>` elements and returns the first one found as a <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>, a <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>, or a <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>.</span></span> <span data-ttu-id="26d77-116">Se um desses elementos não for encontrado sob o `<ds:X509Data>` elemento, o método retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="26d77-116">If one of these elements is not found under the `<ds:X509Data>` element, the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26d77-117">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-117">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="26d77-118">
            <paramref name="reader" /> não está posicionado em um elemento <see langword="&lt;ds:X509Data&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-118">
              <paramref name="reader" /> is not positioned at a <see langword="&lt;ds:X509Data&gt;" /> element.</span>
          </span>
          <span data-ttu-id="26d77-119">(O método <see cref="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" /> retorna <see langword="false" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-119">(The <see cref="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" /> method returns <see langword="false" />.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="x509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="26d77-120">O gravador de XML a ser usado para serializar a cláusula do identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-120">The XML writer to use to serialize the key identifier clause.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="26d77-121">A cláusula do identificador de chave a ser serializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-121">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d77-122">Serializa a cláusula do identificador de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-122">Serializes the specified key identifier clause.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d77-123">Os tipos de cláusula de identificador de chave com suporte são:</span><span class="sxs-lookup"><span data-stu-id="26d77-123">The supported key identifier clause types are:</span></span>  
  
1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26d77-124">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-124">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="26d77-125">-ou-  <paramref name="securityKeyIdentifierClause" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-125">-or-  <paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="26d77-126">
            <paramref name="securityKeyIdentifierClause" /> não é um tipo de cláusula compatível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d77-126">
              <paramref name="securityKeyIdentifierClause" /> is not a supported clause type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>