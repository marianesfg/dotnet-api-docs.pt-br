<Type Name="AggregateTokenResolver" FullName="System.IdentityModel.Tokens.AggregateTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b50b5b354f93221c1a2b3a28be6fde6130a7c347" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39747039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AggregateTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class AggregateTokenResolver&#xA;Inherits SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregateTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver" />
  <TypeSignature Language="F#" Value="type AggregateTokenResolver = class&#xA;    inherit SecurityTokenResolver" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9498e-101">Representa um resolvedor de token de segurança que pode encapsular vários resolvedores de token e resolver tokens em todos os resolvedores encapsulados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9498e-101">Represents a security token resolver that can wrap multiple token resolvers and resolve tokens across all of the wrapped resolvers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9498e-102">Um <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objeto representa uma classe de utilitário que pode recuperar tokens de segurança ou chaves quando você tem um identificador de chave ou cláusula de identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="9498e-102">A <xref:System.IdentityModel.Selectors.SecurityTokenResolver> object represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span> <span data-ttu-id="9498e-103">O <xref:System.IdentityModel.Tokens.AggregateTokenResolver> encapsula vários <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objetos.</span><span class="sxs-lookup"><span data-stu-id="9498e-103">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver> wraps several <xref:System.IdentityModel.Selectors.SecurityTokenResolver> objects.</span></span> <span data-ttu-id="9498e-104">Os resolvedores de token a ser encapsulado são especificados no construtor.</span><span class="sxs-lookup"><span data-stu-id="9498e-104">The token resolvers to be wrapped are specified in the constructor.</span></span> <span data-ttu-id="9498e-105">O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> propriedade retorna a coleção de resolvedores de token são encapsuladas pelo resolvedor de agregação.</span><span class="sxs-lookup"><span data-stu-id="9498e-105">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property returns the collection of token resolvers that are wrapped by the aggregate resolver.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateTokenResolver (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; tokenResolvers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Selectors.SecurityTokenResolver&gt; tokenResolvers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tokenResolvers As IEnumerable(Of SecurityTokenResolver))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateTokenResolver(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ tokenResolvers);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.AggregateTokenResolver : seq&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; -&gt; System.IdentityModel.Tokens.AggregateTokenResolver" Usage="new System.IdentityModel.Tokens.AggregateTokenResolver tokenResolvers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tokenResolvers" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;" />
      </Parameters>
      <Docs>
        <param name="tokenResolvers">
          <span data-ttu-id="9498e-106">Uma lista de resolvedores de token de segurança a ser encapsulado por essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-106">A list of the security token resolvers to be wrapped by this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9498e-107">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.AggregateTokenResolver" /> usando a lista especificada de resolvedores de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-107">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AggregateTokenResolver" /> class by using the specified list of token resolvers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9498e-108">O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> propriedade é inicializada com a lista especificada de resolvedores de token.</span><span class="sxs-lookup"><span data-stu-id="9498e-108">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A> property is initialized with the specified list of token resolvers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9498e-109">
            <paramref name="tokenResolvers" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-109">
              <paramref name="tokenResolvers" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenResolvers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt; TokenResolvers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Selectors.SecurityTokenResolver&gt; TokenResolvers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenResolvers As ReadOnlyCollection(Of SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ TokenResolvers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Selectors::SecurityTokenResolver ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenResolvers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;" Usage="System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Selectors.SecurityTokenResolver&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9498e-110">Obtém os resolvedores do token de segurança encapsulados por essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-110">Gets the security token resolvers that are wrapped by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9498e-111">Uma coleção somente leitura que contém os resolvedores de token são encapsulados por essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-111">A read-only collection that contains the token resolvers that are wrapped by this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="aggregateTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="9498e-112">A cláusula de identificador de chave para a qual recuperar a chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-112">The key identifier clause to retrieve the key for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="9498e-113">Quando este método retorna, contém a chave que é referenciada na cláusula do identificador de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-113">When this method returns, contains the key that is referenced in the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="9498e-114">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-114">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9498e-115">Tenta recuperar a chave referenciada na cláusula do identificador de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-115">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9498e-116">
            <see langword="true" /> quando uma chave puder ser recuperada para a cláusula do identificador de chave especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-116">
              <see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9498e-117">O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> método é chamado pelo <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> e <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9498e-117">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9498e-118">
            <paramref name="keyIdentifierClause" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-118">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="aggregateTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="9498e-119">O identificador de chave segurança para o qual recuperar o token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-119">The security key identifier to retrieve the token for.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="9498e-120">Quando este método retorna, contém um token que representa o identificador de chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-120">When this method returns, contains a token that represents the specified key identifier.</span>
          </span>
          <span data-ttu-id="9498e-121">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-121">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9498e-122">Tenta recuperar o token de segurança que corresponde a pelo menos uma das cláusulas de identificador de chave contidas no identificador de chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-122">Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9498e-123">
            <see langword="true" /> quando um token pode ser recuperado para o identificador de chave especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-123">
              <see langword="true" /> when a token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9498e-124">O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> método é chamado pelo <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> e <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9498e-124">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9498e-125">
            <paramref name="keyIdentifier" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-125">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="aggregateTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="9498e-126">A cláusula do identificador de chave para a qual criar um token de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-126">The key identifier clause to create a security token for.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="9498e-127">Quando este método retorna, contém um token de segurança que representa a cláusula do identificador de chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-127">When this method returns, contains a security token that represents the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="9498e-128">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-128">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9498e-129">Tenta resolver o token de segurança que corresponda à cláusula de identificador de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-129">Attempts to resolve the security token that matches the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9498e-130">
            <see langword="true" /> quando um token de segurança pode ser recuperado para a cláusula do identificador de chave especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-130">
              <see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9498e-131">O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> método é chamado pelo <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> e <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9498e-131">The <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9498e-132">
            <paramref name="keyIdentifierClause" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9498e-132">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>