<Type Name="X509SubjectKeyIdentifierClause" FullName="System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
  <TypeSignature Language="C#" Value="public class X509SubjectKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SubjectKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SubjectKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SubjectKeyIdentifierClause : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="90fe5-101">Representa uma cláusula do identificador de chave que identifica um token de segurança <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> usando a extensão do identificador de chave da entidade do certificado X.509.</span><span class="sxs-lookup"><span data-stu-id="90fe5-101">Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token using the X.509 certificate's subject key identifier extension.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90fe5-102">Normalmente, o <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> não precisa ser usada, diferente de quando um serviço de token de segurança personalizada é criado.</span><span class="sxs-lookup"><span data-stu-id="90fe5-102">Typically, the <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="90fe5-103">Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não.</span><span class="sxs-lookup"><span data-stu-id="90fe5-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="90fe5-104">Consultem referências associadas aos tokens de segurança que estão contidos dentro do cabeçalho de segurança de uma mensagem SOAP e referências não são tokens de segurança que não estão incluídas no cabeçalho de segurança de uma mensagem SOAP.</span><span class="sxs-lookup"><span data-stu-id="90fe5-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="90fe5-105">Normalmente, essas referências confirmar a autenticidade do token de segurança emitido.</span><span class="sxs-lookup"><span data-stu-id="90fe5-105">These references typically affirm the authenticity of the issued security token.</span></span> <span data-ttu-id="90fe5-106">Use o <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> a referência de classe um <xref:System.IdentityModel.Tokens.X509SecurityToken> token de segurança usando a extensão do identificador da chave de assunto do certificado x. 509.</span><span class="sxs-lookup"><span data-stu-id="90fe5-106">Use the <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate's subject key identifier extension.</span></span> <span data-ttu-id="90fe5-107">O <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> método retorna o assunto extensão do identificador de chave.</span><span class="sxs-lookup"><span data-stu-id="90fe5-107">The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A> method returns the subject key identifier extension.</span></span>  
  
 <span data-ttu-id="90fe5-108">O Windows Communication Foundation suporta os seguintes tipos de referências de token de segurança do <xref:System.IdentityModel.Tokens.X509SecurityToken> tokens de segurança.</span><span class="sxs-lookup"><span data-stu-id="90fe5-108">Windows Communication Foundation supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.</span></span>  
  
-   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  
  
-   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>  
  
 <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SubjectKeyIdentifierClause (byte[] ski);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] ski) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ski As Byte())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SubjectKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ ski);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public X509SubjectKeyIdentifierClause (byte[] certificateSubject);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] certificateSubject) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificateSubject As Byte())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SubjectKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ certificateSubject);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ski" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="certificateSubject" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ski">To be added.</param>
        <param name="certificateSubject">To be added.</param>
        <summary><span data-ttu-id="90fe5-109">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" /> usando o identificador de chave da entidade especificado.</span><span class="sxs-lookup"><span data-stu-id="90fe5-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" /> class using the specified subject key identifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90fe5-110"><paramref name="ski" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-110"><paramref name="ski" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanCreateFrom">
      <MemberSignature Language="C#" Value="public static bool CanCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanCreateFrom(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanCreateFrom (certificate As X509Certificate2) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanCreateFrom(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="90fe5-111">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contém o certificado X.509.</span><span class="sxs-lookup"><span data-stu-id="90fe5-111">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="90fe5-112">Obtém um valor que indica se uma cláusula do identificador de chave pode ser criada para o certificado X.509 especificado.</span><span class="sxs-lookup"><span data-stu-id="90fe5-112">Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate.</span></span></summary>
        <returns>
          <span data-ttu-id="90fe5-113"><see langword="true" /> se uma cláusula do identificador de chave pode ser criada para <paramref name="certificate" />, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-113"><see langword="true" /> if a key identifier clause can be created for <paramref name="certificate" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90fe5-114">Uma cláusula de identificador de chave pode ser criada quando o `certificate` parâmetro contém o <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extensão.</span><span class="sxs-lookup"><span data-stu-id="90fe5-114">A key identifier clause can be created when the `certificate` parameter contains the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90fe5-115"><paramref name="certificate" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-115"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetX509SubjectKeyIdentifier">
      <MemberSignature Language="C#" Value="public byte[] GetX509SubjectKeyIdentifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetX509SubjectKeyIdentifier() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Function GetX509SubjectKeyIdentifier () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetX509SubjectKeyIdentifier();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90fe5-116">Obtém o identificador de chave da entidade.</span><span class="sxs-lookup"><span data-stu-id="90fe5-116">Gets the subject key identifier.</span></span></summary>
        <returns><span data-ttu-id="90fe5-117">Uma matriz de <see cref="T:System.Byte" /> que contém o identificador de chave da entidade.</span><span class="sxs-lookup"><span data-stu-id="90fe5-117">An array of <see cref="T:System.Byte" /> that contains the subject key identifier.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (certificate As X509Certificate2) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="90fe5-118">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contém o certificado X.509 a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="90fe5-118">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</span></span></param>
        <summary><span data-ttu-id="90fe5-119">Retorna um valor que indica se o identificador de chave dessa instância é equivalente ao identificador de chave do certificado X.509 especificado.</span><span class="sxs-lookup"><span data-stu-id="90fe5-119">Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.</span></span></summary>
        <returns>
          <span data-ttu-id="90fe5-120"><see langword="true" /> se o <paramref name="certificate" /> tiver o mesmo identificador de chave da entidade que a instância atual, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-120"><see langword="true" /> if <paramref name="certificate" /> has the same subject key identifier as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90fe5-121">O <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A> método compara o <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extensão para os dois certificados x. 509.</span><span class="sxs-lookup"><span data-stu-id="90fe5-121">The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches%2A> method compares the <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> extension for the two X.509 certificates.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90fe5-122"><paramref name="certificate" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-122"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90fe5-123">Retorna uma cadeia de caracteres que representa o objeto atual.</span><span class="sxs-lookup"><span data-stu-id="90fe5-123">Returns a string that represents the current object.</span></span></summary>
        <returns><span data-ttu-id="90fe5-124">Um <see cref="T:System.String" /> que representa o objeto atual.</span><span class="sxs-lookup"><span data-stu-id="90fe5-124">A <see cref="T:System.String" /> that represents the current object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90fe5-125">O <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A> método retorna a chave de assunto identificador.</span><span class="sxs-lookup"><span data-stu-id="90fe5-125">The <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString%2A> method returns the subject key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFrom">
      <MemberSignature Language="C#" Value="public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateFrom(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, [out] class System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&amp; keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateFrom (certificate As X509Certificate2, ByRef keyIdentifierClause As X509SubjectKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreateFrom(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::X509SubjectKeyIdentifierClause ^ % keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateFrom(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, [out] class System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&amp; clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateFrom (certificate As X509Certificate2, ByRef clause As X509SubjectKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreateFrom(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::X509SubjectKeyIdentifierClause ^ % clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" Index="0" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="90fe5-126">Um <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> para o qual a cláusula do identificador de chave será criada.</span><span class="sxs-lookup"><span data-stu-id="90fe5-126">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to create the key identifier clause for.</span></span></param>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="clause">To be added.</param>
        <summary><span data-ttu-id="90fe5-127">Cria uma cláusula do identificador de chave usando o certificado X.509 especificado.</span><span class="sxs-lookup"><span data-stu-id="90fe5-127">Creates a key identifier clause using the specified X.509 certificate.</span></span></summary>
        <returns>
          <span data-ttu-id="90fe5-128"><see langword="true" /> quando uma cláusula do identificador de chave pode ser criada para o certificado X.509 especificado, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-128"><see langword="true" /> when a key identifier clause can be created for the specified X.509 certificate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90fe5-129">Um <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> cláusula de identificador de chave pode ser criada para o certificado x. 509 quando ele contém um identificador de chave de entidade.</span><span class="sxs-lookup"><span data-stu-id="90fe5-129">A <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> key identifier clause can be created for the X.509 certificate when it contains a subject key identifier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90fe5-130"><paramref name="certificate" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="90fe5-130"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>