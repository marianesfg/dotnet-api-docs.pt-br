<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SymmetricSecurityKey.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55cf8406bae2fec33eb98ef443bd7dd65bedab491.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cf8406bae2fec33eb98ef443bd7dd65bedab491</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
          <source>Represents the abstract base class for all keys that are generated using symmetric algorithms.</source>
          <target state="translated">Representa a classe base abstrata para todas as chaves geradas usando algoritmos simétricos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
          <source>Typically, this class is used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">Normalmente, essa classe é usada pela infraestrutura para transformar XML usando uma chave simétrica.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">Um URI que representa o algoritmo de criptografia a ser usado para gerar a chave derivada.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém o parâmetro de rótulo para o algoritmo de criptografia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that is used to create a derived key.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém o nonce usado para criar uma chave derivada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">O tamanho da chave derivada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">A posição na qual a chave derivada está localizada na matriz de bytes retornada por este método.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">Quando substituído em uma classe derivada, gera uma chave derivada usando o algoritmo de criptografia especificado e os parâmetros para a chave atual.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the derived key.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém a chave derivada.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph> field.</source>
          <target state="translated">Para especificar SHA1 P como o algoritmo de criptografia, use o <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">Um algoritmo de criptografia que descriptografa texto criptografado, como XML criptografado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém o vetor de inicialização (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) do algoritmo especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém uma transformação que descriptografa texto criptografado usando o algoritmo de criptografia especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the decryption transform.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> que representa a transformação de descriptografia.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Use os campos que representam os algoritmos de descriptografia no <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> classe para especificar o algoritmo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">Um algoritmo de criptografia que criptografa XML.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém o vetor de inicialização (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) do algoritmo especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém uma transformação que criptografa XML usando o algoritmo de criptografia especificado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the encryption transform.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> que representa a transformação de criptografia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Use os campos que representam os algoritmos de descriptografia no <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> classe para especificar o algoritmo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>The cryptographic algorithm to get the size of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</source>
          <target state="translated">O algoritmo de criptografia para obter o tamanho do vetor de inicialização (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>When overridden in a derived class, gets the size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém o tamanho, em bits, do vetor de inicialização (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) necessário para o algoritmo de criptografia especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>The size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the cryptographic algorithm specified in the <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph> parameter.</source>
          <target state="translated">O tamanho, em bits, do vetor de inicialização (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) necessário para o algoritmo de criptografia especificado no parâmetro <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">O algoritmo de hash com chave cuja instância será obtida.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém uma instância do algoritmo de hash com chave especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> that represents the keyed hash algorithm.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> que representa o algoritmo de hash com chave.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>Use the fields that represent keyed hash algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Use os campos que representam os algoritmos de hash com chave no <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> classe para especificar o algoritmo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">O algoritmo simétrico do qual uma instância será obtida.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém uma instância do algoritmo simétrico especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> that represents the symmetric algorithm.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> que representa o algoritmo simétrico.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>Use the fields that represent symmetric algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">Use os campos que representam os algoritmos simétricos no <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> classe para especificar o algoritmo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <source>When overridden in a derived class, gets the bytes that represent the symmetric key.</source>
          <target state="translated">Quando substituído em uma classe derivada, obtém os bytes que representam a chave simétrica.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the symmetric key.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém a chave simétrica.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>