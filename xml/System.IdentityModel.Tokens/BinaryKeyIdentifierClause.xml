<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryKeyIdentifierClause.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552b09666fcf1b08850da4c54dd020e3b66bc4b6ef5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b09666fcf1b08850da4c54dd020e3b66bc4b6ef5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Represents a base class for key identifier clauses that are based upon binary data.</source>
          <target state="translated">Representa uma classe base para cláusulas de identificador de chave baseadas em dados binários.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">Normalmente, o <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> não precisa ser usada, diferente de quando um serviço de token de segurança personalizada é criado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</source>
          <target state="translated">Consultem referências associadas aos tokens de segurança que estão contidos dentro do cabeçalho de segurança de uma mensagem SOAP e referências não são tokens de segurança que não estão incluídas no cabeçalho de segurança da mensagem SOAP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">Normalmente, essas referências confirmar a autenticidade do token de segurança emitido.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>The key identifier clause type.</source>
          <target state="translated">O tipo de cláusula de identificador de chave.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Define o valor da propriedade <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém os dados binários que representam o identificador de chave.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clone the array passed into the <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parameter; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para clonar a matriz passada para o parâmetro <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept>; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> usando o tipo de cláusula de identificador de chave especificado, dados binários e um valor que indica se os dados binários devem ser clonados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> tem tamanho zero.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>The key identifier clause type.</source>
          <target state="translated">O tipo de cláusula de identificador de chave.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Define o valor da propriedade <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém os dados binários que representam o identificador de chave.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the binary data that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method.</source>
          <target state="translated">Define os dados binários retornados pelo método <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clone the array passed into the <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parameter; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para clonar a matriz passada para o parâmetro <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept>; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to create a derived key.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém o nonce que foi usado para criar uma chave derivada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> method.</source>
          <target state="translated">Define o valor retornado pelo método <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">O tamanho da chave derivada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> property.</source>
          <target state="translated">Define o valor da propriedade <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> usando o tipo de cláusula de identificador de chave especificado, dados binários, um valor que indica se os dados binários devem ser clonados, um nonce e o comprimento da chave.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated">Quando o <ph id="ph1">`derivationNonce`</ph> e <ph id="ph2">`derivationLength`</ph> são especificados, a chave derivada implícita é usada em vez da chave de segurança direta do token.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Regardless of the value passed into the <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the <ph id="ph3">`identificationData`</ph> parameter.</source>
          <target state="translated">Independentemente do valor passado para o <ph id="ph1">`cloneBuffer`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> método sempre retorna um clone da matriz passado para o <ph id="ph3">`identificationData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> tem tamanho zero.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Obtém os dados binários que representam o identificador de chave.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém os dados binários que representam o identificador de chave.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>Regardless of the value passed into the constructor's <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph3">`identificationData`</ph> parameter.</source>
          <target state="translated">Independentemente do valor passado para o construtor <ph id="ph1">`cloneBuffer`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> método sempre retorna um clone da matriz passado para o construtor <ph id="ph3">`identificationData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Obtém os dados binários que representam o identificador de chave.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contém os dados binários que representam o identificador de chave.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>The array returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> method is a clone of the constructor's <ph id="ph2">`identificationData`</ph> parameter when the value passed into the <ph id="ph3">`cloneBuffer`</ph> is <ph id="ph4">`true`</ph>; otherwise it is same array.</source>
          <target state="translated">A matriz retornada pelo <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> método é um clone do construtor de <ph id="ph2">`identificationData`</ph> parâmetro quando o valor passado para o <ph id="ph3">`cloneBuffer`</ph> é <ph id="ph4">`true`</ph>; caso contrário, será o mesmo conjunto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> método sempre retorna um clone da matriz passado para o construtor <ph id="ph2">`identificationData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Returns a value that indicates whether the key identifier for this instance matches the specified object.</source>
          <target state="translated">Retorna um valor que indica se o identificador de chave desta instância corresponde ao objeto especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare to.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> com a qual comparar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</source>
          <target state="translated">Retorna um valor que indica se os dados binários da instância atual corresponde aos dados binários especificados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="data" /&gt;</ph> is equivalent to the binary data returned by the <ph id="ph3">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="data" /&gt;</ph> for equivalente aos dados binários retornados pelo método <ph id="ph3">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare to.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> com a qual comparar.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>The index in the array at which the comparison starts.</source>
          <target state="translated">O índice na matriz no qual a comparação é iniciada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</source>
          <target state="translated">Retorna um valor que indica se os dados binários da instância atual são equivalentes aos dados binários especificados no deslocamento especificado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary data in the <ph id="ph2">&lt;paramref name="data" /&gt;</ph> parameter starting at the index specified in the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter is equivalent to the binary data returned by the <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method (starting at index zero); otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dados binários no parâmetro <ph id="ph2">&lt;paramref name="data" /&gt;</ph> começando no índice especificado no parâmetro <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> forem equivalentes aos dados binários retornados pelo método <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> (a partir do índice zero); caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">Retorna um valor que indica se o identificador de chave para esta instância é equivalente à cláusula de identificador de chave especificada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is of type <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> and the binary data returned by the <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method is identical for the <ph id="ph5">&lt;paramref name="keyIdentifierClause" /&gt;</ph> parameter and the current instance; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> for do tipo <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> e os dados binários retornados pelo método <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> forem idênticos ao parâmetro <ph id="ph5">&lt;paramref name="keyIdentifierClause" /&gt;</ph> e à instância atual; caso contrário, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>