<Type Name="BinaryKeyIdentifierClause" FullName="System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06f770f565b50995ba94cfe36d2d174e48dfd7f6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39119037" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinaryKeyIdentifierClause extends System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BinaryKeyIdentifierClause&#xA;Inherits SecurityKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryKeyIdentifierClause abstract : System::IdentityModel::Tokens::SecurityKeyIdentifierClause" />
  <TypeSignature Language="F#" Value="type BinaryKeyIdentifierClause = class&#xA;    inherit SecurityKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c46cb-101">Representa uma classe base para cláusulas de identificador de chave baseadas em dados binários.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c46cb-101">Represents a base class for key identifier clauses that are based upon binary data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46cb-102">Normalmente, o <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> não precisa ser usado, diferente de quando um serviço de token de segurança personalizada é criado.</span><span class="sxs-lookup"><span data-stu-id="c46cb-102">Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="c46cb-103">Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não.</span><span class="sxs-lookup"><span data-stu-id="c46cb-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="c46cb-104">Referências associadas se referem aos tokens de segurança que estão contidos no cabeçalho de segurança de uma mensagem SOAP e referências desconectadas são tokens de segurança que não estão incluídas no cabeçalho de segurança da mensagem SOAP.</span><span class="sxs-lookup"><span data-stu-id="c46cb-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</span></span> <span data-ttu-id="c46cb-105">Normalmente, essas referências confirmar a autenticidade do token de segurança emitido.</span><span class="sxs-lookup"><span data-stu-id="c46cb-105">These references typically affirm the authenticity of the issued security token.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c46cb-106">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, identificationData As Byte(), cloneBuffer As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ identificationData, bool cloneBuffer);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause : string * byte[] * bool -&gt; System.IdentityModel.Tokens.BinaryKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause (clauseType, identificationData, cloneBuffer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clauseType">
          <span data-ttu-id="c46cb-107">O tipo de cláusula de identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-107">The key identifier clause type.</span>
          </span>
          <span data-ttu-id="c46cb-108">Define o valor da propriedade <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-108">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span>
          </span>
        </param>
        <param name="identificationData">
          <span data-ttu-id="c46cb-109">Uma matriz de <see cref="T:System.Byte" /> que contém os dados binários que representam o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-109">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span>
          </span>
        </param>
        <param name="cloneBuffer">
          <span data-ttu-id="c46cb-110">
            <see langword="true" /> para clonar a matriz passada para o parâmetro <c>identificationData</c>; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-110">
              <see langword="true" /> to clone the array passed into the <c>identificationData</c> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c46cb-111">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> usando o tipo de cláusula de identificador de chave especificado, dados binários e um valor que indica se os dados binários devem ser clonados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c46cb-112">
            <paramref name="identificationData" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-112">
              <paramref name="identificationData" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c46cb-113">
            <paramref name="identificationData" /> tem tamanho zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-113">
              <paramref name="identificationData" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, identificationData As Byte(), cloneBuffer As Boolean, derivationNonce As Byte(), derivationLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ identificationData, bool cloneBuffer, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause : string * byte[] * bool * byte[] * int -&gt; System.IdentityModel.Tokens.BinaryKeyIdentifierClause" Usage="new System.IdentityModel.Tokens.BinaryKeyIdentifierClause (clauseType, identificationData, cloneBuffer, derivationNonce, derivationLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" />
        <Parameter Name="derivationLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="clauseType">
          <span data-ttu-id="c46cb-114">O tipo de cláusula de identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-114">The key identifier clause type.</span>
          </span>
          <span data-ttu-id="c46cb-115">Define o valor da propriedade <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span>
          </span>
        </param>
        <param name="identificationData">
          <span data-ttu-id="c46cb-116">Uma matriz de <see cref="T:System.Byte" /> que contém os dados binários que representam o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-116">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span>
          </span>
          <span data-ttu-id="c46cb-117">Define os dados binários retornados pelo método <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-117">Sets the binary data that is returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method.</span>
          </span>
        </param>
        <param name="cloneBuffer">
          <span data-ttu-id="c46cb-118">
            <see langword="true" /> para clonar a matriz passada para o parâmetro <c>identificationData</c>; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-118">
              <see langword="true" /> to clone the array passed into the <c>identificationData</c> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="derivationNonce">
          <span data-ttu-id="c46cb-119">Uma matriz de <see cref="T:System.Byte" /> que contém o nonce que foi usado para criar uma chave derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-119">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span>
          </span>
          <span data-ttu-id="c46cb-120">Define o valor retornado pelo método <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-120">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span>
          </span>
        </param>
        <param name="derivationLength">
          <span data-ttu-id="c46cb-121">O tamanho da chave derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-121">The size of the derived key.</span>
          </span>
          <span data-ttu-id="c46cb-122">Define o valor da propriedade <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-122">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c46cb-123">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> usando o tipo de cláusula de identificador de chave especificado, dados binários, um valor que indica se os dados binários devem ser clonados, um nonce e o comprimento da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46cb-124">Quando o `derivationNonce` e `derivationLength` são especificados, a chave derivada implícita é usada em vez da chave de segurança direto do token.</span><span class="sxs-lookup"><span data-stu-id="c46cb-124">When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="c46cb-125">Independentemente do valor passado para o `cloneBuffer` parâmetro, o <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> método sempre retorna um clone da matriz passado para o `identificationData` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c46cb-125">Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c46cb-126">
            <paramref name="identificationData" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-126">
              <paramref name="identificationData" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c46cb-127">
            <paramref name="identificationData" /> tem tamanho zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-127">
              <paramref name="identificationData" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBuffer">
      <MemberSignature Language="C#" Value="public byte[] GetBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBuffer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBuffer();" />
      <MemberSignature Language="F#" Value="member this.GetBuffer : unit -&gt; byte[]" Usage="binaryKeyIdentifierClause.GetBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c46cb-128">Obtém os dados binários que representam o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-128">Gets the binary data that represents the key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c46cb-129">Uma matriz de <see cref="T:System.Byte" /> que contém os dados binários que representam o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-129">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46cb-130">Independentemente do valor passado para o construtor `cloneBuffer` parâmetro, o <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> método sempre retorna um clone da matriz passado para o construtor `identificationData` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c46cb-130">Regardless of the value passed into the constructor's `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      </Docs>
    </Member>
    <Member MemberName="GetRawBuffer">
      <MemberSignature Language="C#" Value="protected byte[] GetRawBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetRawBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRawBuffer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetRawBuffer();" />
      <MemberSignature Language="F#" Value="member this.GetRawBuffer : unit -&gt; byte[]" Usage="binaryKeyIdentifierClause.GetRawBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c46cb-131">Obtém os dados binários que representam o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-131">Gets the binary data that represents the key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c46cb-132">Uma matriz de <see cref="T:System.Byte" /> que contém os dados binários que representam o identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-132">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c46cb-133">A matriz retornada pela <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> método é um clone do construtor `identificationData` parâmetro quando o valor passado para o `cloneBuffer` é `true`; caso contrário, será a mesma matriz.</span><span class="sxs-lookup"><span data-stu-id="c46cb-133">The array returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array.</span></span>  
  
 <span data-ttu-id="c46cb-134">O <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> método sempre retorna um clone da matriz passado para o construtor `identificationData` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="c46cb-134">The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c46cb-135">Retorna um valor que indica se o identificador de chave desta instância corresponde ao objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-135">Returns a value that indicates whether the key identifier for this instance matches the specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (data As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.Matches : byte[] -&gt; bool" Usage="binaryKeyIdentifierClause.Matches data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c46cb-136">Uma matriz de <see cref="T:System.Byte" /> com a qual comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-136">An array of <see cref="T:System.Byte" /> to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c46cb-137">Retorna um valor que indica se os dados binários da instância atual corresponde aos dados binários especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-137">Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c46cb-138">
            <see langword="true" /> se <paramref name="data" /> for equivalente aos dados binários retornados pelo método <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-138">
              <see langword="true" /> if <paramref name="data" /> is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (data As Byte(), offset As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ data, int offset);" />
      <MemberSignature Language="F#" Value="override this.Matches : byte[] * int -&gt; bool" Usage="binaryKeyIdentifierClause.Matches (data, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c46cb-139">Uma matriz de <see cref="T:System.Byte" /> com a qual comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-139">An array of <see cref="T:System.Byte" /> to compare to.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c46cb-140">O índice na matriz no qual a comparação é iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-140">The index in the array at which the comparison starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c46cb-141">Retorna um valor que indica se os dados binários da instância atual são equivalentes aos dados binários especificados no deslocamento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-141">Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c46cb-142">
            <see langword="true" /> se os dados binários no parâmetro <paramref name="data" /> começando no índice especificado no parâmetro <paramref name="offset" /> forem equivalentes aos dados binários retornados pelo método <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> (a partir do índice zero); caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-142">
              <see langword="true" /> if the binary data in the <paramref name="data" /> parameter starting at the index specified in the <paramref name="offset" /> parameter is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method (starting at index zero); otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Matches : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="binaryKeyIdentifierClause.Matches clause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="c46cb-143">Um <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ao qual comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-143">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span>
          </span>
        </param>
        <param name="clause">
          <span data-ttu-id="c46cb-144">Um <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> ao qual comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-144">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c46cb-145">Retorna um valor que indica se o identificador de chave para esta instância é equivalente à cláusula de identificador de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-145">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c46cb-146">
            <see langword="true" /> se <paramref name="keyIdentifierClause" /> for do tipo <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> e os dados binários retornados pelo método <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> forem idênticos ao parâmetro <paramref name="keyIdentifierClause" /> e à instância atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c46cb-146">
              <see langword="true" /> if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> and the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method is identical for the <paramref name="keyIdentifierClause" /> parameter and the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>