<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="057fe-101">A classe base abstrata para um Registro do nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="057fe-101">The abstract base class for an issuer name registry.</span></span> <span data-ttu-id="057fe-102">Um Registro do nome do emissor é usado para associar um nome mnemônico ao material criptográfico que é necessário para verificar as assinaturas dos tokens produzidos pelo emissor correspondente.</span><span class="sxs-lookup"><span data-stu-id="057fe-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="057fe-103">O Registro do nome do emissor mantém uma lista de emissores confiáveis para um aplicativo RP (de terceira parte confiável).</span><span class="sxs-lookup"><span data-stu-id="057fe-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="057fe-104">O registro do nome do emissor é usado para associar um mnemônico nome para o material criptográfico necessário para verificar as assinaturas dos tokens produzidos pelo emissor correspondente.</span><span class="sxs-lookup"><span data-stu-id="057fe-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="057fe-105">Esse nome é usado para definir o <xref:System.Security.Claims.Claim.Issuer%2A> ou <xref:System.Security.Claims.Claim.OriginalIssuer%2A> propriedade de uma declaração.</span><span class="sxs-lookup"><span data-stu-id="057fe-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="057fe-106">Os métodos expostos pelo <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe são chamados do pipeline, o manipulador de token de segurança que está processando o token.</span><span class="sxs-lookup"><span data-stu-id="057fe-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="057fe-107">Tokens assinados por material não é mapeado por um registro de nome do emissor são descartados como não confiável.</span><span class="sxs-lookup"><span data-stu-id="057fe-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="057fe-108">O nome retornado pelo registro de nome do emissor deve ser exclusivo dentro do contexto de um aplicativo do RP.</span><span class="sxs-lookup"><span data-stu-id="057fe-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="057fe-109">No código, você pode especificar o registro de nome do emissor para usar definindo o <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="057fe-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="057fe-110">Em um arquivo de configuração, o registro do nome do emissor pode ser especificado com a especificação de [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento sob o [ &lt;securityTokenHandlerConfiguration &gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="057fe-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.</span></span>  
  
 <span data-ttu-id="057fe-111">Windows Identity Foundation (WIF) fornece uma implementação do <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe predefinido: o <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> classe.</span><span class="sxs-lookup"><span data-stu-id="057fe-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="057fe-112">Quando você usar essa implementação pode especificar a lista de emissores confiáveis no arquivo de configuração do aplicativo RP sob o [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) elemento, que é um elemento filho do `<issuerNameRegistry>`elemento quando o <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>. class é referenciada nesse elemento `type` atributo.</span><span class="sxs-lookup"><span data-stu-id="057fe-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element’s `type` attribute.</span></span> <span data-ttu-id="057fe-113">Sob o `<trustedIssuers>` elemento, cada nome de emissor é mapeado para o certificado x. 509 que deve ser usado para verificar sua assinatura.</span><span class="sxs-lookup"><span data-stu-id="057fe-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="057fe-114">Para criar um registro de nome de emissor personalizado, você deve substituir o <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="057fe-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="057fe-115">Esse método retorna o nome do emissor do token de segurança especificados.</span><span class="sxs-lookup"><span data-stu-id="057fe-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="057fe-116">Opcionalmente, você pode substituir o <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> método para fornecer um mecanismo dicas ao recuperar nomes de emissor e o <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> método se desejar fornecer um nome de emissor para Windows tokens que é diferente do <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span><span class="sxs-lookup"><span data-stu-id="057fe-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="057fe-117">Substituir o <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> método para habilitar o registro de nome de emissor seja inicializada em um arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="057fe-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="057fe-118">O código a seguir mostra uma implementação de <xref:System.IdentityModel.Tokens.IssuerNameRegistry> classe que aceita apenas emissores que usam certificados com o assunto "CN = localhost".</span><span class="sxs-lookup"><span data-stu-id="057fe-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="057fe-119">O código a seguir é apenas para fins ilustrativos.</span><span class="sxs-lookup"><span data-stu-id="057fe-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="057fe-120">Não é uma prática recomendada validar certificados com base no nome da entidade.</span><span class="sxs-lookup"><span data-stu-id="057fe-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="057fe-121">Este código não deve ser usado porque está em produção.</span><span class="sxs-lookup"><span data-stu-id="057fe-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="057fe-122">A seguir mostra o XML necessário para configurar um aplicativo com o registro de nome de emissor confiável.</span><span class="sxs-lookup"><span data-stu-id="057fe-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="057fe-123">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />.</span><span class="sxs-lookup"><span data-stu-id="057fe-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="057fe-124">Quando substituído em uma classe derivada, retorna o nome de emissor para o token de segurança especificado.</span><span class="sxs-lookup"><span data-stu-id="057fe-124">When overridden in a derived class, returns the issuer name for the specified security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="057fe-125">Chamado do pipeline do processamento, o manipulador de token de segurança que está processando o token.</span><span class="sxs-lookup"><span data-stu-id="057fe-125">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="057fe-126">O método deve retornar um nome exclusivo para o emissor dentro do contexto do aplicativo RP.</span><span class="sxs-lookup"><span data-stu-id="057fe-126">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="057fe-127">O token de segurança para o qual retornar o nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="057fe-127">The security token for which to return the issuer name.</span></span></param>
        <summary><span data-ttu-id="057fe-128">Quando substituído em uma classe derivada, retorna o nome do emissor do token de segurança especificado.</span><span class="sxs-lookup"><span data-stu-id="057fe-128">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span></summary>
        <returns><span data-ttu-id="057fe-129">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="057fe-129">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="057fe-130">Implementações devem retornar uma cadeia de caracteres nulas e não vazio para identificar um emissor reconhecido ou uma cadeia de caracteres nula para identificar um emissor não reconhecido.</span><span class="sxs-lookup"><span data-stu-id="057fe-130">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="057fe-131">Chamado do pipeline do processamento, o manipulador de token de segurança que está processando o token.</span><span class="sxs-lookup"><span data-stu-id="057fe-131">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="057fe-132">O método deve retornar um nome exclusivo para o emissor dentro do contexto do aplicativo RP.</span><span class="sxs-lookup"><span data-stu-id="057fe-132">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="057fe-133">O código a seguir mostra o <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> método para um registro de nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="057fe-133">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="057fe-134">O exemplo completo está no <xref:System.IdentityModel.Tokens.IssuerNameRegistry> tópico de visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="057fe-134">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="057fe-135">O código a seguir é apenas para fins ilustrativos.</span><span class="sxs-lookup"><span data-stu-id="057fe-135">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="057fe-136">Não é uma prática recomendada validar certificados com base no nome da entidade.</span><span class="sxs-lookup"><span data-stu-id="057fe-136">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="057fe-137">Este código não deve ser usado porque está em produção.</span><span class="sxs-lookup"><span data-stu-id="057fe-137">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="057fe-138">O token de segurança para o qual retornar o nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="057fe-138">The security token for which to return the issuer name.</span></span></param>
        <param name="requestedIssuerName"><span data-ttu-id="057fe-139">Um nome de emissor a ser considerado na solicitação.</span><span class="sxs-lookup"><span data-stu-id="057fe-139">An issuer name to consider in the request.</span></span></param>
        <summary><span data-ttu-id="057fe-140">Quando substituído em uma classe derivada, retorna o nome do emissor do token de segurança especificado.</span><span class="sxs-lookup"><span data-stu-id="057fe-140">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span> <span data-ttu-id="057fe-141">O nome de emissor especificado pode ser considerado para determinar o nome do emissor a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="057fe-141">The specified issuer name may be considered in determining the issuer name to return.</span></span></summary>
        <returns><span data-ttu-id="057fe-142">O nome do emissor.</span><span class="sxs-lookup"><span data-stu-id="057fe-142">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="057fe-143">A implementação padrão ignora o `requestedIssuerName` parâmetro e simplesmente chama o <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="057fe-143">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="057fe-144">Chamado do pipeline do processamento, o manipulador de token de segurança que está processando o token.</span><span class="sxs-lookup"><span data-stu-id="057fe-144">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="057fe-145">O método deve retornar um nome exclusivo para o emissor dentro do contexto do aplicativo RP.</span><span class="sxs-lookup"><span data-stu-id="057fe-145">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="057fe-146">Retorna o nome de emissor padrão a ser usado em declarações do Windows.</span><span class="sxs-lookup"><span data-stu-id="057fe-146">Returns the default issuer name to be used for Windows claims.</span></span></summary>
        <returns><span data-ttu-id="057fe-147">O nome de emissor padrão para declarações do Windows.</span><span class="sxs-lookup"><span data-stu-id="057fe-147">The default issuer name for Windows claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="057fe-148">A implementação padrão retorna <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span><span class="sxs-lookup"><span data-stu-id="057fe-148">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="057fe-149">Chamado do pipeline do processamento, o manipulador de token de segurança que está processando o token.</span><span class="sxs-lookup"><span data-stu-id="057fe-149">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="057fe-150">O método deve retornar um nome exclusivo para o emissor dentro do contexto do aplicativo RP.</span><span class="sxs-lookup"><span data-stu-id="057fe-150">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="057fe-151">Os elementos XML de configuração.</span><span class="sxs-lookup"><span data-stu-id="057fe-151">The configuration XML elements.</span></span> <span data-ttu-id="057fe-152">Cada nó na lista é do tipo <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="057fe-152">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="057fe-153">Quando substituído em uma classe derivada, carrega a configuração personalizada do XML.</span><span class="sxs-lookup"><span data-stu-id="057fe-153">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="057fe-154">O <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> método é chamado pela infraestrutura de configuração.</span><span class="sxs-lookup"><span data-stu-id="057fe-154">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="057fe-155">Quando este método é chamado, o `nodelist` conterá os elementos filho de nível superior do [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento do arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="057fe-155">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file.</span></span> <span data-ttu-id="057fe-156">Cada um deles pode, por sua vez, contêm atributos ou elementos filho dependendo do esquema de configuração que você definir para a sua classe derivada.</span><span class="sxs-lookup"><span data-stu-id="057fe-156">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="057fe-157">A implementação padrão gera um <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="057fe-157">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="057fe-158">Substitua este método em sua classe derivada para habilitar a inicialização do registro de nome do emissor de um arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="057fe-158">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>