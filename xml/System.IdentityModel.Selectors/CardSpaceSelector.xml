<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CardSpaceSelector.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5909731b230ea128d3ca506d0566d42a5d3811829.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">909731b230ea128d3ca506d0566d42a5d3811829</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.CardSpaceSelector">
          <source>Provides access to all CardSpace public operations that are supported in managed code.</source>
          <target state="translated">Fornece acesso a todas as operações públicas de CardSpace que têm suporte no código gerenciado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.CardSpaceSelector">
          <source>Generates a security token using the CardSpace system.</source>
          <target state="translated">Gera um token de segurança usando o sistema CardSpace.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /&gt;</ph> that describes the federated security chain that the client requires a final token to unwind.</source>
          <target state="translated">Uma matriz de <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /&gt;</ph> que descreve a cadeia de segurança federada que o cliente exige um token final para liberação.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Generates a security token using the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> system and the specified policy chain and token serializer.</source>
          <target state="translated">Gera um token de segurança usando o sistema <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> e o serializador de token e de cadeia de política especificado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph> that represents the generated security token.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph> que representa o token de segurança gerado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph> tem tamanho zero.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> that represents the endpoint address of the recipient where the token is presented.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> que representa o endereço do ponto de extremidade do destinatário em que o token é apresentado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> that contains a policy fragment that specifies the token types and claims that are requested by the recipient.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> do tipo <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> que contém um fragmento de política que especifica os tipos de token e declarações que são solicitados pelo destinatário.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> that represents the issuer of the token.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> que representa o emissor do token.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Generates a security token using the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> system and the specified endpoint, policy, token issuer, and token serializer.</source>
          <target state="translated">Gera um token de segurança usando o sistema <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> e o ponto de extremidade, política, emissor de token e serializador de token especificados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph> that represents the generated security token.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph> que representa o token de segurança gerado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A security token can be issued by the user or by a third party that is specified by the policy issuer.</source>
          <target state="translated">Um token de segurança pode ser emitido pelo usuário ou por terceiros que é especificado pelo emissor de política.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source>The name of the file to import.</source>
          <target state="translated">O nome do arquivo a ser adicionado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source>Displays the <ph id="ph1">&lt;paramref name="Import Card" /&gt;</ph> user interface.</source>
          <target state="translated">Exibe a interface do usuário do <ph id="ph1">&lt;paramref name="Import Card" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
          <source>Displays the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> management user interface that allows the user to create, delete, rename, and modify the card.</source>
          <target state="translated">Exibe a interface do usuário de gerenciamento do <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> que permite ao usuário criar, excluir, renomear e modificar o cartão.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
          <source><ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> does not provide programmatic access to the cards for life-cycle management for privacy and security reasons.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> não fornece acesso programático aos cartões de gerenciamento do ciclo de vida por motivos de segurança e privacidade.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
          <source>For example, you cannot programmatically create, delete, or enumerate cards.</source>
          <target state="translated">Por exemplo, você não pode programaticamente criar, excluir ou enumerar os cartões.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>