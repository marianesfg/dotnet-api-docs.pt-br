<Type Name="X509SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6773e0a54729431b85b3656ee44973f9bc6508d8" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51865081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenAuthenticator extends System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenAuthenticator&#xA;Inherits SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenAuthenticator : System::IdentityModel::Selectors::SecurityTokenAuthenticator" />
  <TypeSignature Language="F#" Value="type X509SecurityTokenAuthenticator = class&#xA;    inherit SecurityTokenAuthenticator" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenAuthenticator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Autentica um <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> classe autentiquem <xref:System.IdentityModel.Tokens.X509SecurityToken> tokens de segurança.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método é chamado para autenticar o token, o certificado X.509 não está mapeado para uma identidade do Windows e o certificado é validado usando uma cadeia de certificados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator validator" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="validator">Um <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que verifica se o certificado é válido.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> usando o validador de certificado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Selectors.X509CertificateValidator> classe fornece modelos de validação, de um conjunto de certificado predefinido, como o <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> propriedade. Esses modelos de validação podem ser passados para o `validator` parâmetro. Quando um aplicativo requer um método de validação personalizado, derive uma classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator> e substitua o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método. O <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método é chamado pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método.  
  
 Por padrão, o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> não é mapeado para o certificado X.509 para uma identidade do Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator * bool -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator (validator, mapToWindows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator">Um <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que verifica se o certificado é válido.</param>
        <param name="mapToWindows">
          <see langword="true" /> para mapear a identidade do certificado para uma identidade do Windows, caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> usando o método de validação de certificado especificado e indica se a identidade do certificado é mapeada para uma identidade do Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Selectors.X509CertificateValidator> classe fornece modelos de validação, de um conjunto de certificado predefinido, como o <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> propriedade. Esses modelos de validação podem ser passados para o `validator` parâmetro. Quando um aplicativo requer um método de validação personalizado, derive uma classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator> e substitua o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método. O <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método é chamado pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método.  
  
 Quando o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método é chamado para autenticar o token e `mapToWindows` é `true`, o certificado X.509 é mapeado para uma conta do Windows e declarações são adicionadas a <xref:System.IdentityModel.Policy.EvaluationContext> com os grupos do Windows que o usuário pertence. Como o certificado X.509 é mapeado para uma conta do Windows varia de acordo com o tipo de token de segurança:  
  
-   Quando o token de segurança é do tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, o certificado X.509 é mapeado usando o <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> propriedade.  
  
-   Quando o token de segurança é do tipo `X509SecurityToken`, o certificado X.509 é mapeado para uma conta do Windows usando seu nome de usuário principal (UPN).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean, includeWindowsGroups As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.X509CertificateValidator * bool * bool -&gt; System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.X509SecurityTokenAuthenticator (validator, mapToWindows, includeWindowsGroups)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="includeWindowsGroups" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator">Um <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> que verifica se o certificado é válido.</param>
        <param name="mapToWindows">
          <see langword="true" /> para mapear a identidade do certificado para uma identidade do Windows, caso contrário, <see langword="false" />.</param>
        <param name="includeWindowsGroups">
          <see langword="true" /> para incluir os grupos aos quais o usuário do Windows pertence na propriedade <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> que é construída em todo o processo de autenticação, caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> usando o método de validação de certificado especificado e indica se a identidade do certificado é mapeada para uma identidade do Windows e para os grupos do Windows aos quais o usuário pertence.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passar `false` para o `includeWindowsGroups` quando os Windows agrupar informações de parâmetro não é necessário para melhorar o desempenho.  
  
 O <xref:System.IdentityModel.Selectors.X509CertificateValidator> classe tem várias propriedades estáticas, como o <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> propriedade que pode ser passada para o `validator` parâmetro. Essas propriedades fornecem métodos comuns de validação de certificados x. 509. Quando um método de validação personalizada for necessário, derive uma classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator> e substitua o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método. O <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método é chamado pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método.  
  
 Quando `true` é passado para o `mapToWindows` parâmetro, o certificado X.509 é mapeado para uma conta do Windows e declarações relevantes são adicionadas ao <xref:System.IdentityModel.Policy.EvaluationContext>, como o Windows de grupos que o usuário pertence. Quando o token de segurança é do tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, o <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> propriedade está usando a identidade que é especificada no token; caso contrário, o certificado X.509 é mapeado para uma identidade do Windows usando um logon Kerberos S4U com base no nome principal do usuário Extensão de SubjectAltNames do certificado X.509.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="x509SecurityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">O <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> a ser validado.</param>
        <summary>Obtém um valor que indica se o token de segurança especificado pode ser validado pelo autenticador de token de segurança.</summary>
        <returns>
          <see langword="true" /> quando <paramref name="token" /> é um token de segurança <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> ou uma classe derivada de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> método não autentica o token de segurança; que é executada pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapCertificateToWindowsAccount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapCertificateToWindowsAccount" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MapCertificateToWindowsAccount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapCertificateToWindowsAccount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MapCertificateToWindowsAccount : bool" Usage="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o certificado X.509 deve ser mapeado para uma conta do Windows.</summary>
        <value>
          <see langword="true" /> para mapear o certificado X.509 para uma conta do Windows; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> propriedade só pode ser definida em um construtor.  
  
 Se a segurança em nível de transporte SSL ou HTTPS está sendo usada e mapeamento já é fornecido pelo canal de segurança subjacente ou pelo Internet Information Services (IIS), esse mapeamento é aplicado sem validação de cadeia. Caso contrário, antes de fazer o mapeamento, o certificado é validado usando uma cadeia de certificados e o certificado deve ser encadeado a uma identidade NT_AUTHORITY. A estrutura de cadeia usada corresponde ao CERT_CHAIN_POLICY_NT_AUTH conforme definido na `CertVerifyCertificateChainPolicy` função (consulte a [CertVerifyCertificateChainPolicy](https://go.microsoft.com/fwlink/?LinkId=83570) função no SDK de criptografia). Esse comportamento ocorre apenas quando o mapeamento de um certificado para uma conta do Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="x509SecurityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">O <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> a ser validado.</param>
        <summary>Autentica o token de segurança especificado e retorna o conjunto de políticas de autorização do token de segurança.</summary>
        <returns>Uma <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> do tipo <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> que contém o conjunto de políticas de autorização em vigor para esse aplicativo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> método for substituído, siga estas diretrizes:  
  
-   Quando o token de segurança é passado para o `token` parâmetro não pode ser validado, lançar o <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exceção.  
  
-   Quando não há nenhuma política de autorização em vigor para esse aplicativo, retornar um vazio <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> do tipo <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  
  
 Quando este método retorna `null`, Windows Communication Foundation lançará uma <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exceção.  
  
 O <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> chamadas de método de <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> método do método de validação especificado no construtor para autenticar o `token` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>