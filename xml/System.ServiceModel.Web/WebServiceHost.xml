<Type Name="WebServiceHost" FullName="System.ServiceModel.Web.WebServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95c56619b656e31dbde3ea08f540f0407b287a96" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36412434" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebServiceHost : System.ServiceModel.ServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHost extends System.ServiceModel.ServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHost&#xA;Inherits ServiceHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHost : System::ServiceModel::ServiceHost" />
  <TypeSignature Language="F#" Value="type WebServiceHost = class&#xA;    inherit ServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a214e-101">Uma classe derivada de <see cref="T:System.ServiceModel.ServiceHost" /> que complementa o modelo de programação REST do WCF (Windows Communication Foundation).</span>
      <span class="sxs-lookup">
        <span data-stu-id="a214e-101">A <see cref="T:System.ServiceModel.ServiceHost" /> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a214e-102">Se <xref:System.ServiceModel.Web.WebServiceHost> não encontra nenhum ponto de extremidade na descrição do serviço, ele cria automaticamente um ponto de extremidade padrão no endereço base do serviço para endereços de base de HTTP e HTTPS.</span><span class="sxs-lookup"><span data-stu-id="a214e-102">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</span></span> <span data-ttu-id="a214e-103">Ele não cria um ponto de extremidade automaticamente se o usuário tiver configurado um ponto de extremidade explicitamente no endereço base.</span><span class="sxs-lookup"><span data-stu-id="a214e-103">It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</span></span> <span data-ttu-id="a214e-104"><xref:System.ServiceModel.Web.WebServiceHost> configura automaticamente a associação do ponto de extremidade para trabalhar com as configurações de segurança do Internet Information Services (IIS) associado quando usado em um diretório virtual seguro.</span><span class="sxs-lookup"><span data-stu-id="a214e-104"><xref:System.ServiceModel.Web.WebServiceHost> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</span></span>  
  
 <span data-ttu-id="a214e-105">Ao criar um ponto de extremidade HTTP padrão, o <xref:System.ServiceModel.Web.WebServiceHost> também desabilita a página de ajuda HTTP e a funcionalidade GET de WSDL Web Services Description Language () para o ponto de extremidade de metadados não interfere com o ponto de extremidade HTTP padrão.</span><span class="sxs-lookup"><span data-stu-id="a214e-105">When creating a default HTTP endpoint, the <xref:System.ServiceModel.Web.WebServiceHost> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
 <span data-ttu-id="a214e-106">Além disso, o <xref:System.ServiceModel.Web.WebServiceHost> classe adiciona o <xref:System.ServiceModel.Description.WebHttpBehavior> para todos os pontos de extremidade que não têm o comportamento e que têm um <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span><span class="sxs-lookup"><span data-stu-id="a214e-106">In addition, the <xref:System.ServiceModel.Web.WebServiceHost> class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span></span> <span data-ttu-id="a214e-107">Se todas as operações no serviço tem qualquer HTTP vazia corpos de solicitação ou lidar com o corpo da solicitação HTTP como um fluxo, em seguida, o <xref:System.ServiceModel.Web.WebServiceHost> configura automaticamente o mapeador de tipo de conteúdo apropriado para a associação.</span><span class="sxs-lookup"><span data-stu-id="a214e-107">If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <xref:System.ServiceModel.Web.WebServiceHost> automatically configures the appropriate content type mapper for the binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a214e-108">O exemplo a seguir mostra como usar o <xref:System.ServiceModel.Web.WebServiceHost> classe para hospedar um serviço que permite usar o modelo de programação WCF REST.</span><span class="sxs-lookup"><span data-stu-id="a214e-108">The following example shows how to use the <xref:System.ServiceModel.Web.WebServiceHost> class to host a service that makes use of the WCF REST programming model.</span></span>  
  
 [!code-csharp[WebServiceHost#0](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/program.cs#0)]
 [!code-vb[WebServiceHost#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a214e-109">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a214e-110">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Web.WebServiceHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Web.WebServiceHost : obj * Uri[] -&gt; System.ServiceModel.Web.WebServiceHost" Usage="new System.ServiceModel.Web.WebServiceHost (singletonInstance, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="a214e-111">Uma instância de serviço a ser usada como a instância singleton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-111">A service instance to be used as the singleton instance.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="a214e-112">O endereço básico do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-112">The base address of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a214e-113">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Web.WebServiceHost" /> com o endereço básico e a instância de servidor singleton especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified singleton server instance and base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a214e-114">O `baseAddresses` parâmetro pode consistir em um ou mais endereços de base.</span><span class="sxs-lookup"><span data-stu-id="a214e-114">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a214e-115">O exemplo a seguir mostra como chamar este construtor.</span><span class="sxs-lookup"><span data-stu-id="a214e-115">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#1)]
 [!code-vb[WebServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Web.WebServiceHost : Type * Uri[] -&gt; System.ServiceModel.Web.WebServiceHost" Usage="new System.ServiceModel.Web.WebServiceHost (serviceType, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="a214e-116">O tipo de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-116">The service type.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="a214e-117">O endereço básico do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-117">The base address of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a214e-118">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Web.WebServiceHost" /> com o endereço básico e o tipo de serviço especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified service type and base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a214e-119">O `baseAddresses` parâmetro pode consistir em um ou mais endereços de base.</span><span class="sxs-lookup"><span data-stu-id="a214e-119">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a214e-120">O exemplo a seguir mostra como chamar este construtor.</span><span class="sxs-lookup"><span data-stu-id="a214e-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#2](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#2)]
 [!code-vb[WebServiceHost#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberSignature Language="F#" Value="override this.OnOpening : unit -&gt; unit" Usage="webServiceHost.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a214e-121">Chamado quando a instância de <see cref="T:System.ServiceModel.Web.WebServiceHost" /> é aberta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a214e-121">Called when the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> instance opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a214e-122">O exemplo a seguir ocorre quando este método é chamado:</span><span class="sxs-lookup"><span data-stu-id="a214e-122">The following occurs when this method is called:</span></span>  
  
1.  <span data-ttu-id="a214e-123">Se <xref:System.ServiceModel.Web.WebServiceHost> não encontra nenhum ponto de extremidade na descrição do serviço, ele cria um ponto de extremidade padrão no endereço base do serviço.</span><span class="sxs-lookup"><span data-stu-id="a214e-123">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</span></span> <span data-ttu-id="a214e-124"><xref:System.ServiceModel.Web.WebServiceHost> desabilita automaticamente a página de ajuda HTTP e a funcionalidade de WSDL obter para que o ponto de extremidade de metadados não interfere com o ponto de extremidade HTTP padrão.</span><span class="sxs-lookup"><span data-stu-id="a214e-124"><xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
2.  <span data-ttu-id="a214e-125"><xref:System.ServiceModel.Web.WebServiceHost> verifica se todos os pontos de extremidade que usam o <xref:System.ServiceModel.WebHttpBinding> para ver se eles têm necessária <xref:System.ServiceModel.Description.WebHttpBehavior>.</span><span class="sxs-lookup"><span data-stu-id="a214e-125"><xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>.</span></span> <span data-ttu-id="a214e-126">Se não estiver presente, <xref:System.ServiceModel.Web.WebServiceHost> adiciona o <xref:System.ServiceModel.Description.WebHttpBehavior> para o ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="a214e-126">If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.</span></span>  
  
3.  <span data-ttu-id="a214e-127"><xref:System.ServiceModel.Web.WebServiceHost> Configura a associação do ponto de extremidade para trabalhar com as configurações de segurança do IIS associadas quando usado em um diretório virtual seguro.</span><span class="sxs-lookup"><span data-stu-id="a214e-127"><xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>