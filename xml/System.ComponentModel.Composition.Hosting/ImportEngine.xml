<Type Name="ImportEngine" FullName="System.ComponentModel.Composition.Hosting.ImportEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="18f100979627221526642576ba252ea3ccab05df" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportEngine : IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportEngine extends System.Object implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportEngine&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportEngine : IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type ImportEngine = class&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="97371-101">Executa a composição para contêineres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="97371-101">Performs composition for containers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97371-102">Essa classe é usada internamente pelo <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="97371-102">This class is used internally by <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="97371-103">Você deve geralmente não usá-lo, a menos que você estiver criando um contêiner.</span><span class="sxs-lookup"><span data-stu-id="97371-103">You should generally not use it unless you are authoring a container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="97371-104">Este tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="97371-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="97371-105">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="97371-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="97371-106">Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="97371-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="97371-107">Para descartar indiretamente dele, use uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="97371-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="97371-108">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico de interface.</span><span class="sxs-lookup"><span data-stu-id="97371-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97371-109">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine sourceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
      </Parameters>
      <Docs>
        <param name="sourceProvider">
          <span data-ttu-id="97371-110">O <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornece o acesso <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-110">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-111">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, bool isThreadSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, bool isThreadSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider, isThreadSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider, bool isThreadSafe);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider * bool -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine (sourceProvider, isThreadSafe)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceProvider">
          <span data-ttu-id="97371-112">O <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornece o acesso <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-112">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
        </param>
        <param name="isThreadSafe">
          <span data-ttu-id="97371-113">
            <see langword="true" /> se acesso thread-safe for obrigatório; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-113">
              <see langword="true" /> if thread safety is required; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-114">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />, opcionalmente em modo thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class, optionally in thread-safe mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider * System.ComponentModel.Composition.Hosting.CompositionOptions -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine (sourceProvider, compositionOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" />
      </Parameters>
      <Docs>
        <param name="sourceProvider">
          <span data-ttu-id="97371-115">O <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornece o acesso <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-115">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
        </param>
        <param name="compositionOptions">
          <span data-ttu-id="97371-116">Um objeto que especifica opções que afetam o comportamento do mecanismo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-116">An object that specifies options that affect the behavior of the engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-117">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> com as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class with the specified options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97371-118">Libera os recursos usados pelo <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-118">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="importEngine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97371-119">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-119">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97371-120">Chamar `Dispose` quando tiver terminado de usar o <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span><span class="sxs-lookup"><span data-stu-id="97371-120">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span></span> <span data-ttu-id="97371-121">O `Dispose` método deixa o <xref:System.ComponentModel.Composition.Hosting.ImportEngine> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="97371-121">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> in an unusable state.</span></span> <span data-ttu-id="97371-122">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.ComponentModel.Composition.Hosting.ImportEngine> para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Composition.Hosting.ImportEngine> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="97371-122">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> was occupying.</span></span>  
  
 <span data-ttu-id="97371-123">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="97371-123">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97371-124">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span><span class="sxs-lookup"><span data-stu-id="97371-124">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span></span> <span data-ttu-id="97371-125">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Composition.Hosting.ImportEngine> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="97371-125">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="importEngine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="97371-126">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-126">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-127">Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-127">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewImports">
      <MemberSignature Language="C#" Value="public void PreviewImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PreviewImports(class System.ComponentModel.Composition.Primitives.ComposablePart part, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreviewImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.PreviewImports : System.ComponentModel.Composition.Primitives.ComposablePart * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; unit" Usage="importEngine.PreviewImports (part, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="97371-128">A parte da qual visualizar as importações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-128">The part to preview the imports of.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="97371-129">A transação de composição a usar ou <see langword="null" /> para nenhuma transação de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-129">The composition transaction to use, or <see langword="null" /> for no composition transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-130">Visualiza todas as importações necessárias para a parte especificada para garantir que possam ser atendidas, sem de fato configurá-las.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-130">Previews all the required imports for the specified part to make sure that they can be satisfied, without actually setting them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseImports">
      <MemberSignature Language="C#" Value="public void ReleaseImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseImports(class System.ComponentModel.Composition.Primitives.ComposablePart part, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.ReleaseImports : System.ComponentModel.Composition.Primitives.ComposablePart * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; unit" Usage="importEngine.ReleaseImports (part, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="97371-131">A parte da qual liberar as importações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-131">The part to release the imports of.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="97371-132">A transação de composição a usar ou <see langword="null" /> para nenhuma transação de composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-132">The composition transaction to use, or <see langword="null" /> for no composition transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-133">Libera todas as exportações usadas para atender às importações da parte especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-133">Releases all the exports used to satisfy the imports of the specified part.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImports">
      <MemberSignature Language="C#" Value="public void SatisfyImports (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SatisfyImports(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImports (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SatisfyImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="member this.SatisfyImports : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="importEngine.SatisfyImports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="97371-134">A parte da qual satisfazer as importações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-134">The part to satisfy the imports of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-135">Atende às importações da parte especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-135">Satisfies the imports of the specified part.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="importEngine.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="97371-136">A parte da qual satisfazer as importações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-136">The part to satisfy the imports of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97371-137">Atende às importações da parte especificada sem registrá-la para recomposição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97371-137">Satisfies the imports of the specified part without registering them for recomposition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>