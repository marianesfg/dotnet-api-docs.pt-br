<Type Name="CompositionContainer" FullName="System.ComponentModel.Composition.Hosting.CompositionContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a0f8b811f864e936f225fd9c182ab754a1a2ff1" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51870398" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositionContainer extends System.ComponentModel.Composition.Hosting.ExportProvider implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositionContainer&#xA;Inherits ExportProvider&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContainer : System::ComponentModel::Composition::Hosting::ExportProvider, IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type CompositionContainer = class&#xA;    inherit ExportProvider&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Hosting.ExportProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e655a-101">Gerencia a composição de partes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e655a-101">Manages the composition of parts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-102">Um <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto serve para duas finalidades principais em um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e655a-102">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object serves two major purposes in an application.</span></span> <span data-ttu-id="e655a-103">Primeiro, ele mantém o controle de quais partes estão disponíveis para a composição e quais são suas dependências e executa a composição sempre que o conjunto de disponíveis partes alterações.</span><span class="sxs-lookup"><span data-stu-id="e655a-103">First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes.</span></span> <span data-ttu-id="e655a-104">Em segundo lugar, ele fornece os métodos pelos quais o aplicativo obtém as instâncias de partes compostas ou preenche as dependências de uma parte combinável.</span><span class="sxs-lookup"><span data-stu-id="e655a-104">Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e655a-105">Esse tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="e655a-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="e655a-106">Quando você terminar de usar o tipo, você deve descartá-lo diretamente ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="e655a-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="e655a-107">Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="e655a-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="e655a-108">Para descartá-los indiretamente, usar uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e655a-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="e655a-109">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico da interface.</span><span class="sxs-lookup"><span data-stu-id="e655a-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="e655a-110">Partes podem ser disponibilizadas para o contêiner seja diretamente ou por meio de <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e655a-110">Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property.</span></span> <span data-ttu-id="e655a-111">Todas as partes podem ser descobertas nesta <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> estão disponíveis para o contêiner para atender às importações, juntamente com quaisquer partes adicionadas diretamente.</span><span class="sxs-lookup"><span data-stu-id="e655a-111">All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.</span></span>  
  
 <span data-ttu-id="e655a-112">O <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> método permite que as partes instanciadas a ser adicionado a um contêiner existente.</span><span class="sxs-lookup"><span data-stu-id="e655a-112">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container.</span></span> <span data-ttu-id="e655a-113">Supondo que a composição for bem-sucedida, essas partes terão suas importações preenchidas com partes recuperadas do contêiner e suas exportações estarão disponíveis para outras partes.</span><span class="sxs-lookup"><span data-stu-id="e655a-113">Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts.</span></span> <span data-ttu-id="e655a-114">Importações marcadas como recomposta serão registradas para recomposição.</span><span class="sxs-lookup"><span data-stu-id="e655a-114">Imports marked as recomposable will be registered for recomposition.</span></span>  
  
 <span data-ttu-id="e655a-115">O <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> método permite que uma parte ter suas importações preenchidas sem serem adicionados ao contêiner.</span><span class="sxs-lookup"><span data-stu-id="e655a-115">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container.</span></span> <span data-ttu-id="e655a-116">Se a composição for bem-sucedida, as importações da parte serão preenchidas, mas exportações do bloco não estará disponíveis para outras partes e nenhum imports serão registrados para recomposição.</span><span class="sxs-lookup"><span data-stu-id="e655a-116">If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.</span></span>  
  
 <span data-ttu-id="e655a-117"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objetos sempre devem ser descartados.</span><span class="sxs-lookup"><span data-stu-id="e655a-117"><xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objects should always be disposed.</span></span> <span data-ttu-id="e655a-118">Quando o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> método é chamado, o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto também descarta todas as partes que ele foi criado.</span><span class="sxs-lookup"><span data-stu-id="e655a-118">When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object also disposes all the parts that it has created.</span></span>  
  
 <span data-ttu-id="e655a-119">Um <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto que pode ser acessado de vários threads deve ser construído com o `isThreadSafe` parâmetro definido como `true`, usando o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e655a-119">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must be constructed with the `isThreadSafe` parameter set to `true`, using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29> constructor.</span></span> <span data-ttu-id="e655a-120">O desempenho será um pouco mais lento quando `isThreadSafe` está `true`, portanto, é recomendável que você defina esse parâmetro como `false` em cenários de single-thread.</span><span class="sxs-lookup"><span data-stu-id="e655a-120">Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios.</span></span> <span data-ttu-id="e655a-121">O padrão é `false`.</span><span class="sxs-lookup"><span data-stu-id="e655a-121">The default is `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e655a-122">Um <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> nunca deve importar a mesmo ou para uma parte que tem uma referência a ele.</span><span class="sxs-lookup"><span data-stu-id="e655a-122">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> should never import itself, or a part that has a reference to it.</span></span> <span data-ttu-id="e655a-123">Essa referência pode permitir que uma parte não confiável obter acesso a todas as partes no contêiner.</span><span class="sxs-lookup"><span data-stu-id="e655a-123">Such a reference could allow an untrusted part to gain access all the parts in the container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e655a-124">No exemplo a seguir, um <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> é inicializado com um catálogo de objeto e é usado para preencher as importações de uma parte.</span><span class="sxs-lookup"><span data-stu-id="e655a-124">In the following example, a <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object is initialized with a catalog and is used to fill the imports of a part.</span></span> <span data-ttu-id="e655a-125">Este exemplo usa o modelo de programação atribuída.</span><span class="sxs-lookup"><span data-stu-id="e655a-125">This example uses the Attributed Programming Model.</span></span>  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/49b787ff-2741-4836-ad51-c3017dc592d4">
      <span data-ttu-id="e655a-126">Visão geral do modelo de programação atribuído</span>
      <span class="sxs-lookup">
        <span data-stu-id="e655a-126">Attributed Programming Model Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e655a-127">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e655a-128">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer providers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providers">
          <span data-ttu-id="e655a-129">Uma matriz de objetos <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornecem o acesso <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> ou <see langword="null" /> para definir <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> como um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-129">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-130">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> com os provedores de exportação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-130">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified export providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e655a-131">
            <paramref name="providers" /> contém um elemento que é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-131">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Hosting.CompositionOptions * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (compositionOptions, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="compositionOptions">
          <span data-ttu-id="e655a-132">Um objeto que especifica o comportamento desse contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-132">An object that specifies the behavior of this container.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="e655a-133">Uma matriz de objetos <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornecem o acesso <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> ou <see langword="null" /> para definir <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> como um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-133">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-134">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> com as opções e os provedores de exportação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified export providers and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e655a-135">
            <paramref name="providers" /> contém um elemento que é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-135">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="e655a-136">Um catálogo que fornece objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> para o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-136">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="e655a-137">Uma matriz de objetos <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornecem o acesso <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> ou <see langword="null" /> para definir <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> como um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-137">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-138">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> com os provedores de exportação e de catálogo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-138">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog and export providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e655a-139">
            <paramref name="providers" /> contém um elemento que é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-139">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, isThreadSafe As Boolean, ParamArray providers As ExportProvider())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, bool isThreadSafe, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * bool * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, isThreadSafe, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="e655a-140">Um catálogo que fornece objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> para o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-140">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </param>
        <param name="isThreadSafe">
          <span data-ttu-id="e655a-141">
            <see langword="true" /> se este objeto <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> deve ser thread-safe; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-141">
              <see langword="true" /> if this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object must be thread-safe; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="e655a-142">Uma matriz de objetos <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornecem o acesso <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> ou <see langword="null" /> para definir a propriedade <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> para um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-142">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> property to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-143">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> com o catálogo, modo thread-safe e provedores de exportação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-143">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog, thread-safe mode, and export providers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-144">Um <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto que pode ser acessado de vários threads deve definir o `isThreadSafe` parâmetro `true`.</span><span class="sxs-lookup"><span data-stu-id="e655a-144">A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must set the `isThreadSafe` parameter to `true`.</span></span> <span data-ttu-id="e655a-145">O desempenho será um pouco mais lento quando `isThreadSafe` está `true`, portanto, é recomendável que você defina esse parâmetro como `false` em cenários de single-thread.</span><span class="sxs-lookup"><span data-stu-id="e655a-145">Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios.</span></span> <span data-ttu-id="e655a-146">O padrão é `false`.</span><span class="sxs-lookup"><span data-stu-id="e655a-146">The default is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e655a-147">Um ou mais elementos de <paramref name="providers" /> são <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-147">One or more elements of <paramref name="providers" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, params System.ComponentModel.Composition.Hosting.ExportProvider[] providers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, class System.ComponentModel.Composition.Hosting.ExportProvider[] providers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContainer(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions, ... cli::array &lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ providers);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CompositionContainer : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.CompositionOptions * System.ComponentModel.Composition.Hosting.ExportProvider[] -&gt; System.ComponentModel.Composition.Hosting.CompositionContainer" Usage="new System.ComponentModel.Composition.Hosting.CompositionContainer (catalog, compositionOptions, providers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" />
        <Parameter Name="providers" Type="System.ComponentModel.Composition.Hosting.ExportProvider[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catalog">
          <span data-ttu-id="e655a-148">Um catálogo que fornece objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> para o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-148">A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </param>
        <param name="compositionOptions">
          <span data-ttu-id="e655a-149">Um objeto que especifica opções que afetam o comportamento do contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-149">An object that specifies options that affect the behavior of the container.</span>
          </span>
        </param>
        <param name="providers">
          <span data-ttu-id="e655a-150">Uma matriz de objetos <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> que fornecem o acesso <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> ou <see langword="null" /> para definir <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> como um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-150">An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects, or <see langword="null" /> to set <see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /> to an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-151">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> com os provedores de exportação, de opções e de catálogo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-151">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class with the specified catalog, options, and export providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e655a-152">
            <paramref name="providers" /> contém um elemento que é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-152">
              <paramref name="providers" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catalog As ComposablePartCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ Catalog { System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Catalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Usage="System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e655a-153">Obtém o <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> que fornece ao contêiner acesso a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-153">Gets the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> that provides the container access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e655a-154">O catálogo que fornece o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> acesso a produzido a partir de exportações <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-154">The catalog that provides the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to exports produced from <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> objects.</span>
          </span>
          <span data-ttu-id="e655a-155">O padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-155">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e655a-156">O objeto <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-156">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Compose">
      <MemberSignature Language="C#" Value="public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compose(class System.ComponentModel.Composition.Hosting.CompositionBatch batch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compose (batch As CompositionBatch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compose(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch);" />
      <MemberSignature Language="F#" Value="member this.Compose : System.ComponentModel.Composition.Hosting.CompositionBatch -&gt; unit" Usage="compositionContainer.Compose batch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </Parameters>
      <Docs>
        <param name="batch">
          <span data-ttu-id="e655a-157">Altera para o <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> para inclusão durante a composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-157">Changes to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> to include during the composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-158">Adiciona ou remove as partes no <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> especificado do contêiner e executa a composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-158">Adds or removes the parts in the specified <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /> from the container and executes composition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-159">Esse método é a principal maneira de adicionar ou remover partes do contêiner de diretamente.</span><span class="sxs-lookup"><span data-stu-id="e655a-159">This method is the primary way of directly adding or removing parts from the container.</span></span> <span data-ttu-id="e655a-160">O <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> sempre manterá um estado estável, composto.</span><span class="sxs-lookup"><span data-stu-id="e655a-160">The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> will always maintain a stable, composed state.</span></span> <span data-ttu-id="e655a-161">Portanto, chamar <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> com um vazio <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> nunca é necessária para iniciar a composição.</span><span class="sxs-lookup"><span data-stu-id="e655a-161">Therefore, calling <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> with an empty <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> is never necessary to start composition.</span></span> <span data-ttu-id="e655a-162">Em vez disso, chame o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> método sempre que precisar fazer alterações às partes disponíveis para o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="e655a-162">Instead, call the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method whenever you need to make changes to the parts available to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span>  
  
 <span data-ttu-id="e655a-163">O <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> pode conter partes a serem adicionadas e partes a ser removido.</span><span class="sxs-lookup"><span data-stu-id="e655a-163">The <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> can contain both parts to be added and parts to be removed.</span></span>  <span data-ttu-id="e655a-164">Recomposição ocorrerá apenas uma vez para cada chamada para <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>.</span><span class="sxs-lookup"><span data-stu-id="e655a-164">Recomposition will take place only once for each call to <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e655a-165">Neste exemplo simples, as três partes são criados e adicionados para o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, e uma parte é recuperada para mostrar todas as importações foram preenchidas.</span><span class="sxs-lookup"><span data-stu-id="e655a-165">In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled.</span></span> <span data-ttu-id="e655a-166">Este exemplo usa o modelo de programação atribuída.</span><span class="sxs-lookup"><span data-stu-id="e655a-166">This example uses the Attributed Programming Model.</span></span>  
  
 [!code-csharp[Composition.CompositionContainer.Compose#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer.compose/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer.Compose#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer.compose/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/49b787ff-2741-4836-ad51-c3017dc592d4">
          <span data-ttu-id="e655a-167">Visão geral do modelo de programação atribuído</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-167">Attributed Programming Model Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e655a-168">Libera os recursos usados pelo <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-168">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionContainer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e655a-169">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-169">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-170">Chame `Dispose` quando tiver terminado de usar o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="e655a-170">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="e655a-171">O `Dispose` método deixa o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="e655a-171">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state.</span></span> <span data-ttu-id="e655a-172">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> para que o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="e655a-172">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.</span></span>  
  
 <span data-ttu-id="e655a-173">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="e655a-173">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e655a-174">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="e655a-174">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="e655a-175">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="e655a-175">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="compositionContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e655a-176">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-176">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-177">Libera os recursos não gerenciados usados pelo <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-177">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="override this.GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="compositionContainer.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="e655a-178">O objeto que define as condições dos objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> a serem obtidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-178">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="e655a-179">A transação de composição a ser usada ou <see langword="null" /> para desabilitar a composição transacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-179">The composition transaction to use, or <see langword="null" /> to disable transactional composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-180">Retorna uma coleção de todas as exportações que correspondem às condições no objeto <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-180">Returns a collection of all exports that match the conditions in the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e655a-181">Uma coleção de todos os objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> neste objeto <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> que correspondem às condições especificadas pelo <paramref name="definition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-181">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects in this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object that match the conditions specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-182">Implementações não devem tratar a incompatibilidades de cardinalidade como erros e não devem lançar exceções para incompatibilidades de cardinalidade.</span><span class="sxs-lookup"><span data-stu-id="e655a-182">Implementations should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</span></span> <span data-ttu-id="e655a-183">Por exemplo, se a importação solicita exatamente uma exportação e o provedor tem nenhuma exportação correspondente ou em mais de um, o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A> método deverá retornar um vazio <xref:System.Collections.Generic.IEnumerable%601> coleção de <xref:System.ComponentModel.Composition.Primitives.Export> objetos.</span><span class="sxs-lookup"><span data-stu-id="e655a-183">For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A> method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt; Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.Composition.Hosting.ExportProvider&gt; Providers" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ReadOnlyCollection(Of ExportProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ Providers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::Composition::Hosting::ExportProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt;" Usage="System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e655a-184">Obtém os provedores de exportação que fornecem ao contêiner acesso a objetos <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> adicionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-184">Gets the export providers that provide the container access to additional <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e655a-185">Uma coleção de <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objetos que fornecem a <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> acessem adicionais <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-185">A collection of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> objects that provide the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> access to additional <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span>
          </span>
          <span data-ttu-id="e655a-186">O padrão é um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-186">The default is an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e655a-187">O <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-187">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExport">
      <MemberSignature Language="C#" Value="public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExport(class System.ComponentModel.Composition.Primitives.Export export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseExport(System::ComponentModel::Composition::Primitives::Export ^ export);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExport : System.ComponentModel.Composition.Primitives.Export -&gt; unit" Usage="compositionContainer.ReleaseExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="export" Type="System.ComponentModel.Composition.Primitives.Export" />
      </Parameters>
      <Docs>
        <param name="export">
          <span data-ttu-id="e655a-188">O <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> que precisa ser liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-188">The <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that needs to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-189">Libera o objeto <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> especificado do <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-189">Releases the specified <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-190">O comportamento desse método pode variar dependendo da implementação do <xref:System.ComponentModel.Composition.Hosting.ExportProvider> que produziu o <xref:System.ComponentModel.Composition.Primitives.Export> instância.</span><span class="sxs-lookup"><span data-stu-id="e655a-190">The behavior of this method may vary depending on the implementation of the <xref:System.ComponentModel.Composition.Hosting.ExportProvider> that produced the <xref:System.ComponentModel.Composition.Primitives.Export> instance.</span></span> <span data-ttu-id="e655a-191">Como regra, exportações não compartilhado devem ser desanexadas do contêiner.</span><span class="sxs-lookup"><span data-stu-id="e655a-191">As a rule, non-shared exports should be detached from the container.</span></span>  
  
 <span data-ttu-id="e655a-192">Por exemplo, o <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> será apenas a versão um <xref:System.ComponentModel.Composition.Primitives.Export> se ela for proveniente de uma <xref:System.ComponentModel.Composition.Primitives.ComposablePart> que foi construído em um <xref:System.ComponentModel.Composition.CreationPolicy.NonShared> contexto.</span><span class="sxs-lookup"><span data-stu-id="e655a-192">For example, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will only release an <xref:System.ComponentModel.Composition.Primitives.Export> if it comes from a <xref:System.ComponentModel.Composition.Primitives.ComposablePart> that was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy.NonShared> context.</span></span> <span data-ttu-id="e655a-193">Versão neste contexto significa percorrendo a cadeia de dependência da <xref:System.ComponentModel.Composition.Primitives.Export> objetos, referências do contêiner e chamar a desanexação `Dispose` no <xref:System.ComponentModel.Composition.Primitives.ComposablePart> objetos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="e655a-193">Release in this context means walking the dependency chain of the <xref:System.ComponentModel.Composition.Primitives.Export> objects, detaching references from the container and calling `Dispose` on the <xref:System.ComponentModel.Composition.Primitives.ComposablePart> objects as needed.</span></span> <span data-ttu-id="e655a-194">Se o <xref:System.ComponentModel.Composition.Primitives.Export> foi construído em um <xref:System.ComponentModel.Composition.CreationPolicy.Shared> contexto a <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> não fará nada, como especificado <xref:System.ComponentModel.Composition.Primitives.Export> que está sendo usado por outros solicitantes de maio.</span><span class="sxs-lookup"><span data-stu-id="e655a-194">If the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy.Shared> context the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will do nothing, as the specified <xref:System.ComponentModel.Composition.Primitives.Export> may being used by other requestors.</span></span> <span data-ttu-id="e655a-195">Eles só serão desanexados quando o contêiner é descartado.</span><span class="sxs-lookup"><span data-stu-id="e655a-195">Those will only be detached when the container is itself disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e655a-196">
            <paramref name="export" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-196">
              <paramref name="export" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExport&lt;T&gt; (Lazy&lt;T&gt; export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExport&lt;T&gt;(class System.Lazy`1&lt;!!T&gt; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExport(Of T) (export As Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void ReleaseExport(Lazy&lt;T&gt; ^ export);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExport : Lazy&lt;'T&gt; -&gt; unit" Usage="compositionContainer.ReleaseExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="export" Type="System.Lazy&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e655a-197">O tipo de exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-197">The type of the export.</span>
          </span>
        </typeparam>
        <param name="export">
          <span data-ttu-id="e655a-198">Uma referência indireta à exportação a ser removida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-198">An indirect reference to the export to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-199">Remove a exportação especificada de composição e libera seus recursos, se possível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-199">Removes the specified export from composition and releases its resources if possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports">
      <MemberSignature Language="C#" Value="public void ReleaseExports (System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports(class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports (exports As IEnumerable(Of Export))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;System.ComponentModel.Composition.Primitives.Export&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;" />
      </Parameters>
      <Docs>
        <param name="exports">
          <span data-ttu-id="e655a-200">Uma coleção de objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> a serem liberados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-200">A collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-201">Libera um conjunto de objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> do <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-201">Releases a set of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e655a-202">O comportamento desse método pode variar dependendo do contexto no qual o <xref:System.ComponentModel.Composition.Primitives.Export> foi construído.</span><span class="sxs-lookup"><span data-stu-id="e655a-202">The behavior of this method may vary depending on the context in which the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed.</span></span> <span data-ttu-id="e655a-203">Para obter mais informações, consulte o método <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>.</span><span class="sxs-lookup"><span data-stu-id="e655a-203">For more information, see the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e655a-204">
            <paramref name="exports" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-204">
              <paramref name="exports" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e655a-205">
            <paramref name="exports" /> contém um elemento que é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-205">
              <paramref name="exports" /> contains an element that is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExports&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports(Of T) (exports As IEnumerable(Of Lazy(Of T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;Lazy&lt;'T&gt;&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e655a-206">O tipo de exportações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-206">The type of the exports.</span>
          </span>
        </typeparam>
        <param name="exports">
          <span data-ttu-id="e655a-207">Uma coleção de referências indiretas às exportações a serem removidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-207">A collection of indirect references to the exports to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-208">Remove uma coleção de exportações da composição e libera seus recursos, se possível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-208">Removes a collection of exports from composition and releases their resources if possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public void ReleaseExports&lt;T,TMetadataView&gt; (System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseExports&lt;T, TMetadataView&gt;(class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseExports(Of T, TMetadataView) (exports As IEnumerable(Of Lazy(Of T, TMetadataView)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; void ReleaseExports(System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ exports);" />
      <MemberSignature Language="F#" Value="member this.ReleaseExports : seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt; -&gt; unit" Usage="compositionContainer.ReleaseExports exports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e655a-209">O tipo de exportações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-209">The type of the exports.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="e655a-210">O tipo de exibição de metadados dos exportações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-210">The type of the exports' metadata view.</span>
          </span>
        </typeparam>
        <param name="exports">
          <span data-ttu-id="e655a-211">Uma coleção de referências indiretas às exportações a serem removidas e seus metadados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-211">A collection of indirect references to the exports to be removed and their metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-212">Remove uma coleção de exportações da composição e libera seus recursos, se possível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-212">Removes a collection of exports from composition and releases their resources if possible.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="compositionContainer.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part">
          <span data-ttu-id="e655a-213">A parte da qual satisfazer as importações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-213">The part to satisfy the imports of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e655a-214">Satisfaz as importações do objeto <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> especificado sem registrá-lo para recomposição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-214">Satisfies the imports of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object without registering it for recomposition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e655a-215">O objeto <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-215">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e655a-216">
            <paramref name="part" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-216">
              <paramref name="part" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="e655a-217">Ocorreu um erro durante a composição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-217">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="e655a-218">O <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> conterá uma coleção dos erros ocorridos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e655a-218">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of the errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>