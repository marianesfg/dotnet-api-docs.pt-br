<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositionScopeDefinition.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536b7a4929a803d54a261b493077361ed779c3a36.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36b7a4929a803d54a261b493077361ed779c3a36</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.</source>
          <target state="translated">Representa um nó em uma árvore de catálogos com escopo, refletindo um catálogo subjacente e seus escopos filho.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para descartar o tipo diretamente, chame seu <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método em um <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para descartar indiretamente dele, use uma construção de linguagem, como <ph id="ph1">`using`</ph> (em c#) ou <ph id="ph2">`Using`</ph> (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tópico de interface.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
          <source>The underlying catalog for this catalog.</source>
          <target state="translated">O catálogo subjacente para este catálogo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">Uma coleção de escopos filho deste catálogo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class with the specified underlying catalog and children.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> com o catálogo subjacente especificado e filhos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>The underlying catalog for this catalog.</source>
          <target state="translated">O catálogo subjacente para este catálogo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">Uma coleção de escopos filho deste catálogo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>The public surface for this catalog.</source>
          <target state="translated">A superfície pública para este catálogo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.CompositionScopeDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class with the specified underlying catalog, children, and public surface.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> com o catálogo subjacente especificado, filhos e a superfície pública.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed">
          <source>Occurs when the underlying catalog has changed, if that catalog supports notifications.</source>
          <target state="translated">Ocorre quando o catálogo subjacente foi alterado, se esse catálogo dá suporte a notificações.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing">
          <source>Occurs when the underlying catalog is changing, if that catalog supports notifications.</source>
          <target state="translated">Ocorre quando o catálogo subjacente está sendo alterado, se esse catálogo dá suporte a notificações.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children">
          <source>Gets the child scopes of this catalog.</source>
          <target state="translated">Obtém os escopos filho deste catálogo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Children">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">Uma coleção de escopos filho deste catálogo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados, <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph> class.</source>
          <target state="translated">Chamado pelos métodos <ph id="ph1">&lt;see langword="Dispose()" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize()" /&gt;</ph> para liberar os recursos gerenciados e não gerenciados usados pela instância atual da classe <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>This method is called only by the public <ph id="ph1">`Dispose()`</ph> and <ph id="ph2">`Finalize()`</ph> methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the <ph id="ph3">`Dispose(Boolean)`</ph> method should be used as follows:</source>
          <target state="translated">Este método é chamado somente pelo público <ph id="ph1">`Dispose()`</ph> e <ph id="ph2">`Finalize()`</ph> métodos; não chame este método diretamente. Quando você implementa o padrão dispose, o parâmetro booliano do <ph id="ph3">`Dispose(Boolean)`</ph> método deve ser usado da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Dispose()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`true`</ph> to release both managed and unmanaged resources.</source>
          <target state="translated">O <ph id="ph1">`Dispose()`</ph> deve chamar o método do objeto atual <ph id="ph2">`Dispose(Boolean)`</ph> com o parâmetro booliano definido como <ph id="ph3">`true`</ph> para liberar recursos gerenciados e não gerenciados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`Finalize()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`false`</ph> to release only unmanaged resources.</source>
          <target state="translated">O <ph id="ph1">`Finalize()`</ph> deve chamar o método do objeto atual <ph id="ph2">`Dispose(Boolean)`</ph> com o parâmetro booliano definido como <ph id="ph3">`false`</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Dispose(System.Boolean)">
          <source>For more information, see .</source>
          <target state="translated">Para obter mais informações, consulte.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">Retorna um enumerador que itera por meio do catálogo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetEnumerator">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar por meio do catálogo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Conditions that specify which exports to match.</source>
          <target state="translated">Condições que especificam a quais exportações corresponder.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Gets a collection of exports that match the conditions specified by the import definition.</source>
          <target state="translated">Obtém uma coleção de exportações que correspondem às condições especificadas pela definição de importação.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>A collection of exports that match the specified conditions.</source>
          <target state="translated">Uma coleção de exportações que correspondem às condições especificadas.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Contains data for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph> event.</source>
          <target state="translated">Contém dados para o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Contains data for the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph> event.</source>
          <target state="translated">Contém dados para o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface">
          <source>Gets a collection of parts visible to the parent scope of this catalog.</source>
          <target state="translated">Obtém uma coleção de partes visíveis para o escopo pai deste catálogo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.PublicSurface">
          <source>A collection of parts visible to the parent scope of this catalog.</source>
          <target state="translated">Uma coleção de partes visíveis ao escopo pai deste catálogo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>