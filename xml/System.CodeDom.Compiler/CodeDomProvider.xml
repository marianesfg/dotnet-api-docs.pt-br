<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b363c079585f8a6b7ddeaeb04c81ee9d77dae6d" />
    <Meta Name="ms.sourcegitcommit" Value="69952c4c5555f8f4bed66798cdd71228d3a9eb98" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/18/2018" />
    <Meta Name="ms.locfileid" Value="39104841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CodeDomProvider = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fdec4-101">Fornece uma classe base para implementações <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="fdec4-102">Esta classe é abstrata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-103">Um <xref:System.CodeDom.Compiler.CodeDomProvider> pode ser usado para criar e recuperar instâncias de geradores de código e compiladores de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="fdec4-104">Geradores de código podem ser usados para gerar o código em um determinado idioma e compiladores de código podem ser usados para compilar o código em assemblies.</span><span class="sxs-lookup"><span data-stu-id="fdec4-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-105">No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], os métodos disponíveis no gerador de código e compilador de código estão disponíveis diretamente com o provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="fdec4-106">Você não precisará chamar <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> ou <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> para acessar os métodos e esses métodos são marcados como obsoletos.</span><span class="sxs-lookup"><span data-stu-id="fdec4-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="fdec4-107">Isso se aplica a preexistente, bem como novas implementações do provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="fdec4-108">Um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação normalmente fornece código de geração e/ou código interfaces de compilação para geração de código e gerenciamento de compilação para uma única linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="fdec4-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="fdec4-109">Vários idiomas são compatíveis com <xref:System.CodeDom.Compiler.CodeDomProvider> implementações que acompanham o [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fdec4-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="fdec4-110">Essas linguagens incluem c#, Visual Basic, C++ e JScript.</span><span class="sxs-lookup"><span data-stu-id="fdec4-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="fdec4-111">Os desenvolvedores ou fornecedores do compilador podem implementar o <xref:System.CodeDom.Compiler.ICodeGenerator> e <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces e forneça um <xref:System.CodeDom.Compiler.CodeDomProvider> que estende o suporte do CodeDOM para outras linguagens de programação.</span><span class="sxs-lookup"><span data-stu-id="fdec4-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="fdec4-112">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) de arquivo fornece um mecanismo para desenvolvedores e fornecedores de compilador adicionar definições de configuração para adicionais <xref:System.CodeDom.Compiler.CodeDomProvider>implementações.</span><span class="sxs-lookup"><span data-stu-id="fdec4-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="fdec4-113">O <xref:System.CodeDom.Compiler.CodeDomProvider> classe fornece métodos estáticos para descobrir e enumerar o <xref:System.CodeDom.Compiler.CodeDomProvider> implementações em um computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="fdec4-114">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método retorna as configurações para todos os <xref:System.CodeDom.Compiler.CodeDomProvider> implementações em um computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="fdec4-115">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método retorna as configurações para um determinado <xref:System.CodeDom.Compiler.CodeDomProvider> implementação, com base no nome da linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="fdec4-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="fdec4-116">O <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método retorna uma instância de um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="fdec4-117">Para obter mais detalhes sobre configurações de idioma do provedor no arquivo de configuração, consulte [esquema de configurações de provedor de linguagem e compilador](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span><span class="sxs-lookup"><span data-stu-id="fdec4-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-118">Essa classe faz uma demanda de link e uma demanda de herança no nível de classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="fdec4-119">Um <xref:System.Security.SecurityException> será lançada se o chamador imediato ou a classe derivada não tem permissão de confiança total.</span><span class="sxs-lookup"><span data-stu-id="fdec4-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="fdec4-120">Para obter detalhes sobre demandas de segurança, consulte [demandas de Link](~/docs/framework/misc/link-demands.md) e [demandas de herança](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="fdec4-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-121">O programa de exemplo a seguir pode gerar e compilar o código-fonte com base em um modelo de CodeDOM de um programa que imprime "Hello World" usando o <xref:System.Console> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="fdec4-122">Uma interface de usuário do Windows Forms é fornecida.</span><span class="sxs-lookup"><span data-stu-id="fdec4-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="fdec4-123">O usuário pode selecionar o destino de linguagem com várias seleções de programação: c#, Visual Basic e JScript.</span><span class="sxs-lookup"><span data-stu-id="fdec4-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="fdec4-124">para confiança total do chamador imediato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="fdec4-125">Esta classe não pode ser usada pelo código parcialmente confiável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="fdec4-126">para confiança total de herdeiros.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="fdec4-127">Esta classe não pode ser herdada pelo código parcialmente confiável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="fdec4-128">
        <para>Nas versões do .NET Framework 1.0 e 1.1, provedores de código consistem em implementações de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, e <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. No [! INCLUDE[dnprdnlong](~/Includes/dnprdnlong-MD.MD)], o <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, e <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> métodos estão obsoletos e os métodos <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> e <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> estão disponíveis diretamente no <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe. Você deve substituir esses métodos em sua implementação de provedor de código e chama os métodos de base.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="fdec4-128">
          <para>In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class. You should override those methods in your code provider implementation and not call the base methods.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-129">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-129">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-130">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-130">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-131">Esta classe não pode ser usada pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-131">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromDom (options, compilationUnits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="fdec4-132">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica as configurações da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-132">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="fdec4-133">Uma matriz do tipo <see cref="T:System.CodeDom.CodeCompileUnit" /> que indica o código a ser compilado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-133">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-134">Compila um assembly com base nas árvores <see cref="N:System.CodeDom" /> contidas na matriz especificada de objetos <see cref="T:System.CodeDom.CodeCompileUnit" />, usando as configurações de compilador especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-134">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-135">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica os resultados da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-135">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-136">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeCompiler> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-136">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-137">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-137">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-138">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeCompiler> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-138">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-139">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-139">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-140">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para compatibilidade com provedores preexistentes que usar compiladores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um compilador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-140">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromFile (options, fileNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="fdec4-141">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica as configurações da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-141">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="fdec4-142">Uma matriz com os nomes dos arquivos a serem compilados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-142">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-143">Compila um assembly do código-fonte contido nos arquivos especificados, usando as configurações de compilador especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-143">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-144">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica os resultados da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-144">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-145">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeCompiler> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-145">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-146">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-146">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-147">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeCompiler> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-147">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-148">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-148">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-149">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para compatibilidade com provedores preexistentes que usar compiladores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um compilador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-149">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromSource (options, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="fdec4-150">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica as configurações do compilador para esta compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-150">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="fdec4-151">Uma matriz de cadeias de código-fonte a ser compilada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-151">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-152">Compila um assembly da matriz especificada de cadeias de caracteres que contém o código-fonte, usando as configurações do compilador especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-152">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-153">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica os resultados da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-153">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-154">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeCompiler> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-154">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-155">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-155">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-156">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeCompiler> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-156">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-157">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-157">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-158">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para compatibilidade com provedores preexistentes que usar compiladores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um compilador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-158">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="codeDomProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-159">Quando substituído em uma classe derivada, cria um novo compilador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-159">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-160">Um <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> que pode ser usado para a compilação de representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-160">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-161">Esse método é obsoleto o [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fdec4-161">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="fdec4-162">A alternativa recomendada é chamar o <xref:System.CodeDom.Compiler.ICodeCompiler> métodos que estão diretamente disponíveis no provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-162">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-163">
            <para>No [! INCLUDE[dnprdnlong](~/Includes/dnprdnlong-MD.MD)], você deve implementar o <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> membros em de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe e lançar um <see cref="T:System.NotSupportedException" /> quando este método é chamado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-163">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string&#xA;override this.CreateEscapedIdentifier : string -&gt; string" Usage="codeDomProvider.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdec4-164">A cadeia de caracteres para a qual criar um identificador de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-164">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-165">Cria um identificador de escape para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-165">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-166">O identificador de escape para o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-166">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> testes se o identificador está em conflito com qualquer reservadas ou palavras-chave e nesse caso, retorna um nome equivalente com formatação de código de escape de idioma específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="fdec4-168">Isso é chamado um identificador de escape.</span><span class="sxs-lookup"><span data-stu-id="fdec4-168">This is referred to an escaped identifier.</span></span> <span data-ttu-id="fdec4-169">O identificador de escape contém o mesmo `value` , mas tem a formatação de código de escape adicionado para diferenciar o identificador da palavra-chave.</span><span class="sxs-lookup"><span data-stu-id="fdec4-169">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="fdec4-170">Dois exemplos de implementação são anteriores a `value` com "@" ou colchetes os `value` com "[" e "]".</span><span class="sxs-lookup"><span data-stu-id="fdec4-170">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-171">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-171">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-172">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-172">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-173">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-173">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-174">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-174">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-175">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-175">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-176">Quando substituído em uma classe derivada, cria um novo gerador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-176">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-177">Quando substituído em uma classe derivada, cria um novo gerador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-177">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-178">Um <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que pode ser usado para gerar representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-178">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-179">Esse método é obsoleto o [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fdec4-179">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="fdec4-180">A alternativa recomendada é chamar o <xref:System.CodeDom.Compiler.ICodeGenerator> métodos que estão diretamente disponíveis no <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-180">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-181">
            <para>No [! INCLUDE[dnprdnlong](~/Includes/dnprdnlong-MD.MD)], você deve implementar o <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> membros em de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe e lançar um <see cref="T:System.NotSupportedException" /> quando este método é chamado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-181">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="fdec4-182">Um <see cref="T:System.IO.TextWriter" /> a usar para saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-182">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-183">Quando substituído em uma classe derivada, cria um novo gerador de código usando o <see cref="T:System.IO.TextWriter" /> especificado para saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-183">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-184">Um <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que pode ser usado para gerar representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-184">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-185">Esse método usa especificado <xref:System.IO.TextWriter> para saída.</span><span class="sxs-lookup"><span data-stu-id="fdec4-185">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="fdec4-186">Esse método dá suporte a mais geração de código otimizado que atualizará incrementalmente o código-fonte.</span><span class="sxs-lookup"><span data-stu-id="fdec4-186">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-187">A implementação de classe base chama o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método, que está obsoleto na [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] e resulta em uma <xref:System.NotSupportedException> se um <xref:System.CodeDom.Compiler.ICodeGenerator> objeto não será retornado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-187">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fdec4-188">O nome do arquivo para o qual gerar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-188">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-189">Quando substituído em uma classe derivada, cria um novo gerador de código usando o nome do arquivo especificado para saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-189">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-190">Um <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que pode ser usado para gerar representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-190">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-191">Esse método usa o nome de arquivo especificado para saída.</span><span class="sxs-lookup"><span data-stu-id="fdec4-191">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-192">A implementação de classe base chama o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método, que está obsoleto na [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] e resulta em uma <xref:System.NotSupportedException> se um <xref:System.CodeDom.Compiler.ICodeGenerator> objeto não será retornado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-192">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser&#xA;override this.CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser" Usage="codeDomProvider.CreateParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-193">Quando substituído em uma classe derivada, cria um novo analisador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-193">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-194">Um <see cref="T:System.CodeDom.Compiler.ICodeParser" /> que pode ser usado para analisar código-fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-194">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="fdec4-195">A implementação base sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-195">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-196">Obtém uma instância <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para o idioma especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-196">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="fdec4-197">O nome do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-197">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-198">Obtém uma instância <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para o idioma especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-198">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-199">Um provedor CodeDOM implementado para o nome do idioma especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-199">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-200">Esse método é mais comumente usado para criar uma instância de um provedor de código em um aplicativo que pode, opcionalmente, use um dos vários provedores.</span><span class="sxs-lookup"><span data-stu-id="fdec4-200">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="fdec4-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> permite que você especifique, em tempo de execução, o provedor de código que você deseja criar uma instância.</span><span class="sxs-lookup"><span data-stu-id="fdec4-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="fdec4-202">Se você souber em tempo de design, qual código é de provedor a ser usado, você deve criar uma instância do provedor de código em vez de usar o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fdec4-202">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="fdec4-203">O <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método retorna um <xref:System.CodeDom.Compiler.CodeDomProvider> instância de um nome de idioma específico; ele é semelhante a chamar o <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> método com o tipo de provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="fdec4-203">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="fdec4-204">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> quando você deseja localizar dinamicamente uma implementação de provedor configurado para um nome de idioma.</span><span class="sxs-lookup"><span data-stu-id="fdec4-204">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="fdec4-205">Se mais de uma implementação de provedor estiver configurada para o nome do idioma, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> retorna uma instância do provedor para o último elemento de configuração correspondente.</span><span class="sxs-lookup"><span data-stu-id="fdec4-205">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="fdec4-206">Use o <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> sobrecarga do método quando desejar que uma implementação de provedor de idioma específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-206">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="fdec4-207">Por exemplo, use o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método para obter uma instância do provedor que dá suporte a nome do idioma `"CSharp"`; usar o <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> sobrecarga de método para obter uma instância do provedor especificamente para o <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="fdec4-207">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="fdec4-208">Você deve usar o [\], CultureInfo, objeto\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType > método se você tiver vários provedores de código para um idioma e desejar criar uma instância de um provedor de código específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-208">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="fdec4-209">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método verifica se a implementação de pelo menos um provedor dá suporte a um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-209">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="fdec4-210">Você pode validar um nome de idioma usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> antes de passá-lo para <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdec4-210">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="fdec4-211">Se você passar um nome de idioma sem suporte para <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> um <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> é gerada.</span><span class="sxs-lookup"><span data-stu-id="fdec4-211">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="fdec4-212">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método pode ser usado para determinar todas <xref:System.CodeDom.Compiler.CodeDomProvider> implementações em um computador, incluindo implementações adicionais fornecidas por desenvolvedores e fornecedores de compilador que são identificados na [ &lt;System. CodeDom &gt; Elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) no arquivo de configuração do computador (Machine. config).</span><span class="sxs-lookup"><span data-stu-id="fdec4-212">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="fdec4-213">O <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método retorna uma instância de um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-213">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="fdec4-214">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fdec4-214">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-215">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="fdec4-215">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="fdec4-216">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-216">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fdec4-217">O <paramref name="language" /> não tem um provedor configurado neste computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-217">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fdec4-218">O <paramref name="language" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-218">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fdec4-219">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-220">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-220">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-221">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-221">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider (language, providerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="fdec4-222">O nome do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-222">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="fdec4-223">Uma coleção de opções do provedor do arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-223">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-224">Obtém uma instância <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para as opções de idioma e provedor especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-224">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-225">Um provedor CodeDOM implementado para as opções e o nome do idioma especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-225">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-226">Esse método é mais comumente usado para criar uma instância de um provedor de código em um aplicativo que pode, opcionalmente, use um dos vários provedores.</span><span class="sxs-lookup"><span data-stu-id="fdec4-226">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="fdec4-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> permite que você especificar em tempo de execução, a versão do provedor de código que você deseja criar uma instância.</span><span class="sxs-lookup"><span data-stu-id="fdec4-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="fdec4-228">Se você souber em tempo de design, qual código é de provedor a ser usado, você deve criar uma instância do que provedor de código em vez de usar o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="fdec4-228">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="fdec4-229">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> quando você deseja localizar dinamicamente uma implementação de provedor configurado para um idioma específico e as opções.</span><span class="sxs-lookup"><span data-stu-id="fdec4-229">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="fdec4-230">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fdec4-230">Language names are case-insensitive.</span></span> <span data-ttu-id="fdec4-231">Para obter informações sobre as opções de provedor com suporte, consulte a documentação específica do provedor de CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="fdec4-231">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="fdec4-232">Para obter informações sobre validação de um provedor e um provedor de chamada se mais de uma implementação de provedor estiver configurada para o nome do idioma, consulte a seção comentários do <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="fdec4-232">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-233">O exemplo a seguir mostra como criar uma instância de um provedor usando o `providerOptions` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fdec4-233">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string&#xA;override this.CreateValidIdentifier : string -&gt; string" Usage="codeDomProvider.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdec4-234">A cadeia de caracteres para a qual gerar um identificador válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-234">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-235">Cria um identificador válido para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-235">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-236">Um identificador válido para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-236">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> Testa se o identificador está em conflito com reservadas ou palavras-chave, e se assim, tenta retornar um identificador válido do nome que não está em conflito.</span><span class="sxs-lookup"><span data-stu-id="fdec4-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="fdec4-238">Normalmente é o identificador retornado é apenas um pouco modificado para diferenciar o identificador da palavra-chave; Por exemplo, o nome pode ser precedido pelo caractere de sublinhado ("_").</span><span class="sxs-lookup"><span data-stu-id="fdec4-238">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-239">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-239">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-240">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-240">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-241">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-241">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-242">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-242">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-243">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-243">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-244">Obtém a extensão de nome de arquivo padrão a ser usada para arquivos de código-fonte na linguagem de programação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-244">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdec4-245">Uma extensão de nome de arquivo correspondentes à extensão dos arquivos de origem do idioma atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-245">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="fdec4-246">A implementação base sempre retorna <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-246">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-247">Essa propriedade é usada por geradores de código e compiladores de código para indicar quais extensões de arquivo devem ser gerados ou usados.</span><span class="sxs-lookup"><span data-stu-id="fdec4-247">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-248">O exemplo de código a seguir cria uma instância de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fdec4-248">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fdec4-249">O exemplo exibe o nome do provedor, o hash padrão e o código de extensão de nome para a nova instância do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-249">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromCompileUnit (compileUnit, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="fdec4-250">Um <see cref="T:System.CodeDom.CodeCompileUnit" /> para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-250">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="fdec4-251">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-251">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="fdec4-252">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-252">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-253">Gera código para a unidade de compilação CodeDOM (Modelo de Objeto do Documento de Código) especificada e envia-a para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-253">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-254">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-254">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-255">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-255">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-256">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-256">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-257">O exemplo de código a seguir mostra o uso do <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> método para gerar código para um aplicativo "Hello World" de um <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="fdec4-257">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="fdec4-258">Este exemplo é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-258">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-259">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-259">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-260">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-260">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromExpression (expression, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="fdec4-261">Um objeto <see cref="T:System.CodeDom.CodeExpression" /> que indica a expressão para a qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-261">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="fdec4-262">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-262">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="fdec4-263">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-263">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-264">Gera código para a expressão CodeDOM (Modelo de Objeto do Documento de Código) especificada e o envia para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-264">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-265">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-265">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-266">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-266">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-267">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-267">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-268">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-268">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-269">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-269">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="fdec4-270">Um objeto <see cref="T:System.CodeDom.CodeTypeMember" /> que indica o membro para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-270">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="fdec4-271">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-271">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="fdec4-272">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-272">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-273">Gera código para a declaração de membro CodeDOM (Modelo de Objeto do Documento de Código) especificada e o envia para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-273">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-274">A implementação de classe base gera uma <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="fdec4-274">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="fdec4-275">Consulte <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> para obter a documentação que descreve uma implementação deste método.</span><span class="sxs-lookup"><span data-stu-id="fdec4-275">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-276">O exemplo de código a seguir mostra o uso do <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> método conforme implementado pela <xref:Microsoft.CSharp.CSharpCodeProvider> e <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span><span class="sxs-lookup"><span data-stu-id="fdec4-276">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-277">Esse método não é substituído em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-277">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromNamespace (codeNamespace, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="fdec4-278">Um objeto <see cref="T:System.CodeDom.CodeNamespace" /> que indica o namespace para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-278">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="fdec4-279">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-279">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="fdec4-280">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-280">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-281">Gera código para o namespace CodeDOM (Modelo de Objeto do Documento de Código) especificado e envia-o para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-281">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-282">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-282">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-283">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-283">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-284">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-284">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-285">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-285">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-286">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-286">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromStatement (statement, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="fdec4-287">Um <see cref="T:System.CodeDom.CodeStatement" /> que contém os elementos de CodeDOM para os quais gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-287">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="fdec4-288">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-288">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="fdec4-289">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-289">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-290">Gera código para a instrução CodeDOM (Modelo de Objeto do Documento de Código) especificada e envia-o para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-290">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-291">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-291">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-292">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-292">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-293">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-293">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-294">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-294">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-295">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-295">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromType (codeType, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="fdec4-296">Um objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que indica o tipo para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-296">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="fdec4-297">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-297">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="fdec4-298">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-298">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-299">Gera código para a declaração de tipo CodeDOM (Modelo de Objeto do Documento de Código) especificada e envia-o para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-299">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-300">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-300">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-301">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-301">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-302">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-302">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-303">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-303">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-304">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-304">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberSignature Language="F#" Value="static member GetAllCompilerInfo : unit -&gt; System.CodeDom.Compiler.CompilerInfo[]" Usage="System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-305">Retorna as configurações de compilador e de provedor de linguagem de programação para este computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-305">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-306">Uma matriz do tipo <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> que representa as configurações de todas as implementações de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configuradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-306">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-307">Use o <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método para enumerar as configurações do provedor de idioma em um computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-307">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-308">No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], os provedores de linguagem padrão fornecidos pelo .NET Framework não são especificados na [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) configuração do compilador seção e não pode ser removido, então esse método retorna informações sobre os provedores padrão e qualquer especificado no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="fdec4-308">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-309">O exemplo de código a seguir enumera os provedores de linguagem no computador e exibe as configurações de compilador e de configuração para cada provedor de linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="fdec4-309">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="fdec4-310">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-310">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fdec4-311">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-311">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-312">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-312">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-313">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-313">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member GetCompilerInfo : string -&gt; System.CodeDom.Compiler.CompilerInfo" Usage="System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="fdec4-314">Um nome de linguagem de programação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-314">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-315">Retorna as configurações de compilador e de provedor de linguagem de programação para a linguagem de programação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-315">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-316">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> populado com as configurações da implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-316">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-317">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-317">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="fdec4-318">Para obter informações sobre arquivos de configuração de máquina, consulte a seção arquivos de configuração de máquina [Configurando aplicativos](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span><span class="sxs-lookup"><span data-stu-id="fdec4-318">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="fdec4-319">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método pesquisa cada elemento de configuração do provedor para o nome do idioma especificado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-319">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="fdec4-320">Retornado <xref:System.CodeDom.Compiler.CompilerInfo> instância contém as configurações de compilador e provedor de idioma configurado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-320">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="fdec4-321">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método verifica se a implementação de pelo menos um provedor dá suporte a um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-321">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="fdec4-322">Você pode validar um nome de idioma usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> antes de passá-lo para <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdec4-322">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="fdec4-323">Isso impede que lançar uma <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> quando você acessa o <xref:System.CodeDom.Compiler.CompilerInfo> instância para um nome de idioma sem suporte.</span><span class="sxs-lookup"><span data-stu-id="fdec4-323">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="fdec4-324">Se mais de uma implementação de provedor estiver configurada para o nome do idioma de entrada, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> retorna as configurações do provedor correspondente último elemento de configuração.</span><span class="sxs-lookup"><span data-stu-id="fdec4-324">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="fdec4-325">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fdec4-325">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-326">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="fdec4-326">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="fdec4-327">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-327">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="fdec4-328">O <paramref name="language" /> não tem um provedor configurado neste computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-328">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fdec4-329">O <paramref name="language" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-329">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fdec4-330">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-330">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-331">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-331">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-332">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-332">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : Type -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="codeDomProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fdec4-333">O tipo de objeto para o qual um conversor de tipo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-333">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-334">Obtém um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo de dados especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-334">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-335">Um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo especificado ou então <see langword="null" />, se um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo especificado não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-335">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-336">Uma classe derivada pode substituir esse método para fornecer tipos específicos de conversores de tipo para tipos de dados específicos.</span><span class="sxs-lookup"><span data-stu-id="fdec4-336">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member GetLanguageFromExtension : string -&gt; string" Usage="System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="fdec4-337">Uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-337">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-338">Retorna um nome de linguagem de programação associado com a extensão de nome de arquivo especificada, conforme configurado na seção de configuração do compilador <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-338">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-339">Um nome de linguagem de programação associado com a extensão de nome de arquivo, conforme configurado nas configurações do compilador <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-339">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-340">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) do arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação sobre o computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-340">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="fdec4-341">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> método pesquisa cada elemento de configuração do provedor para a extensão de nome de arquivo especificado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-341">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="fdec4-342">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> método verifica se a implementação de pelo menos um provedor dá suporte a uma extensão de nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="fdec4-342">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="fdec4-343">Você pode validar uma extensão de nome de arquivo usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> antes de passá-lo para <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdec4-343">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="fdec4-344">Isso impede <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> acione um <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> para uma extensão de nome de arquivo sem suporte.</span><span class="sxs-lookup"><span data-stu-id="fdec4-344">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="fdec4-345">Se uma implementação de provedor oferecer suporte a extensão de nome de arquivo de entrada e há vários idiomas com suporte configurados para esse provedor, em seguida, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> retorna o primeiro nome de idioma para o provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-345">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="fdec4-346">Se mais de uma implementação de provedor estiver configurada para a extensão de nome de arquivo de entrada, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> retorna o nome do idioma do provedor correspondente último elemento de configuração.</span><span class="sxs-lookup"><span data-stu-id="fdec4-346">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="fdec4-347">Nomes de idiomas e as extensões de nome de arquivo diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fdec4-347">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-348">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para uma extensão de nome de arquivo de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="fdec4-348">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="fdec4-349">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-349">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="fdec4-350">O <paramref name="extension" /> não tem um provedor de linguagem de programação configurado neste computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-350">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fdec4-351">O <paramref name="extension" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-351">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fdec4-352">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-352">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-353">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-353">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-354">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-354">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeDomProvider.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fdec4-355">Um <see cref="T:System.CodeDom.CodeTypeReference" /> que indica o tipo a retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-355">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-356">Obtém o tipo indicado pelo <see cref="T:System.CodeDom.CodeTypeReference" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-356">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-357">Uma representação de texto do tipo especificado, formatado para a linguagem de programação na qual o código é gerado por este gerador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-357">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="fdec4-358">No Visual Basic, por exemplo, passar um <see cref="T:System.CodeDom.CodeTypeReference" /> para o tipo <see cref="T:System.Int32" /> retorna "Integer".</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-358">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-359">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-359">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-360">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-360">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-361">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-361">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-362">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-362">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-363">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-363">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member IsDefinedExtension : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="fdec4-364">Uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-364">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-365">Testa se uma extensão de nome de arquivo tem uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> associada configurada no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-365">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-366">
            <see langword="true" /> se uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> está configurada para a extensão de nome de arquivo especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-366">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-367">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) do arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação sobre o computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-367">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="fdec4-368">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> método pesquisa os elementos de configuração do provedor para a extensão de nome de arquivo especificado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-368">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="fdec4-369">Extensões de nome de arquivo diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fdec4-369">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-370">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para uma extensão de nome de arquivo de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="fdec4-370">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="fdec4-371">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-371">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fdec4-372">O <paramref name="extension" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-372">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fdec4-373">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-373">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-374">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-374">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-375">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-375">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member IsDefinedLanguage : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="fdec4-376">O nome do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-376">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-377">Testa se uma linguagem de programação tem uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-377">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-378">
            <see langword="true" /> se uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> está configurada para a linguagem de programação especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-378">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-379">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) do arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação sobre o computador.</span><span class="sxs-lookup"><span data-stu-id="fdec4-379">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="fdec4-380">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método pesquisa os elementos de configuração do provedor para o nome do idioma especificado.</span><span class="sxs-lookup"><span data-stu-id="fdec4-380">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="fdec4-381">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="fdec4-381">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdec4-382">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="fdec4-382">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="fdec4-383">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="fdec4-383">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fdec4-384">O <paramref name="language" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-384">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fdec4-385">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-385">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="fdec4-386">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-386">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="fdec4-387">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-387">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool&#xA;override this.IsValidIdentifier : string -&gt; bool" Usage="codeDomProvider.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fdec4-388">O valor a ser verificado como um identificador válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-388">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-389">Retorna um valor que indica se o valor especificado é um identificador válido para a linguagem de programação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-389">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-390">
            <see langword="true" /> se o parâmetro <paramref name="value" /> é um identificador válido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-390">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-391">Este método testa se um identificador é válido.</span><span class="sxs-lookup"><span data-stu-id="fdec4-391">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="fdec4-392">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> método é específico do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-392">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="fdec4-393">Identificadores que são válidos para um provedor podem não ser válidos para outros provedores.</span><span class="sxs-lookup"><span data-stu-id="fdec4-393">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="fdec4-394">Se `value` contém caracteres fora do intervalo de caracteres ASCII, verificar o identificador para todos os idiomas que podem ser usados para compilar o código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-394">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-395">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-395">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-396">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-396">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-397">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-397">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-398">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-398">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-399">
            <para>Ao substituir <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> em uma classe derivada, projetar o método retorne <see langword="true" /> somente se o valor se ajusta as regras da linguagem e não entra em conflito com uma palavra-chave.  Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-399">
              <para>When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.  If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdec4-400">Obtém um identificador de recursos de idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-400">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdec4-401">Um <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> que indica os recursos especiais do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-401">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomProvider.Parse codeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="fdec4-402">Um objeto <see cref="T:System.IO.TextReader" /> que é usado para ler o código a ser analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-402">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-403">Compila o código lido do fluxo de texto especificado em um <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-403">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-404">Um <see cref="T:System.CodeDom.CodeCompileUnit" /> que contém uma representação do código analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-404">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-405">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeParser> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-405">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-406">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-406">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-407">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeParser> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-407">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-408">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-408">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-409">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um analisador na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> método para compatibilidade com provedores preexistentes que usam os analisadores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um analisador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-409">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports supports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">
          <span data-ttu-id="fdec4-410">Um objeto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> que indica o tipo de suporte à geração de código para verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-410">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <param name="supports">
          <span data-ttu-id="fdec4-411">Um objeto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> que indica o tipo de suporte à geração de código para verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-411">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdec4-412">Retorna um valor que indica se o suporte à geração de código especificado é fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-412">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdec4-413">
            <see langword="true" /> se o suporte à geração de código especificada é fornecido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-413">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdec4-414">Esse método pode ser chamado com um número de <xref:System.CodeDom.Compiler.GeneratorSupport> sinalizadores ao mesmo tempo para testar a um conjunto de recursos por ingressar em um conjunto de sinalizadores de recurso apropriado junto com um binário `OR` operador (&#124;).</span><span class="sxs-lookup"><span data-stu-id="fdec4-414">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdec4-415">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="fdec4-415">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="fdec4-416">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="fdec4-416">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="fdec4-417">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="fdec4-417">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="fdec4-418">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-418">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fdec4-419">
            <para>Se você substituir esse método, você não deve chamar o método correspondente da classe base. O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código. O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função. Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fdec4-419">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>