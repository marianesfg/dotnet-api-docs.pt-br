<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e7aff308fae45fc690174f3883b758dac1b13d3" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52193988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CodeDomProvider = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="be6b1-101">Fornece uma classe base para implementações <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="be6b1-102">Esta classe é abstrata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-103">Um <xref:System.CodeDom.Compiler.CodeDomProvider> pode ser usado para criar e recuperar instâncias de geradores de código e compiladores de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="be6b1-104">Geradores de código podem ser usados para gerar o código em um determinado idioma e compiladores de código podem ser usados para compilar o código em assemblies.</span><span class="sxs-lookup"><span data-stu-id="be6b1-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-105">No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], os métodos disponíveis no gerador de código e compilador de código estão disponíveis diretamente com o provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="be6b1-106">Você não precisará chamar <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> ou <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> para acessar os métodos e esses métodos são marcados como obsoletos.</span><span class="sxs-lookup"><span data-stu-id="be6b1-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="be6b1-107">Isso se aplica a preexistente, bem como novas implementações do provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="be6b1-108">Um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação normalmente fornece código de geração e/ou código interfaces de compilação para geração de código e gerenciamento de compilação para uma única linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="be6b1-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="be6b1-109">Vários idiomas são compatíveis com <xref:System.CodeDom.Compiler.CodeDomProvider> implementações que acompanham o [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="be6b1-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="be6b1-110">Essas linguagens incluem c#, Visual Basic, C++ e JScript.</span><span class="sxs-lookup"><span data-stu-id="be6b1-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="be6b1-111">Os desenvolvedores ou fornecedores do compilador podem implementar o <xref:System.CodeDom.Compiler.ICodeGenerator> e <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces e forneça um <xref:System.CodeDom.Compiler.CodeDomProvider> que estende o suporte do CodeDOM para outras linguagens de programação.</span><span class="sxs-lookup"><span data-stu-id="be6b1-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="be6b1-112">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) de arquivo fornece um mecanismo para desenvolvedores e fornecedores de compilador adicionar definições de configuração para adicionais <xref:System.CodeDom.Compiler.CodeDomProvider>implementações.</span><span class="sxs-lookup"><span data-stu-id="be6b1-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="be6b1-113">O <xref:System.CodeDom.Compiler.CodeDomProvider> classe fornece métodos estáticos para descobrir e enumerar o <xref:System.CodeDom.Compiler.CodeDomProvider> implementações em um computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="be6b1-114">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método retorna as configurações para todos os <xref:System.CodeDom.Compiler.CodeDomProvider> implementações em um computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="be6b1-115">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método retorna as configurações para um determinado <xref:System.CodeDom.Compiler.CodeDomProvider> implementação, com base no nome da linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="be6b1-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="be6b1-116">O <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método retorna uma instância de um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="be6b1-117">Para obter mais detalhes sobre configurações de idioma do provedor no arquivo de configuração, consulte [esquema de configurações de provedor de linguagem e compilador](~/docs/framework/configure-apps/file-schema/compiler/index.md).</span><span class="sxs-lookup"><span data-stu-id="be6b1-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](~/docs/framework/configure-apps/file-schema/compiler/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-118">Essa classe faz uma demanda de link e uma demanda de herança no nível de classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="be6b1-119">Um <xref:System.Security.SecurityException> será lançada se o chamador imediato ou a classe derivada não tem permissão de confiança total.</span><span class="sxs-lookup"><span data-stu-id="be6b1-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="be6b1-120">Para obter detalhes sobre demandas de segurança, consulte [demandas de Link](~/docs/framework/misc/link-demands.md) e [demandas de herança](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="be6b1-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-121">O programa de exemplo a seguir pode gerar e compilar o código-fonte com base em um modelo de CodeDOM de um programa que imprime "Hello World" usando o <xref:System.Console> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="be6b1-122">Uma interface de usuário do Windows Forms é fornecida.</span><span class="sxs-lookup"><span data-stu-id="be6b1-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="be6b1-123">O usuário pode selecionar o destino de linguagem com várias seleções de programação: c#, Visual Basic e JScript.</span><span class="sxs-lookup"><span data-stu-id="be6b1-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="be6b1-124">para confiança total do chamador imediato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="be6b1-125">Esta classe não pode ser usada pelo código parcialmente confiável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="be6b1-126">para confiança total de herdeiros.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="be6b1-127">Esta classe não pode ser herdada pelo código parcialmente confiável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="be6b1-128">Nas versões do .NET Framework 1.0 e 1.1, provedores de código consistem em implementações de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, e <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="be6b1-128">In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        </span>
        <span data-ttu-id="be6b1-129">No [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], o <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, e <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> métodos estão obsoletos e os métodos da <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> e <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> estão disponíveis diretamente no <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="be6b1-129">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
        </span>
        <span data-ttu-id="be6b1-130">Você deve substituir esses métodos em sua implementação de provedor de código e chama os métodos de base.</span>
        <span class="sxs-lookup">
          <span data-stu-id="be6b1-130">You should override those methods in your code provider implementation and not call the base methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">
      <span data-ttu-id="be6b1-131">Esquema de configurações de compilador e de provedor de linguagem</span>
      <span class="sxs-lookup">
        <span data-stu-id="be6b1-131">Compiler and Language Provider Settings Schema</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-132">Inicializa uma nova instância da classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-132">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-133">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-133">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-134">Esta classe não pode ser usada pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-134">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromDom (options, compilationUnits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="be6b1-135">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica as configurações da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-135">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="be6b1-136">Uma matriz do tipo <see cref="T:System.CodeDom.CodeCompileUnit" /> que indica o código a ser compilado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-136">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-137">Compila um assembly com base nas árvores <see cref="N:System.CodeDom" /> contidas na matriz especificada de objetos <see cref="T:System.CodeDom.CodeCompileUnit" />, usando as configurações de compilador especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-137">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-138">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica os resultados da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-138">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-139">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeCompiler> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-139">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-140">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-140">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-141">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeCompiler> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-141">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-142">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-142">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-143">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-143">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-144">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para compatibilidade com provedores preexistentes que usar compiladores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-144">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="be6b1-145">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-145">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-146">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um compilador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-146">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromFile (options, fileNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="be6b1-147">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica as configurações da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-147">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="be6b1-148">Uma matriz com os nomes dos arquivos a serem compilados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-148">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-149">Compila um assembly do código-fonte contido nos arquivos especificados, usando as configurações de compilador especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-149">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-150">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica os resultados da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-150">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-151">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeCompiler> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-151">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-152">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-152">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-153">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeCompiler> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-153">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-154">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-154">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-155">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-155">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-156">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para compatibilidade com provedores preexistentes que usar compiladores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-156">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="be6b1-157">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-157">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-158">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um compilador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-158">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromSource (options, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="be6b1-159">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> que indica as configurações do compilador para esta compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-159">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="be6b1-160">Uma matriz de cadeias de código-fonte a ser compilada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-160">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-161">Compila um assembly da matriz especificada de cadeias de caracteres que contém o código-fonte, usando as configurações do compilador especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-161">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-162">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> que indica os resultados da compilação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-162">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-163">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeCompiler> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-163">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-164">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-164">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-165">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeCompiler> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-165">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-166">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-166">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-167">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-167">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-168">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> método para compatibilidade com provedores preexistentes que usar compiladores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-168">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="be6b1-169">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-169">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-170">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um compilador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-170">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="codeDomProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-171">Quando substituído em uma classe derivada, cria um novo compilador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-171">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-172">Um <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> que pode ser usado para a compilação de representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-172">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-173">Esse método é obsoleto o [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="be6b1-173">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="be6b1-174">A alternativa recomendada é chamar o <xref:System.CodeDom.Compiler.ICodeCompiler> métodos que estão diretamente disponíveis no provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-174">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-175">No [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], você deve implementar a <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> membros na <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe e lançar um <see cref="T:System.NotSupportedException" /> quando este método é chamado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-175">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string&#xA;override this.CreateEscapedIdentifier : string -&gt; string" Usage="codeDomProvider.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="be6b1-176">A cadeia de caracteres para a qual criar um identificador de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-176">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-177">Cria um identificador de escape para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-177">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-178">O identificador de escape para o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-178">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-179"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> testes se o identificador está em conflito com qualquer reservadas ou palavras-chave e nesse caso, retorna um nome equivalente com formatação de código de escape de idioma específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-179"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="be6b1-180">Isso é chamado um identificador de escape.</span><span class="sxs-lookup"><span data-stu-id="be6b1-180">This is referred to an escaped identifier.</span></span> <span data-ttu-id="be6b1-181">O identificador de escape contém o mesmo `value` , mas tem a formatação de código de escape adicionado para diferenciar o identificador da palavra-chave.</span><span class="sxs-lookup"><span data-stu-id="be6b1-181">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="be6b1-182">Dois exemplos de implementação são anteriores a `value` com "@" ou colchetes os `value` com "[" e "]".</span><span class="sxs-lookup"><span data-stu-id="be6b1-182">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-183">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-183">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-184">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-184">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-185">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-185">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-186">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-186">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-187">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-187">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-188">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-188">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-189">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-189">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-190">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-190">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-191">Quando substituído em uma classe derivada, cria um novo gerador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-191">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-192">Quando substituído em uma classe derivada, cria um novo gerador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-192">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-193">Um <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que pode ser usado para gerar representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-193">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-194">Esse método é obsoleto o [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="be6b1-194">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="be6b1-195">A alternativa recomendada é chamar o <xref:System.CodeDom.Compiler.ICodeGenerator> métodos que estão diretamente disponíveis no <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-195">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-196">No [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], você deve implementar a <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> membros na <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> classe e lançar um <see cref="T:System.NotSupportedException" /> quando este método é chamado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-196">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="be6b1-197">Um <see cref="T:System.IO.TextWriter" /> a usar para saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-197">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-198">Quando substituído em uma classe derivada, cria um novo gerador de código usando o <see cref="T:System.IO.TextWriter" /> especificado para saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-198">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-199">Um <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que pode ser usado para gerar representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-199">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-200">Esse método usa especificado <xref:System.IO.TextWriter> para saída.</span><span class="sxs-lookup"><span data-stu-id="be6b1-200">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="be6b1-201">Esse método dá suporte a mais geração de código otimizado que atualizará incrementalmente o código-fonte.</span><span class="sxs-lookup"><span data-stu-id="be6b1-201">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-202">A implementação de classe base chama o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método, que está obsoleto na [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] e resulta em uma <xref:System.NotSupportedException> se um <xref:System.CodeDom.Compiler.ICodeGenerator> objeto não será retornado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-202">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="be6b1-203">O nome do arquivo para o qual gerar a saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-203">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-204">Quando substituído em uma classe derivada, cria um novo gerador de código usando o nome do arquivo especificado para saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-204">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-205">Um <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> que pode ser usado para gerar representações de código-fonte baseadas em <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-205">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-206">Esse método usa o nome de arquivo especificado para saída.</span><span class="sxs-lookup"><span data-stu-id="be6b1-206">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-207">A implementação de classe base chama o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método, que está obsoleto na [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] e resulta em uma <xref:System.NotSupportedException> se um <xref:System.CodeDom.Compiler.ICodeGenerator> objeto não será retornado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-207">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser&#xA;override this.CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser" Usage="codeDomProvider.CreateParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Callers should not use the ICodeParser interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-208">Quando substituído em uma classe derivada, cria um novo analisador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-208">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-209">Um <see cref="T:System.CodeDom.Compiler.ICodeParser" /> que pode ser usado para analisar código-fonte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-209">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="be6b1-210">A implementação base sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-210">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-211">Obtém uma instância <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para o idioma especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-211">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="be6b1-212">O nome do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-212">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-213">Obtém uma instância <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para o idioma especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-213">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-214">Um provedor CodeDOM implementado para o nome do idioma especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-214">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-215">Esse método é mais comumente usado para criar uma instância de um provedor de código em um aplicativo que pode, opcionalmente, use um dos vários provedores.</span><span class="sxs-lookup"><span data-stu-id="be6b1-215">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="be6b1-216"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> permite que você especifique, em tempo de execução, o provedor de código que você deseja criar uma instância.</span><span class="sxs-lookup"><span data-stu-id="be6b1-216"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="be6b1-217">Se você souber em tempo de design, qual código é de provedor a ser usado, você deve criar uma instância do provedor de código em vez de usar o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método.</span><span class="sxs-lookup"><span data-stu-id="be6b1-217">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="be6b1-218">O <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método retorna um <xref:System.CodeDom.Compiler.CodeDomProvider> instância de um nome de idioma específico; ele é semelhante a chamar o <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> método com o tipo de provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="be6b1-218">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="be6b1-219">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> quando você deseja localizar dinamicamente uma implementação de provedor configurado para um nome de idioma.</span><span class="sxs-lookup"><span data-stu-id="be6b1-219">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="be6b1-220">Se mais de uma implementação de provedor estiver configurada para o nome do idioma, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> retorna uma instância do provedor para o último elemento de configuração correspondente.</span><span class="sxs-lookup"><span data-stu-id="be6b1-220">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="be6b1-221">Use o <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> sobrecarga do método quando desejar que uma implementação de provedor de idioma específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-221">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="be6b1-222">Por exemplo, use o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método para obter uma instância do provedor que dá suporte a nome do idioma `"CSharp"`; usar o <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> sobrecarga de método para obter uma instância do provedor especificamente para o <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="be6b1-222">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="be6b1-223">Você deve usar o [\], CultureInfo, objeto\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType > método se você tiver vários provedores de código para um idioma e desejar criar uma instância de um provedor de código específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-223">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="be6b1-224">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método verifica se a implementação de pelo menos um provedor dá suporte a um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-224">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="be6b1-225">Você pode validar um nome de idioma usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> antes de passá-lo para <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="be6b1-225">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="be6b1-226">Se você passar um nome de idioma sem suporte para <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> um <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> é gerada.</span><span class="sxs-lookup"><span data-stu-id="be6b1-226">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="be6b1-227">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método pode ser usado para determinar todas <xref:System.CodeDom.Compiler.CodeDomProvider> implementações em um computador, incluindo implementações adicionais fornecidas por desenvolvedores e fornecedores de compilador que são identificados na [ &lt;System. CodeDom &gt; Elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) no arquivo de configuração do computador (Machine. config).</span><span class="sxs-lookup"><span data-stu-id="be6b1-227">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="be6b1-228">O <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> método retorna uma instância de um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-228">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="be6b1-229">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="be6b1-229">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-230">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="be6b1-230">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="be6b1-231">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-231">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="be6b1-232">O <paramref name="language" /> não tem um provedor configurado neste computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-232">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6b1-233">O <paramref name="language" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-233">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="be6b1-234">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-234">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-235">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-235">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-236">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-236">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider (language, providerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="be6b1-237">O nome do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-237">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="be6b1-238">Uma coleção de opções do provedor do arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-238">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-239">Obtém uma instância <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para as opções de idioma e provedor especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-239">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-240">Um provedor CodeDOM implementado para as opções e o nome do idioma especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-240">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-241">Esse método é mais comumente usado para criar uma instância de um provedor de código em um aplicativo que pode, opcionalmente, use um dos vários provedores.</span><span class="sxs-lookup"><span data-stu-id="be6b1-241">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="be6b1-242"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> permite que você especificar em tempo de execução, a versão do provedor de código que você deseja criar uma instância.</span><span class="sxs-lookup"><span data-stu-id="be6b1-242"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="be6b1-243">Se você souber em tempo de design, qual código é de provedor a ser usado, você deve criar uma instância do que provedor de código em vez de usar o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="be6b1-243">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="be6b1-244">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> quando você deseja localizar dinamicamente uma implementação de provedor configurado para um idioma específico e as opções.</span><span class="sxs-lookup"><span data-stu-id="be6b1-244">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="be6b1-245">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="be6b1-245">Language names are case-insensitive.</span></span> <span data-ttu-id="be6b1-246">Para obter informações sobre as opções de provedor com suporte, consulte a documentação específica do provedor de CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="be6b1-246">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="be6b1-247">Para obter informações sobre validação de um provedor e um provedor de chamada se mais de uma implementação de provedor estiver configurada para o nome do idioma, consulte a seção comentários do <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="be6b1-247">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-248">O exemplo a seguir mostra como criar uma instância de um provedor usando o `providerOptions` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="be6b1-248">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string&#xA;override this.CreateValidIdentifier : string -&gt; string" Usage="codeDomProvider.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="be6b1-249">A cadeia de caracteres para a qual gerar um identificador válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-249">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-250">Cria um identificador válido para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-250">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-251">Um identificador válido para o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-251">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-252"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> Testa se o identificador está em conflito com reservadas ou palavras-chave, e se assim, tenta retornar um identificador válido do nome que não está em conflito.</span><span class="sxs-lookup"><span data-stu-id="be6b1-252"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="be6b1-253">Normalmente é o identificador retornado é apenas um pouco modificado para diferenciar o identificador da palavra-chave; Por exemplo, o nome pode ser precedido pelo caractere de sublinhado ("_").</span><span class="sxs-lookup"><span data-stu-id="be6b1-253">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-254">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-254">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-255">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-255">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-256">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-256">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-257">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-257">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-258">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-258">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-259">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-259">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-260">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-260">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-261">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-261">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-262">Obtém a extensão de nome de arquivo padrão a ser usada para arquivos de código-fonte na linguagem de programação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-262">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6b1-263">Uma extensão de nome de arquivo correspondentes à extensão dos arquivos de origem do idioma atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-263">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="be6b1-264">A implementação base sempre retorna <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-264">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-265">Essa propriedade é usada por geradores de código e compiladores de código para indicar quais extensões de arquivo devem ser gerados ou usados.</span><span class="sxs-lookup"><span data-stu-id="be6b1-265">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-266">O exemplo de código a seguir cria uma instância de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="be6b1-266">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="be6b1-267">O exemplo exibe o nome do provedor, o hash padrão e o código de extensão de nome para a nova instância do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-267">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromCompileUnit (compileUnit, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="be6b1-268">Um <see cref="T:System.CodeDom.CodeCompileUnit" /> para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-268">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="be6b1-269">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-269">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="be6b1-270">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-270">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-271">Gera código para a unidade de compilação CodeDOM (Modelo de Objeto do Documento de Código) especificada e envia-a para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-271">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-272">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-272">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-273">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-273">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-274">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-274">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-275">O exemplo de código a seguir mostra o uso do <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> método para gerar código para um aplicativo "Hello World" de um <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="be6b1-275">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="be6b1-276">Este exemplo é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CodeDomProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-276">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-277">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-277">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-278">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-278">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-279">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-279">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-280">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-280">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-281">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-281">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromExpression (expression, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="be6b1-282">Um objeto <see cref="T:System.CodeDom.CodeExpression" /> que indica a expressão para a qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-282">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="be6b1-283">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-283">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="be6b1-284">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-284">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-285">Gera código para a expressão CodeDOM (Modelo de Objeto do Documento de Código) especificada e o envia para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-285">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-286">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-286">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-287">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-287">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-288">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-288">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-289">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-289">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-290">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-290">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-291">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-291">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-292">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-292">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-293">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-293">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="be6b1-294">Um objeto <see cref="T:System.CodeDom.CodeTypeMember" /> que indica o membro para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-294">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="be6b1-295">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-295">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="be6b1-296">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-296">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-297">Gera código para a declaração de membro CodeDOM (Modelo de Objeto do Documento de Código) especificada e o envia para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-297">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-298">A implementação de classe base gera uma <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="be6b1-298">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="be6b1-299">Consulte <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> para obter a documentação que descreve uma implementação deste método.</span><span class="sxs-lookup"><span data-stu-id="be6b1-299">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-300">O exemplo de código a seguir mostra o uso do <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> método conforme implementado pela <xref:Microsoft.CSharp.CSharpCodeProvider> e <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span><span class="sxs-lookup"><span data-stu-id="be6b1-300">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-301">Esse método não é substituído em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-301">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromNamespace (codeNamespace, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="be6b1-302">Um objeto <see cref="T:System.CodeDom.CodeNamespace" /> que indica o namespace para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-302">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="be6b1-303">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-303">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="be6b1-304">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-304">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-305">Gera código para o namespace CodeDOM (Modelo de Objeto do Documento de Código) especificado e envia-o para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-305">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-306">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-306">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-307">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-307">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-308">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-308">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-309">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-309">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-310">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-310">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-311">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-311">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-312">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-312">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-313">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-313">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromStatement (statement, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="be6b1-314">Um <see cref="T:System.CodeDom.CodeStatement" /> que contém os elementos de CodeDOM para os quais gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-314">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="be6b1-315">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-315">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="be6b1-316">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-316">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-317">Gera código para a instrução CodeDOM (Modelo de Objeto do Documento de Código) especificada e envia-o para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-317">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-318">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-318">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-319">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-319">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-320">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-320">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-321">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-321">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-322">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-322">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-323">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-323">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-324">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-324">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-325">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-325">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromType (codeType, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="be6b1-326">Um objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que indica o tipo para o qual gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-326">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="be6b1-327">O <see cref="T:System.IO.TextWriter" /> para o qual o código de saída é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-327">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="be6b1-328">Um <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> que indica as opções a serem usadas para gerar código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-328">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-329">Gera código para a declaração de tipo CodeDOM (Modelo de Objeto do Documento de Código) especificada e envia-o para o text writer especificado, usando as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-329">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-330">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-330">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-331">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-331">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-332">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-332">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-333">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-333">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-334">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-334">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-335">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-335">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-336">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-336">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-337">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-337">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberSignature Language="F#" Value="static member GetAllCompilerInfo : unit -&gt; System.CodeDom.Compiler.CompilerInfo[]" Usage="System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-338">Retorna as configurações de compilador e de provedor de linguagem de programação para este computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-338">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-339">Uma matriz do tipo <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> que representa as configurações de todas as implementações de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configuradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-339">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-340">Use o <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> método para enumerar as configurações do provedor de idioma em um computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-340">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-341">No [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], os provedores de linguagem padrão fornecidos pelo .NET Framework não são especificados na [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) configuração do compilador seção e não pode ser removido, então esse método retorna informações sobre os provedores padrão e qualquer especificado no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="be6b1-341">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-342">O exemplo de código a seguir enumera os provedores de linguagem no computador e exibe as configurações de compilador e de configuração para cada provedor de linguagem de programação.</span><span class="sxs-lookup"><span data-stu-id="be6b1-342">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="be6b1-343">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-343">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="be6b1-344">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-344">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-345">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-345">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-346">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-346">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">
          <span data-ttu-id="be6b1-347">Esquema de configurações de compilador e de provedor de linguagem</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-347">Compiler and Language Provider Settings Schema</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member GetCompilerInfo : string -&gt; System.CodeDom.Compiler.CompilerInfo" Usage="System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="be6b1-348">Um nome de linguagem de programação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-348">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-349">Retorna as configurações de compilador e de provedor de linguagem de programação para a linguagem de programação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-349">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-350">Um objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> populado com as configurações da implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-350">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-351">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-351">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="be6b1-352">Para obter informações sobre arquivos de configuração de máquina, consulte a seção arquivos de configuração de máquina [Configurando aplicativos](~/docs/framework/configure-apps/index.md).</span><span class="sxs-lookup"><span data-stu-id="be6b1-352">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](~/docs/framework/configure-apps/index.md).</span></span> <span data-ttu-id="be6b1-353">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método pesquisa cada elemento de configuração do provedor para o nome do idioma especificado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-353">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="be6b1-354">Retornado <xref:System.CodeDom.Compiler.CompilerInfo> instância contém as configurações de compilador e provedor de idioma configurado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-354">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="be6b1-355">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método verifica se a implementação de pelo menos um provedor dá suporte a um idioma específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-355">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="be6b1-356">Você pode validar um nome de idioma usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> antes de passá-lo para <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="be6b1-356">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="be6b1-357">Isso impede que lançar uma <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> quando você acessa o <xref:System.CodeDom.Compiler.CompilerInfo> instância para um nome de idioma sem suporte.</span><span class="sxs-lookup"><span data-stu-id="be6b1-357">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="be6b1-358">Se mais de uma implementação de provedor estiver configurada para o nome do idioma de entrada, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> retorna as configurações do provedor correspondente último elemento de configuração.</span><span class="sxs-lookup"><span data-stu-id="be6b1-358">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="be6b1-359">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="be6b1-359">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-360">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="be6b1-360">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="be6b1-361">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-361">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="be6b1-362">O <paramref name="language" /> não tem um provedor configurado neste computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-362">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="be6b1-363">O <paramref name="language" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-363">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="be6b1-364">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-364">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-365">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-365">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-366">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-366">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">
          <span data-ttu-id="be6b1-367">Esquema de configurações de compilador e de provedor de linguagem</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-367">Compiler and Language Provider Settings Schema</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : Type -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="codeDomProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="be6b1-368">O tipo de objeto para o qual um conversor de tipo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-368">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-369">Obtém um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo de dados especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-369">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-370">Um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo especificado ou então <see langword="null" />, se um <see cref="T:System.ComponentModel.TypeConverter" /> para o tipo especificado não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-370">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-371">Uma classe derivada pode substituir esse método para fornecer tipos específicos de conversores de tipo para tipos de dados específicos.</span><span class="sxs-lookup"><span data-stu-id="be6b1-371">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member GetLanguageFromExtension : string -&gt; string" Usage="System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="be6b1-372">Uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-372">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-373">Retorna um nome de linguagem de programação associado com a extensão de nome de arquivo especificada, conforme configurado na seção de configuração do compilador <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-373">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-374">Um nome de linguagem de programação associado com a extensão de nome de arquivo, conforme configurado nas configurações do compilador <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-374">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-375">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) do arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação sobre o computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-375">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="be6b1-376">O <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> método pesquisa cada elemento de configuração do provedor para a extensão de nome de arquivo especificado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-376">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="be6b1-377">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> método verifica se a implementação de pelo menos um provedor dá suporte a uma extensão de nome de arquivo específico.</span><span class="sxs-lookup"><span data-stu-id="be6b1-377">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="be6b1-378">Você pode validar uma extensão de nome de arquivo usando <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> antes de passá-lo para <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="be6b1-378">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="be6b1-379">Isso impede <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> acione um <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> para uma extensão de nome de arquivo sem suporte.</span><span class="sxs-lookup"><span data-stu-id="be6b1-379">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="be6b1-380">Se uma implementação de provedor oferecer suporte a extensão de nome de arquivo de entrada e há vários idiomas com suporte configurados para esse provedor, em seguida, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> retorna o primeiro nome de idioma para o provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-380">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="be6b1-381">Se mais de uma implementação de provedor estiver configurada para a extensão de nome de arquivo de entrada, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> retorna o nome do idioma do provedor correspondente último elemento de configuração.</span><span class="sxs-lookup"><span data-stu-id="be6b1-381">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="be6b1-382">Nomes de idiomas e as extensões de nome de arquivo diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="be6b1-382">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-383">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para uma extensão de nome de arquivo de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="be6b1-383">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="be6b1-384">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-384">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="be6b1-385">O <paramref name="extension" /> não tem um provedor de linguagem de programação configurado neste computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-385">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="be6b1-386">O <paramref name="extension" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-386">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="be6b1-387">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-387">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-388">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-388">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-389">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-389">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">
          <span data-ttu-id="be6b1-390">Esquema de configurações de compilador e de provedor de linguagem</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-390">Compiler and Language Provider Settings Schema</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeDomProvider.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="be6b1-391">Um <see cref="T:System.CodeDom.CodeTypeReference" /> que indica o tipo a retornar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-391">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-392">Obtém o tipo indicado pelo <see cref="T:System.CodeDom.CodeTypeReference" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-392">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-393">Uma representação de texto do tipo especificado, formatado para a linguagem de programação na qual o código é gerado por este gerador de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-393">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="be6b1-394">No Visual Basic, por exemplo, passar um <see cref="T:System.CodeDom.CodeTypeReference" /> para o tipo <see cref="T:System.Int32" /> retorna "Integer".</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-394">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-395">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-395">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-396">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-396">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-397">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-397">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-398">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-398">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-399">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-399">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-400">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-400">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-401">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-401">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-402">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-402">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member IsDefinedExtension : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="be6b1-403">Uma extensão de nome de arquivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-403">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-404">Testa se uma extensão de nome de arquivo tem uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> associada configurada no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-404">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-405">
            <see langword="true" /> se uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> está configurada para a extensão de nome de arquivo especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-405">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-406">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) do arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação sobre o computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-406">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="be6b1-407">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> método pesquisa os elementos de configuração do provedor para a extensão de nome de arquivo especificado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-407">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="be6b1-408">Extensões de nome de arquivo diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="be6b1-408">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-409">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para uma extensão de nome de arquivo de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="be6b1-409">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="be6b1-410">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-410">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6b1-411">O <paramref name="extension" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-411">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="be6b1-412">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-412">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-413">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-413">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-414">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-414">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">
          <span data-ttu-id="be6b1-415">Esquema de configurações de compilador e de provedor de linguagem</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-415">Compiler and Language Provider Settings Schema</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member IsDefinedLanguage : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="be6b1-416">O nome do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-416">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-417">Testa se uma linguagem de programação tem uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-417">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-418">
            <see langword="true" /> se uma implementação de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> está configurada para a linguagem de programação especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-418">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-419">O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina (Machine. config) do arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação sobre o computador.</span><span class="sxs-lookup"><span data-stu-id="be6b1-419">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="be6b1-420">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> método pesquisa os elementos de configuração do provedor para o nome do idioma especificado.</span><span class="sxs-lookup"><span data-stu-id="be6b1-420">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="be6b1-421">Nomes de idiomas diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="be6b1-421">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be6b1-422">O exemplo de código a seguir determina o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um idioma de entrada e exibe as configurações definidas para o provedor de linguagem.</span><span class="sxs-lookup"><span data-stu-id="be6b1-422">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="be6b1-423">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="be6b1-423">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be6b1-424">O <paramref name="language" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-424">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="be6b1-425">O chamador não tem a permissão necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-425">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="be6b1-426">para confiança total do chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-426">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="be6b1-427">Este membro não pode ser usado pelo código parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-427">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">
          <span data-ttu-id="be6b1-428">Esquema de configurações de compilador e de provedor de linguagem</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-428">Compiler and Language Provider Settings Schema</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool&#xA;override this.IsValidIdentifier : string -&gt; bool" Usage="codeDomProvider.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="be6b1-429">O valor a ser verificado como um identificador válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-429">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-430">Retorna um valor que indica se o valor especificado é um identificador válido para a linguagem de programação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-430">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-431">
            <see langword="true" /> se o parâmetro <paramref name="value" /> é um identificador válido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-431">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-432">Este método testa se um identificador é válido.</span><span class="sxs-lookup"><span data-stu-id="be6b1-432">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="be6b1-433">O <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> método é específico do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-433">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="be6b1-434">Identificadores que são válidos para um provedor podem não ser válidos para outros provedores.</span><span class="sxs-lookup"><span data-stu-id="be6b1-434">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="be6b1-435">Se `value` contém caracteres fora do intervalo de caracteres ASCII, verificar o identificador para todos os idiomas que podem ser usados para compilar o código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-435">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-436">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-436">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-437">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-437">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-438">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-438">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-439">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-439">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-440">Ao substituir <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> em uma classe derivada, projetar o método retorne <see langword="true" /> somente se o valor se ajusta as regras da linguagem e não entra em conflito com uma palavra-chave.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-440">When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.</span>
            </span>
            <span data-ttu-id="be6b1-441">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-441">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-442">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-442">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-443">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-443">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-444">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-444">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be6b1-445">Obtém um identificador de recursos de idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-445">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be6b1-446">Um <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> que indica os recursos especiais do idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-446">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomProvider.Parse codeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="be6b1-447">Um objeto <see cref="T:System.IO.TextReader" /> que é usado para ler o código a ser analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-447">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-448">Compila o código lido do fluxo de texto especificado em um <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-448">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-449">Um <see cref="T:System.CodeDom.CodeCompileUnit" /> que contém uma representação do código analisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-449">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-450">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeParser> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-450">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-451">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-451">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-452">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeParser> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-452">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-453">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-453">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-454">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-454">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-455">O método da classe de base cria um analisador na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> método para compatibilidade com provedores preexistentes que usam os analisadores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-455">The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers.</span>
            </span>
            <span data-ttu-id="be6b1-456">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-456">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-457">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um analisador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-457">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports supports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">
          <span data-ttu-id="be6b1-458">Um objeto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> que indica o tipo de suporte à geração de código para verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-458">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <param name="supports">
          <span data-ttu-id="be6b1-459">Um objeto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> que indica o tipo de suporte à geração de código para verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-459">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be6b1-460">Retorna um valor que indica se o suporte à geração de código especificado é fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-460">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be6b1-461">
            <see langword="true" /> se o suporte à geração de código especificada é fornecido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-461">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be6b1-462">Esse método pode ser chamado com um número de <xref:System.CodeDom.Compiler.GeneratorSupport> sinalizadores ao mesmo tempo para testar a um conjunto de recursos por ingressar em um conjunto de sinalizadores de recurso apropriado junto com um binário `OR` operador (&#124;).</span><span class="sxs-lookup"><span data-stu-id="be6b1-462">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be6b1-463">Nas versões do .NET Framework 1.0 e 1.1, este método é fornecido pela <xref:System.CodeDom.Compiler.ICodeGenerator> implementação que é retornada pelo <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> método do provedor.</span><span class="sxs-lookup"><span data-stu-id="be6b1-463">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="be6b1-464">Na versão 2.0, esse método pode ser chamado diretamente no provedor de código, mesmo se ele não é substituído pelo provedor de código.</span><span class="sxs-lookup"><span data-stu-id="be6b1-464">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="be6b1-465">Se o provedor de código não substitui esse método, o <xref:System.CodeDom.Compiler.ICodeGenerator> implementação é chamada pela classe base.</span><span class="sxs-lookup"><span data-stu-id="be6b1-465">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="be6b1-466">Nem esse método nem o método <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> são substituídos em uma classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be6b1-466">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="be6b1-467">Se você substituir esse método, você não deve chamar o método correspondente da classe base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-467">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="be6b1-468">O método da classe de base cria um gerador de na classe derivada usando o obsoleto <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> método para compatibilidade com provedores preexistentes que usam os geradores de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-468">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="be6b1-469">O método de classe base chama o método equivalente <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementação para executar essa função.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-469">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="be6b1-470">Você obterá um <see cref="T:System.NotImplementedException" /> se você chamar o método de classe base de um provedor de código que não usa um gerador de código.</span>
            <span class="sxs-lookup">
              <span data-stu-id="be6b1-470">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>