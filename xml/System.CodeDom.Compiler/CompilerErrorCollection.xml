<Type Name="CompilerErrorCollection" FullName="System.CodeDom.Compiler.CompilerErrorCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f21d8eba39725b435da017a1cffb0e5b7aa7987" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37704497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompilerErrorCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompilerErrorCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CompilerErrorCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerErrorCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type CompilerErrorCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="86fdb-101">Represents a collection of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86fdb-101">Represents a collection of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86fdb-102">A classe de <xref:System.CodeDom.Compiler.CompilerErrorCollection> fornece um objeto simples de coleção que pode ser usado para armazenar um conjunto de objetos de <xref:System.CodeDom.Compiler.CompilerError> .</span><span class="sxs-lookup"><span data-stu-id="86fdb-102">The <xref:System.CodeDom.Compiler.CompilerErrorCollection> class provides a simple collection object that can be used to store a set of <xref:System.CodeDom.Compiler.CompilerError> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86fdb-103">Essa classe contém uma demanda de herança no nível da classe que se aplica a todos os membros.</span><span class="sxs-lookup"><span data-stu-id="86fdb-103">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="86fdb-104">Um <xref:System.Security.SecurityException> é gerada quando a classe derivada não tem permissão de confiança total.</span><span class="sxs-lookup"><span data-stu-id="86fdb-104">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="86fdb-105">Para obter detalhes sobre demandas de herança, consulte [demandas de herança](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="86fdb-105">For details about inheritance demands, see  [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86fdb-106">O exemplo a seguir demonstra como usar o <xref:System.CodeDom.Compiler.CompilerErrorCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="86fdb-106">The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection> class.</span></span> <span data-ttu-id="86fdb-107">O exemplo cria uma nova instância da classe e usa vários métodos para adicionar instruções à coleção, retornar seu índice e adicionar ou remover os atributos em um ponto de índice específico.</span><span class="sxs-lookup"><span data-stu-id="86fdb-107">The example creates a new instance of the class and uses several methods to add statements to the collection, return their index, and add or remove attributes at a specific index point.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CompilerErrorCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#1)]
 [!code-vb[CompilerErrorCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="86fdb-108">para derivar do <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86fdb-108">for deriving from the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class.</span>
      </span>
      <span data-ttu-id="86fdb-109">Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; <see cref="T:System.Security.PermissionSet" />: <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86fdb-109">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; <see cref="T:System.Security.PermissionSet" />: <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86fdb-110">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-110">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86fdb-111">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-111">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-112">O exemplo a seguir demonstra como criar uma instância vazia do <xref:System.CodeDom.Compiler.CompilerErrorCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="86fdb-112">The following example demonstrates how to create an empty instance of the <xref:System.CodeDom.Compiler.CompilerErrorCollection> class.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#2)]
 [!code-csharp[CompilerErrorCollectionExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#2)]
 [!code-vb[CompilerErrorCollectionExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerErrorCollection (System.CodeDom.Compiler.CompilerError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.Compiler.CompilerError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CompilerError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerErrorCollection(cli::array &lt;System::CodeDom::Compiler::CompilerError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.CompilerErrorCollection : System.CodeDom.Compiler.CompilerError[] -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="new System.CodeDom.Compiler.CompilerErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-113">An array of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects to initialize the collection with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-113">An array of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects to initialize the collection with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-114">Initializes a new instance of <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> that contains the specified array of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-114">Initializes a new instance of <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> that contains the specified array of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86fdb-115">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-115">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilerErrorCollection (System.CodeDom.Compiler.CompilerErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.Compiler.CompilerErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CompilerErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompilerErrorCollection(System::CodeDom::Compiler::CompilerErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.CompilerErrorCollection : System.CodeDom.Compiler.CompilerErrorCollection -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="new System.CodeDom.Compiler.CompilerErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-116">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object with which to initialize the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-116">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object with which to initialize the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-117">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class that contains the contents of the specified <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-117">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class that contains the contents of the specified <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86fdb-118">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-118">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.Compiler.CompilerError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.Compiler.CompilerError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CompilerError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::Compiler::CompilerError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.Compiler.CompilerError -&gt; int" Usage="compilerErrorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-119">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> object to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-119">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-120">Adds the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object to the error collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-120">Adds the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object to the error collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86fdb-121">The index at which the new element was inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-121">The index at which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-122">O exemplo a seguir demonstra como usar o <xref:System.CodeDom.Compiler.CompilerErrorCollection.Add%2A> método para adicionar um <xref:System.CodeDom.Compiler.CompilerError> do objeto para um <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span><span class="sxs-lookup"><span data-stu-id="86fdb-122">The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.Add%2A> method to add a <xref:System.CodeDom.Compiler.CompilerError> object to a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CompilerErrorCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#3)]
 [!code-vb[CompilerErrorCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86fdb-123">Copies the elements of an array to the end of the error collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-123">Copies the elements of an array to the end of the error collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.Compiler.CompilerError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.Compiler.CompilerError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CompilerError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::CodeDom::Compiler::CompilerError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.Compiler.CompilerError[] -&gt; unit" Usage="compilerErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-124">An array of type <see cref="T:System.CodeDom.Compiler.CompilerError" /> that contains the objects to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-124">An array of type <see cref="T:System.CodeDom.Compiler.CompilerError" /> that contains the objects to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-125">Copies the elements of an array to the end of the error collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-125">Copies the elements of an array to the end of the error collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-126">O exemplo a seguir demonstra como usar o <xref:System.CodeDom.Compiler.CompilerErrorCollection.AddRange%28System.CodeDom.Compiler.CompilerError%5B%5D%29> sobrecarga de método para adicionar uma matriz de <xref:System.CodeDom.Compiler.CompilerError> objetos para um <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span><span class="sxs-lookup"><span data-stu-id="86fdb-126">The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.AddRange%28System.CodeDom.Compiler.CompilerError%5B%5D%29> method overload to add an array of <xref:System.CodeDom.Compiler.CompilerError> objects to a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CompilerErrorCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#4)]
 [!code-vb[CompilerErrorCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86fdb-127">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-127">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.Compiler.CompilerErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.Compiler.CompilerErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CompilerErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::CodeDom::Compiler::CompilerErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.Compiler.CompilerErrorCollection -&gt; unit" Usage="compilerErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-128">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object that contains the objects to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-128">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object that contains the objects to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-129">Adds the contents of the specified compiler error collection to the end of the error collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-129">Adds the contents of the specified compiler error collection to the end of the error collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-130">O exemplo a seguir demonstra como usar o <xref:System.CodeDom.Compiler.CompilerErrorCollection.AddRange%28System.CodeDom.Compiler.CompilerErrorCollection%29> sobrecarga de método para adicionar <xref:System.CodeDom.Compiler.CompilerError> objetos de uma <xref:System.CodeDom.Compiler.CompilerErrorCollection> para outro <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span><span class="sxs-lookup"><span data-stu-id="86fdb-130">The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.AddRange%28System.CodeDom.Compiler.CompilerErrorCollection%29> method overload to add <xref:System.CodeDom.Compiler.CompilerError> objects from one <xref:System.CodeDom.Compiler.CompilerErrorCollection> to another <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CompilerErrorCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#4)]
 [!code-vb[CompilerErrorCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86fdb-131">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-131">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.Compiler.CompilerError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.Compiler.CompilerError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As CompilerError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::CodeDom::Compiler::CompilerError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.CodeDom.Compiler.CompilerError -&gt; bool" Usage="compilerErrorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-132">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to locate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-132">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-133">Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-133">Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86fdb-134">
            <see langword="true" /> if the <see cref="T:System.CodeDom.Compiler.CompilerError" /> is contained in the collection; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-134">
              <see langword="true" /> if the <see cref="T:System.CodeDom.Compiler.CompilerError" /> is contained in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-135">O exemplo a seguir usa o <xref:System.CodeDom.Compiler.CompilerErrorCollection.Contains%2A> método para localizar um determinado <xref:System.CodeDom.Compiler.CompilerError> do objeto e determinar o valor de índice no qual ele foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="86fdb-135">The following example uses the <xref:System.CodeDom.Compiler.CompilerErrorCollection.Contains%2A> method to locate a specific <xref:System.CodeDom.Compiler.CompilerError> object and determine the index value at which it was found.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CompilerErrorCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#5)]
 [!code-vb[CompilerErrorCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.Compiler.CompilerError[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.Compiler.CompilerError[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CompilerError(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::CodeDom::Compiler::CompilerError ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.CodeDom.Compiler.CompilerError[] * int -&gt; unit" Usage="compilerErrorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.Compiler.CompilerError[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="86fdb-136">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-136">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="86fdb-137">The index in the array at which to start copying.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-137">The index in the array at which to start copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-138">Copies the collection values to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-138">Copies the collection values to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-139">O exemplo a seguir demonstra como usar o <xref:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo%2A> método para copiar o conteúdo de um <xref:System.CodeDom.Compiler.CompilerErrorCollection> para uma matriz, começando no valor de índice especificado.</span><span class="sxs-lookup"><span data-stu-id="86fdb-139">The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo%2A> method to copy the contents of a <xref:System.CodeDom.Compiler.CompilerErrorCollection> to an array, starting at the specified index value.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CompilerErrorCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#6)]
 [!code-vb[CompilerErrorCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86fdb-140">The array indicated by the <paramref name="array" /> parameter is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-140">The array indicated by the <paramref name="array" /> parameter is multidimensional.</span>
          </span>
          <span data-ttu-id="86fdb-141">-or-  The number of elements in the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> is greater than the available space between the index value of the <paramref name="arrayIndex" /> parameter in the array indicated by the <paramref name="array" /> parameter and the end of the array indicated by the <paramref name="array" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-141">-or-  The number of elements in the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> is greater than the available space between the index value of the <paramref name="arrayIndex" /> parameter in the array indicated by the <paramref name="array" /> parameter and the end of the array indicated by the <paramref name="array" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86fdb-142">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-142">The <paramref name="array" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86fdb-143">The <paramref name="index" /> parameter is less than the lowbound of the array indicated by the <paramref name="array" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-143">The <paramref name="index" /> parameter is less than the lowbound of the array indicated by the <paramref name="array" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerErrorCollection.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.CodeDom.Compiler.CompilerErrorCollection.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86fdb-144">Gets a value that indicates whether the collection contains errors.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-144">Gets a value that indicates whether the collection contains errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86fdb-145">
            <see langword="true" /> Se a coleção contém erros. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-145">
              <see langword="true" /> if the collection contains errors; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasWarnings">
      <MemberSignature Language="C#" Value="public bool HasWarnings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWarnings" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasWarnings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasWarnings { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasWarnings : bool" Usage="System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86fdb-146">Gets a value that indicates whether the collection contains warnings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-146">Gets a value that indicates whether the collection contains warnings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86fdb-147">
            <see langword="true" /> Se a coleção contém avisos; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-147">
              <see langword="true" /> if the collection contains warnings; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.Compiler.CompilerError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.Compiler.CompilerError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CompilerError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::CodeDom::Compiler::CompilerError ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.CodeDom.Compiler.CompilerError -&gt; int" Usage="compilerErrorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-148">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to locate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-148">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-149">Gets the index of the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object in the collection, if it exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-149">Gets the index of the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object in the collection, if it exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86fdb-150">The index of the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> in the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-150">The index of the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> in the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-151">O exemplo a seguir procura por um determinado <xref:System.CodeDom.Compiler.CompilerError> objeto e usa o <xref:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf%2A> método para determinar o índice de valor no qual ele foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="86fdb-151">The following example searches for a specific <xref:System.CodeDom.Compiler.CompilerError> object and uses the <xref:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf%2A> method to determine the index value at which it was found.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CompilerErrorCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#5)]
 [!code-vb[CompilerErrorCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.Compiler.CompilerError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.Compiler.CompilerError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As CompilerError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::CodeDom::Compiler::CompilerError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.CodeDom.Compiler.CompilerError -&gt; unit" Usage="compilerErrorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="86fdb-152">The zero-based index where the compiler error should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-152">The zero-based index where the compiler error should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="86fdb-153">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-153">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-154">Inserts the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> into the collection at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-154">Inserts the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> into the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-155">O exemplo a seguir demonstra como usar o <xref:System.CodeDom.Compiler.CompilerErrorCollection.Insert%2A> método para inserir um <xref:System.CodeDom.Compiler.CompilerError> do objeto em um <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span><span class="sxs-lookup"><span data-stu-id="86fdb-155">The following example demonstrates how to use the <xref:System.CodeDom.Compiler.CompilerErrorCollection.Insert%2A> method to insert a <xref:System.CodeDom.Compiler.CompilerError> object into a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CompilerErrorCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#8)]
 [!code-vb[CompilerErrorCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerError this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CompilerError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CompilerError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CompilerError ^ default[int] { System::CodeDom::Compiler::CompilerError ^ get(int index); void set(int index, System::CodeDom::Compiler::CompilerError ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CodeDom.Compiler.CompilerError with get, set" Usage="System.CodeDom.Compiler.CompilerErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="86fdb-156">The zero-based index of the entry to locate in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-156">The zero-based index of the entry to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-157">Gets or sets the <see cref="T:System.CodeDom.Compiler.CompilerError" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-157">Gets or sets the <see cref="T:System.CodeDom.Compiler.CompilerError" /> at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86fdb-158">Um <see cref="T:System.CodeDom.Compiler.CompilerError" /> em cada índice válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-158">A <see cref="T:System.CodeDom.Compiler.CompilerError" /> at each valid index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86fdb-159">The index value indicated by the <paramref name="index" /> parameter is outside the valid range of indexes for the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-159">The index value indicated by the <paramref name="index" /> parameter is outside the valid range of indexes for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.Compiler.CompilerError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.Compiler.CompilerError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As CompilerError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::CodeDom::Compiler::CompilerError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.CodeDom.Compiler.CompilerError -&gt; unit" Usage="compilerErrorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.Compiler.CompilerError" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86fdb-160">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to remove from the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-160">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to remove from the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86fdb-161">Removes a specific <see cref="T:System.CodeDom.Compiler.CompilerError" /> from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-161">Removes a specific <see cref="T:System.CodeDom.Compiler.CompilerError" /> from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86fdb-162">O exemplo a seguir demonstra como remover uma <xref:System.CodeDom.Compiler.CompilerError> de item de um <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span><span class="sxs-lookup"><span data-stu-id="86fdb-162">The following example demonstrates how to remove a <xref:System.CodeDom.Compiler.CompilerError> item from a <xref:System.CodeDom.Compiler.CompilerErrorCollection>.</span></span>  
  
 [!code-cpp[CompilerErrorCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CompilerErrorCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CompilerErrorCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CompilerErrorCollectionExample/CS/class1.cs#9)]
 [!code-vb[CompilerErrorCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompilerErrorCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86fdb-163">The specified object is not found in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86fdb-163">The specified object is not found in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>