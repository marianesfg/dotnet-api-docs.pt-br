<Type Name="CompilerInfo" FullName="System.CodeDom.Compiler.CompilerInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93e035f611aef918e6ab4b369fd6a27b18885d2d" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53226146" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompilerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompilerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompilerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerInfo sealed" />
  <TypeSignature Language="F#" Value="type CompilerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa as configurações de um provedor de idioma. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.CodeDom.Compiler.CompilerInfo> classe para determinar se um <xref:System.CodeDom.Compiler.CodeDomProvider> implementação está configurada no computador, ou para examinar as configurações de compilador e de configuração para um provedor de idioma específico.  
  
 O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina arquivo contém as definições de configuração de provedor e o compilador de linguagem. Cada provedor de idioma configurado tem um elemento de configuração do compilador correspondente. Cada elemento define o <xref:System.CodeDom.Compiler.CodeDomProvider> tipo de implementação, nomes de idiomas com suporte, extensões de nome de arquivo com suporte e parâmetros de compilador.  
  
 O .NET Framework define as configurações do compilador inicial no arquivo de configuração do computador. Os desenvolvedores e fornecedores do compilador podem adicionar parâmetros de configuração em uma nova implementação do <xref:System.CodeDom.Compiler.CodeDomProvider>.  
  
 O <xref:System.CodeDom.Compiler.CompilerInfo> classe fornece acesso somente leitura para essas configurações no arquivo de configuração do computador. Use o <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, e <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> membros para examinar os atributos de configuração correspondentes para um provedor de linguagem. Use o <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> método para obter valores de atributo de nível de opções e aviso de compilador para um provedor de linguagem.  
  
 Para obter mais detalhes sobre configurações de idioma do provedor no arquivo de configuração, consulte [esquema de configurações de provedor de linguagem e compilador](~/docs/framework/configure-apps/file-schema/compiler/index.md).  
  
> [!NOTE]
>  Essa classe contém uma demanda de link no nível da classe que se aplica a todos os membros. Um <xref:System.Security.SecurityException> é gerada quando o chamador imediato não tem permissão de confiança total. Para obter detalhes sobre demandas de link, consulte [demandas de Link](~/docs/framework/misc/link-demands.md).  
  
   
  
## Examples  
 O exemplo de código a seguir exibe os parâmetros de configuração do provedor de linguagem. Argumentos de linha de comando são usados para especificar um idioma, a extensão de nome de arquivo ou o tipo de provedor. Para a determinada entrada, o exemplo determina o provedor de idioma correspondente e exibe as configurações do compilador de idioma configurado.  
  
 [!code-cpp[CodeDom_CompilerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#1)]
 [!code-csharp[CodeDom_CompilerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#1)]
 [!code-vb[CodeDom_CompilerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
    <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configurações de compilador e de provedor de linguagem</related>
  </Docs>
  <Members>
    <Member MemberName="CodeDomProviderType">
      <MemberSignature Language="C#" Value="public Type CodeDomProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CodeDomProviderType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CodeDomProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProviderType : Type" Usage="System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de implementação <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurada.</summary>
        <value>Uma instância <see cref="T:System.Type" /> de somente leitura que representa o tipo de provedor do idioma configurado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O arquivo de configuração do computador contém o nome de tipo totalmente qualificado para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. O <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> valor da propriedade é um <xref:System.Type> instância que representa uma implementação de provedor do idioma configurado.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se o idioma de entrada tem um configurado <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. Se houver um provedor configurado para o idioma especificado, o exemplo exibe os parâmetros de configuração do provedor de linguagem. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">O provedor de idioma não está configurado neste computador.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Não é possível localizar o tipo porque ele é um <see langword="null" /> ou uma cadeia de caracteres vazia.  
  
- ou - 
Não é possível localizar o tipo porque o nome para o <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> não pode ser encontrado no arquivo de configuração.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultCompilerParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultCompilerParameters () As CompilerParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerParameters ^ CreateDefaultCompilerParameters();" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultCompilerParameters : unit -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="compilerInfo.CreateDefaultCompilerParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém as configurações de compilador definidas para a implementação de provedor de linguagem de programação.</summary>
        <returns>Uma instância <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> somente leitura que contém as opções de compilador e as configurações definidas para o provedor de linguagem de programação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> método para examinar as configurações do compilador do <xref:System.CodeDom.Compiler.CompilerInfo> instâncias retornadas pelo <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> e <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> métodos.  
  
 O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. Cada elemento de configuração do provedor de linguagem pode conter opcional `compilerOptions` e `warningLevel` atributos. Esses atributos definem os valores padrão para o <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> e <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> propriedades.  
  
 Se o elemento de configuração do provedor de linguagem não define o `compilerOptions` atributo, o <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> valor da propriedade é uma cadeia de caracteres vazia (""). Se o elemento de configuração do provedor de linguagem não define o `warningLevel` atributo, o <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> valor da propriedade é -1.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se o idioma de entrada tem um configurado <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. Se houver um provedor configurado para o idioma especificado, o exemplo exibe os parâmetros de configuração do provedor de linguagem. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configurações de compilador e de provedor de linguagem</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna uma instância de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para as configurações de provedor de linguagem de programação atuais.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider () As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider();" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : unit -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma instância de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para as configurações de provedor de linguagem de programação atuais.</summary>
        <returns>Um provedor CodeDOM associado com a configuração do provedor de linguagem de programação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> método retorna um <xref:System.CodeDom.Compiler.CodeDomProvider> instância para as configurações de provedor do idioma atual.  
  
 Use o <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> método para obter uma <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um <xref:System.CodeDom.Compiler.CompilerInfo> instância retornada pela <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> ou <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 O exemplo de código a seguir enumera os provedores de linguagem no computador e exibe as configurações de compilador e de configuração para cada provedor de linguagem de programação. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configurações de compilador e de provedor de linguagem</related>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider (providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider providerOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="providerOptions">Uma coleção de opções do provedor do arquivo de configuração.</param>
        <summary>Retorna uma instância de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> para as configurações de provedor de linguagem de programação atuais e as opções especificadas.</summary>
        <returns>Um provedor CodeDOM associado com a configuração do provedor de linguagem de programação e as opções especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método retorna um <xref:System.CodeDom.Compiler.CodeDomProvider> instância para as configurações de provedor do idioma atual e as opções de provedor especificado. Para obter informações sobre as opções de provedor com suporte, consulte a documentação específica do provedor de CodeDOM.  
  
 Use o <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> método para obter uma <xref:System.CodeDom.Compiler.CodeDomProvider> implementação para um <xref:System.CodeDom.Compiler.CompilerInfo> instância retornada pela <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> ou <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerOptions" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O provedor não dá suporte a opções.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compilerInfo.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">O objeto a ser comparado com o <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> atual.</param>
        <summary>Determina se o objeto especificado representa as mesmas configurações do compilador e provedor de linguagem de programação que o <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> atual.</summary>
        <returns><see langword="true" /> se <paramref name="o" /> for um objeto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> e seu valor for o mesmo que o dessa instância; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui o <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método.  
  
 As duas instâncias são consideradas iguais se os valores das propriedades a seguir são iguais:  
  
-   A propriedade de <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> .  
  
-   O <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, e <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> propriedades do <xref:System.CodeDom.Compiler.CompilerParameters> instância retornada pelo <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> método.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="public string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; string[]" Usage="compilerInfo.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna as extensões de nome de arquivo com suporte pelo provedor de linguagem de programação.</summary>
        <returns>Uma matriz de extensões de nome de arquivo com suporte pelo provedor de linguagem de programação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. Cada provedor de idioma configurado dá suporte a uma ou mais extensões de nome de arquivo. Por exemplo, um <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> pode oferecer suporte a extensões de nome de arquivo "CS" e ". c#".  
  
   
  
## Examples  
 O exemplo de código a seguir enumera os provedores de linguagem no computador e exibe as configurações de compilador e de configuração para cada provedor de linguagem de programação. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configurações de compilador e de provedor de linguagem</related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compilerInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o código hash para a instância atual.</summary>
        <returns>Um código hash de inteiro com sinal de 32 bits para a instância atual de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />, adequado para uso em algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> método.  
  
 Este método gera o mesmo código hash para dois objetos são iguais de acordo com o <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir cria uma instância da <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> classe. O exemplo exibe o nome do provedor, o código hash e a extensão de nome de arquivo padrão para a nova instância do provedor. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguages">
      <MemberSignature Language="C#" Value="public string[] GetLanguages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetLanguages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguages () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetLanguages();" />
      <MemberSignature Language="F#" Value="member this.GetLanguages : unit -&gt; string[]" Usage="compilerInfo.GetLanguages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém os nomes de linguagens de programação com suporte pelo provedor de linguagem de programação.</summary>
        <returns>Uma matriz de nomes de linguagens de programação com suporte pelo provedor de linguagem de programação.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O [ &lt;System. CodeDom&gt; elemento](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) na configuração da máquina arquivo contém os compilador e provedor de configuração configurações de idioma para cada <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. Cada provedor de idioma configurado dá suporte a um ou mais nomes de linguagem. Por exemplo, o <xref:System.CodeDom.Compiler.CompilerInfo> do objeto para um <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> pode retornar uma matriz com a linguagem nomes "c#", "cs" e "csharp".  
  
   
  
## Examples  
 O exemplo de código a seguir enumera os provedores de linguagem no computador e exibe as configurações de compilador e de configuração para cada provedor de linguagem de programação. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">Esquema de configurações de compilador e de provedor de linguagem</related>
      </Docs>
    </Member>
    <Member MemberName="IsCodeDomProviderTypeValid">
      <MemberSignature Language="C#" Value="public bool IsCodeDomProviderTypeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCodeDomProviderTypeValid" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCodeDomProviderTypeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCodeDomProviderTypeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCodeDomProviderTypeValid : bool" Usage="System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um valor que indica se a implementação de provedor de linguagem de programação está configurada no computador.</summary>
        <value><see langword="true" /> Se o tipo de implementação de provedor de linguagem está configurado no computador. Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> propriedade para verificar o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação antes de acessar os métodos ou propriedades do provedor. Por exemplo, após você obter o idioma de configurações do provedor do <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> método, use o <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> propriedade para verificar a implementação do tipo de provedor antes de chamar o <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> método ou usando o <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir determina se o idioma de entrada tem um configurado <xref:System.CodeDom.Compiler.CodeDomProvider> implementação no computador. Se houver um provedor configurado para o idioma especificado, o exemplo exibe os parâmetros de configuração do provedor de linguagem. Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.CodeDom.Compiler.CompilerInfo> classe.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar membros de <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associados <see cref="T:System.Security.Permissions.PermissionState" /> valor de enumeração: <see langword="Unrestricted" />; [NIB: Conjuntos de permissões nomeadas](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
  </Members>
</Type>