<Type Name="FormatterTypeStyle" FullName="System.Runtime.Serialization.Formatters.FormatterTypeStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea4c600850c0ea1f70e141d7abcbd30248573720" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36534491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum FormatterTypeStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FormatterTypeStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
  <TypeSignature Language="VB.NET" Value="Public Enum FormatterTypeStyle" />
  <TypeSignature Language="C++ CLI" Value="public enum class FormatterTypeStyle" />
  <TypeSignature Language="F#" Value="type FormatterTypeStyle = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35f16-101">Indica o formato no qual as descrições de tipo são apresentadas no fluxo serializado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35f16-101">Indicates the format in which type descriptions are laid out in the serialized stream.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TypesAlways">
      <MemberSignature Language="C#" Value="TypesAlways" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesAlways = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways" />
      <MemberSignature Language="VB.NET" Value="TypesAlways" />
      <MemberSignature Language="C++ CLI" Value="TypesAlways" />
      <MemberSignature Language="F#" Value="TypesAlways = 1" Usage="System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35f16-102">Indica que os tipos podem ser fornecidos para todos os membros do objeto e membros de objeto <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f16-102">Indicates that types can be given to all object members and <see cref="T:System.Runtime.Serialization.ISerializable" /> object members.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TypesWhenNeeded">
      <MemberSignature Language="C#" Value="TypesWhenNeeded" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesWhenNeeded = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded" />
      <MemberSignature Language="VB.NET" Value="TypesWhenNeeded" />
      <MemberSignature Language="C++ CLI" Value="TypesWhenNeeded" />
      <MemberSignature Language="F#" Value="TypesWhenNeeded = 0" Usage="System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35f16-103">Indica que os tipos podem ser definidos apenas para matrizes de objetos, os membros de objeto do tipo <see cref="T:System.Object" /> e tipos de valor não primitivos <see cref="T:System.Runtime.Serialization.ISerializable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f16-103">Indicates that types can be stated only for arrays of objects, object members of type <see cref="T:System.Object" />, and <see cref="T:System.Runtime.Serialization.ISerializable" /> non-primitive value types.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="XsdString">
      <MemberSignature Language="C#" Value="XsdString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle XsdString = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString" />
      <MemberSignature Language="VB.NET" Value="XsdString" />
      <MemberSignature Language="C++ CLI" Value="XsdString" />
      <MemberSignature Language="F#" Value="XsdString = 2" Usage="System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35f16-104">Indica que as cadeias de caracteres podem ser especificadas em formato XSD em vez de SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f16-104">Indicates that strings can be given in the XSD format rather than SOAP.</span>
          </span>
          <span data-ttu-id="35f16-105">Nenhuma ID de cadeia de caracteres é transmitida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35f16-105">No string IDs are transmitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35f16-106">O `XsdString` e `TypesWhenNeeded` configurações destinam-se para a serialização de alto desempenho entre os serviços criados na mesma versão do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="35f16-106">The `XsdString` and `TypesWhenNeeded` settings are meant for high performance serialization between services built on the same version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="35f16-107">Esses dois valores não dão suporte VTS (versão serialização tolerantes a falhas) porque eles intencionalmente omitem as informações de tipo VTS usa para ignorar ou adicionar propriedades e campos opcionais.</span><span class="sxs-lookup"><span data-stu-id="35f16-107">These two values do not support VTS (Version Tolerant Serialization) because they intentionally omit type information that VTS uses to skip or add optional fields and properties.</span></span> <span data-ttu-id="35f16-108">Você não deve usar o `XsdString` ou `TypesWhenNeeded` digite formatos ao serializar e desserializar os tipos em um computador executando uma versão diferente de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] do computador no qual o tipo foi serializado.</span><span class="sxs-lookup"><span data-stu-id="35f16-108">You should not use the `XsdString` or `TypesWhenNeeded` type formats when serializing and deserializing types on a computer running a different version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] than the computer on which the type was serialized.</span></span> <span data-ttu-id="35f16-109">Serialização e desserialização em computadores que executam versões diferentes do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] faz com que o formatador ignorar a serialização de informações de tipo, que torna impossível para o desserializador ignorar os campos opcionais se eles não estiverem presentes em determinados tipos que podem existir em outra versão do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="35f16-109">Serializing and deserializing on computers running different versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] causes the formatter to skip serialization of type information, thus making it impossible for the deserializer to skip optional fields if they are not present in certain types that may exist in the other version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="35f16-110">Se você precisar usar `XsdString` ou `TypesWhenNeeded` nesse cenário, você deve fornecer a serialização personalizada para tipos que foram alterados de uma versão do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] para outro.</span><span class="sxs-lookup"><span data-stu-id="35f16-110">If you must use `XsdString` or `TypesWhenNeeded` in such a scenario, you must provide custom serialization for types that have changed from one version of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to the other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>