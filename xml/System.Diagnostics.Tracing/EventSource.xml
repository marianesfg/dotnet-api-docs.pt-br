<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cb4b4f6b1ce8d9e698d1a43cbdb5b80669e3f47" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48750864" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <TypeSignature Language="F#" Value="type EventSource = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bb332-101">Oferece a capacidade de criar eventos para ETW (Rastreamento de Eventos para Windows).</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb332-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-102">Essa classe é destinada a ser herdada por uma classe de usuário que fornece eventos específicos a ser usado para o ETW.</span><span class="sxs-lookup"><span data-stu-id="bb332-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="bb332-103">O <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> métodos são chamados para registrar os eventos.</span><span class="sxs-lookup"><span data-stu-id="bb332-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bb332-104">Esse tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="bb332-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="bb332-105">Quando você terminar de usar o tipo, você deve descartá-lo diretamente ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="bb332-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="bb332-106">Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="bb332-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="bb332-107">Para descartá-los indiretamente, usar uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="bb332-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="bb332-108">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico da interface.</span><span class="sxs-lookup"><span data-stu-id="bb332-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="bb332-109">A funcionalidade básica de <xref:System.Diagnostics.Tracing.EventSource> é suficiente para a maioria dos aplicativos.</span><span class="sxs-lookup"><span data-stu-id="bb332-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="bb332-110">Se você quiser mais controle sobre o manifesto ETW é criado, você pode aplicar o <xref:System.Diagnostics.Tracing.EventAttribute> aos métodos de atributo.</span><span class="sxs-lookup"><span data-stu-id="bb332-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="bb332-111">Para aplicativos de origem do evento avançado, é possível interceptar os comandos que estão sendo enviados à fonte de evento derivado e alterar a filtragem ou para fazer com que ações (como despejar uma estrutura de dados) a ser executada pelo herdeiro.</span><span class="sxs-lookup"><span data-stu-id="bb332-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="bb332-112">Uma origem do evento pode ser ativada com os controladores ETW do Windows, como a ferramenta Logman, imediatamente.</span><span class="sxs-lookup"><span data-stu-id="bb332-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="bb332-113">Também é possível controlar de forma programática e interceptar o dispatcher de dados.</span><span class="sxs-lookup"><span data-stu-id="bb332-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="bb332-114">O <xref:System.Diagnostics.Tracing.EventListener> classe fornece funcionalidade adicional.</span><span class="sxs-lookup"><span data-stu-id="bb332-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="bb332-115">Começando com [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> fornece suporte de canal e algumas das regras de validação de fonte de evento foi reduzidas.</span><span class="sxs-lookup"><span data-stu-id="bb332-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="bb332-116">Isso significa que:</span><span class="sxs-lookup"><span data-stu-id="bb332-116">This means:</span></span>  
  
-   <span data-ttu-id="bb332-117"><xref:System.Diagnostics.Tracing.EventSource> tipos agora podem implementar interfaces.</span><span class="sxs-lookup"><span data-stu-id="bb332-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="bb332-118">Isso permite o uso de tipos de fontes de evento em sistemas de registro em log avançado que usam interfaces para definir um destino de log comuns.</span><span class="sxs-lookup"><span data-stu-id="bb332-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="bb332-119">Foi introduzido o conceito de um tipo de fonte de eventos do utilitário.</span><span class="sxs-lookup"><span data-stu-id="bb332-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="bb332-120">Esse recurso permite que o compartilhamento de código entre vários tipos de fonte eventos em um projeto para habilitar cenários como otimizado <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="bb332-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="bb332-121">Para obter uma versão de <xref:System.Diagnostics.Tracing.EventSource> classe que fornece suporte a recursos como o canal você estiver direcionando [!INCLUDE[net_v451](~/includes/net-v451-md.md)] ou versões anteriores, consulte [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span><span class="sxs-lookup"><span data-stu-id="bb332-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb332-122">O exemplo a seguir mostra uma implementação simples dos <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="bb332-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="bb332-123">O exemplo a seguir mostra uma implementação mais complexa do <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="bb332-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="bb332-124">Este tipo é thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb332-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-125">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb332-126">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : bool -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource throwOnEventWriteErrors" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="bb332-127">
            <see langword="true" /> para gerar uma exceção quando ocorre um erro no código subjacente do Windows; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-128">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> e especifica se uma exceção deve ser gerada quando ocorre um erro no código do Windows subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="bb332-129">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-130">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com as definições de configuração especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-131">Especificando `settings` quando o <xref:System.Diagnostics.Tracing.EventSource> é construído permite que você especifique se o evento é gravado em um manifesto ou com um formato autodescritivo.</span><span class="sxs-lookup"><span data-stu-id="bb332-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="bb332-132">Além disso, você pode especificar que uma exceção deverá ser gerada quando ocorre um erro durante o processo de gravação do evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource eventSourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="bb332-133">O nome a ser aplicado à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="bb332-134">Não deve ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-135">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com o nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb332-136">
            <paramref name="eventSourceName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (settings, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="bb332-137">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="bb332-138">Os pares chave-valor que especificam características para a origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-139">Inicializa uma nova instância do <see cref="T:System.Diagnostics.Tracing.EventSource" /> a ser usada com eventos que não são de contrato que contém as configurações e características especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-140">Características fornecem informações adicionais sobre um evento e são interpretadas pelo ouvinte de eventos.</span><span class="sxs-lookup"><span data-stu-id="bb332-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="bb332-141">Características são especificadas como pares chave-valor e se não for especificado em pares, ocorrerá uma exceção.</span><span class="sxs-lookup"><span data-stu-id="bb332-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="bb332-142">Você pode recuperar uma característica, passando a chave para o <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, método.</span><span class="sxs-lookup"><span data-stu-id="bb332-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="bb332-143">Especificando `settings` quando o <xref:System.Diagnostics.Tracing.EventSource> é construído permite que você especifique se o evento é gravado em um manifesto ou com um formato autodescritivo.</span><span class="sxs-lookup"><span data-stu-id="bb332-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="bb332-144">Além disso, você pode especificar que uma exceção deverá ser gerada quando ocorre um erro durante o processo de gravação do evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb332-145">
            <paramref name="traits" /> não é especificado em pares chave-valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="bb332-146">O nome a ser aplicado à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="bb332-147">Não deve ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="bb332-148">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-149">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com o nome e as configurações especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-150">Especificando `settings` quando o <xref:System.Diagnostics.Tracing.EventSource> é construído permite que você especifique se o evento é gravado em um manifesto ou com um formato autodescritivo.</span><span class="sxs-lookup"><span data-stu-id="bb332-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="bb332-151">Além disso, você pode especificar que uma exceção deverá ser gerada quando ocorre um erro durante o processo de gravação do evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb332-152">
            <paramref name="eventSourceName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="bb332-153">O nome a ser aplicado à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="bb332-154">Não deve ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="bb332-155">Uma combinação bit a bit dos valores de enumeração que especifica as definições de configuração a serem aplicadas à origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="bb332-156">Os pares chave-valor que especificam características para a origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-157">Cria uma nova instância da classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> com as definições de configuração especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-158">Características fornecem informações adicionais sobre um evento e são interpretadas pelo ouvinte de eventos.</span><span class="sxs-lookup"><span data-stu-id="bb332-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="bb332-159">Características são especificadas como pares chave-valor e se não for especificado em pares, ocorrerá uma exceção.</span><span class="sxs-lookup"><span data-stu-id="bb332-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="bb332-160">Você pode recuperar uma característica, passando a chave para o <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, método.</span><span class="sxs-lookup"><span data-stu-id="bb332-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="bb332-161">Especificando `config` quando o <xref:System.Diagnostics.Tracing.EventSource> é construído permite que você especifique se o evento é gravado em um manifesto ou com um formato autodescritivo.</span><span class="sxs-lookup"><span data-stu-id="bb332-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="bb332-162">Além disso, você pode especificar que uma exceção deverá ser gerada quando ocorre um erro durante o processo de gravação do evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb332-163">
            <paramref name="eventSourceName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bb332-164">
            <paramref name="traits" /> não é especificado em pares chave-valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionException : Exception" Usage="System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-165">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-165">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-166">Obtém as exceções geradas durante a construção de origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-166">Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb332-167">A exceção foi gerada durante a construção da origem do evento, ou <see langword="null" /> se nenhuma exceção foi lançada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-167">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-168"><xref:System.Diagnostics.Tracing.EventSource> construtores não geram exceções.</span><span class="sxs-lookup"><span data-stu-id="bb332-168"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="bb332-169">Em vez disso, qualquer exceção que é lançada é atribuída para o <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> propriedade e registradas pelo <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="bb332-169">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentThreadActivityId : Guid" Usage="System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.5;netstandard-1.6;netcore-2.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-170">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-170">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-171">Obtém a ID de atividade do thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-171">Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb332-172">A ID de atividade do thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-172">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-173">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-173">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb332-174">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-174">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-175">Chame `Dispose` quando tiver terminado de usar o <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="bb332-175">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="bb332-176">O `Dispose` método deixa o <xref:System.Diagnostics.Tracing.EventSource> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="bb332-176">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="bb332-177">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.Diagnostics.Tracing.EventSource> para que o coletor de lixo possa recuperar a memória que o <xref:System.Diagnostics.Tracing.EventSource> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="bb332-177">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="bb332-178">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="bb332-178">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb332-179">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="bb332-179">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="bb332-180">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.Diagnostics.Tracing.EventSource> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="bb332-180">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bb332-181">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-181">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-182">Libera os recursos não gerenciados usados pela classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> e, opcionalmente, libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-182">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-183">Este método é chamado pelo método público `Dispose()` e pelo método `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="bb332-183">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="bb332-184">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="bb332-184">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="bb332-185">`Finalize` invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="bb332-185">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="bb332-186">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Diagnostics.Tracing.EventSource> referências.</span><span class="sxs-lookup"><span data-stu-id="bb332-186">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="bb332-187">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="bb332-187">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bb332-188">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bb332-188">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="bb332-189">Ao substituir <see langword="Dispose(Boolean)" />, tenha cuidado para fazer referência a objetos que não foram descartados anteriormente em um anteriores a chamada do método Dispose para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="bb332-189">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="bb332-190">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="bb332-190">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="bb332-191">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="bb332-191">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberSignature Language="F#" Value="member this.EventCommandExecuted : EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " Usage="member this.EventCommandExecuted : System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-192">Ocorre quando um comando é proveniente de um ouvinte de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-192">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="eventSource.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb332-193">Permite que o objeto <see cref="T:System.Diagnostics.Tracing.EventSource" /> tente liberar recursos e executar outras operações de limpeza antes que o objeto seja obtido pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-193">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-194">Retorna uma cadeia de caracteres do manifesto XML que está associado à origem do evento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-194">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="bb332-195">O tipo da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-195">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="bb332-196">O caminho para o arquivo do assembly (.dll) a ser incluído no elemento [provedor](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) do manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-196">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-197">Retorna uma cadeia de caracteres do manifesto XML que está associado à origem do evento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-197">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-198">A cadeia de caracteres de dados XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-198">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-199">As informações sobre o esquema XML para o manifesto de eventos, consulte [esquema de manifesto de evento](http://go.microsoft.com/fwlink/?LinkId=228077) na biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="bb332-199">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string * System.Diagnostics.Tracing.EventManifestOptions -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="bb332-200">O tipo da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-200">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="bb332-201">O caminho para o arquivo (.dll) do arquivo do assembly a ser incluído no elemento [provedor](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) do manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-201">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="bb332-202">Um combinação bit a bit dos valores de enumeração que especificam como o manifesto é gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-202">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-203">Retorna uma cadeia de caracteres do manifesto XML que está associado à origem do evento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-203">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-204">A cadeia de caracteres de dados XML ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-204">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-205">Se `flags` especifica `OnlyIfNeededForRegistration` e o `eventSourceType` especificado não requer registro explícito, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="bb332-205">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetGuid : Type -&gt; Guid" Usage="System.Diagnostics.Tracing.EventSource.GetGuid eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="bb332-206">O tipo da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-206">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-207">Obtém o identificador exclusivo para essa implementação da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-207">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-208">Um identificador exclusivo para este tipo de origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-208">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetName : Type -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GetName eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="bb332-209">O tipo da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-209">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-210">Obtém o nome amigável da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-210">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-211">O nome amigável da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-211">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="bb332-212">O padrão é o nome simples da classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-212">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberSignature Language="F#" Value="static member GetSources : unit -&gt; seq&lt;System.Diagnostics.Tracing.EventSource&gt;" Usage="System.Diagnostics.Tracing.EventSource.GetSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb332-213">Obtém um instantâneo de todas as origens do evento para o domínio do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-213">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-214">Uma enumeração de todas as origens do evento no domínio do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-214">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetTrait : string -&gt; string" Usage="eventSource.GetTrait key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="bb332-215">A chave da característica a ser obtida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-215">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-216">Obtém o valor de característica associado à chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-216">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-217">O valor de característica associado à chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-217">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="bb332-218">Se a chave não for encontrada, retornará <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-218">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-219">Características fornecem informações adicionais sobre um evento e são interpretadas pelo ouvinte de eventos.</span><span class="sxs-lookup"><span data-stu-id="bb332-219">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="bb332-220">Características são especificadas como pares chave-valor quando a origem do evento é construída.</span><span class="sxs-lookup"><span data-stu-id="bb332-220">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid" Usage="System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-221">O identificador exclusivo da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-221">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb332-222">Um identificador exclusivo para a origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-222">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-223">Determina se a origem do evento atual está habilitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-223">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : unit -&gt; bool" Usage="eventSource.IsEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb332-224">Determina se a origem do evento atual está habilitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-224">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-225">
            <see langword="true" /> se a origem do evento atual estiver habilitada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-225">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; bool" Usage="eventSource.IsEnabled (level, keywords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="bb332-226">O nível da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-226">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="bb332-227">A palavra-chave da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-227">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-228">Determina se a origem do evento atual que tem o nível e a palavra-chave especificados está habilitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-228">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-229">
            <see langword="true" /> se a origem do evento estiver habilitada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-229">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-230">O resultado deste método é somente uma aproximação de se determinado evento está ativo.</span><span class="sxs-lookup"><span data-stu-id="bb332-230">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="bb332-231">Use-o para evitar computação cara para registro em log quando este registro está desabilitado.</span><span class="sxs-lookup"><span data-stu-id="bb332-231">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="bb332-232">Fontes de evento podem ter filtragem adicional que determina as respectivas atividades.</span><span class="sxs-lookup"><span data-stu-id="bb332-232">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Diagnostics.Tracing.EventChannel -&gt; bool" Usage="eventSource.IsEnabled (level, keywords, channel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="bb332-233">O nível do evento a serem verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-233">The event level to check.</span>
          </span>
          <span data-ttu-id="bb332-234">Uma origem do evento será considerada habilitada quando o respectivo nível for maior ou igual ao <c>nível</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-234">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="bb332-235">As palavras-chave do evento a serem verificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-235">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="bb332-236">O canal de evento a ser verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-236">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-237">Determina se a origem do evento atual é habilitada para eventos com o nível, palavras-chave e canais específicos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-237">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-238">
            <see langword="true" /> se a origem do evento está habilitada para o nível de evento, palavras-chaves e canal especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-238">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bb332-239">O resultado deste método é somente uma aproximação de se determinado evento está ativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-239">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="bb332-240">Use-o para evitar computação cara para registro em log quando este registro está desabilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-240">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="bb332-241">Origens do evento podem ter filtragem adicional que determina as respectivas atividades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-241">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-242">Se a</span><span class="sxs-lookup"><span data-stu-id="bb332-242">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.Tracing.EventSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-243">O nome amigável da classe que é derivada da origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-243">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb332-244">O nome amigável da classe derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-244">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="bb332-245">O padrão é o nome simples da classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-245">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberSignature Language="F#" Value="abstract member OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit&#xA;override this.OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit" Usage="eventSource.OnEventCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="bb332-246">Os argumentos para o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-246">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-247">Chamado quando a origem do evento atual é atualizada pelo controlador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-247">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberSignature Language="F#" Value="static member SendCommand : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventCommand * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SendCommand (eventSource, command, commandArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="bb332-248">A origem do evento para a qual o comando será enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-248">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bb332-249">O comando de evento a ser enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-249">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="bb332-250">Os argumentos para o comando do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-250">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-251">Envia um comando para uma origem do evento especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-251">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-252">Chamando <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> encaminha o comando para o <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="bb332-252">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="bb332-253">O que o <xref:System.Diagnostics.Tracing.EventSource> faz com que o comando e seus argumentos é específico para a origem do evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-253">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="bb332-254">O comando e argumentos de comando são passados para o <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> retorno de chamada da origem do evento especificado.</span><span class="sxs-lookup"><span data-stu-id="bb332-254">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="bb332-255">Se possível, a origem do evento atual não deve afetar a eventos de filtragem de outros ouvintes de eventos; No entanto, que talvez não seja possível se o comando faz com que uma coleta de lixo, um sistema de liberação ou alguma outra atividade global.</span><span class="sxs-lookup"><span data-stu-id="bb332-255">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-256">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-256">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-257">Define a ID de atividade no thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-257">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId activityId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="bb332-258">A nova ID de atividade do thread atual ou <see cref="F:System.Guid.Empty" /> para indicar que o trabalho no thread atual não está associado a nenhuma atividade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-258">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-259">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-259">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-260">Define a ID de atividade no thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-260">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-261">Chamar o <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> método define a ID da atividade em uma base por thread.</span><span class="sxs-lookup"><span data-stu-id="bb332-261">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="bb332-262">Todos os eventos no thread terá a ID da atividade até que uma nova atividade é iniciada no mesmo thread.</span><span class="sxs-lookup"><span data-stu-id="bb332-262">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="bb332-263">Este método é chamado somente pelas bibliotecas que gerenciam seus próprios threads.</span><span class="sxs-lookup"><span data-stu-id="bb332-263">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid *  -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId (activityId, oldActivityThatWillContinue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="bb332-264">A nova ID de atividade do thread atual ou <see cref="F:System.Guid.Empty" /> para indicar que o trabalho no thread atual não está associado a nenhuma atividade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-264">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="bb332-265">Quando o método retorna, contém a ID de atividade anterior no thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-265">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-266">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-266">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-267">Define a ID de atividade no thread atual e retorna a ID da atividade anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-267">Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-268">Você pode chamar o <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> método para substituir temporariamente a ID da atividade do thread atual com uma nova ID de atividade.</span><span class="sxs-lookup"><span data-stu-id="bb332-268">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="bb332-269">Em seguida, você deve restaurar a ID da atividade anterior, passando o `oldActivityThatWillContinue` argumento para o <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> método.</span><span class="sxs-lookup"><span data-stu-id="bb332-269">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Diagnostics.Tracing.EventSourceSettings" Usage="System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-270">Obtém as configurações aplicadas a esta origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-270">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb332-271">As configurações aplicadas a esta origem do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-271">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventSource.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb332-272">Obtém uma representação de cadeia de caracteres da instância da origem do evento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-272">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb332-273">O nome e identificador exclusivo que identificam a origem do evento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-273">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-274">Grava um evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-274">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="eventSource.Write eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="bb332-275">O nome do evento a ser gravado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-275">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-276">Grava um evento sem campos, mas com o nome e as opções padrão especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-276">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb332-277">
            <paramref name="eventName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-277">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions -&gt; unit" Usage="eventSource.Write (eventName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="bb332-278">O nome do evento a ser gravado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-278">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="bb332-279">As opções, como nível, palavras-chave e código de operação para o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-279">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-280">Grava um evento sem campos, mas com o nome e as opções especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-280">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bb332-281">
            <paramref name="eventName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-281">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * 'T -&gt; unit" Usage="eventSource.Write (eventName, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="bb332-282">O tipo que define o evento e seus dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-282">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="bb332-283">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="bb332-284">O nome do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-284">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bb332-285">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-285">The event data.</span>
          </span>
          <span data-ttu-id="bb332-286">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-286">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-287">Grava um evento com o nome e os dados especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-287">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-288">Se `eventName` está `null`, o nome do evento é derivado automaticamente dados de evento do tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou determinado com base no nome do tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="bb332-288">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="bb332-289">Propriedades da instância de público `data` recursivamente para criar os campos de evento será gravado.</span><span class="sxs-lookup"><span data-stu-id="bb332-289">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions * 'T -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="bb332-290">O tipo que define o evento e seus dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-290">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="bb332-291">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-291">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="bb332-292">O nome do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-292">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="bb332-293">As opções de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-293">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bb332-294">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-294">The event data.</span>
          </span>
          <span data-ttu-id="bb332-295">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-295">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-296">Grava um evento com o nome, dados de evento e opções especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-296">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-297">Se `eventName` está `null`, o nome do evento é derivado automaticamente dados de evento do tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou determinado com base no nome do tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="bb332-297">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="bb332-298">Propriedades da instância de público `data` recursivamente para criar os campos de evento será gravado.</span><span class="sxs-lookup"><span data-stu-id="bb332-298">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" RefType="ref" />
        <Parameter Name="data" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="bb332-299">O tipo que define o evento e seus dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-299">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="bb332-300">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-300">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="bb332-301">O nome do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-301">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="bb332-302">As opções de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-302">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bb332-303">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-303">The event data.</span>
          </span>
          <span data-ttu-id="bb332-304">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-304">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-305">Grava um evento com o nome, opções e dados de evento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-305">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-306">Se `eventName` está `null`, o nome do evento é derivado automaticamente dados de evento do tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou determinado com base no nome do tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="bb332-306">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="bb332-307">Propriedades da instância de público `data` recursivamente para criar os campos de evento será gravado.</span><span class="sxs-lookup"><span data-stu-id="bb332-307">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, activityId, relatedActivityId, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid" RefType="ref" />
        <Parameter Name="data" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="bb332-308">O tipo que define o evento e seus dados associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-308">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="bb332-309">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-309">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="bb332-310">O nome do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-310">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="bb332-311">As opções de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-311">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="bb332-312">A ID da atividade associada ao evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-312">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="bb332-313">A ID de uma atividade associada ou <see cref="F:System.Guid.Empty" /> se não houver nenhuma atividade associada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-313">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bb332-314">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-314">The event data.</span>
          </span>
          <span data-ttu-id="bb332-315">Esse tipo deve ser um tipo anônimo ou marcado com o atributo <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-315">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-316">Grava um evento com o nome, opções, dados de atividade e de evento relacionados especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-316">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-317">Se `eventName` está `null`, o nome do evento é derivado automaticamente dados de evento do tipo de T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) ou determinado com base no nome do tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="bb332-317">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="bb332-318">Propriedades da instância de público `data` recursivamente para criar os campos de evento será gravado.</span><span class="sxs-lookup"><span data-stu-id="bb332-318">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bb332-319">Grava um evento usando o identificador de evento e argumentos opcionais fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-319">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-320">O `WriteEvent` método fornece sobrecargas com combinações de argumentos de cadeia de caracteres e inteiros.</span><span class="sxs-lookup"><span data-stu-id="bb332-320">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="bb332-321">Se nenhuma dessas combinações correspondem aos parâmetros para a chamada, o compilador usa o <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> sobrecarregar, que é consideravelmente mais lento do que as outras sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="bb332-321">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="bb332-322">Consulte a página de sobrecarga para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="bb332-322">See the overload page for details.</span></span>  
  
 <span data-ttu-id="bb332-323">Em todos os casos, o `eventid` parâmetro deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-323">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-324">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-324">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-325">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-325">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-326">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-326">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-327">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-327">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="bb332-328">Você também pode criar uma sobrecarga personalizada usando o <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bb332-328">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int -&gt; unit" Usage="eventSource.WriteEvent eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-329">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-329">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-330">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-330">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-331">Grava um evento usando o identificador de evento fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-331">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-332">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-332">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-333">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-333">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-334">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-334">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-335">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-335">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-336">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-336">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb332-337">O exemplo a seguir mostra como usar essa sobrecarga de método para gravar um evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-337">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="bb332-338">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="bb332-338">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-339">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-339">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-340">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-340">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-341">Um argumento de matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-341">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-342">Grava um evento usando o identificador de evento e o argumento de matriz de bytes fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-342">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-343">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-343">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-344">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-344">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-345">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-345">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-346">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-346">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-347">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-347">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-348">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-348">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-349">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-349">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-350">Um argumento inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-350">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-351">Grava um evento usando o identificador de evento e o argumento inteiro de 32 bits fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-351">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-352">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-352">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-353">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-353">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-354">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-354">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-355">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-355">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-356">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-356">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb332-357">O exemplo a seguir mostra como usar essa sobrecarga de método para gravar um evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-357">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="bb332-358">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="bb332-358">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-359">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-359">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-360">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-360">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-361">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-361">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-362">Grava um evento usando o identificador de evento e o argumento inteiro de 64 bits fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-362">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-363">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-363">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-364">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-364">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-365">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-365">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-366">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-366">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-367">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-367">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * obj[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-368">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-368">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-369">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-369">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="bb332-370">Uma matriz de objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-370">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-371">Grava um evento usando o identificador de evento fornecido e a matriz de argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-371">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-372">Por padrão, o compilador chama essa sobrecarga se os parâmetros para a chamada não corresponderem a uma das sobrecargas de método.</span><span class="sxs-lookup"><span data-stu-id="bb332-372">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="bb332-373">Essa sobrecarga é muito mais lenta do que as outras sobrecargas, porque ele faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="bb332-373">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="bb332-374">Ele aloca uma matriz para armazenar o argumento variável.</span><span class="sxs-lookup"><span data-stu-id="bb332-374">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="bb332-375">Ele converte cada parâmetro de um objeto (que faz com que as alocações para tipos primitivos).</span><span class="sxs-lookup"><span data-stu-id="bb332-375">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="bb332-376">Ele atribui esses objetos na matriz.</span><span class="sxs-lookup"><span data-stu-id="bb332-376">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="bb332-377">Ele chama a função, que, em seguida, determina o tipo de cada argumento para que ele pode ser serializado para o ETW.</span><span class="sxs-lookup"><span data-stu-id="bb332-377">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="bb332-378">A alta sobrecarga para essa sobrecarga não é significativa durante o rastreamento de eventos de baixo volume, pois o método é usado somente quando o provedor está habilitado.</span><span class="sxs-lookup"><span data-stu-id="bb332-378">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="bb332-379">No entanto, para eventos de alto volume, a sobrecarga de desempenho pode ser significativa.</span><span class="sxs-lookup"><span data-stu-id="bb332-379">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="bb332-380">Você pode evitar o uso <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> cargas de alto volume, criando uma sobrecarga nova e mais rápida com o <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bb332-380">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="bb332-381">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-381">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-382">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-382">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-383">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-383">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-384">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-384">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-385">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-385">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-386">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-386">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-387">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-387">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-388">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-388">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-389">Grava um evento usando o identificador de evento e o argumentos de cadeia de caractere fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-389">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-390">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-390">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-391">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-391">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-392">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-392">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-393">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-393">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-394">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-394">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb332-395">O exemplo a seguir mostra como usar essa sobrecarga de método para gravar um evento.</span><span class="sxs-lookup"><span data-stu-id="bb332-395">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="bb332-396">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Diagnostics.Tracing.EventSource> classe.</span><span class="sxs-lookup"><span data-stu-id="bb332-396">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-397">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-397">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-398">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-398">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-399">Um argumento inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-399">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-400">Um argumento inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-400">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-401">Grava um evento usando o identificador de evento e os argumentos inteiros de 32 bits fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-401">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-402">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-402">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-403">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-403">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-404">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-404">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-405">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-405">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-406">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-406">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-407">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-407">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-408">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-408">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-409">Um argumento inteiro de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-409">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-410">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-410">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-411">Grava um evento usando o identificador de evento fornecido e argumentos inteiros de 32 bits e cadeia de caracteres fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-411">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-412">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-412">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-413">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-413">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-414">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-414">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-415">Um argumento de matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-415">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-416">Grava os dados de evento usando o identificador especificado e inteiro de 64 bits e argumentos da matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-416">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-417">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-417">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-418">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-418">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-419">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-419">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-420">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-420">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-421">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-421">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-422">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-422">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-423">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-423">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-424">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-424">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-425">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-425">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-426">Grava um evento usando o identificador de evento fornecido e os argumentos 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-426">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-427">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-427">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-428">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-428">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-429">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-429">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-430">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-430">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-431">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-431">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-432">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-432">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-433">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-433">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-434">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-434">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-435">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-435">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-436">Grava um evento usando o identificador de evento fornecido e argumentos inteiros de 64 bits e cadeia de caracteres fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-436">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-437">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-437">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-438">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-438">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-439">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-439">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-440">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-440">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-441">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-441">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-442">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-442">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-443">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-443">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-444">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-444">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-445">Um argumento inteiro de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-445">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-446">Grava um evento usando o identificador de evento fornecido e os argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-446">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-447">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-447">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-448">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-448">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-449">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-449">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-450">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-450">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-451">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-451">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-452">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-452">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-453">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-453">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-454">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-454">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-455">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-455">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-456">Grava um evento usando o identificador de evento fornecido e os argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-456">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-457">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-457">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-458">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-458">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-459">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-459">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-460">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-460">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-461">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-461">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-462">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-462">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-463">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-463">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-464">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-464">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-465">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-465">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-466">Grava um evento usando o identificador de evento e os argumentos de cadeia de caractere fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-466">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-467">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-467">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-468">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-468">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-469">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-469">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-470">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-470">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-471">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-471">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-472">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-472">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-473">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-473">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-474">Um argumento inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-474">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-475">Um argumento inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-475">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="bb332-476">Um argumento inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-476">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-477">Grava um evento usando o identificador de evento e os argumentos inteiros de 32 bits fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-477">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-478">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-478">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-479">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-479">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-480">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-480">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-481">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-481">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-482">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-482">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-483">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-483">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-484">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-484">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-485">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-485">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-486">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-486">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="bb332-487">Um argumento inteiro de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-487">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-488">Grava um evento usando o identificador de evento fornecido e os argumentos 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-488">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-489">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-489">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-490">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-490">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-491">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-491">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-492">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-492">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-493">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-493">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-494">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-494">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-495">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-495">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-496">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-496">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-497">Um argumento inteiro de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-497">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="bb332-498">Um argumento inteiro de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-498">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-499">Grava um evento usando o identificador de evento fornecido e os argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-499">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-500">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-500">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-501">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-501">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-502">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-502">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-503">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-503">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-504">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-504">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-505">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-505">The event identifier.</span>
          </span>
          <span data-ttu-id="bb332-506">Esse valor deve estar entre 0 e 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-506">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="bb332-507">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-507">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="bb332-508">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-508">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="bb332-509">Um argumento de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-509">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-510">Grava um evento usando o identificador de evento e os argumentos de cadeia de caractere fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-510">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-511">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-511">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-512">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-512">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-513">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-513">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-514">Quando você implementa um método que é identificado como um evento ETW em uma <xref:System.Diagnostics.Tracing.EventSource>-classe derivada.</span><span class="sxs-lookup"><span data-stu-id="bb332-514">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="bb332-515">Você deve chamar a classe base <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> método passando o <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> e os mesmos argumentos que o método implementado semelhante ao exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-515">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberSignature Language="F#" Value="member this.WriteEventCore : int * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventCore (eventId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-516">O identificador de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-516">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="bb332-517">O número de itens de dados de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-517">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bb332-518">A estrutura que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-518">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-519">Cria uma nova sobrecarga <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> usando o identificador de evento fornecidos e os dados de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-519">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-520">`eventid` deve ser maior que 0 ou menor que 65535 ou erros podem ocorrer na operação.</span><span class="sxs-lookup"><span data-stu-id="bb332-520">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="bb332-521">Se ocorrerem erros, você pode obter mais informações sobre a origem do erro ao verificar o fluxo de saída do depurador, se você tiver um depurador anexado ao processo de eventos acionados.</span><span class="sxs-lookup"><span data-stu-id="bb332-521">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="bb332-522">Você também pode procurar erros relatados no fluxo de eventos ETW, se você tiver um ouvinte ETW na origem do evento onde ocorre o erro.</span><span class="sxs-lookup"><span data-stu-id="bb332-522">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="bb332-523">Este método protegido permite que os usuários definam novas <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> sobrecargas que são mais rápidas que as sobrecargas fornecidas.</span><span class="sxs-lookup"><span data-stu-id="bb332-523">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="bb332-524">Criar uma nova sobrecarga envolve o código não seguro.</span><span class="sxs-lookup"><span data-stu-id="bb332-524">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="bb332-525">O procedimento básico é uma matriz de descritores de dados de evento que corresponde ao número de itens de payload de alocar de pilha.</span><span class="sxs-lookup"><span data-stu-id="bb332-525">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="bb332-526">Para cada item de carga, defina o tamanho correto e matriz de dados de valor no evento. Chamar <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> com a matriz inicializada.</span><span class="sxs-lookup"><span data-stu-id="bb332-526">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="bb332-527">O exemplo a seguir mostra como adicionar um <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> sobrecarga que aceita quatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="bb332-527">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="bb332-528">Um exemplo seria se você tiver um evento de log que registra em log uma cadeia de caracteres e 3 inteiros.</span><span class="sxs-lookup"><span data-stu-id="bb332-528">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="bb332-529">Você pode fazer isso sem chamar <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, mas ele seria mais lento do que o necessário.</span><span class="sxs-lookup"><span data-stu-id="bb332-529">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="bb332-530">Isso ocorre porque ele usa matrizes e reflexão para descobrir o que fazer.</span><span class="sxs-lookup"><span data-stu-id="bb332-530">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="bb332-531">Se você os registra em uma taxa alta (1000 > / s), pode ser que vale a pena fazer uma rápida auxiliar, conforme mostrado no exemplo a seguir.</span><span class="sxs-lookup"><span data-stu-id="bb332-531">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="bb332-532">O método sombreia existente <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb332-532">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="bb332-533">Portanto, o código do chamador original (LogTime), na verdade, não alterar, mas o compilador c# usará a versão mais especializada que será mais rápida.</span><span class="sxs-lookup"><span data-stu-id="bb332-533">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="bb332-534">Para compilar o código não seguro, você deve especificar o [/unsafe (opções do compilador c#)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) opção de compilador.</span><span class="sxs-lookup"><span data-stu-id="bb332-534">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bb332-535">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-535">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bb332-536">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-536">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityId : int * Guid * obj[] -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityId (eventId, relatedActivityId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-537">Um identificador que identifica este evento exclusivamente dentro do <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-537">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="bb332-538">O identificador da atividade relacionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-538">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="bb332-539">Obtém uma matriz de objetos que contêm dados sobre o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-539">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-540">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-540">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-541">Grava um evento que indica que a atividade atual está relacionada a outra atividade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-541">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-542">O <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> método registra um evento de transferência.</span><span class="sxs-lookup"><span data-stu-id="bb332-542">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="bb332-543">A atividade do thread atual é registrada com o evento, e isso permite que duas atividades ser relacionado por um consumidor de eventos.</span><span class="sxs-lookup"><span data-stu-id="bb332-543">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="bb332-544">Seu método de evento ETW chamar essa função deve seguir estas diretrizes:</span><span class="sxs-lookup"><span data-stu-id="bb332-544">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="bb332-545">Especifique o primeiro parâmetro como um <xref:System.Guid> chamado `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="bb332-545">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="bb332-546">Especificar <xref:System.Diagnostics.Tracing.EventOpcode.Send> ou <xref:System.Diagnostics.Tracing.EventOpcode.Receive> como o <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb332-546">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="bb332-547">Chamar <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passando no evento ID, seguido pelo GUID ID relacionados, seguido por todos os parâmetros do método de evento for passado, na mesma ordem.</span><span class="sxs-lookup"><span data-stu-id="bb332-547">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="bb332-548">Se `args` não é usado, ele será convertido em uma matriz vazia para a chamada resultante para o ETW.</span><span class="sxs-lookup"><span data-stu-id="bb332-548">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb332-549">O exemplo de código a seguir mostra como você pode pode especificar uma origem de evento que chama <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb332-549">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityIdCore : int * nativeptr&lt;Guid&gt; * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityIdCore (eventId, relatedActivityId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="bb332-550">Um identificador que identifica este evento exclusivamente dentro do <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-550">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="bb332-551">Um ponteiro para o GUID da ID de atividade relacionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-551">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="bb332-552">O número de itens no campo <c>data</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-552">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="bb332-553">Um ponteiro para o primeiro item no campo de dados de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-553">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb332-554">[Suporte somente no .NET Framework 4.5.1 e versões posteriores]</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-554">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="bb332-555">Grava um evento que indica que a atividade atual está relacionada a outra atividade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb332-555">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb332-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> é semelhante para o <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> método, mas oferece um melhor desempenho, ele não tem a conversão unboxing de bevcause a `childActivityID` e `data` argumentos.</span><span class="sxs-lookup"><span data-stu-id="bb332-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="bb332-557">Seu método de evento ETW chamar essa função deve seguir estas diretrizes:</span><span class="sxs-lookup"><span data-stu-id="bb332-557">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="bb332-558">Especifique o primeiro parâmetro como um <xref:System.Guid> chamado `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="bb332-558">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="bb332-559">Especificar <xref:System.Diagnostics.Tracing.EventOpcode.Send> ou <xref:System.Diagnostics.Tracing.EventOpcode.Receive> como o <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bb332-559">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="bb332-560">Chamar <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passando no evento ID, seguido pelo GUID ID relacionados, seguido por todos os parâmetros do método de evento for passado, na mesma ordem.</span><span class="sxs-lookup"><span data-stu-id="bb332-560">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb332-561">O seguinte exemplo de código em c# mostra como definir uma sobrecarga de método que chama <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb332-561">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>