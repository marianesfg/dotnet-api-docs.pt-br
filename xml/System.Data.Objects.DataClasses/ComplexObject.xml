<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d28a724e0ee31f78b3e4faaa9c164d099c604ca" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52375066" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <TypeSignature Language="F#" Value="type ComplexObject = class&#xA;    inherit StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Classe base de tipos complexos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject> implementa a funcionalidade básica para tipos complexos. Para obter mais informações, consulte [objetos de tipo complexos](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
 Ao implementar classes de dados personalizados com um modelo conceitual, é recomendável que suas classes de dados que representam tipos complexos herdam <xref:System.Data.Objects.DataClasses.ComplexObject>. Para obter mais informações, consulte [personalizando objetos](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).  
  
 Um tipo complexo pode ser uma propriedade de um tipo de entidade ou de outro tipo complexo.  
  
 Tipos complexos são retornados pelas propriedades não escalares de tipos de entidade. Isso permite que propriedades escalares sejam organizadas dentro das entidades. Como as entidades, tipos complexos consistem em propriedades escalares ou outras propriedades de tipo complexo. Um tipo complexo não pode ser usado sem um tipo de entidade associada. Como tipos complexos não têm chaves, os objetos de tipo complexo não podem ser gerenciados sem um tipo de entidade associada. Para obter mais informações, consulte [objetos de tipo complexos](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
   
  
## Examples  
 No exemplo a seguir, a classe de dados personalizado `OrderInfo` herda <xref:System.Data.Objects.DataClasses.ComplexObject> e é mapeado para o `OrderInfo` tipo complexo definido no modelo conceitual.  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md">Como: executar uma consulta que retorna tipos complexos (EntityClient)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6(v=vs.90)">Como: definir um modelo com tipos complexos (Entity Framework)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525ffa1c-524e-40bd-bb80-2929aec8c8d8(v=vs.90)">Como: adicionar e modificar objetos com tipos complexos (Entity Framework)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Cria uma instância de <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanged : string -&gt; unit" Usage="complexObject.ReportPropertyChanged property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">O nome da propriedade alterada.</param>
        <summary>Notifica o rastreador de alteração que uma propriedade de um objeto complexo alterou.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um tipo complexo é gerado pelas ferramentas do modelo de dados de entidade, o <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> método é chamado após uma alteração de propriedade para confirmar o valor armazenado em cache no <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> como o valor original da propriedade.  
  
 Este método chama o <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> método no Rastreador de alteração.  
  
 Quando o controle de alterações que são feitas para a propriedade de um objeto complexo personalizado, você deve chamar <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>. Faça isso quando o objeto complexo herda do <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanging : string -&gt; unit" Usage="complexObject.ReportPropertyChanging property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">O nome da propriedade variável.</param>
        <summary>Notifica o rastreador de alteração de a alteração de uma propriedade está pendente em um objeto complexo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um tipo complexo é gerado pelas ferramentas do modelo de dados de entidade, o <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> método é chamado antes de uma alteração de propriedade para armazenar em cache o valor atual da propriedade no <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> para que esse valor pode ser usado como o valor original da propriedade.  
  
 Este método chama o <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> método no Rastreador de alteração.  
  
 Quando o controle de alterações que são feitas para a propriedade de um objeto complexo personalizado, você deve chamar <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>. Faça isso quando o objeto complexo herda do <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>