<Type Name="DataPointCollection" FullName="System.Web.UI.DataVisualization.Charting.DataPointCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6017ee9aac9de6555631ca514aa46133e171ddd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36393925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataPointCollection : System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointCollection extends System.Web.UI.DataVisualization.Charting.ChartElementCollection`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointCollection&#xA;Inherits ChartElementCollection(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointCollection : System::Web::UI::DataVisualization::Charting::ChartElementCollection&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type DataPointCollection = class&#xA;    inherit ChartElementCollection&lt;DataPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Web.UI.DataVisualization.Charting.DataPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma coleção de objetos <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> classe representa uma coleção de <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos, que por sua vez, representam os pontos de dados que fazem parte de um <xref:System.Web.UI.DataVisualization.Charting.Series> objeto.  
  
 Essa classe de coleção é implementado como o <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> propriedade de um <xref:System.Web.UI.DataVisualization.Charting.Series> objeto.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos podem ser anexados ou inseridos na coleção com o valor de X e Y-já especificados como parâmetros de valor (es). Observe que também sejam adicionados automaticamente quando uma série é associada a uma fonte de dados usando o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> ou <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> método.  
  
 Pontos de dados são plotados na ordem em que eles ocorrem nesta coleção somente se a série que pertence a coleção tem seu <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> propriedade definida como `true` (o valor padrão é `false`), ou se todos os valores de X para todos os pontos de dados são zero. Caso contrário, os pontos de dados são plotados usando os respectivos valores de X.  
  
 Pontos de dados podem ser localizados e manipulados, com base no máximo, mínimo ou especificado X ou Y usando o sobrecarregado `FindMaxValue`, `FindMinValue` ou `FindValue` métodos, respectivamente.  
  
 O [DataPointCollection.Count](<xref:System.Collections.ObjectModel.Collection%601.Count%2A>) propriedade indica o número total de itens na coleção e é comumente usada para localizar o limite superior da coleção.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Add (params double[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Add(float64[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.Add(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray y As Double()) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Add(... cli::array &lt;double&gt; ^ y);" />
      <MemberSignature Language="F#" Value="override this.Add : double[] -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.Add y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="y">O valor Y.</param>
        <summary>Adiciona um novo objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> à coleção e define seu valor Y.</summary>
        <returns>O novo objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ao final da coleção, com o valor X e o(s) valor(es) Y especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Double, yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : double * double -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Valor X do ponto de dados.</param>
        <param name="yValue">Valor Y do ponto de dados.</param>
        <summary>Adiciona um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ao final da coleção, com o valor X e o valor Y especificados.</summary>
        <returns>Um <see langword="integer" /> que representa o índice baseado em zero em que o item foi inserido na coleção de pontos de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona <xref:System.Web.UI.DataVisualization.Charting.DataPoint> o objeto para o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; o objeto sempre é adicionado ao final da coleção.  
  
 Use o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY%2A> sobrecarga do método se os pontos de dados precisam de mais de um valor de Y.  
  
 Se os pontos de dados não é necessário um valor de X — ou seja, se você estiver criando não-dispersões — use o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> método em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Object, ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : obj * obj[] -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">O valor X do ponto de dados.</param>
        <param name="yValue">Um ou mais valores separados por vírgula que representam os valores Y do ponto de dados.</param>
        <summary>Adiciona um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ao final da coleção, com o valor X e o(s) valor(es) Y especificados.</summary>
        <returns>Um valor <see langword="integer" /> que representa o índice baseado em zero em que o item foi inserido na coleção.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona uma <xref:System.Web.UI.DataVisualization.Charting.DataPoint> o objeto para o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; o ponto de dados sempre é adicionado ao final da coleção.  
  
 Você deve fornecer pelo menos um (1) valor Y, caso contrário, uma exceção será lançada. Esse método também verifica a <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> propriedade o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> do objeto que esses dados pertencem a; se um número excessivo de valores de Y forem especificados, uma exceção será lançada.  
  
 Para que <xref:System.DateTime> formatação tenha efeito, um valor deve ser um <xref:System.DateTime> objeto.  
  
 Se os pontos de dados não é necessário um valor de X — ou seja, se você estiver criando não-dispersões — use o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> método em vez disso  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ao final da coleção, com os valores Y especificados.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : double -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="yValue">O valor Y do ponto de dados.</param>
        <summary>Adiciona um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ao final da coleção, com o valor Y especificado.</summary>
        <returns>Um <see langword="integer" /> que representa o índice baseado em zero em que o item foi inserido na coleção de pontos de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona uma <xref:System.Web.UI.DataVisualization.Charting.DataPoint> o objeto para o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; o ponto de dados sempre é adicionado ao final da coleção.  
  
 Use a definição do método que permite que uma matriz de valores de Y se os pontos de dados precisam de mais de um valor de Y.  
  
 Se os pontos de dados precisam de um valor de X — ou seja, se você estiver criando dispersões — use um do `AddXY` métodos em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : obj[] -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Uma lista separada por vírgula de valores Y do objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> adicionado à coleção.</param>
        <summary>Adiciona um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> ao final da coleção, com os valores Y especificados.</summary>
        <returns>Um <see langword="integer" /> que representa o local no índice baseado em zero em que o item foi inserido na coleção.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método adiciona uma <xref:System.Web.UI.DataVisualization.Charting.DataPoint> o objeto para o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; o ponto de dados sempre é adicionado ao final da coleção.  
  
 Você deve fornecer pelo menos um (1) valor Y, caso contrário, uma exceção será lançada. Esse método também verifica a <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> propriedade o <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objeto esses dados pertencem a; se um número excessivo de valores de Y forem especificados, uma exceção será lançada.  
  
 O X-valor será sempre definido como zero (0), resultando em gráficos de dispersão não. Se desejar que os pontos de dados para usar um valor de X, chame um do `AddXY` métodos em vez disso.  
  
 Para que <xref:System.DateTime> formatação tenha efeito, um valor deve ser um <xref:System.DateTime> objeto.  
  
 Consulte o seguinte para uma lista completa de tipos do .NET Framework válidos que pode ser usado para os parâmetros de tipo de objeto:  
  
||||  
|-|-|-|  
|Cadeia de Caracteres|DateTime|Duplo|  
|Decimal|Simples|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind (System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind(class System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind (dataSource As IEnumerable, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind(System::Collections::IEnumerable ^ dataSource, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBind : System.Collections.IEnumerable * string * string * string -&gt; unit" Usage="dataPointCollection.DataBind (dataSource, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">A fonte de dados.</param>
        <param name="xField">O nome do campo de valores X.</param>
        <param name="yFields">Nomes separados por vírgula dos campos de valores Y.</param>
        <param name="otherFields">Outras propriedades do ponto de dados com regras de associação, no formato PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]].  Por exemplo: “Tooltip=Price{C1},Url=WebSiteName”.</param>
        <summary>Associa dados do valor X e dos valores Y e dos valores da propriedade dos pontos de dados, como Tooltip ou LabelStyle, à fonte de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A fonte de dados pode ser o DataReader Ole (SQL), DataView, conjunto de dados, DataTable ou DataRow.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Associa dados do valor X e dos valores Y dos pontos de dados da coleção às primeiras colunas da fonte de dados especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, params System.Collections.IEnumerable[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, class System.Collections.IEnumerable[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, ParamArray yValues As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, ... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, yValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">A fonte de dados que fornecerá os valores de X para os pontos de dados.</param>
        <param name="yValues">Uma lista separada por vírgula dos valores de Y do objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> adicionado à coleção.</param>
        <summary>Associa dados do valor X e dos valores Y dos pontos de dados da coleção às primeiras colunas da fonte de dados especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método associa todos <xref:System.Web.UI.DataVisualization.Charting.DataPoint> objetos em um <xref:System.Web.UI.DataVisualization.Charting.Series>, e usa separar fontes de dados para os X e Y-valor (es).  
  
 Observe que a primeira coluna disponível na fonte de dados será usada se a associação de dados em uma tabela. Para vincular a uma coluna que não seja a primeira coluna, use o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> método.  
  
 Você pode vincular a vários valores de Y, fornecendo uma lista separada por vírgulas de <xref:System.Collections.Generic.IEnumerable%601> objetos para o `yValues` parâmetro.  
  
 Se os valores Y não são fornecidos pela fonte de dados, ou se o número errado de valores é fornecido, uma exceção será lançada.  
  
 Se você não deseja exibir gráficos de dispersão de tipo, em que X e Y de valores são usados, use uma da `DataBindY` métodos em vez disso.  
  
 A seguir está uma lista de objetos que você pode usar como o parâmetro de origem de dados:  
  
-   DataView  
  
-   Leitores de dados (SQL, OleDB)  
  
-   Matrizes  
  
-   Listas  
  
-   Todos os outros objetos que usam o <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, string xField, System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, xField As String, yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, System::String ^ xField, System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * string * System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, xField, yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">A fonte de dados que fornecerá os valores de X para os pontos de dados.</param>
        <param name="xField">O nome da coluna que fornecerá os valores X para os pontos de dados.</param>
        <param name="yValue">Uma lista separada por vírgula dos valores de Y do objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> adicionado à coleção.</param>
        <param name="yFields">Uma lista separada por vírgula dos nomes de coluna que fornecerão os valores Y para os pontos de dados. Observe que uma vírgula pode ser inserida como parte de um nome de coluna, usando uma vírgula dupla.</param>
        <summary>Associa dados do valor X e dos valores Y dos pontos de dados na coleção às colunas especificadas das fontes de dados especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dados associa o valor de X e Y dos pontos de dados na coleção de colunas primeiro da fonte de dados especificado.  
  
 Você pode vincular a vários valores de Y, definindo o `yFields` parâmetro para vários nomes de coluna. Os nomes de coluna são separados por vírgulas.  
  
 Se os valores Y não são fornecidos pela fonte de dados, ou se o número errado de valores é fornecido, uma exceção será lançada.  
  
 Se você não deseja exibir gráficos de dispersão de tipo, em que X e Y de valores são usados, use uma da `DataBindY` métodos em vez disso.  
  
 A seguir está uma lista de objetos que você pode usar como o parâmetro de origem de dados:  
  
-   DataView  
  
-   Leitores de dados (SQL, OleDB)  
  
-   Matrizes  
  
-   Listas  
  
-   Todos os outros objetos que usam o <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Associa dados dos valores Y dos pontos de dados da coleção à primeira coluna das fontes de dados especificadas.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (params System.Collections.IEnumerable[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (ParamArray yValue As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Uma ou mais fontes de dados <see cref="T:System.Collections.Generic.IEnumerable`1" /> separadas por vírgula.</param>
        <summary>Associa dados dos valores Y dos pontos de dados da coleção à primeira coluna das fontes de dados especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método associa Y-valor (es) dos pontos de dados na coleção para a primeira coluna das fontes de dados especificado.  
  
 Para associar valores de Y para uma coluna de fonte de dados que não seja a primeira coluna disponível, use o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> método.  
  
 Você pode associar vários valores de Y com a especificação de várias fontes de dados usando o `yValue` parâmetro. Observe que a primeira coluna disponível em cada fonte de dados será usada para valores de Y sucessivas cada ponto de dados. Por exemplo, a primeira coluna da primeira <xref:System.Collections.Generic.IEnumerable%601> fonte de dados será associada com o primeiro valor de Y de pontos de dados, a primeira coluna da segunda <xref:System.Collections.Generic.IEnumerable%601> fonte de dados ser associado ao segundo valor de Y de pontos de dados e assim por diante.  
  
 Se os valores Y não são fornecidos pela fonte de dados, ou se o número errado de valores é fornecido, uma exceção será lançada.  
  
 A seguir está uma lista de objetos que você pode usar como o parâmetro de origem de dados:  
  
 A seguir está uma lista de objetos que você pode usar como a fonte de dados:  
  
-   DataView  
  
-   Leitores de dados (SQL, OleDB)  
  
-   Matrizes  
  
-   Listas  
  
-   Todos os outros objetos que usam o <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindY (yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="yValue">Um objeto da fonte de dados <see cref="T:System.Collections.Generic.IEnumerable`1" /> que fornece os valores Y.</param>
        <param name="yFields">Os campos da fonte de dados aos quais associar os pontos de dados. Observe que uma vírgula pode ser inserida como parte de um nome de coluna, usando uma vírgula dupla.</param>
        <summary>Associa dados dos valores Y dos pontos de dados às colunas especificadas da fonte de dados especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método associa os valores de Y dos pontos de dados na coleção para os campos especificados (s) da fonte de dados.  
  
 Para associar apenas para o primeiro campo em uma fonte de dados, use o <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> método.  
  
 Você pode vincular a vários campos, definindo o `yFields` parâmetro para vários nomes de campo que são separados por vírgulas. Observe que o primeiro campo será usado para o valor de Y primeiro do ponto de dados, o segundo campo será usado para o valor de Y da segunda do ponto de dados e assim por diante.  
  
 Se os valores Y não são fornecidos pela fonte de dados ou o número errado de valores é fornecido, uma exceção será lançada.  
  
 A seguir está uma lista de objetos que você pode usar como a fonte de dados:  
  
-   DataView  
  
-   Leitores de dados (SQL, OleDB)  
  
-   Matrizes  
  
-   Listas  
  
-   Todos os outros objetos que usam o <xref:System.Collections.Generic.IEnumerable%601> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Localiza todos os pontos de dados que são iguais ao valor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllByValue (valueToFind As Double) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">O valor de ponto de dados a ser encontrado.</param>
        <summary>Localiza todos os pontos de dados que são iguais ao valor especificado.</summary>
        <returns>Uma interface <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa o enumerador dos pontos de dados correspondentes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">O valor de ponto de dados a ser encontrado.</param>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <summary>Localiza todos os pontos de dados que são iguais ao valor especificado.</summary>
        <returns>Uma interface <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa o enumerador dos pontos de dados correspondentes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String, startIndex As Integer) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string * int -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">O valor de ponto de dados a ser encontrado.</param>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <param name="startIndex">O local de índice do ponto de dados em que a pesquisa é iniciada.</param>
        <summary>Localiza todos os pontos de dados que são iguais ao valor especificado, começando no local de índice especificado.</summary>
        <returns>Uma interface <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa o enumerador dos pontos de dados correspondentes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encontra o primeiro ponto de dados que é igual ao valor especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">O valor de ponto de dados a ser encontrado.</param>
        <summary>Encontra o primeiro ponto de dados que é igual ao valor especificado.</summary>
        <returns>O <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que corresponde ao valor especificado ou <see langword="null" />, se não houver nenhuma correspondência.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">O valor de ponto de dados a ser encontrado.</param>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <summary>Encontra o primeiro ponto de dados que é igual ao valor especificado.</summary>
        <returns>O <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que corresponde ao valor especificado ou <see langword="null" />, se não houver nenhuma correspondência.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">O valor de ponto de dados a ser encontrado.</param>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <param name="startIndex">O local de índice do ponto de dados em que a pesquisa é iniciada.</param>
        <summary>Encontra o primeiro ponto de dados que é igual ao valor especificado, começando no local de índice especificado.</summary>
        <returns>O <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> que corresponde ao valor especificado ou <see langword="null" />, se não houver nenhuma correspondência.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMaxByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encontra o ponto de dados com o valor máximo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Encontra o ponto de dados com o valor máximo.</summary>
        <returns>O objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> com o valor máximo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <summary>Encontra o valor de ponto de dados com o valor máximo.</summary>
        <returns>O objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> com o valor máximo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <param name="startIndex">O local de índice do ponto de dados em que a pesquisa é iniciada.</param>
        <summary>Encontra o ponto de dados com o valor máximo, começando no local de índice especificado.</summary>
        <returns>O objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> com o valor máximo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMinByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encontra o ponto de dados com o valor mínimo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Encontra o ponto de dados com o valor mínimo.</summary>
        <returns>O objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> com o valor mínimo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <summary>Encontra o ponto de dados com o valor mínimo.</summary>
        <returns>Um objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> com o valor mínimo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">O valor de ponto de dados a ser usado (X, Y1, Y2, etc.).</param>
        <param name="startIndex">O local de índice do ponto de dados em que a pesquisa é iniciada.</param>
        <summary>Encontra o ponto de dados com o valor mínimo, começando no local de índice especificado.</summary>
        <returns>O objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> com o valor mínimo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXY">
      <MemberSignature Language="C#" Value="public void InsertXY (int index, object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertXY(int32 index, object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXY (index As Integer, xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertXY(int index, System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertXY : int * obj * obj[] -&gt; unit" Usage="dataPointCollection.InsertXY (index, xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">O índice após o qual o ponto de dados será inserido.</param>
        <param name="xValue">O valor X do ponto de dados.</param>
        <param name="yValue">Uma lista separada por vírgula de valores Y do ponto de dados.</param>
        <summary>Insere um ponto de dados com o valor X especificado e um ou mais valores Y especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertY">
      <MemberSignature Language="C#" Value="public void InsertY (int index, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertY(int32 index, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertY (index As Integer, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertY(int index, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertY : int * obj[] -&gt; unit" Usage="dataPointCollection.InsertY (index, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">O índice após o qual o ponto de dados será inserido.</param>
        <param name="yValue">Uma lista separada por vírgula de valores Y do ponto de dados.</param>
        <summary>Insere um ponto de dados com um ou mais valores Y especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>