<Type Name="DynamicUpdateMapConverter" FullName="System.Activities.XamlIntegration.DynamicUpdateMapConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98720f7d344ea23671d2d818f1d0166948c6ea39" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53295499" /></Metadata><TypeSignature Language="C#" Value="public class DynamicUpdateMapConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicUpdateMapConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.DynamicUpdateMapConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicUpdateMapConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicUpdateMapConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DynamicUpdateMapConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d2cd-101">Representa um conversor de mapa de atualização dinâmica.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-101">Represents a dynamic update map converter.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicUpdateMapConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicUpdateMapConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d2cd-102">Inicializa uma nova instância da classe <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapConverter" />.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-102">Initializes a new instance of the <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dynamicUpdateMapConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2d2cd-103">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-103">Context information that is used for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="2d2cd-104">O tipo para o qual converter.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-104">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="2d2cd-105">Determina se é possível converter para o tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-105">Determines whether the specified type can be converted to.</span></span></summary>
        <returns><span data-ttu-id="2d2cd-106"><see langword="true" /> se for possível converter para o tipo especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-106"><see langword="true" /> if the specified type can be converted to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="dynamicUpdateMapConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2d2cd-107">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-107">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="2d2cd-108">Informações de cultura opcionais.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-108">An optional culture information.</span></span></param>
        <param name="value"><span data-ttu-id="2d2cd-109">O objeto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-109">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="2d2cd-110">O tipo para o qual converter.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-110">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="2d2cd-111">Converte o valor especificado para a representação especificada.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-111">Converts the specified value to the specified representation.</span></span></summary>
        <returns><span data-ttu-id="2d2cd-112"><see langword="true" /> se o valor especificado para a representação especificada for convertido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d2cd-112"><see langword="true" /> if the specified value to the specified representation is converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>