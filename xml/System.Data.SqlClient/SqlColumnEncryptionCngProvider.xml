<Type Name="SqlColumnEncryptionCngProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCngProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f02612a921aaef6762aed04e9bf0bb94694330da" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51938844" /></Metadata><TypeSignature Language="C#" Value="public class SqlColumnEncryptionCngProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCngProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCngProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCngProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCngProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f5a3-101">A implementação de provedor de repositório CMK para usar a API de criptografia da Microsoft: Next Generation (CNG) com <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-101">The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-102">Permita o armazenamento de chaves de chave mestra de coluna Always Encrypted em um repositório, como um módulo de segurança de hardware (HSM), que oferece suporte a API de criptografia da Microsoft: Next Generation (CNG).</span><span class="sxs-lookup"><span data-stu-id="6f5a3-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://blogs.msdn.com/b/sqlsecurity/archive/tags/always+encrypted/"><span data-ttu-id="6f5a3-103">Introdução ao sempre criptografado</span><span class="sxs-lookup"><span data-stu-id="6f5a3-103">Getting Started with Always Encrypted</span></span></related>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/mt147923.aspx"><span data-ttu-id="6f5a3-104">Always Encrypted (desenvolvimento do cliente)</span><span class="sxs-lookup"><span data-stu-id="6f5a3-104">Always Encrypted (client development)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCngProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCngProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f5a3-105">Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-105">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6f5a3-106">O caminho da chave mestra.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-106">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="6f5a3-107">O algoritmo de criptografia.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-107">The encryption algorithm.</span></span></param>
        <param name="encryptedColumnEncryptionKey"><span data-ttu-id="6f5a3-108">A chave de criptografia da coluna criptografada.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-108">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="6f5a3-109">Descriptografa o valor criptografado especificado usando uma chave assimétrica especificada pelo caminho da chave e o algoritmo especificado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-109">Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm.</span></span> <span data-ttu-id="6f5a3-110">O caminho da chave será no formato [ProviderName]/KeyIdentifier e deve ser uma chave assimétrica armazenada no provedor de repositório de chaves CNG especificado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-110">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span></span> <span data-ttu-id="6f5a3-111">O algoritmo inválido usado para criptografar/descriptografar a CEK é 'RSA_OAEP'.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-111">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="6f5a3-112">A chave de criptografia da coluna descriptografada.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-112">The decrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6f5a3-113">O caminho da chave mestra.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-113">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="6f5a3-114">O algoritmo de criptografia.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-114">The encryption algorithm.</span></span></param>
        <param name="columnEncryptionKey"><span data-ttu-id="6f5a3-115">A chave de criptografia da coluna criptografada.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-115">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="6f5a3-116">Criptografa a chave de criptografia da coluna em texto sem formatação usando uma chave assimétrica especificada pelo caminho da chave e o algoritmo especificado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-116">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span></span> <span data-ttu-id="6f5a3-117">O caminho da chave será no formato [ProviderName]/KeyIdentifier e deve ser uma chave assimétrica armazenada no provedor de repositório de chaves CNG especificado.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-117">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span></span> <span data-ttu-id="6f5a3-118">O algoritmo inválido usado para criptografar/descriptografar a CEK é 'RSA_OAEP'.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-118">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span></span></summary>
        <returns><span data-ttu-id="6f5a3-119">A chave de criptografia da coluna criptografada.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-119">The encrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f5a3-120">Uma cadeia de caracteres constante para o nome do provedor 'MSSQL_CNG_STORE'.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-120">A constant string for the provider name 'MSSQL_CNG_STORE'.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6f5a3-121">O caminho da chave mestra da coluna.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-121">The column master key path.</span></span> <span data-ttu-id="6f5a3-122">O formato do caminho é específico para um provedor de repositório de chaves.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-122">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="6f5a3-123"><see langword="true" /> para indicar que a chave mestra de coluna dá suporte a cálculos de enclave; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-123"><see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f5a3-124">Gera uma exceção <see cref="T:System.NotSupportedException" /> em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-124">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="6f5a3-125">A assinatura de metadados da chave mestra da coluna.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-125">The signature of the column master key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f5a3-126">O <xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> método deve ser implementado por provedores de repositório de chaves correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="6f5a3-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> deve usar uma chave assimétrica identificada por um caminho de chave e assinar os metadados de chave mestra consistindo `masterKeyPath`, `allowEnclaveComputations`e providerName.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-127"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6f5a3-128">Em todos os casos.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-128">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="6f5a3-129">O caminho completo de uma chave assimétrica.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-129">The complete path of an asymmetric key.</span></span> <span data-ttu-id="6f5a3-130">O formato do caminho é específico para um provedor de repositório de chaves.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-130">The path format is specific to a key store provider.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="6f5a3-131">Um booliano que indica se essa chave pode ser enviada para o enclave confiável.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-131">A Boolean that indicates if this key can be sent to the trusted enclave.</span></span></param>
        <param name="signature"><span data-ttu-id="6f5a3-132">A assinatura de metadados da chave mestra.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-132">The master key metadata signature.</span></span></param>
        <summary><span data-ttu-id="6f5a3-133">Essa função deve ser implementada pelos provedores de repositório de chaves correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-133">This function must be implemented by the corresponding Key Store providers.</span></span> <span data-ttu-id="6f5a3-134">Essa função deve usar uma chave assimétrica identificada por um caminho de chave e verificar os metadados de chave mestra consistindo de masterKeyPath, allowEnclaveComputations e providerName.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-134">This function should use an asymmetric key identified by a key path and verify the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span></span></summary>
        <returns><span data-ttu-id="6f5a3-135">Um booliano que indica se os metadados de chave mestra podem ser verificados com base na assinatura fornecida.</span><span class="sxs-lookup"><span data-stu-id="6f5a3-135">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>