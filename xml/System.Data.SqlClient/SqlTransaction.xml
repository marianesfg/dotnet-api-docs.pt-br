<Type Name="SqlTransaction" FullName="System.Data.SqlClient.SqlTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56fb9fe0560c7b212afa8b8463de0e2a74933d52" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTransaction : System.Data.Common.DbTransaction, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTransaction extends System.Data.Common.DbTransaction implements class System.Data.IDbTransaction, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTransaction&#xA;Inherits DbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTransaction sealed : System::Data::Common::DbTransaction, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8e39a-101">Representa uma transação Transact-SQL a ser feita em um banco de dados do SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e39a-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span>
      </span>
      <span data-ttu-id="8e39a-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e39a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-103">O aplicativo cria um <xref:System.Data.SqlClient.SqlTransaction> objeto chamando <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> no <xref:System.Data.SqlClient.SqlConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="8e39a-103">The application creates a <xref:System.Data.SqlClient.SqlTransaction> object by calling <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> on the <xref:System.Data.SqlClient.SqlConnection> object.</span></span> <span data-ttu-id="8e39a-104">Todas as operações subsequentes associadas à transação (por exemplo, confirmar ou anular a transação), são executadas no <xref:System.Data.SqlClient.SqlTransaction> objeto.</span><span class="sxs-lookup"><span data-stu-id="8e39a-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.SqlClient.SqlTransaction> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e39a-105">`Try`/`Catch` tratamento de exceção sempre deve ser usado ao confirmar ou reverter uma <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-105">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8e39a-106">Ambos <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> gerar um <xref:System.InvalidOperationException> se a conexão será encerrada ou se a transação já foi revertida no servidor.</span><span class="sxs-lookup"><span data-stu-id="8e39a-106">Both <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generate an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="8e39a-107">Para obter mais informações sobre [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] transações, consulte [transações explícitas](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) e [codificando transações eficientes](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span><span class="sxs-lookup"><span data-stu-id="8e39a-107">For more information on [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] transactions, see [Explicit Transactions](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) and [Coding Efficient Transactions](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e39a-108">O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlConnection> e um <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-108">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8e39a-109">Ele também demonstra como usar o <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="8e39a-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="8e39a-110">A transação é revertida qualquer erro, ou se ele for descartado sem primeiro sendo confirmada.</span><span class="sxs-lookup"><span data-stu-id="8e39a-110">The transaction is rolled back on any error, or if it is disposed without first being committed.</span></span> <span data-ttu-id="8e39a-111">`Try`/`Catch` tratamento de erros é usado para tratar os erros ao tentar confirmar ou reverter a transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-111">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Commit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e39a-112">Confirma a transação do banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-112">Commits the database transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-113">O <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> método é equivalente à instrução Transact-SQL COMMIT TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="8e39a-113">The <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</span></span> <span data-ttu-id="8e39a-114">Você não pode reverter uma transação depois de ter sido confirmada, porque todas as modificações se tornou uma parte permanente do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="8e39a-114">You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</span></span> <span data-ttu-id="8e39a-115">Para obter mais informações, consulte os Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-115">For more information, see SQL Server Books Online.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e39a-116">`Try`/`Catch` tratamento de exceção sempre deve ser usado ao confirmar ou reverter uma <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-116">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8e39a-117">Ambos `Commit` e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> gera um <xref:System.InvalidOperationException> se a conexão será encerrada ou se a transação já foi revertida no servidor.</span><span class="sxs-lookup"><span data-stu-id="8e39a-117">Both `Commit` and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="8e39a-118">Para obter mais informações sobre transações do SQL Server, consulte "Transações explícitas" e "Codificando transações eficientes" nos Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-118">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e39a-119">O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlConnection> e um <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-119">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8e39a-120">Ele também demonstra como usar o <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="8e39a-120">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="8e39a-121">A transação é revertida qualquer erro.</span><span class="sxs-lookup"><span data-stu-id="8e39a-121">The transaction is rolled back on any error.</span></span> <span data-ttu-id="8e39a-122">`Try`/`Catch` tratamento de erros é usado para tratar os erros ao tentar confirmar ou reverter a transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-122">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8e39a-123">Ocorreu um erro ao tentar confirmar a transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-123">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8e39a-124">A transação já foi confirmada ou revertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-124">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="8e39a-125">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-125">-or-</span>
          </span>
          <span data-ttu-id="8e39a-126">A conexão foi desfeita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-126">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e39a-127">Obtém o objeto <see cref="T:System.Data.SqlClient.SqlConnection" /> associado à transação ou <see langword="null" />, se a transação não for mais válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-127">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e39a-128">O objeto <see cref="T:System.Data.SqlClient.SqlConnection" /> associado à transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-128">The <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-129">Um único aplicativo pode ter várias conexões de banco de dados, cada uma com zero ou mais transações.</span><span class="sxs-lookup"><span data-stu-id="8e39a-129">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="8e39a-130">Essa propriedade permite que você determine o objeto de conexão associado a uma transação específica criada por <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-130">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbTransaction.IsolationLevel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e39a-131">Especifica o <see cref="T:System.Data.IsolationLevel" /> para essa transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-131">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e39a-132">O <see cref="T:System.Data.IsolationLevel" /> para essa transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-132">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
          <span data-ttu-id="8e39a-133">O padrão é <see langword="ReadCommitted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-133">The default is <see langword="ReadCommitted" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-134">Não há suporte para transações paralelas.</span><span class="sxs-lookup"><span data-stu-id="8e39a-134">Parallel transactions are not supported.</span></span> <span data-ttu-id="8e39a-135">Portanto, o <xref:System.Data.IsolationLevel> se aplica a toda a transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-135">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 <span data-ttu-id="8e39a-136">Para obter mais informações sobre níveis de isolamento do SQL Server, consulte "Isolamento níveis no mecanismo banco de dados" nos Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-136">For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rollback">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8e39a-137">Reverte uma transação de um estado pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-137">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Rollback</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e39a-138">Reverte uma transação de um estado pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-138">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-139">O <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> método é equivalente à instrução Transact-SQL ROLLBACK TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="8e39a-139">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="8e39a-140">Para obter mais informações, consulte os Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-140">For more information, see SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="8e39a-141">A transação pode somente ser revertida de um estado pendente (após <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> foi chamado, mas antes <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> é chamado).</span><span class="sxs-lookup"><span data-stu-id="8e39a-141">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="8e39a-142">A transação é revertida novamente caso seja descartada antes `Commit` ou `Rollback` é chamado.</span><span class="sxs-lookup"><span data-stu-id="8e39a-142">The transaction is rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e39a-143">`Try`/`Catch` tratamento de exceção sempre deve ser usado ao reverter uma transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-143">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="8e39a-144">Um `Rollback` gera um <xref:System.InvalidOperationException> se a conexão será encerrada ou se a transação já foi revertida no servidor.</span><span class="sxs-lookup"><span data-stu-id="8e39a-144">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="8e39a-145">Para obter mais informações sobre transações do SQL Server, consulte "Transações explícitas" e "Codificando transações eficientes" nos Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-145">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e39a-146">O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlConnection> e um <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-146">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8e39a-147">Ele também demonstra como usar o <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="8e39a-147">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="8e39a-148">A transação é revertida qualquer erro.</span><span class="sxs-lookup"><span data-stu-id="8e39a-148">The transaction is rolled back on any error.</span></span> <span data-ttu-id="8e39a-149">`Try`/`Catch` tratamento de erros é usado para tratar os erros ao tentar confirmar ou reverter a transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-149">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8e39a-150">Ocorreu um erro ao tentar confirmar a transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-150">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8e39a-151">A transação já foi confirmada ou revertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-151">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="8e39a-152">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-152">-or-</span>
          </span>
          <span data-ttu-id="8e39a-153">A conexão foi desfeita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-153">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rollback(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (transactionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::String ^ transactionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">
          <span data-ttu-id="8e39a-154">O nome da transação a ser revertida ou o ponto de salvamento para o qual reverter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-154">The name of the transaction to roll back, or the savepoint to which to roll back.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e39a-155">Reverte uma transação de um estado pendente e especifica o nome de ponto de salvamento ou da transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-155">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-156">O <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> método é equivalente à instrução Transact-SQL ROLLBACK TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="8e39a-156">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="8e39a-157">Para obter mais informações, consulte "Transações explícitas" e "Salvamento de transação" nos Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-157">For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="8e39a-158">A transação pode somente ser revertida de um estado pendente (após <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> foi chamado, mas antes <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> é chamado).</span><span class="sxs-lookup"><span data-stu-id="8e39a-158">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="8e39a-159">A transação é revertida se ele for descartado antes de `Commit` ou `Rollback` é chamado.</span><span class="sxs-lookup"><span data-stu-id="8e39a-159">The transaction is rolled back if it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e39a-160">`Try`/`Catch` tratamento de exceção sempre deve ser usado ao reverter uma transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-160">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="8e39a-161">Um `Rollback` gera um <xref:System.InvalidOperationException> se a conexão será encerrada ou se a transação já foi revertida no servidor.</span><span class="sxs-lookup"><span data-stu-id="8e39a-161">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="8e39a-162">Para obter mais informações sobre transações do SQL Server, consulte "Transações explícitas" e "Codificando transações eficientes" nos Manuais Online do SQL Server.</span><span class="sxs-lookup"><span data-stu-id="8e39a-162">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e39a-163">O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlConnection> e um <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8e39a-163">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8e39a-164">Ele também demonstra como usar o <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, e <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="8e39a-164">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="8e39a-165">A transação é revertida qualquer erro.</span><span class="sxs-lookup"><span data-stu-id="8e39a-165">The transaction is rolled back on any error.</span></span> <span data-ttu-id="8e39a-166">`Try`/`Catch` tratamento de erros é usado para tratar os erros ao tentar confirmar ou reverter a transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-166">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8e39a-167">Nenhum nome de transação foi especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-167">No transaction name was specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8e39a-168">A transação já foi confirmada ou revertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-168">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="8e39a-169">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-169">-or-</span>
          </span>
          <span data-ttu-id="8e39a-170">A conexão foi desfeita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-170">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string savePointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string savePointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (savePointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ savePointName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="savePointName">
          <span data-ttu-id="8e39a-171">O nome do ponto de salvamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-171">The name of the savepoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e39a-172">Cria um ponto de salvamento na transação, que pode ser usado para reverter uma parte da transação e especifica o nome do ponto de salvamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-172">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e39a-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> método é equivalente à instrução Transact-SQL SAVE TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="8e39a-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</span></span>  
  
 <span data-ttu-id="8e39a-174">O valor usado no `savePoint` parâmetro pode ser o mesmo valor usado no `transactionName` parâmetro algumas implementações do <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8e39a-174">The value used in the `savePoint` parameter can be the same value used in the `transactionName` parameter of some implementations of the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method.</span></span>  
  
 <span data-ttu-id="8e39a-175">Pontos de salvamento oferecem um mecanismo para reverter partes de transações.</span><span class="sxs-lookup"><span data-stu-id="8e39a-175">Savepoints offer a mechanism to roll back parts of transactions.</span></span> <span data-ttu-id="8e39a-176">Você cria um ponto de salvamento usando a <xref:System.Data.SqlClient.SqlTransaction.Save%2A> método e posterior, em seguida, chame o <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> método para reverter para o ponto de salvamento em vez de reverter ao início da transação.</span><span class="sxs-lookup"><span data-stu-id="8e39a-176">You create a savepoint using the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method, and then later call the <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method to roll back to the savepoint instead of rolling back to the start of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8e39a-177">Ocorreu um erro ao tentar confirmar a transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-177">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8e39a-178">A transação já foi confirmada ou revertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-178">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="8e39a-179">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-179">-or-</span>
          </span>
          <span data-ttu-id="8e39a-180">A conexão foi desfeita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e39a-180">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>