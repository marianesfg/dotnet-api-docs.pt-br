<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0181382441e1661d976dbae0ffd433f9ed5713d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006399" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma instrução Transact-SQL ou procedimento armazenado para execução em um banco de dados SQL Server. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma instância do <xref:System.Data.SqlClient.SqlCommand> é criado, a leitura/gravação são definidas para seus valores iniciais. Para obter uma lista desses valores, consulte o <xref:System.Data.SqlClient.SqlCommand> construtor.  
  
 <xref:System.Data.SqlClient.SqlCommand> apresenta os seguintes métodos para executar comandos em um banco de dados do SQL Server:  
  
|Item|Descrição|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado descrito por este <xref:System.Data.SqlClient.SqlCommand>, geralmente executando comandos como INSERT, DELETE, UPDATE e instruções SET. Cada chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> deve ser emparelhado com uma chamada para <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> que conclui a operação, normalmente em um thread separado.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado descrito por este <xref:System.Data.SqlClient.SqlCommand> e recupera conjuntos de resultados de uma ou mais do servidor. Cada chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> deve ser emparelhado com uma chamada para <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> que conclui a operação, normalmente em um thread separado.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por este <xref:System.Data.SqlClient.SqlCommand>. Cada chamada para `BeginExecuteXmlReader` deve ser emparelhado com uma chamada para `EndExecuteXmlReader`, que conclui a operação, normalmente em um thread separado e retorna um <xref:System.Xml.XmlReader> objeto.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|Executa os comandos que retornam linhas. Para melhorar o desempenho <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invoca comandos usando o Transact-SQL `sp_executesql` procedimento armazenado do sistema. Portanto, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> pode não ter o efeito que você deseja se usado para executar comandos como instruções Transact-SQL SET.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|Executa comandos como instruções Transact-SQL INSERT, DELETE, UPDATE e SET.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|Recupera um valor único (por exemplo, um valor agregado) de um banco de dados.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|Envia o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> para o <xref:System.Data.SqlClient.SqlCommand.Connection%2A> e cria um objeto <xref:System.Xml.XmlReader>.|  
  
 Você pode redefinir a <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade e a reutilização de <xref:System.Data.SqlClient.SqlCommand> objeto. No entanto, você deve fechar o <xref:System.Data.SqlClient.SqlDataReader> antes de executar um comando de novo ou anterior.  
  
 Se um <xref:System.Data.SqlClient.SqlException> é gerado pelo método em execução um <xref:System.Data.SqlClient.SqlCommand>, o <xref:System.Data.SqlClient.SqlConnection> permanece aberto quando o nível de severidade é 19 ou inferior. Quando o nível de severidade é 20 ou maior, o servidor normalmente fecha o <xref:System.Data.SqlClient.SqlConnection>. No entanto, o usuário pode reabrir a conexão e continuar.  
  
> [!NOTE]
>  Sem nome, também chamado de ordinal, parâmetros não são suportados pelo provedor de dados .NET Framework para SQL Server.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Data.SqlClient.SqlConnection>, um <xref:System.Data.SqlClient.SqlCommand>e um <xref:System.Data.SqlClient.SqlDataReader>. O exemplo lê os dados, gravá-los no console do. Por fim, o exemplo fecha o <xref:System.Data.SqlClient.SqlDataReader> e, em seguida, o <xref:System.Data.SqlClient.SqlConnection> conforme ele é encerrado a `Using` blocos de código.  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 O exemplo a seguir mostra como criar e executar diferentes tipos de objetos SqlCommand.  
  
 Primeiro você deve criar o banco de dados de exemplo, executando o script a seguir:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 Em seguida, compile e execute o seguinte:  
  
```  
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Recuperando e modificando dados no ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O construtor base inicializa todos os campos com seus valores padrão. A tabela a seguir mostra os valores de propriedade inicial para uma instância do <xref:System.Data.SqlClient.SqlCommand>.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|cadeia de caracteres vazia ("")|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Nulo|  
  
 Você pode alterar o valor para qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Data.SqlClient.SqlCommand> e define o `CommandTimeout` propriedade.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Recuperando e modificando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">O texto da consulta.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlCommand" /> com o texto da consulta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma instância do <xref:System.Data.SqlClient.SqlCommand> é criado, as seguintes propriedades são definidas como valores iniciais de leitura/gravação.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|nulo|  
  
 Você pode alterar o valor para qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand>, passando o texto de comando e de cadeia de caracteres de conexão.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">O texto da consulta.</param>
        <param name="connection">Um <see cref="T:System.Data.SqlClient.SqlConnection" /> que representa a conexão com uma instância do SQL Server.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlCommand" /> com o texto da consulta e um <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A tabela a seguir mostra os valores de propriedade inicial para uma instância do <xref:System.Data.SqlClient.SqlCommand>.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Uma nova <xref:System.Data.SqlClient.SqlConnection> que é o valor para o `connection` parâmetro.|  
  
 Você pode alterar o valor para qualquer um desses parâmetros, definindo a propriedade relacionada.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">O texto da consulta.</param>
        <param name="connection">Um <see cref="T:System.Data.SqlClient.SqlConnection" /> que representa a conexão com uma instância do SQL Server.</param>
        <param name="transaction">O <see cref="T:System.Data.SqlClient.SqlTransaction" /> no qual o <see cref="T:System.Data.SqlClient.SqlCommand" /> é executado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlCommand" /> com o texto da consulta, um <see cref="T:System.Data.SqlClient.SqlConnection" /> e o <see cref="T:System.Data.SqlClient.SqlTransaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A tabela a seguir mostra os valores de propriedade inicial para uma instância do <xref:System.Data.SqlClient.SqlCommand>.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Uma nova <xref:System.Data.SqlClient.SqlConnection> que é o valor para o `connection` parâmetro.|  
  
 Você pode alterar o valor para qualquer um desses parâmetros, definindo a propriedade relacionada.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Index="3" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cmdText">O texto da consulta.</param>
        <param name="connection">Um <see cref="T:System.Data.SqlClient.SqlConnection" /> que representa a conexão com uma instância do SQL Server.</param>
        <param name="transaction">O <see cref="T:System.Data.SqlClient.SqlTransaction" /> no qual o <see cref="T:System.Data.SqlClient.SqlCommand" /> é executado.</param>
        <param name="columnEncryptionSetting">A configuração de criptografia. Para saber mais, consulte [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlCommand" /> com texto de comando especificado, conexões, transações e configuração de criptografia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado que é descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, que retorna o número de linhas afetadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método inicia o processo de execução de forma assíncrona um [!INCLUDE[tsql](~/includes/tsql-md.md)] instrução ou procedimento armazenado que não retornam linhas, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> método para concluir a operação. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método retorna imediatamente (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> não tem efeito sobre <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas.  
  
 Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores devem ambos sondar para determinar se o comando for concluído, usando o <xref:System.IAsyncResult.IsCompleted%2A> propriedade do <xref:System.IAsyncResult> retornado pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método; ou aguarde a conclusão de um ou mais comandos usando o <xref:System.IAsyncResult.AsyncWaitHandle%2A> propriedade retornada <xref:System.IAsyncResult>.  
  
   
  
## Examples  
 O aplicativo de console a seguir cria atualiza os dados dentro de **AdventureWorks** banco de dados de exemplo, fazendo seu trabalho de forma assíncrona. Para emular um processo de execução longa, este exemplo insere uma instrução WAITFOR no texto do comando. Normalmente, você só terão os esforços para tornar os comandos são executados mais lentamente, mas fazer isso nesse caso, torna mais fácil demonstrar o comportamento assíncrono.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> invocado quando a execução do comando for concluída. Passe <see langword="null" /> (<see langword="Nothing" /> no Microsoft Visual Basic) para indicar que não é necessário um retorno de chamada.</param>
        <param name="stateObject">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada. Recupere esse objeto de dentro do procedimento de retorno de chamada usando a propriedade <see cref="P:System.IAsyncResult.AsyncState" />.</param>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou do procedimento armazenado descrito por esse <see cref="T:System.Data.SqlClient.SqlCommand" />, dado um procedimento de retorno de chamada e informações sobre o estado.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, que retorna o número de linhas afetadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL ou procedimento armazenado que não retornam linhas, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> método para concluir a operação. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método retorna imediatamente (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> não tem efeito sobre <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback> delegado que é chamado quando a instrução é concluída. Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> método dentro desse procedimento delegado, ou de qualquer outro local dentro de seu aplicativo. Além disso, você pode passar qualquer objeto de `asyncStateObject` parâmetro e seu procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A> propriedade.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas.  
  
 Como o procedimento de retorno de chamada é executado de dentro de um thread em segundo plano fornecido pelo Microsoft .NET common language runtime, é muito importante que você adotar uma abordagem rigorosa para lidar com as interações de thread cruzado de dentro de seus aplicativos. Por exemplo, você não deve interagir com conteúdo de um formulário de dentro de seu procedimento de retorno de chamada; Você precisa atualizar o formulário, você deve alternar para thread do formulário para fazer seu trabalho. O exemplo neste tópico demonstra esse comportamento.  
  
 Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção no procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter mais informações sobre o tratamento de exceções no procedimento de retorno de chamada.  
  
   
  
## Examples  
 O aplicativo Windows a seguir demonstra o uso do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método, executando uma instrução Transact-SQL que inclui um atraso de alguns segundos (emulando um comando de execução longa).  
  
 Este exemplo demonstra várias técnicas importantes. Isso inclui chamar um método que interage com o formulário a partir de um thread separado. Além disso, este exemplo demonstra como você deve impedir que os usuários executando um comando várias vezes ao mesmo tempo, e como você deve garantir que o formulário não feche antes do procedimento de retorno de chamada é chamado.  
  
 Para configurar este exemplo, crie um novo aplicativo do Windows. Coloque um <xref:System.Windows.Forms.Button> controle e um <xref:System.Windows.Forms.Label> controle no formulário (aceitar o nome padrão para cada controle). Adicione o seguinte código à classe do formulário, modificando a cadeia de caracteres de conexão, conforme necessário para o seu ambiente.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado descrito por <see cref="T:System.Data.SqlClient.SqlCommand" /> e recupera um ou mais conjuntos de resultados do servidor.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado descrito por <see cref="T:System.Data.SqlClient.SqlCommand" /> e recupera um ou mais conjuntos de resultados do servidor.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar, aguardar os resultados ou ambos; esse valor também é necessário ao invocar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, que retorna uma instância <see cref="T:System.Data.SqlClient.SqlDataReader" />, que pode ser utilizada para recuperar as linhas retornadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader> retornada pelo comando. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, buscando valor é ainda assíncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A> maio bloquear se mais dados são necessários e a rede subjacente blocos de operação de leitura.  
  
 Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores devem ambos sondar para determinar se o comando for concluído, usando o <xref:System.IAsyncResult.IsCompleted%2A> propriedade do <xref:System.IAsyncResult> retornado pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método; ou aguarde a conclusão de um ou mais comandos usando o <xref:System.IAsyncResult.AsyncWaitHandle%2A> propriedade retornada <xref:System.IAsyncResult>.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retornará quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O aplicativo de console a seguir inicia o processo de recuperar um leitor de dados de forma assíncrona. Enquanto aguarda os resultados, este aplicativo simples reside em um loop, investigando o <xref:System.IAsyncResult.IsCompleted%2A> valor da propriedade. Assim que o processo for concluído, o código recupera o <xref:System.Data.SqlClient.SqlDataReader> e exibe seu conteúdo.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">Um dos valores <see cref="T:System.Data.CommandBehavior" /> que indica opções de execução de instrução e recuperação de dados.</param>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou do procedimento armazenado descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" /> usando um dos valores <see cref="T:System.Data.CommandBehavior" />.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar, aguardar os resultados ou ambos; esse valor também é necessário ao invocar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, que retorna uma instância <see cref="T:System.Data.SqlClient.SqlDataReader" /> que pode ser usada para recuperar as linhas retornadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader> retornada pelo comando. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 O `behavior` parâmetro permite que você especifique opções que controlam o comportamento do comando e sua conexão. Esses valores podem ser combinados (usando a linguagem de programação `OR` operador); em geral, os desenvolvedores usam o `CommandBehavior.CloseConnection` valor para certificar-se de que a conexão é fechada pelo tempo de execução quando o <xref:System.Data.SqlClient.SqlDataReader> está fechado.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, buscando valor é ainda assíncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A> maio bloquear se mais dados são necessários e a rede subjacente blocos de operação de leitura.  
  
 Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores devem ambos sondar para determinar se o comando for concluído, usando o <xref:System.IAsyncResult.IsCompleted%2A> propriedade do <xref:System.IAsyncResult> retornado pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método; ou aguarde a conclusão de um ou mais comandos usando o <xref:System.IAsyncResult.AsyncWaitHandle%2A> propriedade retornada <xref:System.IAsyncResult>.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retorna quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O aplicativo de console a seguir inicia o processo de recuperar um leitor de dados de forma assíncrona. Enquanto aguarda os resultados, este aplicativo simples reside em um loop, investigando o <xref:System.IAsyncResult.IsCompleted%2A> valor da propriedade. Quando o processo for concluído, o código recupera o <xref:System.Data.SqlClient.SqlDataReader> e exibe seu conteúdo.  
  
 Este exemplo também passa o `CommandBehavior.CloseConnection` e `CommandBehavior.SingleRow` valores no parâmetro de comportamento, fazendo com que a conexão seja fechada com retornado <xref:System.Data.SqlClient.SqlDataReader> for fechada e para otimizar o resultado de uma única linha.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> invocado quando a execução do comando for concluída. Passe <see langword="null" /> (<see langword="Nothing" /> no Microsoft Visual Basic) para indicar que não é necessário um retorno de chamada.</param>
        <param name="stateObject">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada. Recupere esse objeto de dentro do procedimento de retorno de chamada usando a propriedade <see cref="P:System.IAsyncResult.AsyncState" />.</param>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado descrito por esse <see cref="T:System.Data.SqlClient.SqlCommand" /> e recupera um ou mais conjuntos de resultado do servidor, dado um procedimento de retorno de chamada e informações sobre o estado.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar, aguardar os resultados ou ambos; esse valor também é necessário ao invocar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, que retorna uma instância <see cref="T:System.Data.SqlClient.SqlDataReader" /> que pode ser utilizada para recuperar as linhas retornadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader> retornada pelo comando. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> antes da conclusão da execução do comando causa o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback> delegado que é chamado quando a instrução é concluída. Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método dentro desse procedimento delegado, ou de qualquer outro local dentro de seu aplicativo. Além disso, você pode passar qualquer objeto de `stateObject` parâmetro e seu procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A> propriedade.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, buscando valor é ainda assíncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A> maio bloquear se mais dados são necessários e a rede subjacente blocos de operação de leitura.  
  
 Como o procedimento de retorno de chamada é executado de dentro de um thread em segundo plano fornecido pelo tempo de execução do Microsoft .NET, é muito importante que você adotar uma abordagem rigorosa para lidar com as interações de thread cruzado de dentro de seus aplicativos. Por exemplo, você não deve interagir com conteúdo de um formulário de dentro de seu procedimento de retorno de chamada; Você precisa atualizar o formulário, você deve alternar para thread do formulário para fazer seu trabalho. O exemplo neste tópico demonstra esse comportamento.  
  
 Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção no procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter mais informações sobre o tratamento de exceções no procedimento de retorno de chamada.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retorna quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O aplicativo Windows a seguir demonstra o uso do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método, executando uma instrução Transact-SQL que inclui um atraso de alguns segundos (emulando um comando de execução longa). Porque o exemplo executa o comando de forma assíncrona, o formulário permanece responsivo enquanto aguarda os resultados. Este exemplo passa a execução <xref:System.Data.SqlClient.SqlCommand> objeto como o `stateObject` parâmetro; isso torna simples para recuperar o <xref:System.Data.SqlClient.SqlCommand> do objeto de dentro do procedimento de retorno de chamada, para que o código pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método correspondente à inicial chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 Este exemplo demonstra várias técnicas importantes. Isso inclui chamar um método que interage com o formulário a partir de um thread separado. Além disso, este exemplo demonstra como você deve impedir que os usuários executando um comando várias vezes ao mesmo tempo, e como você deve garantir que o formulário não feche antes do procedimento de retorno de chamada é chamado.  
  
 Para configurar este exemplo, crie um novo aplicativo do Windows. Coloque um <xref:System.Windows.Forms.Button> controle, um <xref:System.Windows.Forms.DataGridView> controle e um <xref:System.Windows.Forms.Label> controle no formulário (aceitar o nome padrão para cada controle). Adicione o seguinte código à classe do formulário, modificando a cadeia de caracteres de conexão, conforme necessário para o seu ambiente.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> invocado quando a execução do comando for concluída. Passe <see langword="null" /> (<see langword="Nothing" /> no Microsoft Visual Basic) para indicar que não é necessário um retorno de chamada.</param>
        <param name="stateObject">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada. Recupere esse objeto de dentro do procedimento de retorno de chamada usando a propriedade <see cref="P:System.IAsyncResult.AsyncState" />.</param>
        <param name="behavior">Um dos valores <see cref="T:System.Data.CommandBehavior" /> que indica opções de execução de instrução e recuperação de dados.</param>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou procedimento armazenado descrito por esse <see cref="T:System.Data.SqlClient.SqlCommand" />, usando um dos valores <see langword="CommandBehavior" /> e recuperando um ou mais conjuntos de resultados do servidor, dado um procedimento de retorno de chamada e informações sobre o estado.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar, aguardar os resultados ou ambos; esse valor também é necessário ao invocar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, que retorna uma instância <see cref="T:System.Data.SqlClient.SqlDataReader" /> que pode ser utilizada para recuperar as linhas retornadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL ou procedimento armazenado que retorna linhas, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método para concluir a operação e recuperar o <xref:System.Data.SqlClient.SqlDataReader> retornada pelo comando. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback> delegado que é chamado quando a instrução é concluída. Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método dentro desse procedimento delegado, ou de qualquer outro local dentro de seu aplicativo. Além disso, você pode passar qualquer objeto de `stateObject` parâmetro e seu procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A> propriedade.  
  
 O `behavior` parâmetro permite que você especifique opções que controlam o comportamento do comando e sua conexão. Esses valores podem ser combinados (usando a linguagem de programação `Or` operador); em geral, os desenvolvedores usam o `CloseConnection` valor para certificar-se de que a conexão é fechada pelo tempo de execução quando o <xref:System.Data.SqlClient.SqlDataReader> está fechado. Os desenvolvedores também podem otimizar o comportamento do <xref:System.Data.SqlClient.SqlDataReader> especificando o `SingleRow` valor quando ele é conhecido de antemão que a instrução Transact-SQL ou procedimento armazenado retorna apenas uma única linha.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, buscando valor é ainda assíncrono. Isso significa que as chamadas para <xref:System.Data.SqlClient.SqlDataReader.Read%2A> maio bloquear se mais dados são necessários e a rede subjacente blocos de operação de leitura.  
  
 Como o procedimento de retorno de chamada é executado de dentro de um thread em segundo plano fornecido pelo Microsoft .NET common language runtime, é muito importante que você adotar uma abordagem rigorosa para lidar com as interações de thread cruzado de dentro de seus aplicativos. Por exemplo, você não deve interagir com conteúdo de um formulário de dentro de seu procedimento de retorno de chamada – você deve ter que atualizar o formulário, você deve alternar para thread do formulário para fazer seu trabalho. O exemplo neste tópico demonstra esse comportamento.  
  
 Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção no procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter mais informações sobre o tratamento de exceções no procedimento de retorno de chamada.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retornará quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O aplicativo Windows a seguir demonstra o uso do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método, executando uma instrução Transact-SQL que inclui um atraso de alguns segundos (emulando um comando de execução longa). Porque o exemplo executa o comando de forma assíncrona, o formulário permanece responsivo enquanto aguarda os resultados. Este exemplo passa a execução <xref:System.Data.SqlClient.SqlCommand> objeto como o `stateObject` parâmetro; isso torna simples para recuperar o <xref:System.Data.SqlClient.SqlCommand> do objeto de dentro do procedimento de retorno de chamada, para que o código pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método correspondente à inicial chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 Este exemplo demonstra várias técnicas importantes. Isso inclui chamar um método que interage com o formulário a partir de um thread separado. Além disso, este exemplo demonstra como você deve impedir que os usuários executando um comando várias vezes ao mesmo tempo, e como você deve garantir que o formulário não feche antes do procedimento de retorno de chamada é chamado.  
  
 Para configurar este exemplo, crie um novo aplicativo do Windows. Coloque um <xref:System.Windows.Forms.Button> controle, um <xref:System.Windows.Forms.DataGridView> controle e um <xref:System.Windows.Forms.Label> controle no formulário (aceitar o nome padrão para cada controle). Adicione o seguinte código à classe do formulário, modificando a cadeia de caracteres de conexão, conforme necessário para o seu ambiente.  
  
 Este exemplo passa o `CommandBehavior.CloseConnection` o valor a `behavior` parâmetro, fazendo com que o retornado <xref:System.Data.SqlClient.SqlDataReader> para fechar automaticamente sua conexão quando ela é fechada.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou do procedimento armazenado descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" /> e retorna resultados como um objeto <see cref="T:System.Xml.XmlReader" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou do procedimento armazenado descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" /> e retorna resultados como um objeto <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <see langword="EndExecuteXmlReader" />, que retorna um valor único de XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL que retorna linhas como XML, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o `EndExecuteXmlReader` método para concluir a operação e recuperar o XML retornado pelo comando. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método retorna imediatamente, mas até que o código é executado correspondente `EndExecuteXmlReader` chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o `EndExecuteXmlReader` antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 O <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade normalmente especifica uma instrução Transact-SQL com uma cláusula FOR XML válida. No entanto, `CommandText` também pode especificar uma instrução que retorna `ntext` dados que contém XML válido.  
  
 Um típico <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> consulta pode ser formatada como no exemplo a seguir em C#:  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única. Nesse caso, se mais de uma linha é retornada, o `EndExecuteXmlReader` método anexa o <xref:System.Xml.XmlReader> para o valor na primeira linha e descarta o restante do resultado definido.  
  
 O recurso de conjunto (MARS) vários resultados ativos permite várias ações que usam a mesma conexão.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros são enviados, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas. Embora a execução do comando é assíncrona, buscando valor é ainda assíncrono.  
  
 Porque essa sobrecarga não oferece suporte a um procedimento de retorno de chamada, os desenvolvedores precisam para a sondagem para determinar se o comando for concluído, usando o <xref:System.IAsyncResult.IsCompleted%2A> propriedade do <xref:System.IAsyncResult> retornado pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método; ou aguarde a conclusão de um ou mais comandos usando o <xref:System.IAsyncResult.AsyncWaitHandle%2A> propriedade retornada <xref:System.IAsyncResult>.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retorna quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O aplicativo de console a seguir inicia o processo de recuperar dados XML de forma assíncrona. Enquanto aguarda os resultados, este aplicativo simples reside em um loop, investigando o <xref:System.IAsyncResult.IsCompleted%2A> valor da propriedade. Quando o processo for concluído, o código recupera o XML e exibe seu conteúdo.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">Um delegado <see cref="T:System.AsyncCallback" /> invocado quando a execução do comando for concluída. Passe <see langword="null" /> (<see langword="Nothing" /> no Microsoft Visual Basic) para indicar que não é necessário um retorno de chamada.</param>
        <param name="stateObject">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada. Recupere esse objeto de dentro do procedimento de retorno de chamada usando a propriedade <see cref="P:System.IAsyncResult.AsyncState" />.</param>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou do procedimento armazenado descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" /> e retorna resultados como um objeto <see cref="T:System.Xml.XmlReader" /> usando um procedimento de retorno de chamada.</summary>
        <returns>Um <see cref="T:System.IAsyncResult" /> que pode ser usado para sondar, aguardar resultados ou ambos. Esse valor também é necessário ao chamar <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />, que retorna os resultados do comando como XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método inicia o processo de execução de forma assíncrona uma instrução Transact-SQL ou procedimento armazenado que retorna linhas como XML, para que outras tarefas podem ser executadas simultaneamente enquanto a instrução está em execução. Quando a instrução for concluída, os desenvolvedores devem chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> método para concluir a operação e recuperar os dados solicitados do XML. O <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método retorna imediatamente, mas até que o código é executado correspondente <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> chamada de método, ele não deve executar todas as chamadas que iniciar uma execução síncrona ou assíncrona na mesma <xref:System.Data.SqlClient.SqlCommand> objeto. Chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> antes da execução do comando é causas concluídas o <xref:System.Data.SqlClient.SqlCommand> objeto para bloquear até que a execução for concluída.  
  
 O <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade normalmente especifica uma instrução Transact-SQL com uma cláusula FOR XML válida. No entanto, `CommandText` também pode especificar uma instrução que retorna dados que contém XML válido. Esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única. Nesse caso, se mais de uma linha é retornada, o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> método anexa o <xref:System.Xml.XmlReader> para o valor na primeira linha e descarta o restante do resultado definido.  
  
 Um típico <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> consulta pode ser formatada como no exemplo a seguir em C#:  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única. Nesse caso, se mais de uma linha é retornada, o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> método anexa o <xref:System.Xml.XmlReader> para o valor na primeira linha e descarta o restante do resultado definido.  
  
 O recurso de conjunto (MARS) vários resultados ativos permite várias ações que usam a mesma conexão.  
  
 O `callback` parâmetro permite que você especifique um <xref:System.AsyncCallback> delegado que é chamado quando a instrução é concluída. Você pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> método dentro desse procedimento delegado, ou de qualquer outro local dentro de seu aplicativo. Além disso, você pode passar qualquer objeto de `stateObject` parâmetro e seu procedimento de retorno de chamada podem recuperar essas informações usando o <xref:System.IAsyncResult.AsyncState%2A> propriedade.  
  
 Observe que o texto do comando e os parâmetros são enviados para o servidor de forma síncrona. Se um comando grande ou muitos parâmetros é enviado, esse método poderá bloquear durante gravações. Depois que o comando é enviado, o método retornará imediatamente sem aguardar uma resposta do servidor – ou seja, leituras são assíncronas.  
  
 Todos os erros que ocorrem durante a execução da operação são gerados como exceções no procedimento de retorno de chamada. Você deve tratar a exceção no procedimento de retorno de chamada, não no aplicativo principal. Consulte o exemplo neste tópico para obter mais informações sobre o tratamento de exceções no procedimento de retorno de chamada.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retornará quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O aplicativo Windows a seguir demonstra o uso do <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método, executando uma instrução Transact-SQL que inclui um atraso de alguns segundos (emulando um comando de execução longa). Este exemplo passa o em execução <xref:System.Data.SqlClient.SqlCommand> do objeto como o `stateObject` parâmetro--isso torna simples para recuperar o <xref:System.Data.SqlClient.SqlCommand> do objeto de dentro do procedimento de retorno de chamada, para que o código pode chamar o <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> método correspondente à inicial chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  
  
 Este exemplo demonstra várias técnicas importantes. Isso inclui chamar um método que interage com o formulário a partir de um thread separado. Além disso, este exemplo demonstra como você deve impedir que os usuários executando um comando várias vezes ao mesmo tempo, e como você deve garantir que o formulário não feche antes do procedimento de retorno de chamada é chamado.  
  
 Para configurar este exemplo, crie um novo aplicativo do Windows. Coloque um <xref:System.Windows.Forms.Button> controle, um <xref:System.Windows.Forms.ListBox> controle e um <xref:System.Windows.Forms.Label> controle no formulário (aceitar o nome padrão para cada controle). Adicione o seguinte código à classe do formulário, modificando a cadeia de caracteres de conexão, conforme necessário para o seu ambiente.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Qualquer erro ocorrido ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O par nome-valor "Asynchronous Processing=true" não foi incluído na cadeia de conexão que define a conexão para este <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tenta cancelar a execução de um <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se não há nada para cancelar, nada ocorre. No entanto, se houver um comando no processo e cancelar a tentativa falhar, nenhuma exceção será gerada.  
  
 Em alguns casos raros, se você chamar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>, em seguida, chame <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implícita ou explicitamente) antes de chamar <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>e, em seguida, chamar <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, o comando Cancelar não será enviado para o SQL Server e o conjunto de resultados pode continuar a transmitir depois de você chamar <xref:System.Data.SqlClient.SqlConnection.Close%2A>. Para evitar isso, certifique-se de que você chame <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> antes de fechar o leitor ou a conexão.  
  
   
  
## Examples  
 O exemplo a seguir demonstra o uso do método <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>.  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um novo objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> que é uma cópia da instância atual.</summary>
        <returns>Um novo objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> que é uma cópia dessa instância.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a configuração de criptografia de coluna desse comando.</summary>
        <value>A configuração de criptografia de coluna desse comando.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a instrução Transact-SQL, nome da tabela ou procedimento armazenado a ser executado na fonte de dados.</summary>
        <value>A instrução Transact-SQL ou procedimento armazenado a ser executado. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> estiver definida como `StoredProcedure`, o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade deve ser definida como o nome do procedimento armazenado. O usuário pode ser necessário usar a sintaxe de escape de caractere se o nome do procedimento armazenado contiver caracteres especiais. O comando é executado esse procedimento armazenado, quando você chama um do `Execute` métodos.  
  
 O Microsoft .NET Framework Data Provider para SQL Server não suporta o espaço reservado de ponto de interrogação (?) para passar parâmetros para uma instrução Transact-SQL ou um procedimento armazenado chamado por um comando de `CommandType.Text`. Nesse caso, os parâmetros nomeados devem ser usados. Por exemplo:  
  
```  
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 Para obter mais informações, consulte [Configurando parâmetros e tipos de dados do parâmetro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Recuperando e modificando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tempo de espera antes do término da tentativa de executar um comando e antes de gerar um erro.</summary>
        <value>O tempo de espera, em segundos, para a execução do comando. O padrão é 30 segundos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um valor de 0 indica nenhum limite (uma tentativa de executar um comando aguardará indefinidamente).  
  
> [!NOTE]
>  O <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> propriedade será ignorada durante as chamadas de método assíncrono, como <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> não tem nenhum efeito quando o comando é executado em uma conexão de contexto (um <xref:System.Data.SqlClient.SqlConnection> aberto com "conexão de contexto = true" na cadeia de conexão).  
  
> [!NOTE]
>  Essa propriedade é o tempo limite cumulativo (para todos os pacotes de rede que são lidos durante a invocação de um método) para todas as leituras de rede durante a execução do comando ou o processamento dos resultados. Um tempo limite ainda pode ocorrer após a primeira linha é retornada e não inclui o tempo de processamento de usuário, tempo de rede somente leitura.  
>   
>  Por exemplo, com um tempo de 30 segundos, descubra se <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requer dois pacotes de rede e, em seguida, ele tem 30 segundos para ler os dois pacotes de rede. Se você chamar <xref:System.Data.SqlClient.SqlDataReader.Read%2A> novamente, ele terá outro 30 segundos para ler todos os dados exigidos por ele.  
  
```  
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica como a propriedade <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> deve ser interpretada.</summary>
        <value>Um dos valores de <see cref="T:System.Data.CommandType" />. O padrão é <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você define o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> propriedade para `StoredProcedure`, você deve definir o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade para o nome do procedimento armazenado. O comando é executado esse procedimento armazenado quando você chama um dos métodos Execute.  
  
 O Microsoft .NET Framework Data Provider para SQL Server não oferece suporte para o espaço reservado de ponto de interrogação (?) para passar parâmetros para uma instrução SQL ou um procedimento armazenado é chamado com um <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> de <xref:System.Data.CommandType.Text>. Nesse caso, os parâmetros nomeados devem ser usados. Por exemplo:  
  
 SELECT * FROM Customers WHERE CustomerID = @CustomerID  
  
 Para obter mais informações, consulte [Configurando parâmetros e tipos de dados do parâmetro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor não era um <see cref="T:System.Data.CommandType" /> válido.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Recuperando e modificando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.SqlClient.SqlConnection" /> usado por essa instância do <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <value>A conexão com uma fonte de dados. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o comando está inscrita em uma transação existente e a conexão é alterado, tentar executar o comando irá acionar uma <xref:System.InvalidOperationException>.  
  
 Se o <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> propriedade não for null e a transação já foi confirmada ou revertida, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> é definido como null.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> foi alterada enquanto o comando foi inscrito em uma transação.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância de um objeto <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> método é uma versão fortemente tipada do <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o objeto de comando deve estar visível em um controle do Windows Form Designer.</summary>
        <value>Um valor que indica se o objeto de comando deve estar visível em um controle. O padrão é <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">O <see cref="T:System.IAsyncResult" /> retornado pela chamada ao <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</param>
        <summary>Termina a execução assíncrona de uma instrução Transact-SQL.</summary>
        <returns>O número de linhas afetadas (o mesmo comportamento que <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você chama <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> para executar um [!INCLUDE[tsql](~/includes/tsql-md.md)] instrução, você deve chamar <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> para concluir a operação. Se o processo de executar o comando não tiver ainda concluído, esse blocos de método até que a operação seja concluída. Os usuários podem verificar que o comando concluiu sua operação usando o <xref:System.IAsyncResult> instância retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> método. Se um procedimento de retorno de chamada foi especificado na chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, esse método deve ser chamado.  
  
   
  
## Examples  
 Para exemplos que demonstram o uso do <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> método, consulte <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="asyncResult" /> é nulo (<see langword="Nothing" /> no Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> foi chamado mais de uma vez para uma única execução de comando ou o método não correspondeu com seu método de execução (por exemplo, o código chamado <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> para concluir a execução de uma chamada para <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />).</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O período de tempo especificado em <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> decorrido e a operação assíncrona especificada com <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> não foi concluída.  
  
Em algumas situações, <see cref="T:System.IAsyncResult" /> pode ser definido como <see langword="IsCompleted" /> incorretamente. Se isso ocorresse e <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> fosse chamado, EndExecuteNonQuery poderia gerar um erro SqlException se a quantidade de tempo especificada em <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> decorresse e se a operação assíncrona especificada com <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> não fosse concluída. Para corrigir essa situação, você deve aumentar o valor de CommandTimeout ou reduzir o trabalho sendo feito pela operação assíncrona.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">O <see cref="T:System.IAsyncResult" /> retornado pela chamada ao <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />.</param>
        <summary>Conclui a execução assíncrona de uma instrução Transact-SQL, retornando o <see cref="T:System.Data.SqlClient.SqlDataReader" /> solicitado.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlDataReader" /> que pode ser usado para recuperar as linhas solicitadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você chama <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para executar uma instrução Transact-SQL, você deve chamar <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> para concluir a operação. Se o processo de executar o comando não tiver ainda concluído, esse blocos de método até que a operação seja concluída. Os usuários podem verificar que o comando concluiu sua operação usando o <xref:System.IAsyncResult> instância retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> método. Se um procedimento de retorno de chamada foi especificado na chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, esse método deve ser chamado.  
  
   
  
## Examples  
 Para exemplos que demonstram o uso do <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> método, consulte <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="asyncResult" /> é nulo (<see langword="Nothing" /> no Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> foi chamado mais de uma vez para uma única execução do comando ou o método não correspondeu ao seu método de execução (por exemplo, o código chamou <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> para concluir a execução de uma chamada ao <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">O <see cref="T:System.IAsyncResult" /> retornado pela chamada ao <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</param>
        <summary>Conclui a execução assíncrona de uma instrução Transact-SQL e retorna os dados solicitados como XML.</summary>
        <returns>Um <see cref="T:System.Xml.XmlReader" /> objeto que pode ser usado para buscar os dados XML resultantes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você chama <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para executar uma instrução Transact-SQL, você deve chamar <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> para concluir a operação. Se o processo de executar o comando não tiver ainda concluído, esse blocos de método até que a operação seja concluída. Os usuários podem verificar que o comando concluiu sua operação usando o <xref:System.IAsyncResult> instância retornada pelo <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> método. Se um procedimento de retorno de chamada foi especificado na chamada para <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, esse método deve ser chamado.  
  
   
  
## Examples  
 Para exemplos que demonstram o uso do <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> método, consulte <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O parâmetro <paramref name="asyncResult" /> é nulo (<see langword="Nothing" /> no Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> foi chamado mais de uma vez para uma única execução do comando ou o método não correspondeu ao seu método de execução (por exemplo, o código chamou <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> para concluir a execução de uma chamada ao <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa uma instrução Transact-SQL na conexão e retorna o número de linhas afetadas.</summary>
        <returns>O número de linhas afetadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> para executar operações de catálogo (por exemplo, consultar a estrutura de um banco de dados ou criar objetos de banco de dados como tabelas) ou alterar os dados em um banco de dados sem usar um <xref:System.Data.DataSet> executando UPDATE, INSERT ou DELETE instruções.  
  
 Embora o <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> retorna nenhuma linha, quaisquer parâmetros de saída ou retornar valores mapeados para os parâmetros são preenchidos com dados.  
  
 Para instruções UPDATE, INSERT e DELETE, o valor retornado é o número de linhas afetadas pelo comando. Para todos os outros tipos de instruções, o valor retornado é -1.

Quando um gatilho existe em uma tabela que está sendo inserido ou atualizado, o valor retornado inclui o número de linhas afetadas pela operação de inserção ou atualização e o número de linhas afetadas pelo gatilho ou gatilhos.

Quando SET NOCOUNT ON é ativada a conexão (antes ou como parte da execução do comando, ou como parte de um gatilho iniciado pela execução do comando) as linhas afetadas por instruções individuais stop que contribuem para a contagem de linhas afetadas, que é retornado por essa m método.

Se nenhuma instrução for detectada que contribuem para a contagem, o valor de retorno é -1. Se ocorrer uma reversão, o valor de retorno também seja -1.



## Examples  
 O exemplo a seguir cria uma <xref:System.Data.SqlClient.SqlCommand> e, em seguida, executa-o usando <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. O exemplo é passado uma cadeia de caracteres que é uma instrução Transact-SQL (como UPDATE, INSERT ou DELETE) e uma cadeia de caracteres usar para se conectar à fonte de dados.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando o Microsoft .NET Framework versão 1.0 é utilizado.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Recuperando e modificando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A instrução de cancelamento.</param>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, que executa uma instrução [!INCLUDE[tsql](~/includes/tsql-md.md)] em relação à conexão e retorna o número de linhas afetadas. O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.  As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> estiver definida como `StoredProcedure`, o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade deve ser definida como o nome do procedimento armazenado. O comando é executado esse procedimento armazenado, quando você chama <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Se uma transação está travada, uma exceção não pode ser lançada até <xref:System.Data.SqlClient.SqlDataReader.Read%2A> é chamado.  
  
 O recurso de conjunto (MARS) vários resultados ativos permite várias ações usando a mesma conexão.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retornará quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand>e é executado passando uma cadeia de caracteres que é uma instrução SELECT Transact-SQL e uma cadeia de caracteres usar para se conectar à fonte de dados.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando o Microsoft .NET Framework versão 1.0 é utilizado.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O estado atual da conexão está fechado. <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> exige um <see cref="T:System.Data.SqlClient.SqlConnection" /> aberto.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Recuperando e modificando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server e ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
        <summary>Envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> estiver definida como `StoredProcedure`, o <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade deve ser definida como o nome do procedimento armazenado. O comando é executado esse procedimento armazenado, quando você chama <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Use <xref:System.Data.CommandBehavior.SequentialAccess> para recuperar dados binários e valores grandes. Caso contrário, um <xref:System.OutOfMemoryException> podem ocorrer e a conexão será fechada.  
  
 O recurso de conjunto (MARS) vários resultados ativos permite várias ações usando a mesma conexão.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retornará quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlCommand>e é executado passando uma cadeia de caracteres que é uma instrução SELECT Transact-SQL e uma cadeia de caracteres usar para se conectar à fonte de dados. <xref:System.Data.CommandBehavior> é definido como <xref:System.Data.CommandBehavior.CloseConnection>.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia a execução assíncrona da instrução [!INCLUDE[tsql](~/includes/tsql-md.md)] ou procedimento armazenado descrito por esse <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, que envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />. As exceções serão relatadas por meio do objeto de Tarefa retornado.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">Opções de recuperação de dados e execução de instrução.  Quando definido como <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> lê a linha inteira antes de retornar uma Tarefa concluída.</param>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, que envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />. As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A instrução de cancelamento.</param>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, que envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />.  
  
O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.  As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">Opções de recuperação de dados e execução de instrução.  Quando definido como <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> lê a linha inteira antes de retornar uma Tarefa concluída.</param>
        <param name="cancellationToken">A instrução de cancelamento.</param>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, que envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />  
  
O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.  As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Data.CommandBehavior" /> inválido.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executa a consulta e retorna a primeira coluna da primeira linha do conjunto de resultados retornado pela consulta. Colunas ou linhas adicionais são ignoradas.</summary>
        <returns>A primeira coluna da primeira linha no conjunto de resultados, ou uma referência nula (<see langword="Nothing" /> no Visual Basic) se o conjunto de resultados estiver vazio. Retorna um máximo de 2.033 caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> método para recuperar um único valor (por exemplo, um valor agregado) de um banco de dados. Isso exige menos código do que usando o <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> método e, em seguida, executar as operações que você precisa para gerar o valor único usando os dados retornados por uma <xref:System.Data.SqlClient.SqlDataReader>.  
  
 Um típico <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> consulta pode ser formatada como no exemplo a seguir em C#:  
  
```  
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Data.SqlClient.SqlCommand> e, em seguida, executa-o usando <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. O exemplo é passado uma cadeia de caracteres que representa um novo valor a ser inserido em uma tabela e uma cadeia de caracteres usar para se conectar à fonte de dados. A função retorna o novo **identidade** 0 na falha, de valor da coluna se uma nova linha foi inserida.  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando o Microsoft .NET Framework versão 1.0 é utilizado.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A instrução de cancelamento.</param>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />, que executa a consulta de forma assíncrona e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta. Colunas ou linhas adicionais são ignoradas.  
  
O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando. As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um objeto <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Um objeto <see cref="T:System.Xml.XmlReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O **XmlReader** retornado por este método não oferece suporte a operações assíncronas.

 O <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> propriedade normalmente especifica uma [!INCLUDE[tsql](~/includes/tsql-md.md)] instrução com uma cláusula FOR XML válida. No entanto, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> também pode especificar uma instrução que retorna `ntext` ou `nvarchar` os dados que contém XML válido ou o conteúdo de uma coluna definida com o `xml` tipo de dados.  
  
 Um típico <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> consulta pode ser formatada como no exemplo a seguir Microsoft Visual c#:  
  
```  
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Esse método também pode ser usado para recuperar um conjunto de resultados de uma linha e coluna única que contém dados XML. Nesse caso, se mais de uma linha é retornada, o <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> método anexa o <xref:System.Xml.XmlReader> para o valor na primeira linha e descarta o restante do resultado definido.  
  
 O recurso de conjunto (MARS) vários resultados ativos permite várias ações usando a mesma conexão.  
  
 Se você usar <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> para acessar dados XML, SQL Server retornará quaisquer resultados XML maior 2,033 caracteres de comprimento em várias linhas de 2,033 caracteres. Para evitar esse comportamento, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> ou <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> para consultas de FOR XML de leitura.


## Examples  
 O exemplo a seguir cria uma <xref:System.Data.SqlClient.SqlCommand> e, em seguida, executa-o usando <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>. O exemplo é passado uma cadeia de caracteres que é uma instrução SELECT Transact-SQL para XML e uma cadeia de caracteres usar para se conectar à fonte de dados.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Exceção ao executar o comando em uma linha bloqueada. Essa exceção não é gerada quando o Microsoft .NET Framework versão 1.0 é utilizado.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia a execução assíncrona da instrução Transact-SQL ou do procedimento armazenado descrito por este <see cref="T:System.Data.SqlClient.SqlCommand" /> e retorna resultados como um objeto <see cref="T:System.Xml.XmlReader" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, que envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um objeto <see cref="T:System.Xml.XmlReader" />.  
  
As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

O **XmlReader** retornado por este método não oferece suporte a operações assíncronas.

Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A instrução de cancelamento.</param>
        <summary>Uma versão assíncrona de <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, que envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um objeto <see cref="T:System.Xml.XmlReader" />.  
  
O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.  As exceções serão relatadas por meio do objeto de tarefa.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

O **XmlReader** retornado por este método não oferece suporte a operações assíncronas.

Para obter mais informações sobre a programação assíncrona no .NET Framework Data Provider para SQL Server, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Binary** ou **VarBinary** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.Stream" />. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Char**, **NChar**, **NVarChar**, **VarChar** ou **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.IO.TextReader" />.  
  
Um <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> diferente de **Xml** foi usado quando <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> foi definido como <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Chamando <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> mais de uma vez para a mesma instância antes da conclusão da tarefa.  
  
O <see cref="T:System.Data.SqlClient.SqlConnection" /> foi fechado ou removido durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).  
  
 <see langword="Context Connection=true" /> é especificado na cadeia de conexão.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">O SQL Server retornou um erro ao executar o texto do comando.  
  
Ocorreu um tempo limite durante uma operação de streaming. Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.IO.IOException">Ocorreu um erro em um objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.IO.TextReader" /> foi fechado durante uma operação de streaming.  Para saber mais sobre o streaming, consulte [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md) (Suporte de streaming do SqlClient).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica o objeto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> associado a este comando.</summary>
        <value>Quando definido como nulo (padrão), nenhuma notificação deve ser solicitada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve definir o valor para essa propriedade antes do comando é executado para que ele entre em vigor.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Usando notificações de consulta</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o aplicativo deve receber notificações de consulta automaticamente de um objeto <see cref="T:System.Data.SqlClient.SqlDependency" /> comum.</summary>
        <value><see langword="true" /> Se o aplicativo receba automaticamente notificações de consulta; Caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse recurso é usado em aplicativos ASP.NET para receber notificações para todos os comandos executados em uma página ASP em relação ao servidor SQL. Isso permite que o ASP.NET para cache da página até que as consultas usadas para renderizar a página pode produzir um resultado diferente. Inscrição automática.  
  
 Essa propriedade só se aplica a versões do SQL Server que dão suporte a notificações de consulta. Para versões anteriores, definir essa propriedade como `true` não tem efeito sobre o aplicativo.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Usando notificações de consulta</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
        <value>Os parâmetros da instrução Transact-SQL ou do procedimento armazenado. O padrão é uma coleção vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O Microsoft .NET Framework Data Provider para SQL Server não suporta o espaço reservado de ponto de interrogação (?) para passar parâmetros para uma instrução SQL ou um procedimento armazenado chamado por um comando de `CommandType.Text`. Nesse caso, os parâmetros nomeados devem ser usados. Por exemplo:  
  
 SELECT * FROM Customers WHERE CustomerID = @CustomerID  
  
> [!NOTE]
>  Se os parâmetros na coleção não coincidem com os requisitos da consulta a ser executado, um erro poderá ocorrer.  
  
 Para obter mais informações, consulte [Configurando parâmetros e tipos de dados do parâmetro](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar uma <xref:System.Data.SqlClient.SqlCommand> e adicione parâmetros para o <xref:System.Data.SqlClient.SqlParameterCollection>.  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma versão preparada do comando em uma instância do SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> é definido como `StoredProcedure`, a chamada para <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> deve ter êxito, embora isso pode causar um sem op.  
  
 Antes de chamar <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, especifique o tipo de dados de cada parâmetro na instrução para estar preparado. Para cada parâmetro que tem um tipo de dados de comprimento variável, você deve definir o <xref:System.Data.SqlClient.SqlParameter.Size%2A> propriedade para o tamanho máximo necessário. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> Retorna um erro se essas condições não forem atendidas.  
  
> [!NOTE]
>  Se o contexto de banco de dados é alterado, executando o Transact-SQL `USE <database>` instrução, ou chamando o <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> método, em seguida, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> deve ser chamado pela segunda vez.  
  
 Se você chamar um `Execute` método depois de chamar <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, qualquer valor de parâmetro que é maior do que o valor especificado pela <xref:System.Data.SqlClient.SqlParameter.Size%2A> propriedade é truncada automaticamente para o tamanho original especificado do parâmetro e não haja erros de truncamento retornado.  
  
 Parâmetros de saída (independentemente de estar preparado ou não) deve ter um tipo de dados especificados pelo usuário. Se você especificar um tipo de dados de comprimento variável, você também deve especificar o máximo <xref:System.Data.SqlClient.SqlParameter.Size%2A>.  
  
 Antes do Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> gerou uma exceção.  A partir do Visual Studio 2010, este método não gera uma exceção.  
  
   
  
## Examples  
 O exemplo a seguir demonstra o uso do método <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>.  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine a propriedade <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> para seu valor padrão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão de <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> é de 30 segundos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando a execução de uma instrução Transact-SQL é concluída.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância de um objeto <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</param>
        <summary>Envia o <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> para o <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> e cria um <see cref="T:System.Data.SqlClient.SqlDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
        <returns>Um objeto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um novo objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> que é uma cópia da instância atual.</summary>
        <returns>Um novo objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> que é uma cópia dessa instância.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.SqlClient.SqlCommand" /> em que o <see cref="T:System.Data.SqlClient.SqlTransaction" /> é executado.</summary>
        <value>O <see cref="T:System.Data.SqlClient.SqlTransaction" />. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Não é possível definir o <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> propriedade se ele já está definido como um valor específico, e o comando está no processo de execução. Se você definir a propriedade de transação para um <xref:System.Data.SqlClient.SqlTransaction> objeto que não está conectado à mesma <xref:System.Data.SqlClient.SqlConnection> como o <xref:System.Data.SqlClient.SqlCommand> do objeto, uma exceção é lançada na próxima vez que você tentar executar uma instrução.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">Execução de uma transação</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define como os resultados do comando são aplicados a <see cref="T:System.Data.DataRow" /> quando usado pelo método **Update** de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
        <value>Um dos valores de <see cref="T:System.Data.UpdateRowSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O padrão <xref:System.Data.UpdateRowSource> valor é **ambos** , a menos que o comando é gerado automaticamente (como no caso do <xref:System.Data.SqlClient.SqlCommandBuilder>), caso em que o padrão é **None**.  
  
 Para obter mais informações sobre como usar o **UpdatedRowSource** propriedade, consulte [parâmetros DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Conectando e recuperando dados no ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Usando o .NET Framework Data Provider para SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Visão geral do ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>