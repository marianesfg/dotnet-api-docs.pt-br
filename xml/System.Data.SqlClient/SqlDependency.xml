<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce02332bd5cef1be5bc77ad2a4706ed56eef2c00" />
    <Meta Name="ms.sourcegitcommit" Value="7ec8019168133f71aa6ce8dadc6f9e1ebb3208af" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/10/2018" />
    <Meta Name="ms.locfileid" Value="40212099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>O objeto <see cref="T:System.Data.SqlClient.SqlDependency" /> representa uma dependência de notificação de consulta entre um aplicativo e uma instância do SQL Server. Um aplicativo pode criar um objeto <see cref="T:System.Data.SqlClient.SqlDependency" /> e registrar-se para receber notificações por meio do manipulador de eventos <see cref="T:System.Data.SqlClient.OnChangeEventHandler" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> é ideal para cenários, em que seu aplicativo ASP.NET ou serviço de camada intermediária precisa manter determinadas informações armazenadas em cache na memória de cache. <xref:System.Data.SqlClient.SqlDependency> permite que você receba notificações quando os dados originais no banco de dados é alterado para que o cache pode ser atualizado.  
  
 Para configurar uma dependência, você precisará associar uma <xref:System.Data.SqlClient.SqlDependency> objeto a um ou mais <xref:System.Data.SqlClient.SqlCommand> objetos. Para receber notificações, você precisa assinar o <xref:System.Data.SqlClient.SqlDependency.OnChange> eventos. Para obter mais informações sobre os requisitos para a criação de consultas para notificações, consulte [trabalhando com notificações de consulta](/sql/relational-databases/native-client/features/working-with-query-notifications).
  
> [!NOTE]
> <xref:System.Data.SqlClient.SqlDependency> foi projetado para ser usado em ASP.NET ou serviços de camada intermediária em que há um número relativamente pequeno de servidores ter dependências ativas em relação ao banco de dados. Ele não foi projetado para uso em aplicativos cliente, onde teria centenas ou milhares de computadores cliente <xref:System.Data.SqlClient.SqlDependency> objetos definido para um servidor de banco de dados individual. Se você estiver desenvolvendo um aplicativo em que você precisa receber notificações confiáveis quando dados são alterados, examine as seções [Planejando uma estratégia de notificações de consulta eficiente](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#planning-an-efficient-query-notifications-strategy) e [alternativas para consulta Notificações](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#alternatives-to-query-notifications) no [planejando notificações](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v%3dsql.105)) artigo.
  
 Para obter mais informações, consulte [as notificações de consulta no SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) e [criando soluções de notificação](https://docs.microsoft.com/previous-versions/sql/sql-server-2005/ms171065(v%3dsql.90)).  
  
> [!NOTE]
>  O <xref:System.Data.SqlClient.SqlDependency.OnChange> evento pode ser gerado em um thread diferente do thread que iniciou a execução do comando.  
  
 As notificações de consulta têm suporte apenas para as instruções SELECT que atendem uma lista de requisitos específicos. 
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDependency" /> com as configurações padrão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O construtor inicializa o <xref:System.Data.SqlClient.SqlDependency> usando o nome de serviço do Service Broker padrão e o tempo limite do objeto. Em algum momento após a construção, você deve usar o <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> método para associar um ou mais comandos a este <xref:System.Data.SqlClient.SqlDependency> objeto.  
  
 As notificações de consulta têm suporte apenas para as instruções SELECT que atendem uma lista de requisitos específicos. Para obter mais informações, consulte [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [trabalhando com notificações de consulta](/sql/connect/oledb/features/working-with-query-notifications).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">O objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> a ser associado a este objeto <see cref="T:System.Data.SqlClient.SqlDependency" />. O construtor configurará um objeto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> e o associará ao comando.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDependency" /> e a associa-a ao parâmetro <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internamente, esse construtor cria uma instância do <xref:System.Data.Sql.SqlNotificationRequest> classe e os associa um <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 As notificações de consulta têm suporte apenas para as instruções SELECT que atendem uma lista de requisitos específicos. Para obter mais informações, consulte [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [trabalhando com notificações de consulta](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="command" /> é NULL.</exception>
        <exception cref="T:System.InvalidOperationException">O objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> já tem um objeto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> atribuído à sua propriedade <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> e esse <see cref="T:System.Data.Sql.SqlNotificationRequest" /> não está associado a essa dependência.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">O objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> a ser associado a este objeto <see cref="T:System.Data.SqlClient.SqlDependency" />. O construtor configura um objeto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> e o associa ao comando.</param>
        <param name="options">As opções de solicitação de notificação a serem usadas por essa dependência.  <c>null</c> para usar o serviço padrão.</param>
        <param name="timeout">O tempo limite para essa notificação em segundos. O padrão é 0, indicando que o tempo limite do servidor deve ser usado.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDependency" />, a associa ao parâmetro <see cref="T:System.Data.SqlClient.SqlCommand" /> e especifica opções de notificação e um valor de tempo limite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As notificações de consulta têm suporte apenas para as instruções SELECT que atendem uma lista de requisitos específicos. Para obter mais informações, consulte [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [trabalhando com notificações de consulta](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="command" /> é NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor de tempo limite é menor que zero.</exception>
        <exception cref="T:System.InvalidOperationException">O objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> já tem um objeto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> atribuído à sua propriedade <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> e esse <see cref="T:System.Data.Sql.SqlNotificationRequest" /> não está associado a essa dependência.  Foi feita uma tentativa para criar uma instância **SqlDependency** de dentro de SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">Um objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> que contém uma instrução válida para notificações.</param>
        <summary>Associa um objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> a esta instância <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As notificações de consulta têm suporte apenas para as instruções SELECT que atendem uma lista de requisitos específicos. Para obter mais informações, consulte [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) e [trabalhando com notificações de consulta](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="command" /> é nulo.</exception>
        <exception cref="T:System.InvalidOperationException">O objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> já tem um objeto <see cref="T:System.Data.Sql.SqlNotificationRequest" /> atribuído à sua propriedade <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> e esse <see cref="T:System.Data.Sql.SqlNotificationRequest" /> não está associado a essa dependência.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se um dos conjuntos de resultados associados à dependência foi alterado.</summary>
        <value>Um valor booliano que indica se um dos conjuntos de resultados foi alterado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você não estiver usando o <xref:System.Data.SqlClient.SqlDependency.OnChange> evento, você pode verificar o <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> propriedade para determinar se os resultados da consulta foram alterados.  
  
 O <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> propriedade não implica necessariamente uma alteração nos dados. Outras circunstâncias, como o tempo limite expiraram e Falha ao definir a solicitação de notificação, também gerar um evento de alteração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que identifica essa instância da classe <see cref="T:System.Data.SqlClient.SqlDependency" /> de forma exclusiva.</summary>
        <value>Uma representação de cadeia de caracteres de um GUID que é gerado para cada instância da <see cref="T:System.Data.SqlClient.SqlDependency" /> classe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlDependency.Id%2A> propriedade é usada para identificar exclusivamente um determinado <xref:System.Data.SqlClient.SqlDependency> instância.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma notificação é recebida para um dos comandos associados a este objeto <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> ocorre quando os resultados para o comando associado é alterado. Se você não estiver usando <xref:System.Data.SqlClient.SqlDependency.OnChange>, você pode verificar o <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> propriedade para determinar se os resultados da consulta foram alterados.  
  
 O <xref:System.Data.SqlClient.SqlDependency.OnChange> evento não implica necessariamente uma alteração nos dados. Outras circunstâncias, tais como tempo limite expirou e também gerar uma falha ao definir a solicitação de notificação, <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia o ouvinte para receber notificações de alteração de dependência.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlDependency> ouvinte será reiniciado quando ocorre um erro na conexão do SQL Server.  
  
 Diversas chamadas para o <xref:System.Data.SqlClient.SqlDependency.Start%2A> método pode ser feito, sujeito às seguintes restrições:  
  
-   Várias chamadas com parâmetros idênticos (a mesma cadeia de caracteres de conexão e credenciais do Windows no thread de chamada) são válidas.  
  
-   Várias chamadas com cadeias de caracteres de conexão diferentes são válidas como:  
  
    -   Cada cadeia de caracteres de conexão Especifica um banco de dados diferente, ou  
  
    -   Cada cadeia de caracteres de conexão Especifica um usuário diferente, ou  
  
    -   As chamadas provenientes de diferentes domínios de aplicativo.  
  
 Você pode fazer o <xref:System.Data.SqlClient.SqlDependency> funcionem corretamente para aplicativos que usam vários threads para representar as credenciais de usuário diferente sem conceder a função dbo ao grupo, como diferentes usuários podem inscrever-se e escutar (usando <xref:System.Web.Caching.SqlCacheDependency> ou <xref:System.Data.SqlClient.SqlCommand>) para uma fila de notificação criada por um administrador. Quando o domínio do aplicativo relevante é iniciado, chame Start com as credenciais (Windows) de um usuário que tenha permissão para inicializar uma serviço/fila (as permissões CREATE QUEUE e criar serviço para o banco de dados). Certifique-se de iniciar é chamado apenas depois por AppDomain, caso contrário, uma exceção de ambiguidade é gerada.  O thread do usuário deve ter permissão para assinar a notificação (a permissão SUBSCRIBE QUERY NOTIFICATIONS para o banco de dados). <xref:System.Data.SqlClient.SqlDependency> o associará a solicitação de assinatura de um usuário não administrador à fila de serviço/criado pelo administrador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">A cadeia de conexão para a instância do SQL Server da qual as notificações de alteração serão obtidas.</param>
        <summary>Inicia o ouvinte para receber notificações de alteração de dependência da instância do SQL Server especificada pela cadeia de conexão.</summary>
        <returns>**True** se o ouvinte tiver sido inicializado com êxito; **false** se já existir um ouvinte compatível.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método inicia o ouvinte para o <xref:System.AppDomain> para receber notificações de dependência da instância do SQL Server especificada pelo `connectionString` parâmetro. Esse método pode ser chamado mais de uma vez com cadeias de caracteres de conexão diferentes para vários servidores.  
  
 Para obter comentários adicionais, consulte <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="connectionString" /> é NULL.</exception>
        <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="connectionString" /> é o mesmo que uma chamada anterior a esse método, mas os parâmetros são diferentes.  O método foi chamado de dentro do CLR.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão de CAS (segurança de acesso do código) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> necessária.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Foi feita uma chamada subsequente para o método com um parâmetro <paramref name="connectionString" /> equivalente com um usuário diferente ou um usuário que não é o padrão para o mesmo esquema.  Além disso, todas as exceções **SqlClient** subjacentes.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">A cadeia de conexão para a instância do SQL Server da qual as notificações de alteração serão obtidas.</param>
        <param name="queue">Uma fila existente do SQL Server Service Broker a ser usada. Se for <see langword="null" />, a fila padrão será usada.</param>
        <summary>Inicia o ouvinte para receber notificações de alteração de dependência da instância do SQL Server especificada pela cadeia de conexão usando a fila especificada do SQL Server Service Broker.</summary>
        <returns>**True** se o ouvinte tiver sido inicializado com êxito; **false** se já existir um ouvinte compatível.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método inicia o ouvinte para o <xref:System.AppDomain> para receber notificações de dependência da instância do SQL Server especificada pelo `connectionString` parâmetro. Esse método pode ser chamado mais de uma vez com cadeias de caracteres de conexão diferentes para vários servidores.  
  
 Se nenhum nome de fila é especificado, <xref:System.Data.SqlClient.SqlDependency> cria um serviço e fila temporária no servidor que é usado para o processo inteiro, mesmo se o processo envolve mais de um <xref:System.AppDomain>. O serviço e fila são removidos automaticamente durante o desligamento do aplicativo.  
  
 Para obter comentários adicionais, consulte <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="connectionString" /> é NULL.</exception>
        <exception cref="T:System.InvalidOperationException">O parâmetro <paramref name="connectionString" /> é o mesmo que uma chamada anterior a esse método, mas os parâmetros são diferentes.  O método foi chamado de dentro do CLR.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão de CAS (segurança de acesso do código) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> necessária.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Foi feita uma chamada posterior ao método com um parâmetro <paramref name="connectionString" /> equivalente, mas com um usuário diferente ou um usuário que não usa como padrão o mesmo esquema.  Além disso, todas as exceções **SqlClient** subjacentes.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Interrompe um ouvinte para uma conexão especificada na chamada <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> anterior.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlDependency> ouvinte será reiniciado quando ocorre um erro na conexão do SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Cadeia de conexão para a instância do SQL Server que foi usada em uma chamada <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> anterior.</param>
        <summary>Interrompe um ouvinte para uma conexão especificada na chamada <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> anterior.</summary>
        <returns>**true** se o ouvinte foi completamente interrompido; **false** se o <see cref="T:System.AppDomain" /> foi desassociado do ouvinte, mas há pelo menos um outro <see cref="T:System.AppDomain" /> usando o mesmo ouvinte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlDependency.Stop%2A> método deve ser chamado para cada <xref:System.Data.SqlClient.SqlDependency.Start%2A> chamar. Um determinado ouvinte desliga totalmente quando ele recebe o mesmo número de apenas <xref:System.Data.SqlClient.SqlDependency.Stop%2A> solicitações como <xref:System.Data.SqlClient.SqlDependency.Start%2A> solicitações.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="connectionString" /> é NULL.</exception>
        <exception cref="T:System.InvalidOperationException">O método foi chamado de dentro do SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão de CAS (segurança de acesso do código) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> necessária.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Ocorreu uma exceção do **SqlClient** subjacente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Cadeia de conexão para a instância do SQL Server que foi usada em uma chamada <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> anterior.</param>
        <param name="queue">A fila do SQL Server Service Broker que foi usada em uma chamada <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> anterior.</param>
        <summary>Interrompe um ouvinte para uma conexão especificada na chamada <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> anterior.</summary>
        <returns>**true** se o ouvinte foi completamente interrompido; **false** se o <see cref="T:System.AppDomain" /> foi desassociado do ouvinte, mas há pelo menos um outro <see cref="T:System.AppDomain" /> usando o mesmo ouvinte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlDependency.Stop%2A> método deve ser chamado para cada <xref:System.Data.SqlClient.SqlDependency.Start%2A> chamar. Um determinado ouvinte desliga totalmente quando ele recebe o mesmo número de apenas <xref:System.Data.SqlClient.SqlDependency.Stop%2A> solicitações como <xref:System.Data.SqlClient.SqlDependency.Start%2A> solicitações.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="connectionString" /> é NULL.</exception>
        <exception cref="T:System.InvalidOperationException">O método foi chamado de dentro do SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão de CAS (segurança de acesso do código) <see cref="T:System.Data.SqlClient.SqlClientPermission" /> necessária.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Ocorreu uma exceção do **SqlClient** subjacente.</exception>
      </Docs>
    </Member>
  </Members>
</Type>