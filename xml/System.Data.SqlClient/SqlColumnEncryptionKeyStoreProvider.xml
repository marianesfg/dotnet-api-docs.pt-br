<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fefed8852ae69a20dc2b9c004cea6b6339048952" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46673831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionKeyStoreProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a26d-101">Classe base para todos os provedores de repositório de chaves.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a26d-101">Base class for all key store providers.</span>
      </span>
      <span data-ttu-id="0a26d-102">Um provedor personalizado deve derivar dessa classe e substituir suas funções membro e, em seguida, registrá-la usando SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a26d-102">A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      </span>
      <span data-ttu-id="0a26d-103">Para obter detalhes, consulte [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a26d-103">For details see, [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <related type="ExternalDocumentation" href="http://blogs.msdn.com/b/sqlsecurity/archive/tags/always+encrypted/">
      <span data-ttu-id="0a26d-104">Blog do Always Encrypted</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a26d-104">Always Encrypted Blog</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/mt147923.aspx">
      <span data-ttu-id="0a26d-105">Always Encrypted (desenvolvimento do cliente)</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a26d-105">Always Encrypted (client development)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a26d-106">Inicializa uma nova instância da SqlColumnEncryptionKeyStoreProviderClass.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-106">Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="0a26d-107">O caminho da chave mestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-107">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="0a26d-108">O algoritmo de criptografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-108">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="0a26d-109">A chave de criptografia da coluna criptografada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-109">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a26d-110">Descriptografa o valor criptografado especificado de uma chave de criptografia de coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-110">Decrypts the specified encrypted value of a column encryption key.</span>
          </span>
          <span data-ttu-id="0a26d-111">O valor criptografado deve ser criptografado usando o algoritmo especificado e a chave mestra da coluna com o caminho da chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-111">The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a26d-112">Retorna <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-112">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="0a26d-113">A chave de criptografia da coluna descriptografada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-113">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="0a26d-114">O caminho da chave mestra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-114">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="0a26d-115">O algoritmo de criptografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-115">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="0a26d-116">A chave de criptografia da coluna criptografada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-116">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a26d-117">Criptografa uma chave de criptografia da coluna usando o algoritmo especificado e a chave mestra da coluna com o caminho da chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-117">Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a26d-118">Retorna <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-118">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="0a26d-119">A chave de criptografia da coluna criptografada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-119">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="abstract member SignColumnMasterKeyMetadata : string * bool -&gt; byte[]&#xA;override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="0a26d-120">O caminho da chave mestra da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-120">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="0a26d-121">
            <see langword="true" /> para indicar que a chave mestra de coluna dá suporte a cálculos de enclave; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-121">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a26d-122">Quando implementada em uma classe derivada, assina digitalmente os metadados da chave mestra da coluna, com a chave mestra da coluna referenciada pelo parâmetro <paramref name="masterKeyPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-122">When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.</span>
          </span>
          <span data-ttu-id="0a26d-123">Os valores de entrada usados para gerar a assinatura devem ser os valores especificados dos parâmetros <paramref name="masterKeyPath" /> e <paramref name="allowEnclaveComputations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-123">The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a26d-124">A assinatura de metadados da chave mestra da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-124">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a26d-125">Para garantir que o <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> método não interrompe aplicativos que dependem de uma API antiga, ele gerará um <xref:System.NotImplementedException> exceção por padrão.</span><span class="sxs-lookup"><span data-stu-id="0a26d-125">To ensure that the <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method doesn't break applications that rely on an old API, it throws a <xref:System.NotImplementedException> exception by default.</span></span>  
  
 <span data-ttu-id="0a26d-126">O <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> método será usado por ferramentas de cliente para geram chaves mestras de coluna (CMK) para os clientes.</span><span class="sxs-lookup"><span data-stu-id="0a26d-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method will be used by client tools that generate Column Master Keys (CMK) for customers.</span></span> <span data-ttu-id="0a26d-127"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> deve ser implementada por provedores de repositório de chaves correspondentes que deseja usar enclaves com [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span><span class="sxs-lookup"><span data-stu-id="0a26d-127"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> must be implemented by the corresponding key store providers that wish to use enclaves with [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0a26d-128">Em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-128">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool&#xA;override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="0a26d-129">O caminho da chave mestra da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-129">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="0a26d-130">Indica se a chave mestra da coluna dá suporte a cálculos de enclave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-130">Indicates whether the column master key supports enclave computations.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="0a26d-131">A assinatura de metadados da chave mestra da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-131">The signature of the column master key metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a26d-132">Quando implementado em uma classe derivada, esse método deve verificar se a assinatura especificada é válida para a chave mestra da coluna com o caminho da chave especificado e o comportamento de enclave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-132">When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior.</span>
          </span>
          <span data-ttu-id="0a26d-133">A implementação padrão gera NotImplementedException.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-133">The default implementation throws NotImplementedException.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a26d-134">Quando implementado em uma classe derivada, o método deve retornar true se a assinatura especificada for válida ou false se a assinatura especificada não for válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-134">When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid.</span>
          </span>
          <span data-ttu-id="0a26d-135">A implementação padrão gera NotImplementedException.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a26d-135">The default implementation throws NotImplementedException.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>