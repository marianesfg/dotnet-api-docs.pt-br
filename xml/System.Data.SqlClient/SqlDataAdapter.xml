<Type Name="SqlDataAdapter" FullName="System.Data.SqlClient.SqlDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1726d52926b1d27b1e8f07b0470e982a2eb73063" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type SqlDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um conjunto de comandos de dados e uma conexão de banco de dados que são usados para preencher o <see cref="T:System.Data.DataSet" /> e atualizar o banco de dados do SQL Server. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.SqlClient.SqlDataAdapter>, atua como uma ponte entre um <xref:System.Data.DataSet> e o SQL Server para recuperar e salvar dados. O <xref:System.Data.SqlClient.SqlDataAdapter> fornece essa ponte mapeando <xref:System.Data.Common.DbDataAdapter.Fill%2A>, que altera os dados a <xref:System.Data.DataSet> para corresponder aos dados na fonte de dados, e <xref:System.Data.Common.DbDataAdapter.Update%2A>, que altera os dados na fonte de dados para corresponder aos dados no <xref:System.Data.DataSet>, usando o instruções Transact-SQL apropriadas em relação à fonte de dados. A atualização é executada em uma base por linha. Para cada linha inserida, excluída e modificada, o <xref:System.Data.Common.DbDataAdapter.Update%2A> método determina o tipo de alteração que foi executada nele (`Insert`, `Update`, ou `Delete`). Dependendo do tipo de alteração, o `Insert`, `Update`, ou `Delete` modelo de comando executa para propagar a linha modificada para a fonte de dados. Quando o <xref:System.Data.SqlClient.SqlDataAdapter> preenche um <xref:System.Data.DataSet>, ele cria as tabelas necessárias e as colunas para os dados retornados se eles ainda não existir. No entanto, as informações de chave primária não estão incluídas no esquema criado implicitamente, a menos que o <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> está definida como <xref:System.Data.MissingSchemaAction.AddWithKey>. Você também pode ter o <xref:System.Data.SqlClient.SqlDataAdapter> criar o esquema do <xref:System.Data.DataSet>, incluindo informações de chave primária, antes de preenchê-lo com dados usando `FillSchema`. Para obter mais informações, consulte [adicionando restrições existentes para um conjunto de dados](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
 <xref:System.Data.SqlClient.SqlDataAdapter> é usado em conjunto com <xref:System.Data.SqlClient.SqlConnection> e <xref:System.Data.SqlClient.SqlCommand> para aumentar o desempenho ao se conectar a um banco de dados do SQL Server.  
  
> [!NOTE]
>  Se você estiver usando procedimentos armazenados do SQL Server para editar ou excluir dados usando um `DataAdapter`, não use SET NOCOUNT ON na definição do procedimento armazenado. Isso faz com que a contagem retornada de linhas afetadas seja zero, o que o `DataAdapter` interpreta como um conflito de simultaneidade. Nesse caso, será gerada uma <xref:System.Data.DBConcurrencyException>.  
  
 O <xref:System.Data.SqlClient.SqlDataAdapter> também inclui o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DataAdapter.TableMappings%2A> propriedades para facilitar o carregamento e a atualização de dados.  
  
 Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter> é criado, a leitura/gravação propriedades são definidas como valores iniciais. Para obter uma lista desses valores, consulte o <xref:System.Data.SqlClient.SqlDataAdapter> construtor.  
  
 O <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, e <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> modelos genéricos que são preenchidos automaticamente com valores individuais de cada linha modificada pelo mecanismo de parâmetros.  
  
 Para cada coluna que propagam à fonte de dados em <xref:System.Data.Common.DbDataAdapter.Update%2A>, deve ser adicionado a um parâmetro para o `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`. O <xref:System.Data.Common.DbParameter.SourceColumn%2A> propriedade o <xref:System.Data.Common.DbParameter> objeto deve ser definido como o nome da coluna. Essa configuração indica que o valor do parâmetro não for definido manualmente, mas é obtido da coluna particular na linha processada no momento.  
  
> [!NOTE]
>  Um <xref:System.InvalidOperationException> ocorrerá se o <xref:System.Data.Common.DbDataAdapter.Fill%2A> método é chamado e a tabela contém um tipo definido pelo usuário que não está disponível no computador cliente. Para obter mais informações, consulte [criando e tipos de Using User-Defined](http://go.microsoft.com/fwlink/?LinkId=139492) nos Manuais Online do SQL Server.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, e <xref:System.Data.SqlClient.SqlConnection> para selecionar registros de um banco de dados e popular um <xref:System.Data.DataSet> com as linhas selecionadas. O preenchimento <xref:System.Data.DataSet> , em seguida, é retornado. Para fazer isso, o método é passado um inicializado <xref:System.Data.DataSet>, uma cadeia de caracteres de conexão e uma cadeia de caracteres de consulta que é uma instrução SELECT Transact-SQL.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter> é criado, os seguintes propriedades são definidas para os seguintes valores iniciais de leitura/gravação.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::Data::SqlClient::SqlCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">Um <see cref="T:System.Data.SqlClient.SqlCommand" /> que é uma instrução SELECT Transact-SQL ou um procedimento armazenado e é definido como a propriedade <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> do <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> com o <see cref="T:System.Data.SqlClient.SqlCommand" /> especificado como a propriedade <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa implementação do <xref:System.Data.SqlClient.SqlDataAdapter> construtor define o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propriedade para o valor especificado no `selectCommand` parâmetro.  
  
 Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter> é criado, os seguintes propriedades são definidas para os seguintes valores iniciais de leitura/gravação.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.  
  
 Quando <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> (ou qualquer uma das outras propriedades de comando) é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, o <xref:System.Data.SqlClient.SqlCommand> não for clonado. O <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.SqlClient.SqlConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::Data::SqlClient::SqlConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Um <see cref="T:System.String" /> que é uma instrução SELECT Transact-SQL ou um procedimento armazenado a ser usado pela propriedade <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> do <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <param name="selectConnection">Um <see cref="T:System.Data.SqlClient.SqlConnection" /> que representa a conexão. Se a cadeia de conexão não usar <see langword="Integrated Security = true" />, você poderá usar <see cref="T:System.Data.SqlClient.SqlCredential" /> para passar a ID de usuário e a senha com mais segurança do que especificando a ID de usuário e a senha como texto na cadeia de conexão.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> com um <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> e um objeto <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa implementação do <xref:System.Data.SqlClient.SqlDataAdapter> abre e fecha uma <xref:System.Data.SqlClient.SqlConnection> se ainda não estiver aberto. Isso pode ser útil em um aplicativo que deve chamar o <xref:System.Data.Common.DbDataAdapter.Fill%2A> método para dois ou mais <xref:System.Data.SqlClient.SqlDataAdapter> objetos. Se o <xref:System.Data.SqlClient.SqlConnection> estiver já aberto, você deve chamar explicitamente **fechar** ou **Dispose** para fechá-la.  
  
 Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter> é criado, os seguintes propriedades são definidas para os seguintes valores iniciais de leitura/gravação.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Você pode alterar o valor de cada uma dessas propriedades por meio de uma chamada separada para a propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDataAdapter : string * string -&gt; System.Data.SqlClient.SqlDataAdapter" Usage="new System.Data.SqlClient.SqlDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Um <see cref="T:System.String" /> que é uma instrução SELECT Transact-SQL ou um procedimento armazenado a ser usado pela propriedade <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> do <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <param name="selectConnectionString">A cadeia de conexão. Se a cadeia de conexão não usar <see langword="Integrated Security = true" />, você poderá usar <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> e <see cref="T:System.Data.SqlClient.SqlCredential" /> para passar a ID de usuário e a senha com mais segurança do que especificando a ID de usuário e a senha como texto na cadeia de conexão.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> com um <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> e uma cadeia de conexão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga do <xref:System.Data.SqlClient.SqlDataAdapter> construtor usa o `selectCommandText` para definir o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propriedade. O <xref:System.Data.SqlClient.SqlDataAdapter> irá criar e manter a conexão criada com o `selectConnectionString` parâmetro.  
  
 Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter> é criado, os seguintes propriedades são definidas para os seguintes valores iniciais de leitura/gravação.  
  
|Propriedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="sqlDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberSignature Language="F#" Value="override this.ClearBatch : unit -&gt; unit" Usage="sqlDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="sqlDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="sqlDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ DeleteCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma instrução Transact-SQL ou um procedimento armazenado para excluir registros na fonte de dados.</summary>
        <value>Um <see cref="T:System.Data.SqlClient.SqlCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para excluir registros no banco de dados que correspondem às linhas excluídas no <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante a <xref:System.Data.Common.DbDataAdapter.Update%2A>, se essa propriedade não está definida e informações de chave primária estão presentes no <xref:System.Data.DataSet>, o <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> pode ser gerada automaticamente se você definir o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propriedade e use o <xref:System.Data.SqlClient.SqlCommandBuilder>. Em seguida, os outros comandos que você não defina são gerados pelo <xref:System.Data.SqlClient.SqlCommandBuilder>. Esta lógica de geração requer que as informações da coluna principal estejam presente no <xref:System.Data.DataSet>. Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, o <xref:System.Data.SqlClient.SqlCommand> não for clonado. O <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 Para cada coluna que propagam à fonte de dados em <xref:System.Data.Common.DbDataAdapter.Update%2A>, deve ser adicionado a um parâmetro para o `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`. O `SourceColumn` propriedade do parâmetro deve ser definida como o nome da coluna. Isso indica que o valor do parâmetro não for definido manualmente, mas é obtido da coluna particular na linha processada no momento.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, e <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propriedades. Ele pressupõe que você já tiver criado um <xref:System.Data.SqlClient.SqlConnection> objeto.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="override this.ExecuteBatch : unit -&gt; int" Usage="sqlDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="sqlDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="sqlDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberSignature Language="F#" Value="override this.InitializeBatching : unit -&gt; unit" Usage="sqlDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ InsertCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma instrução Transact-SQL ou um procedimento armazenado para inserir novos registros na fonte de dados.</summary>
        <value>Um <see cref="T:System.Data.SqlClient.SqlCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para inserir registros no banco de dados que correspondem às novas linhas no <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante a <xref:System.Data.Common.DbDataAdapter.Update%2A>, se essa propriedade não está definida e informações de chave primária estão presentes no <xref:System.Data.DataSet>, o <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> pode ser gerada automaticamente se você definir o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propriedade e use o <xref:System.Data.SqlClient.SqlCommandBuilder>. Em seguida, os outros comandos que você não defina são gerados pelo <xref:System.Data.SqlClient.SqlCommandBuilder>. Esta lógica de geração requer que as informações da coluna principal estejam presente no <xref:System.Data.DataSet>. Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, o <xref:System.Data.SqlClient.SqlCommand> não for clonado. O <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 Se a execução desse comando retorna linhas, essas linhas podem ser adicionadas para o <xref:System.Data.DataSet> dependendo de como você definir o **UpdatedRowSource** propriedade o <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 Para cada coluna que propagam à fonte de dados em <xref:System.Data.Common.DbDataAdapter.Update%2A>, um parâmetro deve ser adicionado ao `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`. O `SourceColumn` propriedade do parâmetro deve ser definida como o nome da coluna. Isso indica que o valor do parâmetro não for definido manualmente, mas é obtido da coluna particular na linha processada no momento.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, e <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propriedades. Ele pressupõe que você já tiver criado um <xref:System.Data.SqlClient.SqlConnection> objeto.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="sqlDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="sqlDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As SqlRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.SqlClient.SqlRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.SqlClient.SqlRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, após um comando ser executado na fonte de dados. Realiza-se a tentativa de atualização, para que o evento seja acionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao usar <xref:System.Data.Common.DbDataAdapter.Update%2A>, há dois eventos que ocorrem por linha de dados atualizada. A ordem de execução é o seguinte:  
  
1.  Os valores no <xref:System.Data.DataRow> são movidos para os valores de parâmetro.  
  
2.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> é gerado.  
  
3.  O comando é executado.  
  
4.  Se o comando é definido como `FirstReturnedRecord`, a primeira retornou o resultado é colocado no <xref:System.Data.DataRow>.  
  
5.  Se não houver parâmetros de saída, eles são colocados no <xref:System.Data.DataRow>.  
  
6.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> é gerado.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> é chamado.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> e <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> eventos.  
  
 O <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> evento retorna essa saída:  
  
 argumentos do evento: (command=System.Data.SqlClient.SqlCommand commandType = 2 status = 0)  
  
 O <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> evento retorna essa saída:  
  
 argumentos do evento: (command=System.Data.SqlClient.SqlCommand commandType = recordsAffected 2 = 1 row=System.Data.DataRow[37] status = 0)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As SqlRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.SqlClient.SqlRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.SqlClient.SqlRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, após um comando ser executado com relação à fonte de dados. Realiza-se a tentativa de atualização, para que o evento seja acionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao usar <xref:System.Data.Common.DbDataAdapter.Update%2A>, há dois eventos que ocorrem por linha de dados atualizada. A ordem de execução é o seguinte:  
  
1.  Os valores no <xref:System.Data.DataRow> são movidos para os valores de parâmetro.  
  
2.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> é gerado.  
  
3.  O comando é executado.  
  
4.  Se o comando é definido como `FirstReturnedRecord`, a primeira retornou o resultado é colocado no <xref:System.Data.DataRow>.  
  
5.  Se não houver parâmetros de saída, eles são colocados no <xref:System.Data.DataRow>.  
  
6.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> é gerado.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> é chamado.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> e <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> eventos.  
  
 O <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> evento retorna essa saída:  
  
 argumentos do evento: (command=System.Data.SqlClient.SqlCommand commandType = 2 status = 0)  
  
 O <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> evento retorna essa saída:  
  
 argumentos do evento: (command=System.Data.SqlClient.SqlCommand commandType = recordsAffected 2 = 1 row=System.Data.DataRow[37] status = 0)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ SelectCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma instrução Transact-SQL ou um procedimento armazenado usado para selecionar registros na fonte de dados.</summary>
        <value>Um <see cref="T:System.Data.SqlClient.SqlCommand" /> usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> para selecionar registros do banco de dados para posicionamento no <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, o <xref:System.Data.SqlClient.SqlCommand> não for clonado. O <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 Se o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> não retornar linhas, não há tabelas são adicionadas ao <xref:System.Data.DataSet>, e nenhuma exceção é gerada.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, e <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propriedades. Ele pressupõe que você já tiver criado um <xref:System.Data.SqlClient.SqlConnection> objeto.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>Um <see cref="T:System.Data.IDbCommand" /> que é usado durante a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para excluir registros na fonte de dados para linhas excluídas no conjunto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.SqlClient.SqlDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>Um <see cref="T:System.Data.IDbCommand" /> que é usado durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para inserir registros na fonte de dados das novas linhas no conjunto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.SqlClient.SqlDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>Um <see cref="T:System.Data.IDbCommand" /> que é usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para selecionar registros da fonte de dados para posicionamento no conjunto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.SqlClient.SqlDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>Um <see cref="T:System.Data.IDbCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros na fonte de dados em linhas modificadas no conjunto de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.SqlClient.SqlDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Um novo objeto que é uma cópia da instância atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.SqlClient.SqlDataAdapter> é convertida em uma interface de <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberSignature Language="F#" Value="override this.TerminateBatching : unit -&gt; unit" Usage="sqlDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de linhas que são processadas em cada viagem de ida e volta ao servidor.</summary>
        <value>O número de linhas a serem processadas por lote.  
  
 <list type="table"><listheader><term> O valor é </term><description> efeito </description></listheader><item><term> 0 </term><description> não há nenhum limite no tamanho do lote.  </description></item><item><term> 1 </term><description> desabilita a atualização em lotes.  </description></item><item><term> &gt;1 </term><description> alterações são enviadas com o uso de lotes <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> operações por vez.  </description></item></list>  Ao definir isso como um valor diferente de 1, todos os comandos associados a <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> precisam ter sua * * UpdatedRowSource * * a propriedade definida como <see langword="None" /> ou <see langword="OutputParameters" />. Do contrário, uma exceção será gerada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtém ou define um valor que habilita ou desabilita o suporte ao processamento de lote e especifica o número de comandos que podem ser executadas em um lote.  
  
 Use o <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> propriedade para atualizar uma fonte de dados com as alterações de um <xref:System.Data.DataSet>. Isso pode aumentar o desempenho do aplicativo, reduzindo o número de ida e volta ao servidor.  
  
 Executar um lote extremamente grande pode diminuir o desempenho. Portanto, você deve testar para verificar qual é a melhor configuração de tamanho de lote antes de implementar seu aplicativo.  
  
 Um <xref:System.ArgumentOutOfRangeException> é gerada se o valor é definido como um número menor que zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ UpdateCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.SqlClient.SqlCommand with get, set" Usage="System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma instrução Transact-SQL ou um procedimento armazenado usado para atualizar registros na fonte de dados.</summary>
        <value>Um <see cref="T:System.Data.SqlClient.SqlCommand" /> usado durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para atualizar registros no banco de dados que correspondem a linhas modificadas no <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante a <xref:System.Data.Common.DbDataAdapter.Update%2A>, se essa propriedade não está definida e informações de chave primária estão presentes no <xref:System.Data.DataSet>, o <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> pode ser gerada automaticamente se você definir o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> propriedade e use o <xref:System.Data.SqlClient.SqlCommandBuilder>. Em seguida, os outros comandos que você não defina são gerados pelo <xref:System.Data.SqlClient.SqlCommandBuilder>. Esta lógica de geração requer que as informações da coluna principal estejam presente no <xref:System.Data.DataSet>. Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Quando <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, o <xref:System.Data.SqlClient.SqlCommand> não for clonado. O <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
> [!NOTE]
>  Se a execução desse comando retorna linhas, as linhas atualizadas podem ser mescladas com a <xref:System.Data.DataSet> dependendo de como você definir o **UpdatedRowSource** propriedade o <xref:System.Data.SqlClient.SqlCommand> objeto.  
  
 Para cada coluna que propagam à fonte de dados em <xref:System.Data.Common.DbDataAdapter.Update%2A>, um parâmetro deve ser adicionado ao `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`.  
  
 O `SourceColumn` propriedade do parâmetro deve ser definida como o nome da coluna. Isso indica que o valor do parâmetro não é definido manualmente, mas obtido da coluna na linha processada no momento determinada.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.SqlClient.SqlDataAdapter> e define o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> e <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> propriedades. Ele pressupõe que você já tiver criado um <xref:System.Data.SqlClient.SqlConnection> objeto.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>