<Type Name="SqlColumnEncryptionCspProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCspProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="330a936fc757259e516e65c64f6db3bbb74a24b5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlColumnEncryptionCspProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCspProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCspProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCspProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCspProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="680d6-101">The CMK Store provider implementation for using  Microsoft CAPI based Cryptographic Service Providers (CSP) with [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      <span class="sxs-lookup">
        <span data-stu-id="680d6-101">The CMK Store provider implementation for using  Microsoft CAPI based Cryptographic Service Providers (CSP) with [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680d6-102">Permite armazenar chaves de chave mestra de coluna sempre criptografado em um repositório, como um hardware de segurança HSM (módulo), que oferece suporte ao Microsoft CAPI com base em provedores de serviços de criptografia (CSP).</span><span class="sxs-lookup"><span data-stu-id="680d6-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft CAPI based Cryptographic Service Providers (CSP).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCspProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCspProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="680d6-103">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-103">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="680d6-104">The master key path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-104">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="680d6-105">The encryption algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-105">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="680d6-106">The encrypted column encryption key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-106">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="680d6-107">Decrypts the given encrypted value using an asymmetric key specified by the key path and algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-107">Decrypts the given encrypted value using an asymmetric key specified by the key path and algorithm.</span>
          </span>
          <span data-ttu-id="680d6-108">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-108">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span>
          </span>
          <span data-ttu-id="680d6-109">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-109">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="680d6-110">The decrypted column encryption key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-110">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="680d6-111">The master key path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-111">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="680d6-112">The encryption algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-112">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="680d6-113">The encrypted column encryption key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-113">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="680d6-114">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-114">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span>
          </span>
          <span data-ttu-id="680d6-115">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-115">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CSP provider.</span>
          </span>
          <span data-ttu-id="680d6-116">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-116">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="680d6-117">The encrypted column encryption key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-117">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="680d6-118">A constant string for the provider name 'MSSQL_CSP_PROVIDER'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-118">A constant string for the provider name 'MSSQL_CSP_PROVIDER'.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="680d6-119">The column master key path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-119">The column master key path.</span>
          </span>
          <span data-ttu-id="680d6-120">The path format is specific to a key store provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-120">The path format is specific to a key store provider.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="680d6-121">
            <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-121">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="680d6-122">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-122">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="680d6-123">The signature of the column master key metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-123">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="680d6-124">O <xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> método deve ser implementado pelo provedor de repositório de chaves correspondentes.</span><span class="sxs-lookup"><span data-stu-id="680d6-124">The <xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="680d6-125"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> use uma chave assimétrica identificada por um caminho de chave e assinar os metadados de masterkey consiste em `masterKeyPath`, `allowEnclaveComputations`e providerName.</span><span class="sxs-lookup"><span data-stu-id="680d6-125"><xref:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="680d6-126">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-126">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="680d6-127">The complete path of an asymmetric key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-127">The complete path of an asymmetric key.</span>
          </span>
          <span data-ttu-id="680d6-128">The path format is specific to a key store provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-128">The path format is specific to a key store provider.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="680d6-129">A boolean that indicates if this key can be sent to the trusted enclave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-129">A boolean that indicates if this key can be sent to the trusted enclave.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="680d6-130">Master key metadata signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-130">Master key metadata signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="680d6-131">This function must be implemented by the corresponding Key Store providers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-131">This function must be implemented by the corresponding Key Store providers.</span>
          </span>
          <span data-ttu-id="680d6-132">This function should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-132">This function should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="680d6-133">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="680d6-133">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>