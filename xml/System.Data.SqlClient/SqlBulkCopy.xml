<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopy.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac568f7a233c4b460fccda736cf959d4ee579b49a05.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68f7a233c4b460fccda736cf959d4ee579b49a05</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Lets you efficiently bulk load a SQL Server table with data from another source.</source>
          <target state="translated">Permite um carregamento em massa eficiente de uma tabela do SQL Server com os dados de outra fonte.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Microsoft SQL Server includes a popular command-prompt utility named <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> for moving data from one table to another, whether on a single server or between servers.</source>
          <target state="translated">Microsoft SQL Server inclui um utilitário de prompt de comando popular chamado <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> para mover dados de uma tabela para outra, seja em um único servidor ou entre servidores.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class lets you write managed code solutions that provide similar functionality.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> classe permite que você escreva soluções de código gerenciado que fornecem funcionalidade semelhante.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>There are other ways to load data into a SQL Server table (INSERT statements, for example), but <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> offers a significant performance advantage over them.</source>
          <target state="translated">Existem outras maneiras para carregar dados em uma tabela do SQL Server (instruções de inserção, por exemplo), mas <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> oferece uma vantagem de desempenho significativa sobre eles.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class can be used to write data only to SQL Server tables.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> classe pode ser usada para gravar dados somente em tabelas do SQL Server.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance or read with a <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">No entanto, a fonte de dados não é limitada ao SQL Server; qualquer fonte de dados pode ser usado, desde que os dados podem ser carregados para um <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instância ou de leitura com um <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> will fail when bulk loading a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column of type <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> falhará ao carregamento em massa um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> coluna do tipo <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> em um SQL Server a coluna cujo tipo é um dos tipos de data/hora adicionado no SQL Server 2008.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The following console application demonstrates how to load data using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados usando o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">Neste exemplo, um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> é usado para copiar dados do <bpt id="p1">**</bpt>Production. Product<ept id="p1">**</ept> tabela o <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> banco de dados para uma tabela semelhante no mesmo banco de dados.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy operation.</source>
          <target state="translated">A instância de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> já aberta que será usada para executar a operação de cópia em massa.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Se a cadeia de conexão não usar <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, você poderá usar <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para passar a ID de usuário e a senha com mais segurança do que especificando a ID de usuário e a senha como texto na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the specified open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> usando a instância de <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> aberta especificada.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Because the connection is already open when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is initialized, the connection remains open after the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">Porque a conexão já está aberto quando o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instância é inicializada, a conexão permanece aberta após a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instância está fechada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the <ph id="ph1">`connection`</ph> argument is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Se o <ph id="ph1">`connection`</ph> argumento for nulo, uma <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados usando uma conexão que já está aberto em massa.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">Neste exemplo, um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> é usado para copiar dados do <bpt id="p1">**</bpt>Production. Product<ept id="p1">**</ept> tabela o <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> banco de dados para uma tabela semelhante no mesmo banco de dados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This example is for demonstration purposes only.</source>
          <target state="translated">Este exemplo tem fins apenas demonstrativos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>You would not use <ph id="ph1">`SqlBulkCopy`</ph> to move data from one table to another in the same database in a production application.</source>
          <target state="translated">Você não usaria <ph id="ph1">`SqlBulkCopy`</ph> para mover dados de uma tabela para outra no mesmo banco de dados em um aplicativo de produção.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Observe que a fonte de dados não precisa estar localizado no SQL Server. Você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">A cadeia de caracteres que define a conexão será aberta para uso pela instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Se a cadeia de conexão não usar <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, você poderá usar <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> ou <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> e <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para passar a ID de usuário e a senha com mais segurança do que especificando a ID de usuário e a senha como texto na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">Inicializa e abre uma nova instância de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> com base no <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> fornecido.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The constructor uses the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">O construtor usa o <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> para inicializar uma nova instância da classe <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed at the end of the bulk copy operation.</source>
          <target state="translated">A conexão será fechada automaticamente no final da operação de cópia em massa.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Se <ph id="ph1">`connectionString`</ph> for nulo, uma <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is an empty string, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Se <ph id="ph1">`connectionString`</ph> é uma cadeia de caracteres vazia, um <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The following console application demonstrates how to bulk load data by using a connection specified as a string.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados em massa usando uma conexão especificada como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">A conexão será fechada quando automaticamente o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instância está fechada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, a fonte de dados é lido pela primeira vez em uma tabela do SQL Server para um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">A fonte de dados não precisa estar localizado no SQL Server. Você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">A cadeia de caracteres que define a conexão será aberta para uso pela instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Se a cadeia de conexão não usar <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, você poderá usar <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> ou <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> e <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para passar a ID de usuário e a senha com mais segurança do que especificando a ID de usuário e a senha como texto na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">Uma combinação de valores da enumeração <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> que determina quais linhas de fonte de dados são copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">Inicializa e abre uma nova instância de <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> com base no <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> fornecido.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The constructor uses that <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">O construtor usa <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> para inicializar uma nova instância da classe <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> se comporta de acordo com as opções fornecidas no parâmetro <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>You can obtain detailed information about all the bulk copy options in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> topic.</source>
          <target state="translated">Você pode obter informações detalhadas sobre todas as opções de cópia em massa no <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> tópico.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como executar um carregamento em massa usando uma conexão especificada como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An option is set to use the value in the identity column of the source table when you load the destination table.</source>
          <target state="translated">Uma opção é definida para usar o valor na coluna de identidade da tabela de origem ao carregar a tabela de destino.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, a fonte de dados é lido pela primeira vez em uma tabela do SQL Server para um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The source table and destination table each include an Identity column.</source>
          <target state="translated">A tabela de origem e a tabela de destino incluem uma coluna de identidade.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>By default, a new value for the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column is generated in the destination table for each row added.</source>
          <target state="translated">Por padrão, um novo valor para o <bpt id="p1">**</bpt>identidade<ept id="p1">**</ept> coluna é gerada na tabela de destino para cada linha adicionada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, an option is set when the connection is opened that forces the bulk load process to use the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> values from the source table instead.</source>
          <target state="translated">Neste exemplo, uma opção é definida quando a conexão é aberta, o que força o processo de carregamento em massa para usar o <bpt id="p1">**</bpt>identidade<ept id="p1">**</ept> em vez disso, os valores da tabela de origem.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>To see how the option changes the way the bulk load works, run the sample with the <bpt id="p1">**</bpt>dbo.BulkCopyDemoMatchingColumns<ept id="p1">**</ept> table empty.</source>
          <target state="translated">Para ver como a opção altera a maneira o funcionamento de carregamento em massa, executar o exemplo com o <bpt id="p1">**</bpt>dbo. BulkCopyDemoMatchingColumns<ept id="p1">**</ept> tabela vazia.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>All rows load from the source.</source>
          <target state="translated">Carregar todas as linhas da origem.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Then run the sample again without emptying the table.</source>
          <target state="translated">Em seguida, execute o exemplo novamente sem esvaziando a tabela.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</source>
          <target state="translated">Uma exceção é gerada e o código grava uma mensagem do console informando que não foram adicionadas linhas devido a violações de restrição de chave primária.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> já aberta que será usada para realizar a cópia em massa.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">Se a cadeia de conexão não usar <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, você poderá usar <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> para passar a ID de usuário e a senha com mais segurança do que especificando a ID de usuário e a senha como texto na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated">Uma combinação de valores da enumeração <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> que determina quais linhas de fonte de dados são copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>An existing <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> instance under which the bulk copy will occur.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> existente na qual a cópia em massa ocorrerá.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the supplied existing open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> usando a instância aberta existente fornecida do <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> se comporta de acordo com as opções fornecidas no parâmetro <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If a non-null <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> is supplied, the copy operations will be performed within that transaction.</source>
          <target state="translated">Se um <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> não nulo for fornecido, as operações de cópia serão executadas nessa transação.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If options include <ph id="ph1">`UseInternalTransaction`</ph> and the <ph id="ph2">`externalTransaction`</ph> argument is not null, an <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> is thrown.</source>
          <target state="translated">Se as opções incluem <ph id="ph1">`UseInternalTransaction`</ph> e <ph id="ph2">`externalTransaction`</ph> argumento não for nulo, uma <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> é gerada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>For examples demonstrating how to use <ph id="ph1">`SqlBulkCopy`</ph> in a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">Para obter exemplos que demonstram como usar <ph id="ph1">`SqlBulkCopy`</ph> em uma transação, consulte <bpt id="p1">[</bpt>transações e operações de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Number of rows in each batch.</source>
          <target state="translated">Número de linhas em cada lote.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>At the end of each batch, the rows in the batch are sent to the server.</source>
          <target state="translated">No final de cada lote, as linhas no lote são enviadas ao servidor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> property, or zero if no value has been set.</source>
          <target state="translated">O valor inteiro da propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph>, ou zero, se nenhum valor foi definido.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>A batch is complete when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows have been processed or there are no more rows to send to the destination data source.</source>
          <target state="translated">Um lote é concluída quando <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> linhas tiverem sido processadas ou não existem mais linhas para enviar para a fonte de dados de destino.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Zero (the default) indicates that each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is a single batch.</source>
          <target state="translated">Zero (o padrão) indica que cada <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operação é um único lote.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance has been declared without the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> option in effect, rows are sent to the server <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows at a time, but no transaction-related action is taken.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instância foi declarada sem a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> opção em vigor, as linhas serão enviadas para o servidor <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> linhas em uma hora, mas nenhuma ação relacionada a transação é executada.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is in effect, each batch of rows is inserted as a separate transaction.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> está em vigor, cada lote de linhas é inserido como uma transação separada.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> property can be set at any time.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> propriedade pode ser definida em qualquer momento.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</source>
          <target state="translated">Se uma cópia em massa já está em andamento, o lote atual é dimensionado de acordo com o tamanho do lote anterior.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Subsequent batches use the new size.</source>
          <target state="translated">Lotes subsequentes usam o novo tamanho.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> is initially zero and changed while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is already in progress, that operation loads the data as a single batch.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> inicialmente é zero e alterados durante um <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operação já está em andamento, a operação carrega os dados como um único lote.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Any subsequent <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operations on the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance use the new <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">Qualquer subsequentes <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operações na mesma <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instância usar o novo <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The following console application demonstrates how to bulk load data in batches of 50 rows.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados em lotes de 50 linhas em massa.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>For an example illustrating how <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> works with a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">Para um exemplo que ilustra como <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> funciona com uma transação, consulte <bpt id="p1">[</bpt>transações e operações de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, a fonte de dados é lido pela primeira vez em uma tabela do SQL Server para um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">A fonte de dados não precisa estar localizado no SQL Server. Você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>Number of seconds for the operation to complete before it times out.</source>
          <target state="translated">Número de segundos para que a operação seja concluída antes de atingir o tempo limite.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> property.</source>
          <target state="translated">O valor inteiro da propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">O padrão é 30 segundos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>A value of 0 indicates no limit; the bulk copy will wait indefinitely.</source>
          <target state="translated">O valor 0 indica que não há limite; a cópia em massa aguardará indefinidamente.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</source>
          <target state="translated">Se a operação terá um tempo limite, a transação não está confirmada e todas as linhas copiadas são removidas da tabela de destino.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como modificar o tempo limite de 60 segundos quando os dados de carregamento em massa.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>In this example, the source data is first read from a <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> table to a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, os dados de origem é primeiro leiam um <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> de tabela para um <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The source data does not have to be located on <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>; you can use any data source that can be read to an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">A fonte de dados não precisa estar localizado em <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>; você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the source and destination tables are in the same <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> instance, it is easier and faster to use a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph><ph id="ph3">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estão no mesmo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> instância, é mais fácil e rápido para usar um <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> <ph id="ph3">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">Fecha a instância <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>After you call a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object, no other operation will succeed.</source>
          <target state="translated">Depois de chamar um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> no <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> do objeto, nenhuma outra operação será bem-sucedida.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> método lançará um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method from the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> to be thrown.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> método do <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> evento faz com que um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> seja gerada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Note that open <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instances are closed implicitly at the end of a <ph id="ph2">`using`</ph> block.</source>
          <target state="translated">Observe que são abertos <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instâncias são fechadas implicitamente no final de um <ph id="ph2">`using`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The following example uses the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to add sales orders and their associated details to two destination tables.</source>
          <target state="translated">O exemplo a seguir usa a mesma <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instância para adicionar os pedidos de vendas e os detalhes associados a duas tabelas de destino.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Because the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</source>
          <target state="translated">Porque o <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> tabelas de ordem de venda forem grandes, o exemplo lê apenas os pedidos feitos por um determinado número de conta e copia em massa esses pedidos e detalhes para as tabelas de destino.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method is used only after both bulk copy operations are complete.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> método é usado somente depois que as duas operações de cópia em massa forem concluídas.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> items.</source>
          <target state="translated">Retorna uma coleção de itens <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Column mappings define the relationships between columns in the data source and columns in the destination.</source>
          <target state="translated">Mapeamentos de coluna definem as relações entre colunas na fonte de dados e colunas no destino.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>A collection of column mappings.</source>
          <target state="translated">Uma coleção de mapeamentos de coluna.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>By default, it is an empty collection.</source>
          <target state="translated">Por padrão, trata-se de uma coleção vazia.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is unnecessary.</source>
          <target state="translated">Se a fonte de dados e a tabela de destino têm o mesmo número de colunas e a posição ordinal de cada coluna na fonte de dados de origem corresponde a posição ordinal da coluna de destino correspondente, o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> coleção é desnecessária.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>However, if the column counts differ, or the ordinal positions are not consistent, you must use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> to make sure that data is copied into the correct columns.</source>
          <target state="translated">No entanto, se as contagens de coluna são diferentes, ou as posições ordinais não são consistentes, você deve usar <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> para certificar-se de que os dados são copiados para as colunas corretas.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</source>
          <target state="translated">Durante a execução de uma operação de cópia em massa, essa coleção pode ser acessada, mas ele não pode ser alterado.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Any attempt to change it will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Qualquer tentativa de alterá-lo lançará um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>Name of the destination table on the server.</source>
          <target state="translated">Nome da tabela de destino no servidor.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The string value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property, or null if none as been supplied.</source>
          <target state="translated">O valor da cadeia de caracteres da propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> ou null se nenhum tiver sido aplicado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> has not been set when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> is called, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> não foi definido quando <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> é chamado, um <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is modified while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is running, the change does not affect the current operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> é modificada enquanto um <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operação está em execução, a alteração não afeta a operação atual.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> value is used the next time a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called.</source>
          <target state="translated">O novo <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> valor é usado na próxima vez que um <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is a three-part name (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> é um nome de três partes (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can qualify the table name with its database and owning schema if you choose.</source>
          <target state="translated">Se preferir, você pode qualificar o nome da tabela com seu banco de dados e o esquema de propriedade.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</source>
          <target state="translated">No entanto, se o nome da tabela usa um caractere de sublinhado ("_") ou outros caracteres especiais, você deve ignorar o nome usando colchetes como em (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>For more information, see "Identifiers" in SQL Server Books Online.</source>
          <target state="translated">Para obter mais informações, consulte 'Identificadores' nos Manuais Online do SQL Server.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can bulk-copy data to a temporary table by using a value such as <ph id="ph1">`tempdb..#table`</ph> or <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> property.</source>
          <target state="translated">Você pode dados de cópia em massa para uma tabela temporária, usando um valor como <ph id="ph1">`tempdb..#table`</ph> ou <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> para o <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados usando uma conexão que já está aberto em massa.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">A tabela de destino é uma tabela no <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> banco de dados.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, a conexão primeiro é usado para ler dados de uma tabela do SQL Server para um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">A fonte de dados não precisa estar localizado no SQL Server. Você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>Enables or disables a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object to stream data from an <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object</source>
          <target state="translated">Habilita ou desabilita um objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> a transmitir dados de um objeto <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object can stream data from an <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object; otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se um objeto <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> puder transmitir dados de um objeto <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>; caso contrário, falso.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> reads from an <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> object using <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, optimizing memory usage by using the <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> streaming capabilities.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> é <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> lê de um <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> objeto usando <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, otimizar o uso de memória usando o <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> recursos de streaming.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When it’s set to false, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class loads all the data returned by the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> object into memory before sending it to <ph id="ph3">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> or SQL Azure.</source>
          <target state="translated">Quando ela estiver definida como false, o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> classe carrega todos os dados retornados pelo <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> objeto na memória antes de enviá-los para <ph id="ph3">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> ou do SQL Azure.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Defines the number of rows to be processed before generating a notification event.</source>
          <target state="translated">Define o número de linhas a serem processadas antes de gerar um evento de notificação.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property, or zero if the property has not been set.</source>
          <target state="translated">O valor inteiro da propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph>, ou zero, se a propriedade não tiver sido definida.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This property is designed for user interface components that illustrate the progress of a bulk copy operation.</source>
          <target state="translated">Essa propriedade foi projetada para os componentes de interface do usuário que ilustram o progresso de uma operação de cópia em massa.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>It indicates the number of rows to be processed before generating a notification event.</source>
          <target state="translated">Indica o número de linhas a serem processadas antes de gerar um evento de notificação.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property can be set at any time, even while a bulk copy operation is underway.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> propriedade pode ser definida a qualquer momento, mesmo quando uma operação de cópia em massa está em andamento.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Changes made during a bulk copy operation take effect after the next notification.</source>
          <target state="translated">As alterações feitas durante uma operação de cópia em massa entram em vigor após a próxima notificação.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The new setting applies to all subsequent operations on the same instance.</source>
          <target state="translated">A nova configuração se aplica a todas as operações subsequentes na mesma instância.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> is set to a number less than zero, an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> é definido como um número menor que zero, uma <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados usando uma conexão que já está aberto em massa.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> propriedade é definida para que o manipulador de eventos é chamado depois que cada 50 linhas copiadas na tabela.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, a conexão primeiro é usado para ler dados de uma tabela do SQL Server para um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Then a second connection is opened to bulk copy the data.</source>
          <target state="translated">Em seguida, uma segunda conexão é aberta para copiar os dados em massa.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Observe que a fonte de dados não precisa estar localizado no SQL Server. Você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Occurs every time that the number of rows specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property have been processed.</source>
          <target state="translated">Ocorre sempre que o número de linhas especificado pela propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> foram processadas.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the settings of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> are independent.</source>
          <target state="translated">Observe que as configurações de <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> são independentes.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Receipt of a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event does not imply that any rows have been sent to the server or committed.</source>
          <target state="translated">Recebimento de uma <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> evento não implica que todas as linhas foram enviadas para o servidor ou confirmadas.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>You cannot call SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) or SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) from this event.</source>
          <target state="translated">Não é possível chamar SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) ou SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) desse evento.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Doing this will cause an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown, and the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object state will not change.</source>
          <target state="translated">Fazer isso fará com que uma <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> que está sendo gerada e o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> não alterará o estado do objeto.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the user wants to cancel the operation from the event, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> can be used.</source>
          <target state="translated">Se o usuário deseja cancelar a operação do evento, o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> pode ser usado.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>(See <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> for examples that use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property.)</source>
          <target state="translated">(Consulte <bpt id="p1">[</bpt>transações e operações de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> exemplos que usam o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> propriedade.)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event.</source>
          <target state="translated">Nenhuma ação, como a atividade de transação, há suporte para a conexão durante a execução da operação de cópia em massa, e é recomendável que você não use a mesma conexão usada durante o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>However, you can open a different connection.</source>
          <target state="translated">No entanto, você pode abrir uma conexão diferente.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados usando uma conexão que já está aberto em massa.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> propriedade é definida para que o manipulador de eventos é chamado depois que cada 50 linhas copiadas na tabela.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">Neste exemplo, a conexão primeiro é usado para ler dados de uma tabela do SQL Server para um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Observe que a fonte de dados não precisa estar localizado no SQL Server. Você pode usar qualquer fonte de dados que pode ser lido para um <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> ou carregados para um <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">Libera todos os recursos usados pela instância atual da classe <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">Chamar <ph id="ph1">`Dispose`</ph> quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> in an unusable state.</source>
          <target state="translated">O <ph id="ph1">`Dispose`</ph> método deixa o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> em um estado inutilizável.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> was occupying.</source>
          <target state="translated">Depois de chamar <ph id="ph1">`Dispose`</ph>, você deve liberar todas as referências para o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> para o coletor de lixo possa recuperar a memória que o <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> estava ocupando.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">Sempre chamar <ph id="ph1">`Dispose`</ph> antes de liberar sua última referência para o <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> do objeto <ph id="ph2">`Finalize`</ph> método.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Copies all rows from a data source to a destination table specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas as linhas da matriz de uma fonte de dados para uma tabela de destino especificada pela propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">Se os conjuntos de resultados ativos múltiplos (MARS) estiver desabilitado, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> torna a conexão ocupada.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">Se o MARS é habilitado, é possível intercalar chamadas para <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> com outros comandos na mesma conexão.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas as linhas da matriz <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> fornecida para uma tabela de destino especificada pela propriedade <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que será copiada para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas as linhas da matriz <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> fornecida para uma tabela de destino especificada pela propriedade <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Enquanto a operação de cópia em massa está em andamento, o destino associado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado servi-lo, e nenhuma outra operação pode ser executada na conexão.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> columns to the destination database table.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> mapas de coleção do <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> colunas à tabela de banco de dados de destino.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> array.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados em massa um <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> matriz.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">A tabela de destino é uma tabela no <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> banco de dados.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time.</source>
          <target state="translated">Neste exemplo, um <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> é criado em tempo de execução.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>A single row is selected from the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to copy to the destination table.</source>
          <target state="translated">Uma única linha é selecionada do <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> para copiar para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas as linhas no <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>All rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> are copied to the destination table except those that have been deleted.</source>
          <target state="translated">Todas as linhas de <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> são copiados para a tabela de destino, exceto aqueles que foram excluídos.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Enquanto a operação de cópia em massa está em andamento, o destino associado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado servi-lo, e nenhuma outra operação pode ser executada na conexão.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> mapas de coleção do <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> colunas à tabela de banco de dados de destino.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The following Console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">O aplicativo de Console a seguir demonstra como carregar dados em massa um <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">A tabela de destino é uma tabela no <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> banco de dados.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and is the source of the <ph id="ph2">`SqlBulkCopy`</ph> operation.</source>
          <target state="translated">Neste exemplo, um <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> é criado em tempo de execução e é a origem de <ph id="ph2">`SqlBulkCopy`</ph> operação.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia todas as linhas no <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The copy operation starts at the next available row in the reader.</source>
          <target state="translated">A operação de cópia é iniciada na linha próxima disponível no leitor.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Most of the time, the reader was just returned by <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> or a similar call, so the next available row is the first row.</source>
          <target state="translated">Na maioria das vezes, o leitor apenas foi retornado por <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> ou uma chamada semelhante, para a próxima linha disponível é a primeira linha.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>To process multiple results, call <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> on the data reader and call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> again.</source>
          <target state="translated">Para processar vários resultados, chame <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> no leitor de dados e chamada <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> novamente.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Note that using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifies the state of the reader.</source>
          <target state="translated">Observe que o uso <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifica o estado do leitor.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The method will call <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> until it returns false, the operation is aborted, or an error occurs.</source>
          <target state="translated">Chame o método <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> até que ela retorna false, a operação é anulada ou ocorrerá um erro.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This means that the data reader will be in a different state, probably at the end of the result set, when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is complete.</source>
          <target state="translated">Isso significa que o leitor de dados será em um estado diferente, provavelmente o final do conjunto de resultados, quando o <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operação for concluída.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Enquanto a operação de cópia em massa está em andamento, o destino associado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado servi-lo, e nenhuma outra operação pode ser executada na conexão.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the data reader columns to the destination database table.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> coleção mapeia dos dados leitor colunas à tabela de banco de dados de destino.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">O aplicativo de console a seguir demonstra como carregar dados em massa um <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">A tabela de destino é uma tabela no <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> banco de dados.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Um valor da enumeração <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Somente as linhas que correspondem ao estado de linha são copiadas para o destino.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Copies only rows that match the supplied row state in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Copia apenas linhas que correspondem ao estado de linha fornecido no <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that are in the states indicated in the <ph id="ph2">`rowState`</ph> argument and have not been deleted are copied to the destination table.</source>
          <target state="translated">Apenas as linhas do <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que estão nos Estados indicados no <ph id="ph2">`rowState`</ph> argumento e não foram excluídos são copiados para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> is specified, any <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> rows will also be copied to the server.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> for especificado, qualquer <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, e <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> linhas também serão copiadas para o servidor.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>No exception will be raised.</source>
          <target state="translated">Nenhuma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">Enquanto a operação de cópia em massa está em andamento, o destino associado <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> está ocupado servi-lo, e nenhuma outra operação pode ser executada na conexão.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> mapas de coleção do <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> colunas à tabela de banco de dados de destino.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The following Console application demonstrates how to bulk load only the rows in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that match a specified state.</source>
          <target state="translated">O Console do seguinte aplicativo demonstra como copiar em massa carregar apenas as linhas em um <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que correspondam a um estado especificado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this case, only unchanged rows are added.</source>
          <target state="translated">Nesse caso, somente as linhas inalteradas são adicionadas.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">A tabela de destino é uma tabela no <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> banco de dados.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and three rows are added to it.</source>
          <target state="translated">Neste exemplo, um <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> é criado em tempo de execução e três linhas são adicionadas a ela.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Before the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is executed, one of the rows is edited.</source>
          <target state="translated">Antes do <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> o método é executado, uma das linhas é editada.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called with a <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argument, so only the two unchanged rows are bulk copied to the destination.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> método for chamado com um <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argumento, portanto, somente as duas linhas inalteradas são copiados em massa para o destino.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">Este exemplo não funcionará a menos que você criou as tabelas de trabalho conforme descrito em <bpt id="p1">[</bpt>configuração de exemplo de cópia em massa<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">Esse código é fornecido para demonstrar a sintaxe para usar <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> somente.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">Se as tabelas de origem e destino estiverem na mesma instância do SQL Server, é mais fácil e rápido para usar um Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> instrução para copiar os dados.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, which copies all rows from a data source to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">Uma versão assíncrona do <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, que copia todas as linhas de uma fonte de dados para uma tabela de destino especificada pela propriedade <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">Se os conjuntos de resultados ativos múltiplos (MARS) estiver desabilitado, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> torna a conexão ocupada.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">Se o MARS é habilitado, é possível intercalar chamadas para <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> com outros comandos na mesma conexão.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The number of rows that are rolled back when one fails depends on several things:</source>
          <target state="translated">O número de linhas que serão revertidas quando uma falha depende de várias maneiras:</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is specified.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> for especificado.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If you have your own transaction.</source>
          <target state="translated">Se você tiver sua própria transação.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>When there is an error while sending data to the server, the current batch (as specified by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) will be rolled back.</source>
          <target state="translated">Quando há um erro ao enviar dados para o servidor, o lote atual (conforme especificado por <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) será revertida.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> não for especificado e você tiver sua própria transação, a transação inteira será revertida (que inclui todos os lotes anteriores).</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> to know how many rows were copied to the server.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> saber quantas linhas foram copiadas para o servidor.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, que copia todas as linhas da matriz <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> fornecida para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que será copiada para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, que copia todas as linhas da matriz <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> fornecida para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, que copia todas as linhas no <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, que copia todas as linhas no <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> foi fechado antes de o <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> preenchido ser retornado.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">A conexão associada do <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> foi fechada antes de o <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> preenchido ser retornado.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">A instrução de cancelamento.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> nesse parâmetro torna esse método equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, que copia todas as linhas da matriz <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> fornecida para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que será copiada para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">A instrução de cancelamento.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> nesse parâmetro torna esse método equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, que copia todas as linhas da matriz <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> fornecida para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">As exceções serão relatadas por meio do objeto de tarefa.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Um valor da enumeração <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Somente as linhas que correspondem ao estado de linha são copiadas para o destino.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, que copia apenas linhas que correspondem ao estado de linha fornecido no <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">A instrução de cancelamento.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> nesse parâmetro torna esse método equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, que copia todas as linhas no <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">As exceções serão relatadas por meio do objeto de tarefa.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">A instrução de cancelamento.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> nesse parâmetro torna esse método equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, que copia todas as linhas no <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">As exceções serão relatadas por meio do objeto de tarefa.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> foi fechado antes de o <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> preenchido ser retornado.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">A conexão associada do <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> foi fechada antes de o <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> preenchido ser retornado.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> cujas linhas serão copiadas para a tabela de destino.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated">Um valor da enumeração <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">Somente as linhas que correspondem ao estado de linha são copiadas para o destino.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">A instrução de cancelamento.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> nesse parâmetro torna esse método equivalente a <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">A versão assíncrona de <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, que copia apenas linhas que correspondem ao estado de linha fornecido no <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> fornecido para uma tabela de destino especificada pela propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> do objeto <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">O token de cancelamento pode ser usado para solicitar que a operação seja abandonada antes de expirar o tempo limite do comando.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">As exceções serão relatadas por meio do objeto de tarefa.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Uma tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a programação assíncrona no <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provedor de dados para <ph id="ph2">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, consulte <bpt id="p1">[</bpt>programação assíncrona<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> várias vezes para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> para a mesma instância antes da conclusão da tarefa.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">A conexão cai ou é fechada durante a execução do <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> foi fechado durante a execução do método.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">Retornado no objeto de tarefa, houve um tempo limite do pool de conexão.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">Retornado no objeto de tarefa, o objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> foi fechado antes da execução do método.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> é especificado na cadeia de conexão.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> that occurred while opening the connection.</source>
          <target state="translated">Retornado no objeto de tarefa, qualquer erro retornado pelo <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> que ocorreu ao abrir a conexão.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>