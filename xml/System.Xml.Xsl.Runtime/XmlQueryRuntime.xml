<Type Name="XmlQueryRuntime" FullName="System.Xml.Xsl.Runtime.XmlQueryRuntime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="468ed7f3c5f76aeb12112bf3cc9d9ea06a1ca8b2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720880" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlQueryRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlQueryRuntime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlQueryRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlQueryRuntime sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlXml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece métodos e propriedades para dar suporte ao processador XSLT.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNewIndex">
      <MemberSignature Language="C#" Value="public void AddNewIndex (System.Xml.XPath.XPathNavigator context, int indexId, System.Xml.Xsl.Runtime.XmlILIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNewIndex(class System.Xml.XPath.XPathNavigator context, int32 indexId, class System.Xml.Xsl.Runtime.XmlILIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.AddNewIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNewIndex (context As XPathNavigator, indexId As Integer, index As XmlILIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNewIndex(System::Xml::XPath::XPathNavigator ^ context, int indexId, System::Xml::Xsl::Runtime::XmlILIndex ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="indexId" Type="System.Int32" />
        <Parameter Name="index" Type="System.Xml.Xsl.Runtime.XmlILIndex" />
      </Parameters>
      <Docs>
        <param name="context">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <param name="indexId">Um valor do tipo <see langword="int" />.</param>
        <param name="index">Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlILIndex" />.</param>
        <summary>Adiciona um índice recém-criado no documento de contexto especificado à coleção de índices existente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeTypeXsltArgument">
      <MemberSignature Language="C#" Value="public object ChangeTypeXsltArgument (int indexType, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChangeTypeXsltArgument(int32 indexType, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Int32,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeTypeXsltArgument (indexType As Integer, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ChangeTypeXsltArgument(int indexType, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexType" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="indexType">Um valor do tipo <see langword="Int32" />.</param>
        <param name="value">Um valor do tipo <see langword="object" />.</param>
        <param name="destinationType">Um valor do tipo <see langword="Type" />.</param>
        <summary>Converte um valor do tipo CLR do parâmetro <paramref name="value" /> em <paramref name="destinationType" /> CLR usando regras de XSLT V1. Converte quaisquer valores de fragmento de árvore de resultados em nós.</summary>
        <returns>Um valor do tipo <see langword="object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeTypeXsltResult">
      <MemberSignature Language="C#" Value="public object ChangeTypeXsltResult (int indexType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChangeTypeXsltResult(int32 indexType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeTypeXsltResult (indexType As Integer, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ChangeTypeXsltResult(int indexType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexType" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="indexType">Um valor do tipo <see langword="int" />.</param>
        <param name="value">Um valor do tipo <see langword="object" />.</param>
        <summary>Converte do tipo CLR do parâmetro <paramref name="value" /> para o tipo CLR padrão pelo qual a geração de linguagem intermediária representa o tipo XML, com base nas regras de conversão do tipo XML.</summary>
        <returns>Um valor do tipo <see langword="object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparePosition">
      <MemberSignature Language="C#" Value="public int ComparePosition (System.Xml.XPath.XPathNavigator navigatorThis, System.Xml.XPath.XPathNavigator navigatorThat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ComparePosition(class System.Xml.XPath.XPathNavigator navigatorThis, class System.Xml.XPath.XPathNavigator navigatorThat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ComparePosition(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComparePosition (navigatorThis As XPathNavigator, navigatorThat As XPathNavigator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ComparePosition(System::Xml::XPath::XPathNavigator ^ navigatorThis, System::Xml::XPath::XPathNavigator ^ navigatorThat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigatorThis" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="navigatorThat" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigatorThis">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <param name="navigatorThat">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <summary>Compara as posições relativas dos dois navegadores.</summary>
        <returns>-1 se <paramref name="navigatorThis" /> estiver antes de <paramref name="navigatorThat" />, 1 se <paramref name="navigatorThis" /> estiver após <paramref name="navigatorThat" />, 0 se ambos os navegadores estiverem posicionados no mesmo nó.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCollation">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XmlCollation CreateCollation (string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Xsl.Runtime.XmlCollation CreateCollation(string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateCollation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCollation (collation As String) As XmlCollation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Xsl::Runtime::XmlCollation ^ CreateCollation(System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XmlCollation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collation">Um valor do tipo <see langword="string" />.</param>
        <summary>Cria um agrupamento de uma cadeia de caracteres.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugGetGlobalNames">
      <MemberSignature Language="C#" Value="public string[] DebugGetGlobalNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] DebugGetGlobalNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalNames" />
      <MemberSignature Language="VB.NET" Value="Public Function DebugGetGlobalNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ DebugGetGlobalNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma matriz que contém os nomes de todas as variáveis e parâmetros globais usados para esta consulta.</summary>
        <returns>Uma matriz de valores <see langword="string" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O formato da matriz retornada é `{namespace}prefix:local-name`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugGetGlobalValue">
      <MemberSignature Language="C#" Value="public System.Collections.IList DebugGetGlobalValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IList DebugGetGlobalValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DebugGetGlobalValue (name As String) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IList ^ DebugGetGlobalValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Um valor do tipo <see langword="string" />.</param>
        <summary>Obtém o valor do valor global que tem o nome especificado.</summary>
        <returns>Uma sequência de instâncias <see cref="T:System.Xml.XPath.XPathItem" /> ou <see langword="null" /> se não houver nenhum valor global com o nome especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugGetXsltValue">
      <MemberSignature Language="C#" Value="public object DebugGetXsltValue (System.Collections.IList seq);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DebugGetXsltValue(class System.Collections.IList seq) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetXsltValue(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Function DebugGetXsltValue (seq As IList) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DebugGetXsltValue(System::Collections::IList ^ seq);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="seq">Uma instância da classe <see cref="T:System.Collections.IList" />.</param>
        <summary>Converte uma sequência para seu tipo apropriado de XSLT.</summary>
        <returns>Um valor do tipo <see langword="object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugSetGlobalValue">
      <MemberSignature Language="C#" Value="public void DebugSetGlobalValue (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DebugSetGlobalValue(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugSetGlobalValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DebugSetGlobalValue (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DebugSetGlobalValue(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Um valor do tipo <see langword="string" />.</param>
        <param name="value">Um valor do tipo <see langword="object" />.</param>
        <summary>Define o valor do valor global que tem o nome especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocOrderDistinct">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xml.XPath.XPathNavigator&gt; DocOrderDistinct (System.Collections.Generic.IList&lt;System.Xml.XPath.XPathNavigator&gt; seq);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathNavigator&gt; DocOrderDistinct(class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathNavigator&gt; seq) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DocOrderDistinct(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
      <MemberSignature Language="VB.NET" Value="Public Function DocOrderDistinct (seq As IList(Of XPathNavigator)) As IList(Of XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xml::XPath::XPathNavigator ^&gt; ^ DocOrderDistinct(System::Collections::Generic::IList&lt;System::Xml::XPath::XPathNavigator ^&gt; ^ seq);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xml.XPath.XPathNavigator&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathNavigator&gt;" />
      </Parameters>
      <Docs>
        <param name="seq">Uma sequência de instâncias <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <summary>Obtém nós classificados distintos da sequência especificada.</summary>
        <returns>Um <see cref="T:System.Collections.IList" /> de <see cref="T:System.Xml.XPath.XPathNavigator" /> objetos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EarlyBoundFunctionExists">
      <MemberSignature Language="C#" Value="public bool EarlyBoundFunctionExists (string name, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EarlyBoundFunctionExists(string name, string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EarlyBoundFunctionExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EarlyBoundFunctionExists (name As String, namespaceUri As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EarlyBoundFunctionExists(System::String ^ name, System::String ^ namespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do método a ser pesquisado.</param>
        <param name="namespaceUri">Identifica o objeto de associação inicial.</param>
        <summary>Determina se o objeto de associação inicial contém um método com o nome especificado.</summary>
        <returns>
          <see langword="true" /> se o objeto de associação inicial identificado por <paramref name="namespaceUri" /> contém um método que corresponde a <paramref name="name" />, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRtfConstruction">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator EndRtfConstruction (out System.Xml.Xsl.Runtime.XmlQueryOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator EndRtfConstruction([out] class System.Xml.Xsl.Runtime.XmlQueryOutput&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndRtfConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRtfConstruction (ByRef output As XmlQueryOutput) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::XPathNavigator ^ EndRtfConstruction([Runtime::InteropServices::Out] System::Xml::Xsl::Runtime::XmlQueryOutput ^ % output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.Xsl.Runtime.XmlQueryOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="output">Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />.</param>
        <summary>Conclui a construção de um RTF.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSequenceConstruction">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; EndSequenceConstruction (out System.Xml.Xsl.Runtime.XmlQueryOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; EndSequenceConstruction([out] class System.Xml.Xsl.Runtime.XmlQueryOutput&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSequenceConstruction (ByRef output As XmlQueryOutput) As IList(Of XPathItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ EndSequenceConstruction([Runtime::InteropServices::Out] System::Xml::Xsl::Runtime::XmlQueryOutput ^ % output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.Xsl.Runtime.XmlQueryOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="output">Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />.</param>
        <summary>Conclui a construção de uma sequência de itens aninhados.</summary>
        <returns>Uma sequência de instâncias da classe <see cref="T:System.Xml.XPath.XPathItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalContext">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XmlQueryContext ExternalContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.Runtime.XmlQueryContext ExternalContext" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.ExternalContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExternalContext As XmlQueryContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::Runtime::XmlQueryContext ^ ExternalContext { System::Xml::Xsl::Runtime::XmlQueryContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XmlQueryContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o objeto que gerencia as informações de contexto de usuário externo, como fontes de dados, parâmetros, objetos de extensão e assim por diante.</summary>
        <value>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlQueryContext" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public bool FindIndex (System.Xml.XPath.XPathNavigator context, int indexId, out System.Xml.Xsl.Runtime.XmlILIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FindIndex(class System.Xml.XPath.XPathNavigator context, int32 indexId, [out] class System.Xml.Xsl.Runtime.XmlILIndex&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.FindIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex@)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (context As XPathNavigator, indexId As Integer, ByRef index As XmlILIndex) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindIndex(System::Xml::XPath::XPathNavigator ^ context, int indexId, [Runtime::InteropServices::Out] System::Xml::Xsl::Runtime::XmlILIndex ^ % index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="indexId" Type="System.Int32" />
        <Parameter Name="index" Type="System.Xml.Xsl.Runtime.XmlILIndex&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">O documento de contexto.</param>
        <param name="indexId">A ID de índice a ser pesquisada.</param>
        <param name="index">O índice retornado.</param>
        <summary>Retorna o índice com a ID especificada se ele já foi criado no documento especificado e retorna <see langword="true" />. Caso contrário, cria um índice novo e vazio e retorna <see langword="false" />.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlILIndex" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateId">
      <MemberSignature Language="C#" Value="public string GenerateId (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateId(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GenerateId(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateId (navigator As XPathNavigator) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateId(System::Xml::XPath::XPathNavigator ^ navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <summary>Gere um identificador de cadeia de caracteres exclusivo para o nó especificado.</summary>
        <returns>Um valor do tipo <see langword="string" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtomizedName">
      <MemberSignature Language="C#" Value="public string GetAtomizedName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAtomizedName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetAtomizedName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAtomizedName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAtomizedName(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <summary>Obtém o nome atomizado no índice especificado na matriz de nomes.</summary>
        <returns>Um valor do tipo <see langword="string" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XmlCollation GetCollation (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Xsl.Runtime.XmlCollation GetCollation(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetCollation(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCollation (index As Integer) As XmlCollation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Xsl::Runtime::XmlCollation ^ GetCollation(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XmlCollation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <summary>Obtém um agrupamento que foi criado estaticamente.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEarlyBoundObject">
      <MemberSignature Language="C#" Value="public object GetEarlyBoundObject (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetEarlyBoundObject(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetEarlyBoundObject(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEarlyBoundObject (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEarlyBoundObject(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <summary>Obtém o objeto de extensão de associação inicial especificado. Se este objeto ainda não existir, cria uma instância usando o <see cref="T:System.Reflection.ConstructorInfo" /> correspondente.</summary>
        <returns>Um valor do tipo <see langword="object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalValue">
      <MemberSignature Language="C#" Value="public object GetGlobalValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetGlobalValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetGlobalValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetGlobalValue(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <summary>Retorna o valor que está associado à variável global especificada. Se o valor ainda não foi calculado, calcula-o e o armazena na variável global.</summary>
        <returns>O valor que está associado à variável global especificada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameFilter">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XmlNavigatorFilter GetNameFilter (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Xsl.Runtime.XmlNavigatorFilter GetNameFilter(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetNameFilter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameFilter (index As Integer) As XmlNavigatorFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Xsl::Runtime::XmlNavigatorFilter ^ GetNameFilter(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XmlNavigatorFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <summary>Obtém o filtro de nome no índice especificado na matriz de filtros.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFilter">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XmlNavigatorFilter GetTypeFilter (System.Xml.XPath.XPathNodeType nodeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Xsl.Runtime.XmlNavigatorFilter GetTypeFilter(valuetype System.Xml.XPath.XPathNodeType nodeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetTypeFilter(System.Xml.XPath.XPathNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeFilter (nodeType As XPathNodeType) As XmlNavigatorFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Xsl::Runtime::XmlNavigatorFilter ^ GetTypeFilter(System::Xml::XPath::XPathNodeType nodeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XmlNavigatorFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="nodeType">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNodeType" />.</param>
        <summary>Obtém um filtro que filtra nós do tipo especificado.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalComputed">
      <MemberSignature Language="C#" Value="public bool IsGlobalComputed (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsGlobalComputed(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsGlobalComputed(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsGlobalComputed (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsGlobalComputed(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <summary>Retorna true se o valor global especificado já foi calculado.</summary>
        <returns>
          <see langword="true" /> se o valor foi calculado, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsQNameEqual">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compara as propriedades <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" /> e <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> de duas instâncias <see cref="T:System.Xml.XPath.XPathNavigator" /> para verificar se são iguais.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsQNameEqual">
      <MemberSignature Language="C#" Value="public bool IsQNameEqual (System.Xml.XPath.XPathNavigator n1, System.Xml.XPath.XPathNavigator n2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsQNameEqual(class System.Xml.XPath.XPathNavigator n1, class System.Xml.XPath.XPathNavigator n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsQNameEqual (n1 As XPathNavigator, n2 As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsQNameEqual(System::Xml::XPath::XPathNavigator ^ n1, System::Xml::XPath::XPathNavigator ^ n2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n1" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="n2" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="n1">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <param name="n2">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <summary>Compara as propriedades <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" /> e <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> de duas instâncias <see cref="T:System.Xml.XPath.XPathNavigator" /> para verificar se são iguais.</summary>
        <returns>
          <see langword="true" /> se os nomes forem iguais, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQNameEqual">
      <MemberSignature Language="C#" Value="public bool IsQNameEqual (System.Xml.XPath.XPathNavigator navigator, int indexLocalName, int indexNamespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsQNameEqual(class System.Xml.XPath.XPathNavigator navigator, int32 indexLocalName, int32 indexNamespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsQNameEqual (navigator As XPathNavigator, indexLocalName As Integer, indexNamespaceUri As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsQNameEqual(System::Xml::XPath::XPathNavigator ^ navigator, int indexLocalName, int indexNamespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="indexLocalName" Type="System.Int32" />
        <Parameter Name="indexNamespaceUri" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="navigator">Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <param name="indexLocalName">Um valor do tipo <see langword="int" />.</param>
        <param name="indexNamespaceUri">Um valor do tipo <see langword="int" />.</param>
        <summary>Determina se as propriedades <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" /> e <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> do <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado são iguais aos nomes especificados nos parâmetros.</summary>
        <returns>
          <see langword="true" /> se os nomes forem iguais, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual%2A> chamadas de método de <xref:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetAtomizedName%2A> método para obter o nome local e o URI de namespace com base no `indexLocalName` e `indexNamespaceUri`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MatchesXmlType">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna <see langword="true" /> se o tipo do item especificado corresponde ao tipo XML especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MatchesXmlType">
      <MemberSignature Language="C#" Value="public bool MatchesXmlType (System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; seq, int indexType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesXmlType(class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; seq, int32 indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesXmlType (seq As IList(Of XPathItem), indexType As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesXmlType(System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ seq, int indexType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
        <Parameter Name="indexType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="seq">Um <see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.Xml.XPath.XPathItem" /> objetos.</param>
        <param name="indexType">O índice.</param>
        <summary>Retorna <see langword="true" /> se o tipo de cada item na sequência especificada corresponde ao tipo XML que identifica o índice especificado.</summary>
        <returns>
          <see langword="true" /> se o tipo de <paramref name="seq" /> é um subtipo do <paramref name="indexType" />, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesXmlType">
      <MemberSignature Language="C#" Value="public bool MatchesXmlType (System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; seq, System.Xml.Schema.XmlTypeCode code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesXmlType(class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; seq, valuetype System.Xml.Schema.XmlTypeCode code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesXmlType (seq As IList(Of XPathItem), code As XmlTypeCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesXmlType(System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ seq, System::Xml::Schema::XmlTypeCode code);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
        <Parameter Name="code" Type="System.Xml.Schema.XmlTypeCode" />
      </Parameters>
      <Docs>
        <param name="seq">Uma sequência de instâncias <see cref="T:System.Xml.XPath.XPathItem" />.</param>
        <param name="code">Um tipo singleton.</param>
        <summary>Determina se o tipo da sequência especificada é um subtipo do tipo singleton especificado.</summary>
        <returns>
          <see langword="true" /> se o tipo de <paramref name="seq" /> é um subtipo do tipo especificado por <paramref name="code" />, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesXmlType">
      <MemberSignature Language="C#" Value="public bool MatchesXmlType (System.Xml.XPath.XPathItem item, int indexType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesXmlType(class System.Xml.XPath.XPathItem item, int32 indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesXmlType (item As XPathItem, indexType As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesXmlType(System::Xml::XPath::XPathItem ^ item, int indexType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Xml.XPath.XPathItem" />
        <Parameter Name="indexType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">Uma instância da classe <see cref="T:System.Xml.XPath.XPathItem" />.</param>
        <param name="indexType">O índice na matriz de tipos XML.</param>
        <summary>Retorna <see langword="true" /> se o tipo do objeto <see cref="T:System.Xml.XPath.XPathItem" /> especificado corresponde ao tipo XML especificado.</summary>
        <returns>
          <see langword="true" /> se o tipo do <see cref="T:System.Xml.XPath.XPathItem" /> especificado corresponde ao tipo XML especificado, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesXmlType">
      <MemberSignature Language="C#" Value="public bool MatchesXmlType (System.Xml.XPath.XPathItem item, System.Xml.Schema.XmlTypeCode code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MatchesXmlType(class System.Xml.XPath.XPathItem item, valuetype System.Xml.Schema.XmlTypeCode code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesXmlType (item As XPathItem, code As XmlTypeCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesXmlType(System::Xml::XPath::XPathItem ^ item, System::Xml::Schema::XmlTypeCode code);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Xml.XPath.XPathItem" />
        <Parameter Name="code" Type="System.Xml.Schema.XmlTypeCode" />
      </Parameters>
      <Docs>
        <param name="item">Uma instância da classe <see cref="T:System.Xml.XPath.XPathItem" />.</param>
        <param name="code">Uma instância da classe <see cref="T:System.Xml.Schema.XmlTypeCode" />.</param>
        <summary>Retorna <see langword="true" /> se o tipo do objeto <see cref="T:System.Xml.XPath.XPathItem" /> é um subtipo de um tipo identificado pelo <see cref="T:System.Xml.Schema.XmlTypeCode" /> especificado.</summary>
        <returns>Retorna <see langword="true" /> se o tipo do objeto <see cref="T:System.Xml.XPath.XPathItem" /> é um subtipo de um tipo identificado pelo <see cref="T:System.Xml.Schema.XmlTypeCode" /> especificado, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna a tabela de nomes usada para atomizar todos os nomes usados pela consulta.</summary>
        <value>Uma instância da classe <see cref="T:System.Xml.XmlNameTable" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentNodeChanged">
      <MemberSignature Language="C#" Value="public static int OnCurrentNodeChanged (System.Xml.XPath.XPathNavigator currentNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 OnCurrentNodeChanged(class System.Xml.XPath.XPathNavigator currentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.OnCurrentNodeChanged(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OnCurrentNodeChanged (currentNode As XPathNavigator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int OnCurrentNodeChanged(System::Xml::XPath::XPathNavigator ^ currentNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentNode" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="currentNode">
          O objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que identifica o nó.</param>
        <summary>Usado para a depuração no Visual Studio. Chamado depois que o nó atual foi alterado.</summary>
        <returns>Um inteiro que indica o status da alteração. Usado apenas para testes internos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XmlQueryOutput Output { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.Runtime.XmlQueryOutput Output" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.Output" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Output As XmlQueryOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::Runtime::XmlQueryOutput ^ Output { System::Xml::Xsl::Runtime::XmlQueryOutput ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XmlQueryOutput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto de gravador de saída.</summary>
        <value>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseTagName">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Analisa o nome da marca especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseTagName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName ParseTagName (string tagName, int indexPrefixMappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName ParseTagName(string tagName, int32 indexPrefixMappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseTagName (tagName As String, indexPrefixMappings As Integer) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ ParseTagName(System::String ^ tagName, int indexPrefixMappings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="indexPrefixMappings" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tagName">O nome da marcação.</param>
        <param name="indexPrefixMappings">O índice.</param>
        <summary>Analisa o nome da marca especificado e resolve o prefixo resultante. Se o prefixo não pode ser resolvido, um erro é gerado.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseTagName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName ParseTagName (string tagName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName ParseTagName(string tagName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseTagName (tagName As String, ns As String) As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ ParseTagName(System::String ^ tagName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">O nome da marcação.</param>
        <param name="ns">O namespace.</param>
        <summary>Analisa o nome da marca especificado. Retorna um <see cref="T:System.Xml.XmlQualifiedName" /> composto pelo nome do local analisado e o namespace especificado.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public void SendMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SendMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendMessage(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Um valor do tipo <see langword="string" />.</param>
        <summary>Relata as informações de execução de consulta para o manipulador de eventos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalValue">
      <MemberSignature Language="C#" Value="public void SetGlobalValue (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGlobalValue(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SetGlobalValue(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGlobalValue (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGlobalValue(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Um valor do tipo <see langword="int" />.</param>
        <param name="value">Um valor do tipo <see langword="object" />.</param>
        <summary>Retorna o valor que está associado à variável ou ao parâmetro global especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRtfConstruction">
      <MemberSignature Language="C#" Value="public void StartRtfConstruction (string baseUri, out System.Xml.Xsl.Runtime.XmlQueryOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRtfConstruction(string baseUri, [out] class System.Xml.Xsl.Runtime.XmlQueryOutput&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartRtfConstruction(System.String,System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRtfConstruction (baseUri As String, ByRef output As XmlQueryOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartRtfConstruction(System::String ^ baseUri, [Runtime::InteropServices::Out] System::Xml::Xsl::Runtime::XmlQueryOutput ^ % output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="output" Type="System.Xml.Xsl.Runtime.XmlQueryOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="baseUri">Um valor do tipo <see langword="string" />.</param>
        <param name="output">Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />.</param>
        <summary>Começa criando um RTF e retorna um novo objeto <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> que será usado para criar esse RTF.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSequenceConstruction">
      <MemberSignature Language="C#" Value="public void StartSequenceConstruction (out System.Xml.Xsl.Runtime.XmlQueryOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSequenceConstruction([out] class System.Xml.Xsl.Runtime.XmlQueryOutput&amp; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSequenceConstruction (ByRef output As XmlQueryOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSequenceConstruction([Runtime::InteropServices::Out] System::Xml::Xsl::Runtime::XmlQueryOutput ^ % output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.Xsl.Runtime.XmlQueryOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="output">Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />.</param>
        <summary>Começa a construção de uma sequência de itens aninhados. Retorna um novo <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> que será usado para construir essa nova sequência.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRtfConstruction">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator TextRtfConstruction (string text, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.XPathNavigator TextRtfConstruction(string text, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.TextRtfConstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextRtfConstruction (text As String, baseUri As String) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::XPathNavigator ^ TextRtfConstruction(System::String ^ text, System::String ^ baseUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Um valor do tipo <see langword="string" />.</param>
        <param name="baseUri">Um valor do tipo <see langword="string" />.</param>
        <summary>Constrói um novo <see cref="T:System.Xml.XPath.XPathNavigator" /> do texto especificado.</summary>
        <returns>Uma instância da classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public void ThrowException (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ThrowException(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ThrowException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ThrowException (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ThrowException(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Um valor do tipo <see langword="string" />.</param>
        <summary>Gera uma exceção de XML que contém o texto de mensagem especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XsltFunctions">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.Runtime.XsltLibrary XsltFunctions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.Runtime.XsltLibrary XsltFunctions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.XsltFunctions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XsltFunctions As XsltLibrary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::Runtime::XsltLibrary ^ XsltFunctions { System::Xml::Xsl::Runtime::XsltLibrary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.Runtime.XsltLibrary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o objeto que gerencia o estado. O objeto de estado é necessário para implementar várias funções XSLT.</summary>
        <value>Uma instância da classe <see cref="T:System.Xml.Xsl.Runtime.XsltLibrary" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>