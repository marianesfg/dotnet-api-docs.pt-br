<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea7eac1c22b77b4d07c38fbcd6bb71394bfa527e" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56372844" /></Metadata><TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e2db6-101">Escuta conexões de clientes de rede TCP.</span><span class="sxs-lookup"><span data-stu-id="e2db6-101">Listens for connections from TCP network clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-102">O <xref:System.Net.Sockets.TcpListener> classe fornece métodos simples que escutar e aceitam solicitações de conexão de entrada ao bloqueio de modo síncrono.</span><span class="sxs-lookup"><span data-stu-id="e2db6-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="e2db6-103">Você pode usar tanto uma <xref:System.Net.Sockets.TcpClient> ou um <xref:System.Net.Sockets.Socket> para se conectar com um <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="e2db6-104">Criar uma <xref:System.Net.Sockets.TcpListener> usando um <xref:System.Net.IPEndPoint>, um endereço IP Local e o número da porta ou apenas um número de porta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="e2db6-105">Especifique <xref:System.Net.IPAddress.Any> para o endereço IP local e 0 para o número da porta local se você quiser que o provedor de serviço subjacente atribui esses valores para você.</span><span class="sxs-lookup"><span data-stu-id="e2db6-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="e2db6-106">Se você optar por fazer isso, você pode usar o <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriedade para identificar informações atribuídas, após o soquete foi conectado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="e2db6-107">Use o <xref:System.Net.Sockets.TcpListener.Start%2A> método para começar a escutar solicitações de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="e2db6-108"><xref:System.Net.Sockets.TcpListener.Start%2A> conexões de entrada colocará em fila até que você chamar o <xref:System.Net.Sockets.TcpListener.Stop%2A> método ou ele colocou em fila <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="e2db6-109">Use um <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> ou <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> para efetuar pull de uma conexão de fila de solicitação de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="e2db6-110">Esses dois métodos serão bloqueada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-110">These two methods will block.</span></span> <span data-ttu-id="e2db6-111">Se você quiser evitar o bloqueio, você pode usar o <xref:System.Net.Sockets.TcpListener.Pending%2A> método primeiro para determinar se as solicitações de conexão estão disponíveis na fila.</span><span class="sxs-lookup"><span data-stu-id="e2db6-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="e2db6-112">Chame o <xref:System.Net.Sockets.TcpListener.Stop%2A> método para fechar o <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-113">O <xref:System.Net.Sockets.TcpListener.Stop%2A> método não fecha todas as conexões aceitas.</span><span class="sxs-lookup"><span data-stu-id="e2db6-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="e2db6-114">Você é responsável por fechar esses separadamente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-115">O exemplo de código a seguir cria um <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="e2db6-116">Consulte <xref:System.Net.Sockets.TcpClient> para obter um exemplo de cliente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="e2db6-117">Para estabelecer uma conexão de saída ou aceitar uma solicitação de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-117">to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2db6-118">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="e2db6-119">A porta na qual escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-119">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="e2db6-120">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" /> que escuta na porta especificada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-121">Esse construtor é obsoleto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-121">This constructor is obsolete.</span></span> <span data-ttu-id="e2db6-122">Use o <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> ou <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> construtores.</span><span class="sxs-lookup"><span data-stu-id="e2db6-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="e2db6-123">Este construtor permite que você especifique o número da porta na qual escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="e2db6-124">Com esse construtor, o provedor de serviço subjacente atribui o endereço de rede mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="e2db6-125">Se você não se importam qual porta local é usada, você pode especificar 0 para o número da porta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="e2db6-126">Nesse caso, o provedor de serviço atribuirá um número de portas efêmeras disponíveis.</span><span class="sxs-lookup"><span data-stu-id="e2db6-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="e2db6-127">Se você usar essa abordagem, você pode descobrir qual número de porta e endereço de rede local foi atribuído usando o <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e2db6-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="e2db6-128">Chamar o <xref:System.Net.Sockets.TcpListener.Start%2A> método para começar a escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-129">O exemplo de código a seguir cria um <xref:System.Net.Sockets.TcpListener> usando um número de porta local.</span><span class="sxs-lookup"><span data-stu-id="e2db6-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2db6-130"><paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-130"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="e2db6-131">Um <see cref="T:System.Net.IPEndPoint" /> que representa o ponto de extremidade local ao qual o ouvinte <see cref="T:System.Net.Sockets.Socket" /> será associado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="e2db6-132">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" /> com o ponto de extremidade local especificado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-133">Este construtor permite que você especifique o endereço IP local e tentativas de número da porta na qual escutar da conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="e2db6-134">Antes de usar esse construtor, você deve criar um <xref:System.Net.IPEndPoint> usando o local IP endereço e porta número desejado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="e2db6-135">Passe essa <xref:System.Net.IPEndPoint> para o construtor como o `localEP` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="e2db6-136">Se você não se importa com qual endereço local é atribuído, você pode criar uma <xref:System.Net.IPEndPoint> usando <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> como o parâmetro de endereço e o serviço subjacente provedor atribuirá o endereço de rede mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="e2db6-137">Isso pode ajudar a simplificar seu aplicativo se você tiver vários adaptadores de rede.</span><span class="sxs-lookup"><span data-stu-id="e2db6-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="e2db6-138">Se você não se importam qual porta local é usada, você pode criar um <xref:System.Net.IPEndPoint> usar 0 como o número da porta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="e2db6-139">Nesse caso, o provedor de serviço atribuirá um número de portas efêmeras disponíveis.</span><span class="sxs-lookup"><span data-stu-id="e2db6-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="e2db6-140">Se você usar essa abordagem, você pode descobrir qual número de porta e endereço de rede local foi atribuído usando o <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e2db6-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="e2db6-141">Chamar o <xref:System.Net.Sockets.TcpListener.Start%2A> método para começar a escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-142">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-143">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-144">O exemplo de código a seguir cria uma instância da <xref:System.Net.Sockets.TcpListener> classe usando o ponto de extremidade local.</span><span class="sxs-lookup"><span data-stu-id="e2db6-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2db6-145"><paramref name="localEP" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-145"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr"><span data-ttu-id="e2db6-146">Um <see cref="T:System.Net.IPAddress" /> que representa o endereço IP local.</span><span class="sxs-lookup"><span data-stu-id="e2db6-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span></span></param>
        <param name="port"><span data-ttu-id="e2db6-147">A porta na qual escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-147">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="e2db6-148">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.TcpListener" /> que escuta tentativas de conexões de entrada no endereço IP local e no número da porta especificados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-149">Este construtor permite que você especifique o endereço IP local e tentativas de número da porta na qual escutar da conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="e2db6-150">Antes de chamar esse construtor primeiro você deve criar um <xref:System.Net.IPAddress> usando o endereço do local desejado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="e2db6-151">Passe essa <xref:System.Net.IPAddress> para o construtor como o `localaddr` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="e2db6-152">Se você não se importa com qual endereço local é atribuído, especifique <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> para o `localaddr` parâmetro e o provedor de serviço subjacente atribuirá o endereço de rede mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="e2db6-153">Isso pode ajudar a simplificar seu aplicativo se você tiver vários adaptadores de rede.</span><span class="sxs-lookup"><span data-stu-id="e2db6-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="e2db6-154">Se você não se importam qual porta local é usada, você pode especificar 0 para o número da porta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="e2db6-155">Nesse caso, o provedor de serviço atribuirá um número de porta disponível entre 1024 e 5000.</span><span class="sxs-lookup"><span data-stu-id="e2db6-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="e2db6-156">Se você usar essa abordagem, você pode descobrir qual número de porta e endereço de rede local foi atribuído usando o <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e2db6-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="e2db6-157">Chamar o <xref:System.Net.Sockets.TcpListener.Start%2A> método para começar a escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-158">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-159">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-160">O exemplo de código a seguir cria uma instância da <xref:System.Net.Sockets.TcpListener> classe usando um número de porta e endereço IP local.</span><span class="sxs-lookup"><span data-stu-id="e2db6-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2db6-161"><paramref name="localaddr" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-161"><paramref name="localaddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2db6-162"><paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-162"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-163">Aceita uma solicitação de conexão pendente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-163">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="e2db6-164">Um <see cref="T:System.Net.Sockets.Socket" /> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> é um método de bloqueio que retorna um <xref:System.Net.Sockets.Socket> que você pode usar para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="e2db6-166">Se você quiser evitar o bloqueio, use o <xref:System.Net.Sockets.TcpListener.Pending%2A> método para determinar se as solicitações de conexão estão disponíveis na fila de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="e2db6-167">O <xref:System.Net.Sockets.Socket> retornado é inicializada com o número de porta e endereço IP do host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="e2db6-168">Você pode usar qualquer um dos <xref:System.Net.Sockets.Socket.Send%2A> e <xref:System.Net.Sockets.Socket.Receive%2A> métodos disponíveis no <xref:System.Net.Sockets.Socket> classe para se comunicar com o host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="e2db6-169">Quando tiver concluído usando o <xref:System.Net.Sockets.Socket>, certifique-se de chamar seu <xref:System.Net.Sockets.Socket.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="e2db6-170">Se seu aplicativo é relativamente simple, considere usar o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método em vez de <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="e2db6-171"><xref:System.Net.Sockets.TcpClient> fornece métodos simples para enviar e receber dados em uma rede ao bloqueio de modo síncrono.</span><span class="sxs-lookup"><span data-stu-id="e2db6-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-172">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-173">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-174">No exemplo de código a seguir, o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método é usado para retornar um <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="e2db6-175">Isso <xref:System.Net.Sockets.Socket> é usado para se comunicar com o cliente conectado recentemente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-176">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-177">Aceita uma solicitação de conexão pendente como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-177">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e2db6-178">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-178">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e2db6-179">A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna um <see cref="T:System.Net.Sockets.Socket" /> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-179">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-180">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-180">This operation will not block.</span></span> <span data-ttu-id="e2db6-181">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluído depois que a conexão de soquete foi aceita.</span><span class="sxs-lookup"><span data-stu-id="e2db6-181">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="e2db6-182">O <xref:System.Net.Sockets.Socket> retornados em <xref:System.Threading.Tasks.Task%601> é inicializada com o número de porta e endereço IP do host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-182">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="e2db6-183">Você pode usar qualquer um dos <xref:System.Net.Sockets.Socket.Send%2A> e <xref:System.Net.Sockets.Socket.Receive%2A> métodos disponíveis no <xref:System.Net.Sockets.Socket> classe para se comunicar com o host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-183">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="e2db6-184">Quando tiver concluído usando o <xref:System.Net.Sockets.Socket>, certifique-se de chamar seu <xref:System.Net.Sockets.Socket.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-184">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="e2db6-185">Se seu aplicativo é relativamente simple, considere usar o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método em vez de <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-185">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="e2db6-186"><xref:System.Net.Sockets.TcpClient> fornece métodos simples para enviar e receber dados em uma rede ao bloqueio de modo síncrono.</span><span class="sxs-lookup"><span data-stu-id="e2db6-186"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-187">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-187">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-188">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-188">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-189">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-189">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-190">Aceita uma solicitação de conexão pendente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-190">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="e2db6-191">Um <see cref="T:System.Net.Sockets.TcpClient" /> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-191">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-192"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> é um método de bloqueio que retorna um <xref:System.Net.Sockets.TcpClient> que você pode usar para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-192"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="e2db6-193">Use o <xref:System.Net.Sockets.TcpListener.Pending%2A> método para determinar se as solicitações de conexão estão disponíveis na fila de conexão de entrada, se você quiser evitar o bloqueio.</span><span class="sxs-lookup"><span data-stu-id="e2db6-193">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="e2db6-194">Use o <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> método para obter subjacente <xref:System.Net.Sockets.NetworkStream> de retornado <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-194">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="e2db6-195">O <xref:System.Net.Sockets.NetworkStream> fornecerá métodos para envio e recebimento com o host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-195">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="e2db6-196">Quando terminar com o <xref:System.Net.Sockets.TcpClient>, certifique-se de chamar seu <xref:System.Net.Sockets.TcpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-196">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="e2db6-197">Se você quiser maior flexibilidade do que um <xref:System.Net.Sockets.TcpClient> ofertas, considere o uso de <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-197">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-198">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-198">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-199">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-199">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-200">No exemplo de código a seguir, o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método é usado para retornar um <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-200">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="e2db6-201">Isso <xref:System.Net.Sockets.TcpClient> é usado para se comunicar com o cliente conectado recentemente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-201">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-202">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-202">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-203">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="e2db6-203">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="e2db6-204">Quando tiver obtido esse código, você poderá consultar a documentação de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de erro da API da versão 2 do Windows Sockets</see> para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-204">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-205">Aceita uma solicitação de conexão pendente como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-205">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e2db6-206">O objeto de tarefa que representa a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-206">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="e2db6-207">A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna um <see cref="T:System.Net.Sockets.TcpClient" /> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-207">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-208">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-208">This operation will not block.</span></span> <span data-ttu-id="e2db6-209">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluído depois que a conexão TCP foi aceita.</span><span class="sxs-lookup"><span data-stu-id="e2db6-209">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="e2db6-210">Use o <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> método para obter subjacente <xref:System.Net.Sockets.NetworkStream> de retornado <xref:System.Net.Sockets.TcpClient> no <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-210">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="e2db6-211">O <xref:System.Net.Sockets.NetworkStream> fornecerá métodos para envio e recebimento com o host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-211">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="e2db6-212">Quando terminar com o <xref:System.Net.Sockets.TcpClient>, certifique-se de chamar seu <xref:System.Net.Sockets.TcpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-212">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="e2db6-213">Se você quiser maior flexibilidade do que um <xref:System.Net.Sockets.TcpClient> ofertas, considere o uso <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> ou <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-213">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-214">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-214">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-215">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-215">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-216">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-216">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-217">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="e2db6-217">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="e2db6-218">Quando tiver obtido esse código, você poderá consultar a documentação de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de erro da API da versão 2 do Windows Sockets</see> para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-218">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2db6-219">Obtém um valor que indica se <see cref="T:System.Net.Sockets.TcpListener" /> está ouvindo ativamente as conexões de cliente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-219">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span></span></summary>
        <value><span data-ttu-id="e2db6-220"><see langword="true" /> se <see cref="T:System.Net.Sockets.TcpListener" /> estiver escutando ativamente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-220"><see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-221">Classes derivadas de <xref:System.Net.Sockets.TcpListener> pode usar essa propriedade para determinar se o <xref:System.Net.Sockets.Socket> está escutando no momento para tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-221">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="e2db6-222">O <xref:System.Net.Sockets.TcpClient.Active%2A> propriedade pode ser usada para evitar redundantes <xref:System.Net.Sockets.TcpListener.Start%2A> tentativas.</span><span class="sxs-lookup"><span data-stu-id="e2db6-222">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="e2db6-223">Um valor booliano que especifica se a passagem de NAT deve ser habilitada ou desabilitada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-223">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="e2db6-224">Habilita ou desabilita a passagem de NAT (Conversão de Endereços de Rede) em uma instância de <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-224">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-225">O <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> método é usado para habilitar ou desabilitar a passagem de NAT para um <xref:System.Net.Sockets.TcpListener> instância.</span><span class="sxs-lookup"><span data-stu-id="e2db6-225">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="e2db6-226">Passagem de NAT pode ser fornecida usando um túnel ISATAP, 6to4 ou Teredo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-226">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="e2db6-227">Quando o `allowed` parâmetro for false, o <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opção de soquete associado é definida como <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-227">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="e2db6-228">Isso desabilita explicitamente a passagem de NAT para um <xref:System.Net.Sockets.TcpListener> instância.</span><span class="sxs-lookup"><span data-stu-id="e2db6-228">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="e2db6-229">Quando o `allowed` parâmetro for true, o <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opção de soquete associado é definida como <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-229">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="e2db6-230">Isso pode permitir que a passagem de NAT para um <xref:System.Net.Sockets.TcpListener> dependendo das regras de firewall em vigor no sistema.</span><span class="sxs-lookup"><span data-stu-id="e2db6-230">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="e2db6-231">O <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> método deve ser chamado antes de chamar o <xref:System.Net.Sockets.TcpListener.Start%2A> método para começar a escutar solicitações de conexão de entrada (antes do soquete está associado).</span><span class="sxs-lookup"><span data-stu-id="e2db6-231">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="e2db6-232">Se <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> método é chamado após o <xref:System.Net.Sockets.TcpListener.Start%2A> método, então um <xref:System.InvalidOperationException> será lançada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-232">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="e2db6-233">Um endereço de Teredo é um endereço IPv6 com o prefixo de 2001::/ / 32.</span><span class="sxs-lookup"><span data-stu-id="e2db6-233">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="e2db6-234">Endereços Teredo podem ser retornados por meio da resolução de nome DNS normal ou enumerados como um endereço IPv6 atribuído a uma interface local.</span><span class="sxs-lookup"><span data-stu-id="e2db6-234">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-235">O método <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> foi chamado após chamar o método <see cref="M:System.Net.Sockets.TcpListener.Start" /></span><span class="sxs-lookup"><span data-stu-id="e2db6-235">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e2db6-236">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e2db6-237">Um objeto definido pelo usuário que contém informações sobre a operação de aceitação.</span><span class="sxs-lookup"><span data-stu-id="e2db6-237">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="e2db6-238">Esse objeto é passado para o delegado <paramref name="callback" /> quando a operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-238">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="e2db6-239">Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-239">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="e2db6-240">Um <see cref="T:System.IAsyncResult" /> que faz referência à criação assíncrona do <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-240">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-241">Assíncrono <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-241">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="e2db6-242">Normalmente, o método é invocado pelo `callback` delegar.</span><span class="sxs-lookup"><span data-stu-id="e2db6-242">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="e2db6-243">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="e2db6-244">Para bloquear até que a operação for concluída, use o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-244">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="e2db6-245">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-246">Você pode chamar o <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propriedade retornada <xref:System.Net.Sockets.Socket> para identificar o número de porta e endereço de rede do host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-246">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-247">Se você receber um <xref:System.Net.Sockets.SocketException>, use o <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriedade para obter o código de erro específico e consulte a documentação de código de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para uma detalhada Descrição do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-247">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-248">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-248">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-249">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-249">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-250">O exemplo de código a seguir demonstra o uso do <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> método para criar e conectar um soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-250">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="e2db6-251">O retorno de chamada delegado chama o <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> método para encerrar a solicitação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-251">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-252">Erro ao tentar acessar o soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-252">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e2db6-253">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-253">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e2db6-254">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-254">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e2db6-255">Um objeto definido pelo usuário que contém informações sobre a operação de aceitação.</span><span class="sxs-lookup"><span data-stu-id="e2db6-255">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="e2db6-256">Esse objeto é passado para o delegado <paramref name="callback" /> quando a operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-256">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="e2db6-257">Inicia uma operação assíncrona para aceitar uma tentativa de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-257">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="e2db6-258">Um <see cref="T:System.IAsyncResult" /> que faz referência à criação assíncrona do <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-258">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-259">Assíncrono <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-259">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="e2db6-260">Normalmente, o método é invocado pelo `callback` delegar.</span><span class="sxs-lookup"><span data-stu-id="e2db6-260">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="e2db6-261">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-261">This method does not block until the operation completes.</span></span> <span data-ttu-id="e2db6-262">Para bloquear até que a operação for concluída, use o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-262">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="e2db6-263">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-263">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-264">Se você receber um <xref:System.Net.Sockets.SocketException>, use o <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriedade para obter o código de erro específico e consulte a documentação de código de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para uma detalhada Descrição do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-264">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-265">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-265">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-266">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-266">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-267">O exemplo de código a seguir demonstra o uso do <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> método para criar e conectar um soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-267">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="e2db6-268">O retorno de chamada delegado chama o <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> método para encerrar a solicitação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-268">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-269">Erro ao tentar acessar o soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-269">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e2db6-270">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-270">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="e2db6-271">A porta na qual escutar tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-271">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="e2db6-272">Cria uma nova instância <see cref="T:System.Net.Sockets.TcpListener" /> para escutar na porta especificada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-272">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></summary>
        <returns><span data-ttu-id="e2db6-273">Uma nova instância <see cref="T:System.Net.Sockets.TcpListener" /> para escutar na porta especificada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-273">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="e2db6-274">Um <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-274">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="e2db6-275">Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo <see cref="T:System.Net.Sockets.Socket" /> para manipular as comunicações com o host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-275">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="e2db6-276">Um <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-276">A <see cref="T:System.Net.Sockets.Socket" />.</span></span>  
  
<span data-ttu-id="e2db6-277">O <see cref="T:System.Net.Sockets.Socket" /> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-277">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-278">Este blocos de método até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-278">This method blocks until the operation is complete.</span></span> <span data-ttu-id="e2db6-279">Para executar essa operação de forma síncrona, use o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-279">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-280">Você pode chamar o <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propriedade retornada <xref:System.Net.Sockets.Socket> para identificar o número de porta e endereço de rede do host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-280">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-281">Se você receber um <xref:System.Net.Sockets.SocketException>, use o <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriedade para obter o código de erro específico e consulte a documentação de código de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para uma detalhada Descrição do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-281">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-282">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-282">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-283">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-283">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-284">O exemplo de código a seguir demonstra o uso do <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> método para criar e conectar um soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-284">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="e2db6-285">O retorno de chamada delegado chama o <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> método para encerrar a solicitação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-285">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e2db6-286">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-286">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2db6-287">O parâmetro <paramref name="asyncResult" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-287">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2db6-288">O parâmetro <paramref name="asyncResult" /> não foi criado por uma chamada para o método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-288">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-289">O método <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> foi chamado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-289">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-290">Erro ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-290">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="e2db6-291">Um <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-291">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="e2db6-292">Aceita de forma assíncrona uma tentativa de conexão de entrada e cria um novo <see cref="T:System.Net.Sockets.TcpClient" /> para manipular as comunicações com o host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-292">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="e2db6-293">Um <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-293">A <see cref="T:System.Net.Sockets.TcpClient" />.</span></span>  
  
<span data-ttu-id="e2db6-294">O <see cref="T:System.Net.Sockets.TcpClient" /> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-294">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-295">Este blocos de método até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="e2db6-295">This method blocks until the operation is complete.</span></span> <span data-ttu-id="e2db6-296">Para executar essa operação de forma síncrona, use o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-296">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-297">Você pode chamar o <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propriedade de soquete subjacente (<xref:System.Net.Sockets.TcpClient.Client%2A>) para identificar o número de porta e endereço de rede do host remoto.</span><span class="sxs-lookup"><span data-stu-id="e2db6-297">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-298">Se você receber um <xref:System.Net.Sockets.SocketException>, use o <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriedade para obter o código de erro específico e consulte a documentação de código de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para uma detalhada Descrição do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-298">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-299">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-299">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-300">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-300">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-301">O exemplo de código a seguir demonstra o uso do <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> método para criar e conectar um soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-301">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="e2db6-302">O retorno de chamada delegado chama o <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> método para encerrar a solicitação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="e2db6-302">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2db6-303">Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.TcpListener" /> permite que apenas um soquete subjacente escute uma porta específica.</span><span class="sxs-lookup"><span data-stu-id="e2db6-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span></span></summary>
        <value><span data-ttu-id="e2db6-304"><see langword="true" /> se o <see cref="T:System.Net.Sockets.TcpListener" /> permitir apenas um <see cref="T:System.Net.Sockets.TcpListener" /> para escutar uma porta específica; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-304"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e2db6-305">.</span><span class="sxs-lookup"><span data-stu-id="e2db6-305">.</span></span> <span data-ttu-id="e2db6-306">O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e posterior e <see langword="false" /> para todas as outras versões.</span><span class="sxs-lookup"><span data-stu-id="e2db6-306">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-307">Por padrão, vários ouvintes podem escutar uma porta específica.</span><span class="sxs-lookup"><span data-stu-id="e2db6-307">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="e2db6-308">No entanto, apenas um os ouvintes pode executar operações no tráfego de rede enviado para a porta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-308">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="e2db6-309">Se mais de um ouvinte tenta se associar a uma porta específica, aquele com o endereço IP mais específico manipula o tráfego de rede enviado a essa porta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-309">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="e2db6-310">Você pode usar o <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> propriedade para impedir que vários ouvintes escutando uma porta específica.</span><span class="sxs-lookup"><span data-stu-id="e2db6-310">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="e2db6-311">Defina essa propriedade antes de chamar <xref:System.Net.Sockets.TcpListener.Start%2A>, ou chamar o <xref:System.Net.Sockets.TcpListener.Stop%2A> método e, em seguida, definir essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e2db6-311">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-312">O exemplo de código a seguir obtém e define o <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e2db6-312">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-313">O <see cref="T:System.Net.Sockets.TcpListener" /> foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-313">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span></span> <span data-ttu-id="e2db6-314">Chame o método <see cref="M:System.Net.Sockets.TcpListener.Stop" /> e defina a propriedade <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-314">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-315">Erro ao tentar acessar o soquete subjacente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-315">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e2db6-316">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-316">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-317">Libera os recursos usados pela classe <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-317">Frees resources used by the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="e2db6-318">O <xref:System.Net.Sockets.TcpListener> classe recursos gratuitos de finalizador associados com o <xref:System.Net.Sockets.TcpListener> instância.</span><span class="sxs-lookup"><span data-stu-id="e2db6-318">The <xref:System.Net.Sockets.TcpListener> class finalizer free resources associated with the <xref:System.Net.Sockets.TcpListener> instance.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2db6-319">Obtém o <see cref="T:System.Net.EndPoint" /> subjacente do <see cref="T:System.Net.Sockets.TcpListener" /> atual.</span><span class="sxs-lookup"><span data-stu-id="e2db6-319">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span></span></summary>
        <value><span data-ttu-id="e2db6-320">O <see cref="T:System.Net.EndPoint" /> ao qual o <see cref="T:System.Net.Sockets.Socket" /> está associado.</span><span class="sxs-lookup"><span data-stu-id="e2db6-320">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-321">Você pode usar o <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propriedade para identificar o número de porta e de interface de rede local que está sendo usado para escutar as solicitações de conexão de cliente, depois que uma conexão de soquete foi feita.</span><span class="sxs-lookup"><span data-stu-id="e2db6-321">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="e2db6-322">Você deve primeiro converter isso <xref:System.Net.EndPoint> para um <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-322">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="e2db6-323">Em seguida, você pode chamar o <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> propriedade para recuperar o endereço IP local e o <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> propriedade para recuperar o número de porta local.</span><span class="sxs-lookup"><span data-stu-id="e2db6-323">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-324">O exemplo de código a seguir exibe o número de porta e endereço IP local no qual o <xref:System.Net.Sockets.TcpListener> está escutando solicitações de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-324">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-325">Determina se há solicitações de conexão pendentes.</span><span class="sxs-lookup"><span data-stu-id="e2db6-325">Determines if there are pending connection requests.</span></span></summary>
        <returns><span data-ttu-id="e2db6-326"><see langword="true" /> se houver conexões pendentes; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-326"><see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-327">Esse método sem bloqueio determina se há quaisquer solicitações de conexão pendente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-327">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="e2db6-328">Porque o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> e <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> métodos bloqueiam a execução até que o <xref:System.Net.Sockets.TcpListener.Start%2A> método colocou em fila uma solicitação de conexão de entrada, o <xref:System.Net.Sockets.TcpListener.Pending%2A> método pode ser usado para determinar se as conexões estão disponíveis antes de tentar aceitá-los.</span><span class="sxs-lookup"><span data-stu-id="e2db6-328">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-329">O seguinte código de exemplo verifica o <xref:System.Net.Sockets.TcpListener.Pending%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-329">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="e2db6-330">Se uma solicitação de conexão está esperando para ser aceita, em seguida, uma chamada para o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método é feito.</span><span class="sxs-lookup"><span data-stu-id="e2db6-330">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-331">O ouvinte não foi iniciado com uma chamada para <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-331">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2db6-332">Obtém o <see cref="T:System.Net.Sockets.Socket" /> da rede subjacente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-332">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="e2db6-333">O <see cref="T:System.Net.Sockets.Socket" /> subjacente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-333">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-334"><xref:System.Net.Sockets.TcpListener> cria um <xref:System.Net.Sockets.Socket> para escutar as solicitações de conexão de cliente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-334"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="e2db6-335">Classes derivadas de <xref:System.Net.Sockets.TcpListener> pode usar essa propriedade para obter isso <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-335">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="e2db6-336">Usar subjacente <xref:System.Net.Sockets.Socket> retornado pela <xref:System.Net.Sockets.TcpListener.Server%2A> propriedade se você precisar acessar além do que o que <xref:System.Net.Sockets.TcpListener> fornece.</span><span class="sxs-lookup"><span data-stu-id="e2db6-336">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-337">O <xref:System.Net.Sockets.TcpListener.Server%2A> propriedade retorna apenas o <xref:System.Net.Sockets.Socket> usado para escutar as solicitações de conexão de cliente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-337">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="e2db6-338">Use o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método para aceitar uma solicitação de conexão pendente e obter um <xref:System.Net.Sockets.Socket> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-338">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="e2db6-339">Você também pode usar o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método para aceitar uma solicitação de conexão pendente e obter um <xref:System.Net.Sockets.TcpClient> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-339">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-340">O exemplo de código a seguir demonstra o uso do <xref:System.Net.Sockets.TcpListener.Server%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e2db6-340">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="e2db6-341">Subjacente <xref:System.Net.Sockets.Socket> é recuperado e o <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> opção estiver configurada para atingir o tempo limite após 10 segundos, se os dados ainda permanecem no buffer de rede depois que a conexão é fechada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-341">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2db6-342">Começa a escutar as solicitações de conexão recebidas.</span><span class="sxs-lookup"><span data-stu-id="e2db6-342">Starts listening for incoming connection requests.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-343">Começa a escutar as solicitações de conexão recebidas.</span><span class="sxs-lookup"><span data-stu-id="e2db6-343">Starts listening for incoming connection requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-344">O <xref:System.Net.Sockets.TcpListener.Start%2A> método inicializa subjacente <xref:System.Net.Sockets.Socket>, associa a um ponto de extremidade local e escuta de tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-344">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="e2db6-345">Se uma solicitação de conexão é recebida, o <xref:System.Net.Sockets.TcpListener.Start%2A> método enfileirar a solicitação e continuar a escutar solicitações adicionais até que você chame o <xref:System.Net.Sockets.TcpListener.Stop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-345">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="e2db6-346">Se <xref:System.Net.Sockets.TcpListener> recebe uma solicitação de conexão depois que ele já colocou em fila o número máximo de conexões, ele vai gerar um <xref:System.Net.Sockets.SocketException> no cliente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-346">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="e2db6-347">Para remover uma conexão de fila de conexão de entrada, use o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método ou o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-347">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="e2db6-348">O <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método removerá uma conexão da fila e retornar um <xref:System.Net.Sockets.TcpClient> que você pode usar para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-348">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="e2db6-349">O <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método será retornado um <xref:System.Net.Sockets.Socket> que você pode usar para fazer o mesmo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-349">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="e2db6-350">Se seu aplicativo requer apenas a e/s síncrona, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-350">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="e2db6-351">Para obter mais controle comportamental, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-351">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="e2db6-352">Ambos os métodos bloqueiam até que uma solicitação de conexão está disponível na fila.</span><span class="sxs-lookup"><span data-stu-id="e2db6-352">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="e2db6-353">Use o <xref:System.Net.Sockets.TcpListener.Stop%2A> método para fechar o <xref:System.Net.Sockets.TcpListener> e interromper a escuta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-353">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="e2db6-354">Você é responsável por fechar as conexões aceitas separadamente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-354">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-355">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-355">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-356">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-357">O exemplo de código a seguir demonstra como <xref:System.Net.Sockets.TcpListener.Start%2A> é usado para escutar tentativas de conexão de cliente de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-357">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-358">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="e2db6-358">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="e2db6-359">Quando tiver obtido esse código, você poderá consultar a documentação de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de erro da API da versão 2 do Windows Sockets</see> para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-359">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog"><span data-ttu-id="e2db6-360">O comprimento máximo da fila de conexões pendentes.</span><span class="sxs-lookup"><span data-stu-id="e2db6-360">The maximum length of the pending connections queue.</span></span></param>
        <summary><span data-ttu-id="e2db6-361">Começa a detectar solicitações de conexão recebidas com um número máximo conexões pendentes.</span><span class="sxs-lookup"><span data-stu-id="e2db6-361">Starts listening for incoming connection requests with a maximum number of pending connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-362">O <xref:System.Net.Sockets.TcpListener.Start%2A> método inicializa subjacente <xref:System.Net.Sockets.Socket>, associa a um ponto de extremidade local e escuta de tentativas de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-362">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="e2db6-363">Se uma solicitação de conexão é recebida, <xref:System.Net.Sockets.TcpListener.Start%2A> irá enfileirar a solicitação e continuar a escutar solicitações adicionais até que você chame o <xref:System.Net.Sockets.TcpListener.Stop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-363">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="e2db6-364">Se <xref:System.Net.Sockets.TcpListener> recebe uma solicitação de conexão depois que já colocou em fila o número máximo de conexões que ele vai gerar um <xref:System.Net.Sockets.SocketException> no cliente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-364">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="e2db6-365">Para remover uma conexão de fila de conexão de entrada, use o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método ou o <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-365">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="e2db6-366">O <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método removerá uma conexão da fila e retornar um <xref:System.Net.Sockets.TcpClient> que você pode usar para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="e2db6-366">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="e2db6-367">O <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método será retornado um <xref:System.Net.Sockets.Socket> que você pode usar para fazer o mesmo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-367">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="e2db6-368">Se seu aplicativo requer apenas a e/s síncrona, use o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-368">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="e2db6-369">Para obter mais controle comportamental, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e2db6-369">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="e2db6-370">Ambos os métodos bloqueiam até que uma solicitação de conexão está disponível na fila.</span><span class="sxs-lookup"><span data-stu-id="e2db6-370">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="e2db6-371">Use o <xref:System.Net.Sockets.TcpListener.Stop%2A> método para fechar o <xref:System.Net.Sockets.TcpListener> e interromper a escuta.</span><span class="sxs-lookup"><span data-stu-id="e2db6-371">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="e2db6-372">Você é responsável por fechar as conexões aceitas separadamente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-372">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-373">Use o <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriedade para obter o código de erro específico e consulte a documentação de código de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-373">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-374">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-374">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-375">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-375">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-376">O exemplo de código a seguir demonstra como <xref:System.Net.Sockets.TcpListener.Start%2A> é usado para escutar tentativas de conexão de cliente de entrada.</span><span class="sxs-lookup"><span data-stu-id="e2db6-376">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-377">Ocorreu um erro ao acessar o soquete.</span><span class="sxs-lookup"><span data-stu-id="e2db6-377">An error occurred while accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2db6-378">O parâmetro <paramref name="backlog" /> é menor que zero ou excede o número máximo de conexões permitidas.</span><span class="sxs-lookup"><span data-stu-id="e2db6-378">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e2db6-379">O <see cref="T:System.Net.Sockets.Socket" /> subjacente é nulo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-379">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2db6-380">Fecha o ouvinte.</span><span class="sxs-lookup"><span data-stu-id="e2db6-380">Closes the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2db6-381"><xref:System.Net.Sockets.TcpListener.Stop%2A> Fecha o ouvinte.</span><span class="sxs-lookup"><span data-stu-id="e2db6-381"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="e2db6-382">Quaisquer solicitações de conexão inaceitável na fila serão perdidas.</span><span class="sxs-lookup"><span data-stu-id="e2db6-382">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="e2db6-383">Hosts remotos aguardando uma conexão seja aceita lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-383">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e2db6-384">Você é responsável por fechar as conexões aceitas separadamente.</span><span class="sxs-lookup"><span data-stu-id="e2db6-384">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2db6-385">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e2db6-385">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="e2db6-386">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="e2db6-386">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2db6-387">O exemplo de código a seguir demonstra como usar o <xref:System.Net.Sockets.TcpListener.Stop%2A> método para fechar subjacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e2db6-387">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e2db6-388">Use a propriedade <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="e2db6-388">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="e2db6-389">Quando tiver obtido esse código, você poderá consultar a documentação de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de erro da API da versão 2 do Windows Sockets</see> para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="e2db6-389">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2db6-390">O <see cref="M:System.Net.Sockets.TcpListener.Stop" /> método também fecha subjacente <see cref="T:System.Net.Sockets.Socket" />e cria um novo <see cref="T:System.Net.Sockets.Socket" /> para o <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-390">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span></span> <span data-ttu-id="e2db6-391">Se você definir as propriedades no subjacente <see cref="T:System.Net.Sockets.Socket" /> antes de chamar o <see cref="M:System.Net.Sockets.TcpListener.Stop" /> método, essas propriedades não continuará até o novo <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="e2db6-391">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span></span></para></block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>