<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5627e91be2cb0efb52fa79ce1dc1d7e11fb567e8" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52591863" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8a309-101">Fornece serviços de rede do protocolo UDP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a309-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-102">O <xref:System.Net.Sockets.UdpClient> classe fornece métodos simples para enviar e receber datagramas UDP sem conexão ao bloqueio de modo síncrono.</span><span class="sxs-lookup"><span data-stu-id="8a309-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="8a309-103">Como o UDP é um protocolo de transporte sem conexão, não é necessário estabelecer uma conexão de host remoto antes de enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="8a309-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="8a309-104">No entanto, você fazer, tem a opção de estabelecer um host remoto padrão em uma das duas maneiras a seguir:</span><span class="sxs-lookup"><span data-stu-id="8a309-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="8a309-105">Criar uma instância da <xref:System.Net.Sockets.UdpClient> classe usando o nome do host remoto e o número de porta como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a309-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="8a309-106">Criar uma instância das <xref:System.Net.Sockets.UdpClient> de classe e, em seguida, chamar o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="8a309-107">Você pode usar qualquer um dos métodos de envio fornecidos no <xref:System.Net.Sockets.UdpClient> para enviar dados para um dispositivo remoto.</span><span class="sxs-lookup"><span data-stu-id="8a309-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="8a309-108">Use o <xref:System.Net.Sockets.UdpClient.Receive%2A> método receba dados de hosts remotos.</span><span class="sxs-lookup"><span data-stu-id="8a309-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-109">Não chame <xref:System.Net.Sockets.UdpClient.Send%2A> usando um nome de host ou <xref:System.Net.IPEndPoint> se você já tiver especificado um host remoto padrão.</span><span class="sxs-lookup"><span data-stu-id="8a309-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="8a309-110">Se você fizer isso, <xref:System.Net.Sockets.UdpClient> lançará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="8a309-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="8a309-111"><xref:System.Net.Sockets.UdpClient> métodos também permitem enviar e receber datagramas de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="8a309-112">Use o <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método para assinar um <xref:System.Net.Sockets.UdpClient> para um grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="8a309-113">Use o <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método para cancelar a assinatura um <xref:System.Net.Sockets.UdpClient> de um grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-114">O exemplo a seguir estabelece um <xref:System.Net.Sockets.UdpClient> conexão usando o nome de host www.contoso.com na porta 11000.</span><span class="sxs-lookup"><span data-stu-id="8a309-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="8a309-115">Uma pequena cadeia de caracteres é enviada para duas máquinas de host remoto separado.</span><span class="sxs-lookup"><span data-stu-id="8a309-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="8a309-116">O <xref:System.Net.Sockets.UdpClient.Receive%2A> método bloqueia a execução até que uma mensagem é recebida.</span><span class="sxs-lookup"><span data-stu-id="8a309-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="8a309-117">Usando o <xref:System.Net.IPEndPoint> passado para <xref:System.Net.Sockets.UdpClient.Receive%2A>, a identidade do host está respondendo é revelada.</span><span class="sxs-lookup"><span data-stu-id="8a309-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="8a309-118">Para estabelecer uma conexão de saída ou aceitar uma solicitação de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a309-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md">
      <span data-ttu-id="8a309-119">TCP-UDP</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a309-119">TCP-UDP</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-120">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a309-121">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-122">Este construtor cria um novo <xref:System.Net.Sockets.UdpClient> e permite que o provedor de serviço subjacente atribuir o mais apropriado local IPv4 endereço e número da porta.</span><span class="sxs-lookup"><span data-stu-id="8a309-122">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="8a309-123">Se este construtor é usado, o <xref:System.Net.Sockets.UdpClient> instância está definida com uma família de endereços do IPv4 que não pode ser alterado ou substituído por uma chamada de método connect com um destino de IPv6.</span><span class="sxs-lookup"><span data-stu-id="8a309-123">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-124">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-124">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-125">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-125">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-126">Este construtor não é adequado para ingressar em um grupo de multicast porque ele não faz a associação de soquete.</span><span class="sxs-lookup"><span data-stu-id="8a309-126">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="8a309-127">Além disso, ele só funciona com tipos de endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="8a309-127">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-128">O exemplo a seguir demonstra como usar o construtor padrão para criar uma instância da <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-128">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-129">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-129">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="8a309-130">O número da porta local do qual você pretende se comunicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-130">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-131">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e a associa ao número da porta local fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-131">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-132">Este construtor cria uma subjacente <xref:System.Net.Sockets.Socket> e associá-lo para o número da porta da qual você pretende se comunicar.</span><span class="sxs-lookup"><span data-stu-id="8a309-132">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="8a309-133">Use esse construtor, se você só estiver interessado em definir o número de porta local.</span><span class="sxs-lookup"><span data-stu-id="8a309-133">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="8a309-134">O provedor de serviço subjacente atribuirá o endereço IP local.</span><span class="sxs-lookup"><span data-stu-id="8a309-134">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="8a309-135">Se você passar 0 para o construtor, o provedor de serviço subjacente atribuirá um número de porta.</span><span class="sxs-lookup"><span data-stu-id="8a309-135">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="8a309-136">Se este construtor é usado, o <xref:System.Net.Sockets.UdpClient> instância está definida com uma família de endereços do IPv4 que não pode ser alterado ou substituído por uma chamada de método connect com um destino de IPv6.</span><span class="sxs-lookup"><span data-stu-id="8a309-136">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-137">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-137">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-138">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-138">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-139">Este construtor só funciona com tipos de endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="8a309-139">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-140">O exemplo a seguir demonstra como usar um número de porta local para criar uma instância da <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-140">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a309-141">O parâmetro <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-141">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-142">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-142">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="8a309-143">Um <see cref="T:System.Net.IPEndPoint" /> que representa o ponto de extremidade local ao qual você associa a conexão UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-143">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-144">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e a associa ao ponto de extremidade local especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-145">Este construtor cria um novo <xref:System.Net.Sockets.UdpClient> e associa-o para o <xref:System.Net.IPEndPoint> especificado pelo `localEP` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-145">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="8a309-146">Antes de chamar esse construtor, você deve criar um <xref:System.Net.IPEndPoint> usando o número de porta e endereço IP do qual você pretende enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="8a309-146">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="8a309-147">Você não precisará especificar um número de porta e endereço IP local para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="8a309-147">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="8a309-148">Se você não fizer isso, o provedor de serviço subjacente atribuirá o mais apropriado local IP endereço e número da porta.</span><span class="sxs-lookup"><span data-stu-id="8a309-148">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="8a309-149">Se este construtor é usado, o <xref:System.Net.Sockets.UdpClient> instância é definida com a família de endereços especificada pelo `localEP` parâmetro que não pode ser alterado ou substituído por uma chamada de método connect com uma família de endereço diferente.</span><span class="sxs-lookup"><span data-stu-id="8a309-149">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-150">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-151">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-151">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-152">O exemplo a seguir demonstra como criar uma instância da <xref:System.Net.Sockets.UdpClient> classe usando um ponto de extremidade local.</span><span class="sxs-lookup"><span data-stu-id="8a309-152">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-153">
            <paramref name="localEP" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-153">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-154">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-154">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="8a309-155">Um dos valores <see cref="T:System.Net.Sockets.AddressFamily" /> que especifica o esquema de endereçamento do soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-155">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-156">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-156">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-157">O `family` parâmetro determina se o ouvinte usa um endereço IP versão 4 (IPv4) ou uma IP versão 6 (IPv6) endereço.</span><span class="sxs-lookup"><span data-stu-id="8a309-157">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="8a309-158">Para usar um endereço IPv4, passe o <xref:System.Net.Sockets.AddressFamily.InterNetwork> valor.</span><span class="sxs-lookup"><span data-stu-id="8a309-158">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="8a309-159">Para usar um endereço IPv6, passe o <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> valor.</span><span class="sxs-lookup"><span data-stu-id="8a309-159">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="8a309-160">Passar qualquer outro valor fará com que o método lançar um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-160">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="8a309-161">Se este construtor é usado, o <xref:System.Net.Sockets.UdpClient> instância é definida com a família de endereços especificada pelo `family` parâmetro que não pode ser alterado ou substituído por uma chamada de método connect com uma família de endereço diferente.</span><span class="sxs-lookup"><span data-stu-id="8a309-161">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-162">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-162">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-163">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-163">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-164">O <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> não é adequado para ingressar em um grupo de multicast porque ele não faz a associação de soquete.</span><span class="sxs-lookup"><span data-stu-id="8a309-164">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-165">
            <paramref name="family" /> não é <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-165">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-166">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-166">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="8a309-167">A porta na qual escutar tentativas de conexão de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-167">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="8a309-168">Um dos valores <see cref="T:System.Net.Sockets.AddressFamily" /> que especifica o esquema de endereçamento do soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-168">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-169">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e a associa ao número da porta local fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-169">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-170">Este construtor cria uma subjacente <xref:System.Net.Sockets.Socket> e associá-lo para o número da porta da qual você pretende se comunicar.</span><span class="sxs-lookup"><span data-stu-id="8a309-170">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="8a309-171">O `family` parâmetro determina se o ouvinte usa um endereço IP versão 4 (IPv4) ou uma IP versão 6 (IPv6) endereço.</span><span class="sxs-lookup"><span data-stu-id="8a309-171">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="8a309-172">Para usar um endereço IPv4, passe o <xref:System.Net.Sockets.AddressFamily.InterNetwork> valor.</span><span class="sxs-lookup"><span data-stu-id="8a309-172">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="8a309-173">Para usar um endereço IPv6, passe o <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> valor.</span><span class="sxs-lookup"><span data-stu-id="8a309-173">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="8a309-174">Passar qualquer outro valor fará com que o método lançar um <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-174">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="8a309-175">Se este construtor é usado, o <xref:System.Net.Sockets.UdpClient> instância é definida com a família de endereços especificada pelo `family` parâmetro que não pode ser alterado ou substituído por uma chamada de método connect com uma família de endereço diferente.</span><span class="sxs-lookup"><span data-stu-id="8a309-175">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-176">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-176">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-177">Assim que você tiver obtido esse código, consulte o [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-177">Once you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-178">O exemplo de código a seguir mostra como criar um cliente UDP para usar em um grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-178">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-179">
            <paramref name="family" /> não é <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-179">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a309-180">
            <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-180">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-181">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-181">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="8a309-182">O nome host DNS remoto ao qual você pretende se conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-182">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8a309-183">O número da porta remota à qual você pretende se conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-183">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-184">Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.UdpClient" /> e estabelece um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-184">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-185">Este construtor inicializa uma nova <xref:System.Net.Sockets.UdpClient> e estabelece um host remoto usando o `hostname` e `port` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a309-185">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="8a309-186">Estabelecer um host remoto padrão é opcional.</span><span class="sxs-lookup"><span data-stu-id="8a309-186">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8a309-187">Se você usar esse construtor, você não precisará especificar um host remoto em cada chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-187">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-188">Especificar um host remoto padrão limita você a esse host apenas.</span><span class="sxs-lookup"><span data-stu-id="8a309-188">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8a309-189">Você pode alterar o host remoto padrão a qualquer momento chamando o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-189">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-190">Se você deseja especificar um host remoto em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método, não use esse construtor.</span><span class="sxs-lookup"><span data-stu-id="8a309-190">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-191">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-191">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-192">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-192">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-193">O exemplo a seguir demonstra como criar uma instância da <xref:System.Net.Sockets.UdpClient> classe usando um nome de host e número da porta.</span><span class="sxs-lookup"><span data-stu-id="8a309-193">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-194">
            <paramref name="hostname" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-194">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a309-195">
            <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-195">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-196">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-196">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-197">Obtém ou define um valor que indica se um host remoto padrão foi estabelecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-197">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-198">
            <see langword="true" /> se a conexão estiver ativa; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-198">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-199">Classes derivadas de <xref:System.Net.Sockets.UdpClient> pode usar essa propriedade para determinar se um host remoto padrão foi estabelecido.</span><span class="sxs-lookup"><span data-stu-id="8a309-199">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="8a309-200">Você pode estabelecer um host remoto padrão usando o construtor apropriado ou ao chamar o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-200">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-201">Se você estabelecer um host remoto padrão, não é possível especificar um host remoto em sua chamada para <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="8a309-201">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="8a309-202">Um valor booliano que especifica se a passagem de NAT deve ser habilitada ou desabilitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-202">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-203">Habilita ou desabilita a passagem de NAT (Conversão de Endereços de Rede) em uma instância de <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-203">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-204">O <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> método é usado para habilitar ou desabilitar a passagem de NAT para um <xref:System.Net.Sockets.UdpClient> instância.</span><span class="sxs-lookup"><span data-stu-id="8a309-204">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="8a309-205">Passagem de NAT pode ser fornecida usando um túnel ISATAP, 6to4 ou Teredo.</span><span class="sxs-lookup"><span data-stu-id="8a309-205">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="8a309-206">Quando o `allowed` parâmetro for false, o <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opção de soquete associado é definida como <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="8a309-206">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="8a309-207">Isso desabilita explicitamente a passagem de NAT para um <xref:System.Net.Sockets.UdpClient> instância.</span><span class="sxs-lookup"><span data-stu-id="8a309-207">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="8a309-208">Quando o `allowed` parâmetro for true, o <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opção de soquete associado é definida como <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="8a309-208">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="8a309-209">Isso pode permitir que a passagem de NAT para um <xref:System.Net.Sockets.UdpClient> dependendo das regras de firewall em vigor no sistema.</span><span class="sxs-lookup"><span data-stu-id="8a309-209">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="8a309-210">Um endereço de Teredo é um endereço IPv6 com o prefixo de 2001::/ / 32.</span><span class="sxs-lookup"><span data-stu-id="8a309-210">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="8a309-211">Endereços Teredo podem ser retornados por meio da resolução de nome DNS normal ou enumerados como um endereço IPv6 atribuído a uma interface local.</span><span class="sxs-lookup"><span data-stu-id="8a309-211">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-212">Obtém a quantidade de dados recebidos da rede e disponíveis para leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-212">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-213">O número de bytes de dados recebidos da rede.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-213">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-214">O <xref:System.Net.Sockets.UdpClient.Available%2A> propriedade é usada para determinar a quantidade de dados na fila no buffer de rede para leitura.</span><span class="sxs-lookup"><span data-stu-id="8a309-214">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="8a309-215">Se houver dados disponíveis, chame <xref:System.Net.Sockets.NetworkStream.Read%2A> para obter os dados.</span><span class="sxs-lookup"><span data-stu-id="8a309-215">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="8a309-216">Se nenhum dado estiver disponível, o <xref:System.Net.Sockets.UdpClient.Available%2A> propriedade retornará 0.</span><span class="sxs-lookup"><span data-stu-id="8a309-216">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="8a309-217">Se o host remoto é desligado ou fecha a conexão, o <xref:System.Net.Sockets.UdpClient.Available%2A> propriedade gera um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-217">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-218">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico e consulte a documentação de código de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)/ para uma descrição detalhada das erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-218">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-219">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.UdpClient.Available%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-219">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-220">Erro ao tentar acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-220">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-221">O <see cref="T:System.Net.Sockets.Socket" /> foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-221">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="8a309-222">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-222">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a309-223">Um objeto definido pelo usuário que contém informações sobre a operação de recebimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-223">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="8a309-224">Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-224">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-225">Recebe um datagrama de um host remoto de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-225">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-226">Um objeto <see cref="T:System.IAsyncResult" /> que referencia o recebimento assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-226">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-227">Assíncrono <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.UdpClient.EndReceive%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-227">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="8a309-228">Normalmente, o método é invocado pelo `requestCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="8a309-228">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8a309-229">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="8a309-229">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8a309-230">Para bloquear até que a operação for concluída, use o <xref:System.Net.Sockets.UdpClient.Receive%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-230">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="8a309-231">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8a309-231">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-232">O seguinte exemplo de código usa <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> para receber uma resposta do servidor de maneira assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8a309-232">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-233">Envia um datagrama para um host remoto de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-233">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8a309-234">Uma matriz <see cref="T:System.Byte" /> que contém os dados a serem enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-234">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-235">O número de bytes a serem enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-235">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8a309-236">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a309-237">Um objeto definido pelo usuário que contém informações sobre a operação de envio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-237">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="8a309-238">Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-238">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-239">Envia um datagrama para um host remoto de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-239">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="8a309-240">O destino foi especificado anteriormente por uma chamada para <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-240">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-241">Um objeto <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-241">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-242">Assíncrono <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.UdpClient.EndSend%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-242">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="8a309-243">Normalmente, o método é invocado pelo `requestCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="8a309-243">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8a309-244">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="8a309-244">This method does not block until the operation completes.</span></span> <span data-ttu-id="8a309-245">Para bloquear até que a operação for concluída, use um do <xref:System.Net.Sockets.UdpClient.Send%2A> sobrecargas de método.</span><span class="sxs-lookup"><span data-stu-id="8a309-245">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8a309-246">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8a309-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-247">O seguinte exemplo de código usa <xref:System.Net.Sockets.UdpClient.BeginSend%2A> para enviar uma solicitação do servidor de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8a309-247">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8a309-248">Uma matriz <see cref="T:System.Byte" /> que contém os dados a serem enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-248">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-249">O número de bytes a serem enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-249">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="8a309-250">O <see cref="T:System.Net.EndPoint" /> que representa o destino dos dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-250">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8a309-251">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-251">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a309-252">Um objeto definido pelo usuário que contém informações sobre a operação de envio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-252">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="8a309-253">Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-253">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-254">Envia um datagrama para um destino de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-254">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="8a309-255">O destino é especificado por um <see cref="T:System.Net.EndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-255">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-256">Um objeto <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-256">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-257">Assíncrono <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.UdpClient.EndSend%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-257">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="8a309-258">Normalmente, o método é invocado pelo `requestCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="8a309-258">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8a309-259">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="8a309-259">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8a309-260">Para bloquear até que a operação for concluída, use um do <xref:System.Net.Sockets.UdpClient.Send%2A> sobrecargas de método.</span><span class="sxs-lookup"><span data-stu-id="8a309-260">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8a309-261">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8a309-261">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-262">O seguinte exemplo de código usa <xref:System.Net.Sockets.UdpClient.BeginSend%2A> para enviar uma solicitação do servidor de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8a309-262">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8a309-263">Uma matriz <see cref="T:System.Byte" /> que contém os dados a serem enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-263">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-264">O número de bytes a serem enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-264">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="8a309-265">O host de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-265">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8a309-266">O número da porta de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-266">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="8a309-267">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-267">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a309-268">Um objeto definido pelo usuário que contém informações sobre a operação de envio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-268">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="8a309-269">Esse objeto é passado para o delegado <paramref name="requestCallback" /> quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-269">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-270">Envia um datagrama para um destino de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-270">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="8a309-271">O destino é especificado pelo nome do host e número da porta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-271">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-272">Um objeto <see cref="T:System.IAsyncResult" /> que faz referência ao envio assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-272">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-273">Assíncrono <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.UdpClient.EndSend%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-273">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="8a309-274">Normalmente, o método é invocado pelo `requestCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="8a309-274">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="8a309-275">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="8a309-275">This method does not block until the operation is complete.</span></span> <span data-ttu-id="8a309-276">Para bloquear até que a operação for concluída, use um do <xref:System.Net.Sockets.UdpClient.Send%2A> sobrecargas de método.</span><span class="sxs-lookup"><span data-stu-id="8a309-276">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8a309-277">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8a309-277">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-278">O seguinte exemplo de código usa <xref:System.Net.Sockets.UdpClient.BeginSend%2A> para enviar uma solicitação do servidor de forma assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8a309-278">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-279">Obtém ou define a rede <see cref="T:System.Net.Sockets.Socket" /> subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-279">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-280">A Rede <see cref="T:System.Net.Sockets.Socket" /> subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-280">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-281"><xref:System.Net.Sockets.UdpClient> cria um <xref:System.Net.Sockets.Socket> usado para enviar e receber dados em uma rede.</span><span class="sxs-lookup"><span data-stu-id="8a309-281"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="8a309-282">Classes derivadas de <xref:System.Net.Sockets.UdpClient> pode usar essa propriedade para obter ou definir isso <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8a309-282">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="8a309-283">Usar subjacente <xref:System.Net.Sockets.Socket> retornado de <xref:System.Net.Sockets.UdpClient.Client%2A> se você precisar acessar além do qual <xref:System.Net.Sockets.UdpClient> fornece.</span><span class="sxs-lookup"><span data-stu-id="8a309-283">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="8a309-284">Você também pode usar <xref:System.Net.Sockets.UdpClient.Client%2A> para definir subjacente <xref:System.Net.Sockets.Socket> a um existente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8a309-284">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="8a309-285">Isso é útil se você quiser aproveitar a simplicidade <xref:System.Net.Sockets.UdpClient> usando um pré-existentes <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8a309-285">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-286">O exemplo a seguir demonstra o uso do <xref:System.Net.Sockets.UdpClient.Client%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-286">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="8a309-287">Neste exemplo, difusão está habilitado para subjacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="8a309-287">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a309-288">Fecha a conexão UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-288">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-289">O <xref:System.Net.Sockets.UdpClient.Close%2A> desabilita subjacente <xref:System.Net.Sockets.Socket> e libera todos os recursos gerenciados e não gerenciados associados a <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="8a309-289">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-290">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-290">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-291">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-291">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-292">O exemplo a seguir demonstra o fechamento uma <xref:System.Net.Sockets.UdpClient> chamando o <xref:System.Net.Sockets.UdpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-292">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-293">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-293">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-294">Estabelece um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-294">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="8a309-295">Um <see cref="T:System.Net.IPEndPoint" /> que especifica o ponto de extremidade de rede para o qual você pretende enviar os dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-295">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-296">Estabelece um host remoto padrão usando o ponto de extremidade de rede especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-296">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-297">O <xref:System.Net.Sockets.UdpClient.Connect%2A> método estabelece um host remoto do padrão usando o valor especificado no `endPoint` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-297">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="8a309-298">Uma vez estabelecida, você não precisará especificar um host remoto em cada chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-298">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="8a309-299">Estabelecer um host remoto padrão é opcional.</span><span class="sxs-lookup"><span data-stu-id="8a309-299">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8a309-300">Especificar um host remoto padrão limita você a esse host apenas.</span><span class="sxs-lookup"><span data-stu-id="8a309-300">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8a309-301">Se você quiser enviar datagramas para um host remoto diferente, você deve fazer outra chamada para o <xref:System.Net.Sockets.UdpClient.Connect%2A> método ou criar outro <xref:System.Net.Sockets.UdpClient> sem um host remoto padrão.</span><span class="sxs-lookup"><span data-stu-id="8a309-301">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="8a309-302">Se você tiver estabelecido um padrão remoto host e também fornecer um host remoto em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método, <xref:System.Net.Sockets.UdpClient.Send%2A> lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-302">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-303">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-303">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-304">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-304">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-305">Se você chamar o <xref:System.Net.Sockets.Socket.Connect%2A> método, datagramas que chegam de um endereço diferente de padrão especificado será descartada.</span><span class="sxs-lookup"><span data-stu-id="8a309-305">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="8a309-306">Não é possível definir o host remoto padrão para um endereço de difusão usando esse método, a menos que você herda <xref:System.Net.Sockets.UdpClient>, use o método de cliente para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-306">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a309-307">No entanto, você pode, endereço, 255.255.255.255, de difusão de difusão de dados para o padrão se você especificar <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-307">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-308">Se seu aplicativo requer um controle maior sobre endereços de difusão, você também pode reverter usando o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-308">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-309">Uma vez que o protocolo UDP é sem conexão, o <xref:System.Net.Sockets.UdpClient.Connect%2A> método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="8a309-309">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="8a309-310">Não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método se você pretende receber datagramas de difusão seletiva.</span><span class="sxs-lookup"><span data-stu-id="8a309-310">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-311">O exemplo a seguir usa um <xref:System.Net.IPEndPoint> para estabelecer um host remoto padrão.</span><span class="sxs-lookup"><span data-stu-id="8a309-311">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-312">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-312">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-313">
            <paramref name="endPoint" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-313">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-314">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-314">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="8a309-315">O <see cref="T:System.Net.IPAddress" /> do host remoto ao qual você pretende enviar dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-315">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8a309-316">O número da porta à qual você pretende enviar dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-316">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-317">Estabelece um host remoto padrão usando o endereço IP e o número da porta especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-317">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-318">O <xref:System.Net.Sockets.UdpClient.Connect%2A> método estabelece um host remoto do padrão usando os valores especificados na `addr` e `port` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a309-318">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="8a309-319">Uma vez estabelecida, você não precisará especificar um host remoto em cada chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-319">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="8a309-320">Estabelecer um host remoto padrão é opcional.</span><span class="sxs-lookup"><span data-stu-id="8a309-320">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8a309-321">Especificar um host remoto padrão limita você a esse host apenas.</span><span class="sxs-lookup"><span data-stu-id="8a309-321">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8a309-322">Se você quiser enviar datagramas para um host remoto diferente, você deve fazer outra chamada para o <xref:System.Net.Sockets.UdpClient.Connect%2A> método ou criar outro <xref:System.Net.Sockets.UdpClient> sem um host remoto padrão.</span><span class="sxs-lookup"><span data-stu-id="8a309-322">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="8a309-323">Se você tiver estabelecido um padrão remoto host e também fornecer um host remoto em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método, <xref:System.Net.Sockets.UdpClient.Send%2A> lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-323">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-324">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-324">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-325">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-325">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-326">Se você chamar o <xref:System.Net.Sockets.Socket.Connect%2A> método, datagramas que chegam de um endereço diferente de padrão especificado será descartada.</span><span class="sxs-lookup"><span data-stu-id="8a309-326">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="8a309-327">Não é possível definir o host remoto padrão para um endereço de difusão usando esse método, a menos que você herda <xref:System.Net.Sockets.UdpClient>, use o método de cliente para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-327">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a309-328">No entanto, você pode, endereço, 255.255.255.255, de difusão de difusão de dados para o padrão se você especificar <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-328">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-329">Se seu aplicativo requer um controle maior sobre endereços de difusão, você também pode reverter usando o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-329">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-330">Uma vez que o protocolo UDP é sem conexão, o <xref:System.Net.Sockets.UdpClient.Connect%2A> método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="8a309-330">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="8a309-331">Não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método se você pretende receber datagramas de difusão seletiva.</span><span class="sxs-lookup"><span data-stu-id="8a309-331">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-332">O exemplo a seguir usa um número de porta e endereço IP para se conectar com um host remoto.</span><span class="sxs-lookup"><span data-stu-id="8a309-332">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-333">
            <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-333">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-334">
            <paramref name="addr" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-334">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a309-335">
            <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-335">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-336">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-336">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="8a309-337">O nome DNS do host remoto ao qual você pretende enviar dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-337">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8a309-338">O número da porta no host remoto ao qual você pretende enviar dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-338">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-339">Estabelece um host remoto padrão usando o nome e o número da porta do host especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-339">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-340">O <xref:System.Net.Sockets.UdpClient.Connect%2A> método estabelece um host remoto do padrão usando os valores especificados na `port` e `hostname` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a309-340">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="8a309-341">Uma vez estabelecida, você não precisará especificar um host remoto em cada chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-341">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="8a309-342">Estabelecer um host remoto padrão é opcional.</span><span class="sxs-lookup"><span data-stu-id="8a309-342">Establishing a default remote host is optional.</span></span> <span data-ttu-id="8a309-343">Especificar um host remoto padrão limita você a esse host apenas.</span><span class="sxs-lookup"><span data-stu-id="8a309-343">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="8a309-344">Se você quiser enviar datagramas para um host remoto diferente, você deve fazer outra chamada para o <xref:System.Net.Sockets.UdpClient.Connect%2A> método ou criar outro <xref:System.Net.Sockets.UdpClient> sem um host remoto padrão.</span><span class="sxs-lookup"><span data-stu-id="8a309-344">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="8a309-345">Se você tiver estabelecido um padrão remoto host e também fornecer um host remoto em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método, <xref:System.Net.Sockets.UdpClient.Send%2A> lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-345">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-346">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-346">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-347">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-347">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-348">Se você chamar o <xref:System.Net.Sockets.Socket.Connect%2A> método, datagramas que chegam de um endereço diferente de padrão especificado será descartada.</span><span class="sxs-lookup"><span data-stu-id="8a309-348">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="8a309-349">Não é possível definir o host remoto padrão para um endereço de difusão usando esse método, a menos que você herda <xref:System.Net.Sockets.UdpClient>, use o método de cliente para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-349">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8a309-350">No entanto, você pode, endereço, 255.255.255.255, de difusão de difusão de dados para o padrão se você especificar <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> em sua chamada para o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-350">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-351">Se seu aplicativo requer um controle maior sobre endereços de difusão, você também pode reverter usando o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-351">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-352">Uma vez que o protocolo UDP é sem conexão, o <xref:System.Net.Sockets.UdpClient.Connect%2A> método não bloqueia.</span><span class="sxs-lookup"><span data-stu-id="8a309-352">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="8a309-353">Não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método se você pretende receber datagramas de difusão seletiva.</span><span class="sxs-lookup"><span data-stu-id="8a309-353">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-354">O exemplo a seguir usa o nome do host e número de porta para se conectar a um host remoto.</span><span class="sxs-lookup"><span data-stu-id="8a309-354">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-355">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-355">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a309-356">
            <paramref name="port" /> não está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> e <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-356">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-357">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-357">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a309-358">Libera os recursos gerenciados e não gerenciados usados pelo <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-358">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8a309-359">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-359">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-360">Libera os recursos não gerenciados usados pelo <see cref="T:System.Net.Sockets.UdpClient" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-360">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-361">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="8a309-361">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8a309-362">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="8a309-362">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8a309-363"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="8a309-363"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8a309-364">Quando o `disposing` parâmetro for true, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Net.Sockets.UdpClient> referências.</span><span class="sxs-lookup"><span data-stu-id="8a309-364">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="8a309-365">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="8a309-365">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8a309-366">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8a309-366">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="8a309-367">Ao substituir <see langword="Dispose(Boolean)" /> tenha cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8a309-367">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="8a309-368">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="8a309-368">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="8a309-369">Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="8a309-369">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-370">Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.UdpClient" /> permite que datagramas de protocolo IP sejam fragmentados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-370">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-371">
            <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> permite a fragmentação de datagramas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-371">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8a309-372">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-372">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-373">Datagramas requerem fragmentação quando seu tamanho excede a transferência de unidade máxima (MTU) da mídia de transmissão.</span><span class="sxs-lookup"><span data-stu-id="8a309-373">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="8a309-374">Datagramas poderão ser fragmentadas pelo host de envio ou por um roteador intermediário.</span><span class="sxs-lookup"><span data-stu-id="8a309-374">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="8a309-375">Se um datagrama deve ser fragmentado e o <xref:System.Net.Sockets.Socket.DontFragment%2A> opção for definida, o datagrama será descartado e uma mensagem de erro de controle mensagem ICMP (Internet Protocol) é enviada de volta ao remetente do datagrama.</span><span class="sxs-lookup"><span data-stu-id="8a309-375">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-376">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.Socket.DontFragment%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-376">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8a309-377">Essa propriedade pode ser definida apenas para soquetes que usam o sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou sinalizador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-377">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-378">Sai de um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-378">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8a309-379">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast do qual sair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-379">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-380">Sai de um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-380">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-381">O <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método retira o <xref:System.Net.Sockets.UdpClient> do grupo de multicast identificado pelo especificado <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8a309-381">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8a309-382">Depois de chamar o <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método, subjacente <xref:System.Net.Sockets.Socket> envia um pacote de Internet Group Management Protocol (IGMP) para o roteador, removendo o roteador do grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-382">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="8a309-383">Após um <xref:System.Net.Sockets.UdpClient> retira a partir do grupo, não será capaz de receber datagramas enviados a esse grupo.</span><span class="sxs-lookup"><span data-stu-id="8a309-383">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-384">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-384">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-385">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-385">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-386">O exemplo a seguir demonstra como descartar um grupo de multicast, fornecendo um endereço de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-386">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-387">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-387">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-388">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-388">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-389">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-389">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-390">
            <paramref name="multicastAddr" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-390">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8a309-391">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast do qual sair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-391">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="8a309-392">O endereço local do grupo de multicast do qual sair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-392">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-393">Sai de um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-393">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-394">O <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método retira o <xref:System.Net.Sockets.UdpClient> do grupo de multicast identificado pelo especificado <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8a309-394">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8a309-395">Depois de chamar o <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método, subjacente <xref:System.Net.Sockets.Socket> envia um pacote de Internet Group Management Protocol (IGMP) para o roteador, removendo o roteador do grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-395">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="8a309-396">Após um <xref:System.Net.Sockets.UdpClient> retira a partir do grupo, não será capaz de receber datagramas enviados a esse grupo.</span><span class="sxs-lookup"><span data-stu-id="8a309-396">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-397">Se você receber um <xref:System.Net.Sockets.SocketException>, use o <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propriedade para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-397">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="8a309-398">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-398">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-399">O exemplo de código a seguir demonstra como descartar um grupo de multicast, fornecendo um endereço de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-399">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-400">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-400">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-401">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-401">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-402">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-402">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-403">
            <paramref name="multicastAddr" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-403">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-404">Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.UdpClient" /> pode enviar ou receber pacotes de difusão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-404">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-405">
            <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> permitir pacotes de difusão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-405">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8a309-406">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-406">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-407">Difusão é limitada a uma sub-rede específica.</span><span class="sxs-lookup"><span data-stu-id="8a309-407">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="8a309-408">Você pode transmitir à sua sub-rede local, enviando um pacote para 255.255.255.255; ou, você pode usar o endereço de difusão direcionado, o que é a parte da rede de um endereço IP (Internet Protocol) com todos os bits definidos na parte do host.</span><span class="sxs-lookup"><span data-stu-id="8a309-408">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="8a309-409">Por exemplo, se seu endereço IP for 192.168.1.40 (um endereço de classe C, com a parte de rede, como os três primeiros octetos e a parte de host é o último octeto), o seu endereço de difusão direcionado será 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="8a309-409">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-410">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-410">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8a309-411">Um objeto <see cref="T:System.IAsyncResult" /> retornado por uma chamada para <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-411">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="8a309-412">O ponto de extremidade remoto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-412">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-413">Encerra um recebimento assíncrono pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-413">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-414">Se for bem-sucedido, uma matriz de bytes que contém dados de datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-414">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-415">Este blocos de método até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="8a309-415">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8a309-416">Para executar essa operação de forma síncrona, use o <xref:System.Net.Sockets.UdpClient.Receive%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-416">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-417">O seguinte exemplo de código usa <xref:System.Net.Sockets.UdpClient.BeginSend%2A> para concluir um recebimento assíncrono de uma resposta do servidor.</span><span class="sxs-lookup"><span data-stu-id="8a309-417">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-418">
            <paramref name="asyncResult" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-418">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-419">
            <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-419">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-420">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> foi chamado anteriormente para a leitura assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-420">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-421">Um erro ocorreu ao tentar acessar o <see cref="T:System.Net.Sockets.Socket" /> subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-421">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-422">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-422">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8a309-423">Um objeto <see cref="T:System.IAsyncResult" /> retornado por uma chamada para <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-423">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-424">Encerra um envio assíncrono pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-424">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-425">Se tiver êxito, o número de bytes enviados para o <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-425">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-426">Este blocos de método até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="8a309-426">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="8a309-427">Para executar essa operação de forma síncrona, use o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-427">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-428">O seguinte exemplo de código usa <xref:System.Net.Sockets.UdpClient.BeginSend%2A> para concluir um envio assíncrono de uma solicitação de servidor.</span><span class="sxs-lookup"><span data-stu-id="8a309-428">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-429">
            <paramref name="asyncResult" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-429">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-430">
            <paramref name="asyncResult" /> não foi retornado por uma chamada ao método <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-430">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-431">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> foi chamado anteriormente para a leitura assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-431">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-432">Erro ao tentar acessar o soquete subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-432">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-433">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-433">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-434">Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se o <see cref="T:System.Net.Sockets.UdpClient" /> permite que um único cliente use uma porta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-434">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-435">
            <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> permitir que apenas um cliente use uma porta específica; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-435">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8a309-436">O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e posterior e <see langword="false" /> para todas as outras versões.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-436">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-437">Por padrão, vários clientes podem usar uma porta específica; No entanto, apenas um dos clientes pode executar operações no tráfego de rede enviado para a porta.</span><span class="sxs-lookup"><span data-stu-id="8a309-437">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="8a309-438">Você pode usar o <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> propriedade para impedir que vários clientes usando uma porta específica.</span><span class="sxs-lookup"><span data-stu-id="8a309-438">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="8a309-439">Essa propriedade deve ser definida antes que o soquete subjacente está associado a uma porta do cliente.</span><span class="sxs-lookup"><span data-stu-id="8a309-439">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="8a309-440">Se você chamar <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, a porta do cliente está vinculada como um efeito colateral do construtor e, posteriormente, não é possível definir o <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> propriedade</span><span class="sxs-lookup"><span data-stu-id="8a309-440">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-441">O exemplo de código a seguir cria uma <xref:System.Net.Sockets.UdpClient>e obtém e define o <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-441">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-442">Erro ao tentar acessar o soquete subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-442">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-443">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-443">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-444">Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-444">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8a309-445">O multicast <see cref="T:System.Net.IPAddress" /> do grupo que você deseja ingressar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-445">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-446">Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-446">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-447">O <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método assina o <xref:System.Net.Sockets.UdpClient> a um grupo de multicast usando especificado <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8a309-447">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8a309-448">Depois de chamar o <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método, subjacente <xref:System.Net.Sockets.Socket> envia um pacote de Internet Group Management Protocol (IGMP) para o roteador que solicita associação ao grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-448">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="8a309-449">O intervalo de endereços multicast é 224.0.0.0 a 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="8a309-449">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="8a309-450">Se você especificar um endereço fora desse intervalo ou se o roteador para o qual a solicitação é feita não é multicast habilitado, <xref:System.Net.Sockets.UdpClient> lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-450">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-451">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-451">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-452">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-452">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="8a309-453">Uma vez a <xref:System.Net.Sockets.UdpClient> está listado com o roteador como um membro do grupo de multicast, ele será capaz de receber datagramas de multicast enviados especificado <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8a309-453">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-454">Você deve criar o <xref:System.Net.Sockets.UdpClient> usando o número da porta de multicast; caso contrário, você não será capaz de receber datagramas de difusão seletiva.</span><span class="sxs-lookup"><span data-stu-id="8a309-454">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="8a309-455">Não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método antes de chamar o <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método, ou o <xref:System.Net.Sockets.UdpClient.Receive%2A> método não funcionará.</span><span class="sxs-lookup"><span data-stu-id="8a309-455">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="8a309-456">Você não precisa pertencer a um grupo de multicast para enviar datagramas para um endereço IP multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-456">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="8a309-457">Antes de ingressar em um grupo de multicast, verifique se que o soquete está associado à porta ou ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="8a309-457">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8a309-458">Você pode fazer isso chamando um dos construtores que aceitam uma porta ou um ponto de extremidade como um parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-458">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="8a309-459">Para interromper o recebimento de datagramas de difusão seletiva, chame o <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método e forneça o <xref:System.Net.IPAddress> do grupo do qual você deseja retirar o.</span><span class="sxs-lookup"><span data-stu-id="8a309-459">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-460">No caso do IPv6, há vários intervalos de endereços multicast, que você pode escolher.</span><span class="sxs-lookup"><span data-stu-id="8a309-460">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="8a309-461">Por favor, consulte o IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="8a309-461">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-462">Você não pode chamar <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> em um <xref:System.Net.Sockets.UdpClient> construído sem uma porta local específica (ou seja, usando o <xref:System.Net.Sockets.UdpClient.%23ctor> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> construtor).</span><span class="sxs-lookup"><span data-stu-id="8a309-462">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-463">O exemplo de código a seguir demonstra como unir um grupo de multicast, fornecendo um endereço de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-463">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-464">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-464">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-465">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-465">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-466">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-466">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="8a309-467">O índice de interface associado ao endereço IP local no qual ingressar o grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-467">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="8a309-468">O multicast <see cref="T:System.Net.IPAddress" /> do grupo que você deseja ingressar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-468">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-469">Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-469">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-470">Antes de ingressar em um grupo de multicast, certifique-se de que o soquete é associado à porta ou ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="8a309-470">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8a309-471">Você pode fazer isso chamando um dos construtores que aceita uma porta ou um ponto de extremidade como parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-471">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="8a309-472">O `infindex` parâmetro é usado para identificar uma interface de hardware na mesma conexão.</span><span class="sxs-lookup"><span data-stu-id="8a309-472">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-473">Há vários intervalos de endereços multicast para sua escolha.</span><span class="sxs-lookup"><span data-stu-id="8a309-473">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="8a309-474">Consulte a RFC da IETF 2375.</span><span class="sxs-lookup"><span data-stu-id="8a309-474">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-475">Você não pode chamar <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> em um <xref:System.Net.Sockets.UdpClient> construído sem uma porta local específica (ou seja, usando o <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> construtor).</span><span class="sxs-lookup"><span data-stu-id="8a309-475">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-476">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-476">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-477">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-477">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8a309-478">O <see cref="T:System.Net.IPAddress" /> do grupo de multicast no qual ingressar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-478">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="8a309-479">O TTL (vida útil), medido em saltos do roteador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-479">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-480">Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast com a TTL (vida útil) especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-480">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-481">O <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método assina o <xref:System.Net.Sockets.UdpClient> a um grupo de multicast usando especificado <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8a309-481">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="8a309-482">Depois de chamar o <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método, subjacente <xref:System.Net.Sockets.Socket> envia um pacote de Internet Group Management Protocol (IGMP) para o roteador que solicita associação ao grupo de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-482">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="8a309-483">O intervalo de endereços multicast é 224.0.0.0 a 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="8a309-483">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="8a309-484">Se você especificar um endereço fora desse intervalo ou se o roteador para o qual a solicitação é feita não é multicast habilitado, <xref:System.Net.Sockets.UdpClient> lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-484">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-485">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-485">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-486">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-486">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="8a309-487">O `timeToLive` parâmetro especifica quantos saltos do roteador serão permitidos para um datagrama de difusão seletiva antes de ser descartado.</span><span class="sxs-lookup"><span data-stu-id="8a309-487">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="8a309-488">Uma vez a <xref:System.Net.Sockets.UdpClient> está listado com o roteador como um membro do grupo de multicast, ele será capaz de receber datagramas de multicast enviados especificado <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="8a309-488">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-489">Você deve criar o <xref:System.Net.Sockets.UdpClient> usando o número da porta de multicast caso contrário, você não poderá receber datagramas de difusão seletiva.</span><span class="sxs-lookup"><span data-stu-id="8a309-489">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="8a309-490">Não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método antes de chamar o <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método ou o método de recebimento não funcionará.</span><span class="sxs-lookup"><span data-stu-id="8a309-490">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="8a309-491">Você não precisa pertencer a um grupo de multicast para enviar datagramas para um endereço IP multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-491">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="8a309-492">Antes de ingressar em um grupo de multicast, verifique se que o soquete está associado à porta ou ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="8a309-492">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8a309-493">Você pode fazer isso chamando um dos construtores que aceitam como parâmetro, uma porta ou um ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="8a309-493">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="8a309-494">Para interromper o recebimento de datagramas de difusão seletiva, chame o <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> método e forneça o <xref:System.Net.IPAddress> do grupo do qual você deseja retirar o.</span><span class="sxs-lookup"><span data-stu-id="8a309-494">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-495">Você não pode chamar <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> em um <xref:System.Net.Sockets.UdpClient> construído sem uma porta local específica (ou seja, usando o <xref:System.Net.Sockets.UdpClient.%23ctor> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> construtor).</span><span class="sxs-lookup"><span data-stu-id="8a309-495">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-496">O exemplo a seguir demonstra como unir um grupo de multicast, fornecendo dois parâmetros, um endereço de multicast e um número que representa o TTL.</span><span class="sxs-lookup"><span data-stu-id="8a309-496">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8a309-497">O TTL fornecido não está entre 0 e 255</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-497">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-498">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-498">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-499">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-499">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-500">
            <paramref name="multicastAddr" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-500">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a309-501">O endereço IP não é compatível com o valor <see cref="T:System.Net.Sockets.AddressFamily" /> que define o esquema de endereçamento do soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-501">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="8a309-502">O multicast <see cref="T:System.Net.IPAddress" /> do grupo que você deseja ingressar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-502">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="8a309-503">O <see cref="T:System.Net.IPAddress" /> local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-503">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-504">Adiciona um <see cref="T:System.Net.Sockets.UdpClient" /> para um grupo de multicast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-504">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-505">Antes de você ingressar em um grupo de multicast, certifique-se de que o soquete está associado à porta ou ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="8a309-505">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="8a309-506">Você pode fazer isso chamando um dos construtores que aceita uma porta ou um ponto de extremidade como parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-506">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-507">Há vários intervalos de endereços multicast para sua escolha.</span><span class="sxs-lookup"><span data-stu-id="8a309-507">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="8a309-508">Você pode encontrá-los no IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="8a309-508">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-509">Você não pode chamar <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> em um <xref:System.Net.Sockets.UdpClient> construído sem uma porta local específica (ou seja, usando o <xref:System.Net.Sockets.UdpClient.%23ctor> ou <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> construtor).</span><span class="sxs-lookup"><span data-stu-id="8a309-509">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-510">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-510">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-511">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-511">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-512">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-512">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-513">Obtém ou define um valor <see cref="T:System.Boolean" /> que especifica se os pacotes multicast de saída são entregues para o aplicativo de envio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-513">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-514">
            <see langword="true" /> se o <see cref="T:System.Net.Sockets.UdpClient" /> receber pacotes de multicast de saída; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-514">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-515">Multicast é um método escalonável para comunicação de muitos-para-muitos na Internet.</span><span class="sxs-lookup"><span data-stu-id="8a309-515">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="8a309-516">Se um processo de assinar um endereço de difusão seletiva, todos os pacotes enviados por que o processo são recebidas por cada outro processo que assinou o endereço multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-516">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-517">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-517">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive :  -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="8a309-518">Um <see cref="T:System.Net.IPEndPoint" /> que representa o host remoto do qual os dados foram enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-518">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-519">Retorna um datagrama UDP que foi enviado por um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-519">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-520">Uma matriz do tipo <see cref="T:System.Byte" /> que contém dados de datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-520">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-521">O <xref:System.Net.Sockets.UdpClient.Receive%2A> método será bloqueado até que um datagrama é recebido de um host remoto.</span><span class="sxs-lookup"><span data-stu-id="8a309-521">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="8a309-522">Quando dados estão disponíveis, o <xref:System.Net.Sockets.UdpClient.Receive%2A> método lerá o datagrama enfileiradas primeiro e retornar a parte de dados como uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="8a309-522">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="8a309-523">Esse método popula os `remoteEP` parâmetro com o <xref:System.Net.IPAddress> e número da porta do remetente.</span><span class="sxs-lookup"><span data-stu-id="8a309-523">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="8a309-524">Se você especificar um host remoto do padrão no <xref:System.Net.Sockets.UdpClient.Connect%2A> método, o <xref:System.Net.Sockets.UdpClient.Receive%2A> método aceitará datagramas apenas desse host.</span><span class="sxs-lookup"><span data-stu-id="8a309-524">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="8a309-525">Todos os outros datagramas serão descartados.</span><span class="sxs-lookup"><span data-stu-id="8a309-525">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="8a309-526">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-526">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-527">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-527">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-528">Se você pretende receber datagramas de difusão seletiva, não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método antes de chamar o <xref:System.Net.Sockets.UdpClient.Receive%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-528">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="8a309-529">O <xref:System.Net.Sockets.UdpClient> usar para receber datagramas devem ser criadas usando o número da porta de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-529">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-530">O exemplo a seguir demonstra o <xref:System.Net.Sockets.UdpClient.Receive%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-530">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="8a309-531">O <xref:System.Net.Sockets.UdpClient.Receive%2A> método bloqueia a execução até que ele recebe uma mensagem.</span><span class="sxs-lookup"><span data-stu-id="8a309-531">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="8a309-532">Usando o <xref:System.Net.IPEndPoint> passado para <xref:System.Net.Sockets.UdpClient.Receive%2A>, a identidade do host está respondendo é revelada.</span><span class="sxs-lookup"><span data-stu-id="8a309-532">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-533">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-533">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-534">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-534">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a309-535">Retorna um datagrama UDP de forma assíncrona que foi enviado por um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-535">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-536">Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-536">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="8a309-537">O objeto de tarefa que representa a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-537">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-538">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="8a309-538">This operation will not block.</span></span> <span data-ttu-id="8a309-539">Retornado <xref:System.Threading.Tasks.Task%601>> objeto será concluído depois que o pacote UDP foi recebido.</span><span class="sxs-lookup"><span data-stu-id="8a309-539">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="8a309-540">Se você especificar um host remoto do padrão no <xref:System.Net.Sockets.UdpClient.Connect%2A> método, esse método aceitará datagramas apenas desse host.</span><span class="sxs-lookup"><span data-stu-id="8a309-540">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="8a309-541">Todos os outros datagramas serão descartados.</span><span class="sxs-lookup"><span data-stu-id="8a309-541">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="8a309-542">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-542">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-543">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-543">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8a309-544">Se você pretende receber datagramas de difusão seletiva, não chame o <xref:System.Net.Sockets.UdpClient.Connect%2A> método antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="8a309-544">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="8a309-545">O <xref:System.Net.Sockets.UdpClient> usar para receber datagramas devem ser criadas usando o número da porta de multicast.</span><span class="sxs-lookup"><span data-stu-id="8a309-545">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-546">O <see cref="T:System.Net.Sockets.Socket" /> subjacente foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-546">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-547">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-547">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-548">Envia um datagrama UDP para um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-548">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="8a309-549">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar representado como uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-549">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-550">O número de bytes no datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-550">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-551">Envia um datagrama UDP para um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-551">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-552">O número de bytes enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-552">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-553">Essa sobrecarga envia datagramas para o host remoto estabelecido no <xref:System.Net.Sockets.UdpClient.Connect%2A> método e retorna o número de bytes enviados.</span><span class="sxs-lookup"><span data-stu-id="8a309-553">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="8a309-554">Se você não chamar <xref:System.Net.Sockets.UdpClient.Connect%2A> antes de chamar essa sobrecarga, o <xref:System.Net.Sockets.UdpClient.Send%2A> método lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-554">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-555">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-555">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-556">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-556">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-557">Se você quiser enviar datagramas para um host remoto diferente, você deve chamar o <xref:System.Net.Sockets.UdpClient.Connect%2A> método e especificar o host remoto desejado.</span><span class="sxs-lookup"><span data-stu-id="8a309-557">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="8a309-558">Use qualquer um dos outros <xref:System.Net.Sockets.UdpClient.Send%2A> sobrecargas de método para enviar datagramas para um endereço de difusão.</span><span class="sxs-lookup"><span data-stu-id="8a309-558">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-559">O exemplo a seguir demonstra o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-559">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-560">Você deve estabelecer um host remoto do padrão antes de usar essa sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="8a309-560">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-561">
            <paramref name="dgram" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-561">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-562">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-562">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-563">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-563">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-564">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-564">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="8a309-565">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-565">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-566">O número de bytes no datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-566">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="8a309-567">Um <see cref="T:System.Net.IPEndPoint" /> que representa o host e a porta para os quais o datagrama será enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-567">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-568">Envia um datagrama UDP para o host no ponto de extremidade remoto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-568">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-569">O número de bytes enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-569">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-570">O <xref:System.Net.Sockets.UdpClient.Send%2A> método envia datagramas ao ponto de extremidade especificado e retorna o número de bytes enviados com êxito.</span><span class="sxs-lookup"><span data-stu-id="8a309-570">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="8a309-571">Antes de chamar essa sobrecarga, você deve primeiro criar um <xref:System.Net.IPEndPoint> usando o número de porta e endereço IP do host remoto ao qual seu datagramas serão entregue.</span><span class="sxs-lookup"><span data-stu-id="8a309-571">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="8a309-572">Você pode enviar datagramas para a difusão de padrão de endereços, 255.255.255.255, especificando <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> para o <xref:System.Net.IPAddress.Address%2A> propriedade do <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="8a309-572">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="8a309-573">Depois de criar isso <xref:System.Net.IPEndPoint>, transmiti-lo para o <xref:System.Net.Sockets.UdpClient.Send%2A> o método como o `endPoint` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-573">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="8a309-574">Se você quiser enviar datagramas para qualquer endereço de difusão, use o <xref:System.Net.Sockets.UdpClient.Client%2A> método para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-574">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a309-575">Você também pode voltar a usar o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-575">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-576">Não fornecer um `endPoint` parâmetro para esse método se você já estabeleceu um host remoto com o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-576">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-577">Se você fizer isso, o <xref:System.Net.Sockets.UdpClient.Send%2A> método lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-577">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-578">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-578">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-579">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-579">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-580">O exemplo a seguir demonstra o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-580">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-581">Este exemplo usa um <xref:System.Net.IPEndPoint> para especificar o host de destino.</span><span class="sxs-lookup"><span data-stu-id="8a309-581">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-582">
            <paramref name="dgram" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-582">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-583">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-583">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-584">
            <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-584">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-585">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-585">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="8a309-586">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-586">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-587">O número de bytes no datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-587">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="8a309-588">O nome do host remoto para o qual você pretende enviar o datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-588">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8a309-589">O número da porta remota com a qual você pretende se comunicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-589">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-590">Envia um datagrama UDP para uma porta especificada em um host remoto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-590">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-591">O número de bytes enviados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-591">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-592">O <xref:System.Net.Sockets.UdpClient.Send%2A> método envia datagramas para os valores especificados pelo `hostname` e `port` parâmetros e retorna o número de bytes enviados com êxito.</span><span class="sxs-lookup"><span data-stu-id="8a309-592">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="8a309-593">Você pode enviar datagramas para o endereço de difusão de padrão, especificando "255.255.255.255" para o `hostname` valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-593">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="8a309-594">Se você quiser enviar datagramas para qualquer endereço de difusão, use o <xref:System.Net.Sockets.UdpClient.Client%2A> método para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-594">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a309-595">Você também pode voltar a usar o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-595">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8a309-596">Não forneça um nome de host ou da porta número para esse método se você já estabeleceu um host remoto com o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-596">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-597">Se você fizer isso, o <xref:System.Net.Sockets.UdpClient.Send%2A> método lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-597">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-598">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-598">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-599">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-599">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-600">O exemplo a seguir demonstra o <xref:System.Net.Sockets.UdpClient.Send%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-600">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="8a309-601">Este exemplo usa um nome de host e um número de porta para identificar o host de destino.</span><span class="sxs-lookup"><span data-stu-id="8a309-601">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-602">
            <paramref name="dgram" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-602">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-603">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-603">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-604">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-604">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-605">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-605">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-606">Envia um datagrama UDP de maneira assíncrona para um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-606">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8a309-607">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-607">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-608">O número de bytes no datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-608">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-609">Envia um datagrama UDP de maneira assíncrona para um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-609">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-610">Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-610">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-611">Essa sobrecarga envia datagramas para o host remoto estabelecido no <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-611">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-612">Se você não chamar <xref:System.Net.Sockets.UdpClient.Connect%2A> antes de chamar essa sobrecarga, o método gerará uma <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-612">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-613">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-613">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-614">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-614">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="8a309-615">Se você quiser enviar datagramas para um host remoto diferente, você deve chamar o <xref:System.Net.Sockets.UdpClient.Connect%2A> método e especificar o host remoto desejado.</span><span class="sxs-lookup"><span data-stu-id="8a309-615">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="8a309-616">Use qualquer um dos outros <xref:System.Net.Sockets.UdpClient.SendAsync%2A> sobrecargas de método para enviar datagramas para um endereço de difusão.</span><span class="sxs-lookup"><span data-stu-id="8a309-616">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-617">
            <paramref name="dgram" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-617">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-618">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-618">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-619">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-619">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-620">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-620">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8a309-621">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-621">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-622">O número de bytes no datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-622">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="8a309-623">Um <see cref="T:System.Net.IPEndPoint" /> que representa o host e a porta para os quais o datagrama será enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-623">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-624">Envia um datagrama UDP de maneira assíncrona para um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-624">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-625">Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-625">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-626">Esse método envia datagramas para o ponto de extremidade especificado.</span><span class="sxs-lookup"><span data-stu-id="8a309-626">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="8a309-627">Antes de chamar essa sobrecarga, você deve primeiro criar um <xref:System.Net.IPEndPoint> usando o número de porta e endereço IP do host remoto ao qual seu datagramas serão entregue.</span><span class="sxs-lookup"><span data-stu-id="8a309-627">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="8a309-628">Você pode enviar datagramas para a difusão de padrão de endereços, 255.255.255.255, especificando <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> para o <xref:System.Net.IPAddress.Address%2A> propriedade do <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="8a309-628">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="8a309-629">Depois de criar isso <xref:System.Net.IPEndPoint>, passá-lo para esse método como o `endPoint` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-629">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="8a309-630">Se você quiser enviar datagramas para qualquer endereço de difusão, use o <xref:System.Net.Sockets.UdpClient.Client%2A> método para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-630">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a309-631">Você também pode voltar a usar o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-631">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8a309-632">Não fornecer um `endPoint` parâmetro para esse método se você já estabeleceu um host remoto com o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-632">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-633">Se você fizer isso, esse método gerará uma <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-633">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-634">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-634">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-635">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-635">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-636">
            <paramref name="dgram" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-636">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-637">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-637">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-638">
            <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-638">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-639">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-639">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="8a309-640">Uma matriz do tipo <see cref="T:System.Byte" /> que especifica o datagrama UDP que você pretende enviar, representado como uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-640">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="8a309-641">O número de bytes no datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-641">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="8a309-642">O nome do host remoto para o qual você pretende enviar o datagrama.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-642">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="8a309-643">O número da porta remota com a qual você pretende se comunicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-643">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a309-644">Envia um datagrama UDP de maneira assíncrona para um host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-644">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a309-645">Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-645">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-646">Esse método envia datagramas para os valores especificados pelo `hostname` e `port` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="8a309-646">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="8a309-647">Você pode enviar datagramas para o endereço de difusão de padrão, especificando "255.255.255.255" para o `hostname` valor do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8a309-647">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="8a309-648">Se você quiser enviar datagramas para qualquer endereço de difusão, use o <xref:System.Net.Sockets.UdpClient.Client%2A> método para obter subjacente <xref:System.Net.Sockets.Socket>e defina a opção de soquete <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8a309-648">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8a309-649">Você também pode voltar a usar o <xref:System.Net.Sockets.Socket> classe.</span><span class="sxs-lookup"><span data-stu-id="8a309-649">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8a309-650">Não forneça um nome de host ou da porta número para esse método se você já estabeleceu um host remoto com o <xref:System.Net.Sockets.UdpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a309-650">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="8a309-651">Se você fizer isso, esse método gerará uma <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="8a309-651">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="8a309-652">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="8a309-652">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="8a309-653">Depois que você tiver obtido esse código, você pode consultar a [código de erro de API do Windows Sockets versão 2](/windows/desktop/winsock/windows-sockets-error-codes-2) documentação para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="8a309-653">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a309-654">
            <paramref name="dgram" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-654">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8a309-655">O <see cref="T:System.Net.Sockets.UdpClient" /> já estabeleceu um host remoto padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-655">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8a309-656">O <see cref="T:System.Net.Sockets.UdpClient" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-656">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="8a309-657">Ocorreu um erro ao acessar o soquete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-657">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a309-658">Libera todos os recursos usados pelo <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-658">Releases all resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="8a309-659">Chamar IDisposable. Dispose quando tiver terminado de usar o <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="8a309-659">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.UdpClient>.</span></span> <span data-ttu-id="8a309-660">O método IDisposable. Dispose deixa a <xref:System.Net.Sockets.UdpClient> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="8a309-660">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.UdpClient> in an unusable state.</span></span> <span data-ttu-id="8a309-661">Depois de chamar IDisposable. Dispose, você deve liberar todas as referências para o <xref:System.Net.Sockets.UdpClient> para que o coletor de lixo possa recuperar a memória que o <xref:System.Net.Sockets.UdpClient> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="8a309-661">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.UdpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpClient> was occupying.</span></span> <span data-ttu-id="8a309-662">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8a309-662">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="8a309-663">Sempre chamar IDisposable. Dispose antes de liberar sua última referência para o <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="8a309-663">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.UdpClient>.</span></span> <span data-ttu-id="8a309-664">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.Net.Sockets.UdpClient> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="8a309-664">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpClient> object's `Finalize` method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a309-665">Obtém ou define um valor que especifica o valor TTL (Vida Útil) de pacotes IP (Protocolo de Internet) enviados pelo <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-665">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a309-666">O valor TTL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a309-666">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a309-667">O valor de TTL indica o número máximo de roteadores que um pacote pode atravessar antes que o roteador descarta o pacote e uma mensagem de protocolo ICMP (Internet Control) "TTL excedido" mensagem de erro é retornada ao remetente.</span><span class="sxs-lookup"><span data-stu-id="8a309-667">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a309-668">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.UdpClient.Ttl%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8a309-668">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>