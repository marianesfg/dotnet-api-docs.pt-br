<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9f771b6b7efaf3bac363c5bc85b2f8e27033f3c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="86983-101">Provides client connections for TCP network services.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86983-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-102">O <xref:System.Net.Sockets.TcpClient> classe fornece métodos simples para conectar-se, enviar, e dados de fluxo de recebimento em uma rede no modo síncrono de bloqueio.</span><span class="sxs-lookup"><span data-stu-id="86983-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="86983-103">Para que <xref:System.Net.Sockets.TcpClient> para se conectar e trocar dados, um <xref:System.Net.Sockets.TcpListener> ou <xref:System.Net.Sockets.Socket> criado com o TCP <xref:System.Net.Sockets.ProtocolType> deve estar escutando para solicitações de conexão de entrada.</span><span class="sxs-lookup"><span data-stu-id="86983-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="86983-104">Você pode se conectar a este ouvinte de uma das duas maneiras a seguir:</span><span class="sxs-lookup"><span data-stu-id="86983-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="86983-105">Criar um <xref:System.Net.Sockets.TcpClient> e chame um dos três disponível <xref:System.Net.Sockets.TcpClient.Connect%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="86983-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="86983-106">Criar um <xref:System.Net.Sockets.TcpClient> usando o nome do host e porta número do host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="86983-107">Este construtor tentará automaticamente uma conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-108">Se você deseja enviar datagramas sem conexão no modo de bloqueio síncrono, use o <xref:System.Net.Sockets.UdpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="86983-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-109">O exemplo de código a seguir estabelece uma <xref:System.Net.Sockets.TcpClient> conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="86983-110">Permissão para estabelecer uma conexão de saída ou aceitar uma solicitação de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86983-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="86983-111">
        <para>Para enviar e receber dados, use o <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> método para obter um <see cref="T:System.Net.Sockets.NetworkStream" />. Chamar o <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> e <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> métodos do <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar e receber dados com o host remoto. Use o <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> método para liberar todos os recursos associados a <see cref="T:System.Net.Sockets.TcpClient" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="86983-111">
          <para>To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />. Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host. Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86983-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86983-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-114">Este construtor cria um novo <xref:System.Net.Sockets.TcpClient> e permite que o provedor de serviço subjacente atribuir o mais apropriado local IP endereço e número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-114">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="86983-115">Você deve primeiro chamar o <xref:System.Net.Sockets.TcpClient.Connect%2A> método antes de enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-115">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-116">Este construtor só funciona com tipos de endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="86983-116">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-117">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-117">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-118">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-118">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-119">O exemplo de código a seguir demonstra como usar o construtor padrão para criar um novo <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="86983-119">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="86983-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-122">Este construtor cria um novo <xref:System.Net.Sockets.TcpClient> e associa-o para o <xref:System.Net.IPEndPoint> especificado pelo `localEP` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="86983-122">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="86983-123">Antes de chamar este construtor, você deve criar um <xref:System.Net.IPEndPoint> usando o número de porta e endereço IP do qual você deseja enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-123">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="86983-124">Você não precisa especificar um número de porta e endereço IP local antes de se conectar e se comunicando.</span><span class="sxs-lookup"><span data-stu-id="86983-124">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="86983-125">Se você criar um <xref:System.Net.Sockets.TcpClient> usando qualquer outro construtor, o provedor de serviço subjacente atribuirá o mais apropriado local IP endereço e número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-125">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="86983-126">Você deve chamar o <xref:System.Net.Sockets.TcpClient.Connect%2A> método antes de enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-126">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-127">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-127">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-128">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-128">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-129">O exemplo de código a seguir demonstra como criar uma instância do <xref:System.Net.Sockets.TcpClient> classe usando um ponto de extremidade local.</span><span class="sxs-lookup"><span data-stu-id="86983-129">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="86983-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="86983-133">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-133">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-134">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-134">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-135">O exemplo de código a seguir demonstra como criar uma instância do <xref:System.Net.Sockets.TcpClient> classe.</span><span class="sxs-lookup"><span data-stu-id="86983-135">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86983-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="86983-137">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-137">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-138">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-138">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-140">Este construtor cria um novo <xref:System.Net.Sockets.TcpClient> e faz uma conexão síncrona tentar o nome do host fornecido e o número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-140">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="86983-141">O provedor de serviço subjacente atribuirá o mais apropriado local IP endereço e número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-141">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="86983-142"><xref:System.Net.Sockets.TcpClient> será bloqueado até que ele se conecta ou falha.</span><span class="sxs-lookup"><span data-stu-id="86983-142"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="86983-143">Este construtor permite inicializar, resolver o nome de host DNS e conecte-se em uma única etapa conveniente.</span><span class="sxs-lookup"><span data-stu-id="86983-143">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="86983-144">Se o IPv6 estiver habilitado e o <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> método é chamado para se conectar a um host que resolve para ambos IPv6 e endereços IPv4, a conexão do IPv6 endereço será tentada primeiro antes do endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="86983-144">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="86983-145">Isso pode ter o efeito do atraso de tempo para estabelecer a conexão, se o host não está escutando no endereço IPv6.</span><span class="sxs-lookup"><span data-stu-id="86983-145">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-146">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-146">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-147">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-147">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-148">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-148">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-149">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-149">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-150">O exemplo de código a seguir demonstra como criar uma instância do <xref:System.Net.Sockets.TcpClient> classe usando um nome de host e número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-150">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-153">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-154">Gets or set a value that indicates whether a connection has been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-154">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-155">
            <see langword="true" /> se a conexão tiver sido estabelecida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-155">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-156">Classes derivadas de <xref:System.Net.Sockets.TcpClient> pode usar essa propriedade para determinar se uma tentativa de conexão foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="86983-156">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="86983-157">Ele não monitora o estado de conexão contínua de <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="86983-157">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="86983-158">Se o host remoto fecha a conexão, <xref:System.Net.Sockets.TcpClient.Active%2A> não será atualizado.</span><span class="sxs-lookup"><span data-stu-id="86983-158">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="86983-159">Se você estiver derivando de <xref:System.Net.Sockets.TcpClient> e exigir a atenção para o estado de conexão, use o <xref:System.Net.Sockets.Socket.Connected%2A> propriedade o <xref:System.Net.Sockets.Socket> retornado pelo <xref:System.Net.Sockets.TcpClient.Client%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-159">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-161">O número de bytes de dados recebidos da rede e disponíveis para serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-161">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-162"><xref:System.Net.Sockets.TcpClient.Available%2A> é uma maneira de determinar se a dados está na fila para leitura.</span><span class="sxs-lookup"><span data-stu-id="86983-162"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="86983-163">Se houver dados disponíveis, chame <xref:System.Net.Sockets.NetworkStream.Read%2A> para obter os dados.</span><span class="sxs-lookup"><span data-stu-id="86983-163">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="86983-164">Os dados disponíveis serão a quantidade total de dados no buffer de rede para leitura.</span><span class="sxs-lookup"><span data-stu-id="86983-164">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="86983-165">Se nenhum dado é enfileirado no buffer de rede, <xref:System.Net.Sockets.TcpClient.Available%2A> retornará 0.</span><span class="sxs-lookup"><span data-stu-id="86983-165">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="86983-166">Se o host remoto é desligado ou fecha a conexão, <xref:System.Net.Sockets.TcpClient.Available%2A> pode gerar um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="86983-166">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="86983-167">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-167">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-168">Depois de obter esse código, você pode consultar a documentação de códigos de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-168">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-169">O exemplo de código a seguir mostra o uso do <xref:System.Net.Sockets.TcpClient.Available%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86983-169">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-170">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-170">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86983-172">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-172">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="86983-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-174">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-174">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="86983-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="86983-176">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-176">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="86983-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-178">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-178">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="86983-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-181">O assíncrona <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-181">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="86983-182">Normalmente, o método é invocado pelo `asyncCallback` delegate.</span><span class="sxs-lookup"><span data-stu-id="86983-182">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="86983-183">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="86983-183">This method does not block until the operation completes.</span></span> <span data-ttu-id="86983-184">Para bloquear até que a operação for concluída, use um do <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas do método.</span><span class="sxs-lookup"><span data-stu-id="86983-184">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="86983-185">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="86983-185">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-186">O exemplo de código a seguir cria um <xref:System.Net.Sockets.TcpClient> e se conecta a um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-186">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-188">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-188">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="86983-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-191">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-191">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="86983-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-193">The port number of the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-193">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="86983-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="86983-195">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-195">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="86983-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-197">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-197">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="86983-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-200">O assíncrona <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-200">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="86983-201">Normalmente, o método é invocado pelo `asyncCallback` delegate.</span><span class="sxs-lookup"><span data-stu-id="86983-201">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="86983-202">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="86983-202">This method does not block until the operation completes.</span></span> <span data-ttu-id="86983-203">Para bloquear até que a operação for concluída, use um do <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas do método.</span><span class="sxs-lookup"><span data-stu-id="86983-203">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="86983-204">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="86983-204">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="86983-205">Esse método é geralmente usado imediatamente após uma chamada para o <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que pode retornar vários endereços IP para um único host.</span><span class="sxs-lookup"><span data-stu-id="86983-205">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-206">O exemplo de código a seguir cria um <xref:System.Net.Sockets.TcpClient> e se conecta a um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-206">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-208">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-208">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="86983-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-211">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-211">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="86983-212">The name of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-212">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-213">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-213">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="86983-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="86983-215">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-215">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="86983-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-217">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-217">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="86983-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-220">O assíncrona <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operação deve ser concluída chamando o <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-220">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="86983-221">Normalmente, o método é invocado pelo `asyncCallback` delegate.</span><span class="sxs-lookup"><span data-stu-id="86983-221">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="86983-222">Esse método não bloqueia até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="86983-222">This method does not block until the operation completes.</span></span> <span data-ttu-id="86983-223">Para bloquear até que a operação for concluída, use um do <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas do método.</span><span class="sxs-lookup"><span data-stu-id="86983-223">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="86983-224">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="86983-224">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-225">O exemplo de código a seguir cria um <xref:System.Net.Sockets.TcpClient> e se conecta a um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-225">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-227">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-227">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="86983-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-230">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-230">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-232">O <see cref="T:System.Net.Sockets.Socket" /> da rede subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-232">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-233"><xref:System.Net.Sockets.TcpClient> cria um <xref:System.Net.Sockets.Socket> para enviar e receber dados pela rede.</span><span class="sxs-lookup"><span data-stu-id="86983-233"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="86983-234">Classes derivadas de <xref:System.Net.Sockets.TcpClient> pode usar essa propriedade para obter ou definir isso <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="86983-234">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="86983-235">Use subjacente <xref:System.Net.Sockets.Socket> retornado de <xref:System.Net.Sockets.TcpClient.Client%2A> se você precisar acessar além do qual <xref:System.Net.Sockets.TcpClient> fornece.</span><span class="sxs-lookup"><span data-stu-id="86983-235">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="86983-236">Você também pode usar <xref:System.Net.Sockets.TcpClient.Client%2A> definir subjacente <xref:System.Net.Sockets.Socket> um existente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="86983-236">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="86983-237">Isso pode ser útil se você quiser aproveitar a simplicidade do <xref:System.Net.Sockets.TcpClient> usando um pré-existente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="86983-237">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-238">O exemplo de código a seguir demonstra o uso do <xref:System.Net.Sockets.TcpClient.Client%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86983-238">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="86983-239">Neste exemplo, o tamanho do buffer de recebimento de subjacente <xref:System.Net.Sockets.Socket> é alterado.</span><span class="sxs-lookup"><span data-stu-id="86983-239">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86983-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-241">O <xref:System.Net.Sockets.TcpClient.Close%2A> método marca a instância como descartado e solicita que o associado <xref:System.Net.Sockets.Socket> fechar a conexão TCP.</span><span class="sxs-lookup"><span data-stu-id="86983-241">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="86983-242">Com base no <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriedade, a conexão TCP pode permanecer aberta por algum tempo após o <xref:System.Net.Sockets.TcpClient.Close%2A> método é chamado quando os dados permanecem para serem enviadas.</span><span class="sxs-lookup"><span data-stu-id="86983-242">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="86983-243">Não há nenhuma notificação fornecida quando a conexão subjacente foi concluída de fechamento.</span><span class="sxs-lookup"><span data-stu-id="86983-243">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="86983-244">Chamar esse método resultará no fechamento do associado <xref:System.Net.Sockets.Socket> e também fechará associado <xref:System.Net.Sockets.NetworkStream> que é usado para enviar e receber dados se ele foi criado.</span><span class="sxs-lookup"><span data-stu-id="86983-244">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-245">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-246">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-247">O exemplo de código a seguir demonstra o fechamento um <xref:System.Net.Sockets.TcpClient> chamando o <xref:System.Net.Sockets.TcpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-247">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86983-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="86983-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-251">Chame esse método para estabelecer uma conexão síncrona host remoto especificado <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="86983-251">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="86983-252">Antes de chamar <xref:System.Net.Sockets.TcpClient.Connect%2A> você deve criar uma instância do <xref:System.Net.IPEndPoint> classe usando um endereço IP e um número de porta.</span><span class="sxs-lookup"><span data-stu-id="86983-252">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="86983-253">Use este <xref:System.Net.IPEndPoint> como o `remoteEP` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="86983-253">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="86983-254">O <xref:System.Net.Sockets.TcpClient.Connect%2A> método será bloqueado até que ele se conecta ou falha.</span><span class="sxs-lookup"><span data-stu-id="86983-254">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="86983-255">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-255">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-256">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-256">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-257">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-257">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-258">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-258">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-259">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-259">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-260">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="86983-260">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-261">O seguinte exemplo de código usa um <xref:System.Net.IPEndPoint> para conectar-se com um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-261">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-263">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-263">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="86983-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-266">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-266">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-268">Chame esse método para estabelecer uma conexão síncrona host remoto especificado <xref:System.Net.IPAddress> e número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-268">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="86983-269">O <xref:System.Net.Sockets.TcpClient.Connect%2A> método será bloqueado até que ele se conecta ou falha.</span><span class="sxs-lookup"><span data-stu-id="86983-269">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="86983-270">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-270">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-271">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-271">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-272">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-272">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-273">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-273">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-274">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-274">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-275">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-275">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-276">O exemplo de código a seguir usa um endereço IP e número da porta para conectar-se com um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-276">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-279">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-279">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-280">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-280">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="86983-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-282">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-282">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-284">Esse método é geralmente usado imediatamente após uma chamada para o <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que pode retornar vários endereços IP para um único host.</span><span class="sxs-lookup"><span data-stu-id="86983-284">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="86983-285">Chamar o <xref:System.Net.Sockets.TcpClient.Connect%2A> método para estabelecer uma conexão síncrona host remoto para o host especificado pela matriz de <xref:System.Net.IPAddress> elementos e o número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-285">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="86983-286">O <xref:System.Net.Sockets.TcpClient.Connect%2A> método será bloqueado até que ele se conecta ou falha.</span><span class="sxs-lookup"><span data-stu-id="86983-286">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="86983-287">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-287">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-288">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-288">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-289">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-290">Depois de obter esse código, você pode consultar a documentação de códigos de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-290">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-291">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-291">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-292">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-293">O exemplo de código a seguir usa um endereço IP e número da porta para conectar-se com um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-293">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-295">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-295">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-296">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-296">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="86983-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="86983-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="86983-300">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-300">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-301">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-301">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-302">Connects the client to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-302">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-303">Chame esse método para estabelecer uma conexão síncrona host remoto com o nome de host especificado e o número da porta.</span><span class="sxs-lookup"><span data-stu-id="86983-303">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="86983-304">O <xref:System.Net.Sockets.TcpClient.Connect%2A> método será bloqueado até que ele se conecta ou falha.</span><span class="sxs-lookup"><span data-stu-id="86983-304">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="86983-305">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-305">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-306">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-306">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="86983-307">Se o IPv6 estiver habilitado e o <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> método é chamado para se conectar a um host que resolve para ambos IPv6 e endereços IPv4, a conexão do IPv6 endereço será tentada primeiro antes do endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="86983-307">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="86983-308">Isso pode ter o efeito do atraso de tempo para estabelecer a conexão, se o host não está escutando no endereço IPv6.</span><span class="sxs-lookup"><span data-stu-id="86983-308">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-309">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-309">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-310">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-310">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-311">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-311">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-312">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-312">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-313">A exemplo a seguir código usa o nome do host e a porta de número para conectar-se com um host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-313">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-316">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-316">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-317">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-317">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86983-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="86983-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-320">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-320">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-323">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="86983-323">This operation will not block.</span></span> <span data-ttu-id="86983-324">Retorna a retornado <xref:System.Threading.Tasks.Task> objeto será concluída após o estabelecimento de conexão TCP.</span><span class="sxs-lookup"><span data-stu-id="86983-324">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="86983-325">Esse método não bloqueia o thread de chamada, enquanto a solicitação de conexão está em andamento.</span><span class="sxs-lookup"><span data-stu-id="86983-325">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="86983-326">Chame esse método para estabelecer uma conexão síncrona host remoto especificado <xref:System.Net.IPAddress> e número da porta como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="86983-326">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="86983-327">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-327">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-328">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-328">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-329">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-329">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-330">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-330">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-331">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-331">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-332">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-332">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-335">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-336">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-336">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="86983-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-338">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-338">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-341">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="86983-341">This operation will not block.</span></span> <span data-ttu-id="86983-342">Retorna a retornado <xref:System.Threading.Tasks.Task> objeto será concluída após o estabelecimento de conexão TCP.</span><span class="sxs-lookup"><span data-stu-id="86983-342">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="86983-343">Esse método não bloqueia o thread de chamada, enquanto a solicitação de conexão está em andamento.</span><span class="sxs-lookup"><span data-stu-id="86983-343">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="86983-344">Esse método é geralmente usado imediatamente após uma chamada para o <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que pode retornar vários endereços IP para um único host.</span><span class="sxs-lookup"><span data-stu-id="86983-344">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="86983-345">Chame esse método para estabelecer uma conexão síncrona host remoto para o host especificado pela matriz de <xref:System.Net.IPAddress> elementos e o número da porta como uma operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="86983-345">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="86983-346">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-346">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-347">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-347">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-348">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-348">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-349">Depois de obter esse código, você pode consultar a documentação de códigos de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-349">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-350">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-350">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-351">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-353">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-353">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-354">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-354">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="86983-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="86983-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="86983-358">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-358">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="86983-359">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-359">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-362">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="86983-362">This operation will not block.</span></span> <span data-ttu-id="86983-363">Retorna a retornado <xref:System.Threading.Tasks.Task> objeto será concluída após o estabelecimento de conexão TCP.</span><span class="sxs-lookup"><span data-stu-id="86983-363">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="86983-364">Esse método não bloqueia o thread de chamada, enquanto a solicitação de conexão está em andamento.</span><span class="sxs-lookup"><span data-stu-id="86983-364">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="86983-365">Chame esse método para estabelecer uma conexão síncrona host remoto com o nome de host especificado e o número como uma operação assíncrona porta.</span><span class="sxs-lookup"><span data-stu-id="86983-365">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="86983-366">Depois de se conectar com o host remoto, use o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-366">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-367">Use <xref:System.Net.Sockets.NetworkStream> para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-367">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="86983-368">Se o IPv6 estiver habilitado e o <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> método é chamado para se conectar a um host que resolve para ambos IPv6 e endereços IPv4, a conexão do IPv6 endereço será tentada primeiro antes do endereço IPv4.</span><span class="sxs-lookup"><span data-stu-id="86983-368">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="86983-369">Isso pode ter o efeito do atraso de tempo para estabelecer a conexão, se o host não está escutando no endereço IPv6.</span><span class="sxs-lookup"><span data-stu-id="86983-369">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-370">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-370">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-371">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-371">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-372">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-372">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-373">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-373">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86983-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-376">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-376">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-377">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-377">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-379">
            <see langword="true" /> se o <see cref="P:System.Net.Sockets.TcpClient.Client" /> soquete tiver sido conectado a um recurso remoto desde a operação mais recente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-379">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-380">O <xref:System.Net.Sockets.TcpClient.Connected%2A> propriedade obtém o estado de conexão do <xref:System.Net.Sockets.TcpClient.Client%2A> soquete desde a última operação de e/s.</span><span class="sxs-lookup"><span data-stu-id="86983-380">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="86983-381">Quando ele retorna `false`, o <xref:System.Net.Sockets.TcpClient.Client%2A> soquete nunca foi conectado ou não está mais conectado.</span><span class="sxs-lookup"><span data-stu-id="86983-381">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="86983-382">Porque o <xref:System.Net.Sockets.TcpClient.Connected%2A> propriedade só reflete o estado da conexão a partir da operação mais recente, você deve tentar enviar ou receber uma mensagem para determinar o estado atual.</span><span class="sxs-lookup"><span data-stu-id="86983-382">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="86983-383">Depois que a mensagem de envio falhar, essa propriedade não retorna mais `true`.</span><span class="sxs-lookup"><span data-stu-id="86983-383">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="86983-384">Observe que esse comportamento ocorre por design.</span><span class="sxs-lookup"><span data-stu-id="86983-384">Note that this behavior is by design.</span></span> <span data-ttu-id="86983-385">Não é possível testar confiavelmente o estado da conexão porque, em algum momento entre o teste e um envio/recebimento, a conexão foi foram perdida.</span><span class="sxs-lookup"><span data-stu-id="86983-385">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="86983-386">Seu código deve assumir o soquete está conectado e normalmente o identificador não pôde transmissões.</span><span class="sxs-lookup"><span data-stu-id="86983-386">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-387">O exemplo de código a seguir se conecta a um ponto de extremidade remoto e, em seguida, verifica a conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-387">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86983-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="86983-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-391">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="86983-391">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="86983-392">`Dispose()` chama esse método com o `disposing` parâmetro definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="86983-392">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="86983-393"><xref:System.Object.Finalize%2A> chama esse método com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="86983-393"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="86983-394">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Net.Sockets.TcpClient> referências.</span><span class="sxs-lookup"><span data-stu-id="86983-394">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="86983-395">Ele faz isso invocando o `Dispose()` método de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="86983-395">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-396">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-396">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-397">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-397">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86983-398">
            <para>
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see langword="Dispose(Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />. Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza Resources](~/docs/standard/garbage-collection/unmanaged.md) não gerenciado e [substituindo o método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-398">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="86983-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86983-400">Ends a pending asynchronous connection attempt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-400">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-401">Blocos este método até que a operação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="86983-401">This method blocks until the operation is complete.</span></span> <span data-ttu-id="86983-402">Para executar esta operação síncrona, use um <xref:System.Net.Sockets.TcpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-402">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-403">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-403">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-404">Depois de obter esse código, você pode consultar a documentação de códigos de erro do Windows Sockets versão 2 API na biblioteca MSDN em [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-404">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-405">O exemplo de código a seguir encerra a tentativa de conexão assíncrona.</span><span class="sxs-lookup"><span data-stu-id="86983-405">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86983-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86983-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86983-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-412">
            <see langword="true" /> se o <see cref="T:System.Net.Sockets.TcpClient" /> permitir que apenas um cliente use uma porta específica; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-412">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="86983-413">O padrão é <see langword="true" /> para o Windows Server 2003 e Windows XP Service Pack 2 e posterior e <see langword="false" /> para todas as outras versões.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-413">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-414">Por padrão, vários clientes podem usar uma porta específica; No entanto, apenas um dos clientes pode executar operações no tráfego de rede enviado para a porta.</span><span class="sxs-lookup"><span data-stu-id="86983-414">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="86983-415">Você pode usar o <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propriedade para impedir que vários clientes usando uma porta específica.</span><span class="sxs-lookup"><span data-stu-id="86983-415">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="86983-416">Essa propriedade deve ser definida antes do soquete subjacente está associado a uma porta de cliente.</span><span class="sxs-lookup"><span data-stu-id="86983-416">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="86983-417">Se você chamar <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, ou <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, a porta do cliente é vinculada como um efeito colateral do método e, posteriormente, não é possível definir o <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propriedade</span><span class="sxs-lookup"><span data-stu-id="86983-417">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-418">O exemplo de código a seguir cria um <xref:System.Net.Sockets.TcpClient> obtém e define o valor de <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86983-418">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-419">An error occurred when attempting to access the underlying socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-419">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86983-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-422">Este método substitui <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="86983-422">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="86983-423">O código do aplicativo não deve chamar este método; o método <xref:System.Object.Finalize%2A> de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o método <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="86983-423">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="86983-424">O <xref:System.Net.Sockets.TcpClient> finalizador da classe fecha a conexão TCP e libera todos os recursos gerenciados associados a <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="86983-424">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="86983-425">Esses recursos incluem subjacente <xref:System.Net.Sockets.Socket> usada para conectar-se com o host remoto e o <xref:System.Net.Sockets.NetworkStream> usado para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-425">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="86983-426">O finalizador não liberar quaisquer recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="86983-426">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="86983-427">Para obter mais informações, consulte [métodos Finalize e destruidores](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md), e [substituindo o método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="86983-427">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86983-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86983-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> Retorna um <xref:System.Net.Sockets.NetworkStream> que você pode usar para enviar e receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="86983-431">O <xref:System.Net.Sockets.NetworkStream> classe herda o <xref:System.IO.Stream> classe, que fornece um rico conjunto de métodos e propriedades usados para facilitar a comunicação de rede.</span><span class="sxs-lookup"><span data-stu-id="86983-431">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="86983-432">Você deve chamar o <xref:System.Net.Sockets.TcpClient.Connect%2A> método primeiro, ou o <xref:System.Net.Sockets.TcpClient.GetStream%2A> método lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="86983-432">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="86983-433">Depois de obter o <xref:System.Net.Sockets.NetworkStream>, chame o <xref:System.Net.Sockets.NetworkStream.Write%2A> método para enviar dados para o host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-433">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="86983-434">Chamar o <xref:System.Net.Sockets.NetworkStream.Read%2A> método para receber dados chegando do host remoto.</span><span class="sxs-lookup"><span data-stu-id="86983-434">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="86983-435">Ambos os métodos bloqueiam até que a operação especificada é executada.</span><span class="sxs-lookup"><span data-stu-id="86983-435">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="86983-436">Você pode evitar o bloqueio em uma operação de leitura, marcando o <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86983-436">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="86983-437">Um `true` valor significa que dados foi recebido no host remoto e estão disponíveis para leitura.</span><span class="sxs-lookup"><span data-stu-id="86983-437">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="86983-438">Nesse caso, <xref:System.Net.Sockets.NetworkStream.Read%2A> é garantido para ser concluída imediatamente.</span><span class="sxs-lookup"><span data-stu-id="86983-438">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="86983-439">Se o host remoto encerrou sua conexão <xref:System.Net.Sockets.NetworkStream.Read%2A> retornará imediatamente com zero bytes.</span><span class="sxs-lookup"><span data-stu-id="86983-439">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-440">Você deve fechar o <xref:System.Net.Sockets.NetworkStream> quando tiver acabado de envio e recebimento de dados.</span><span class="sxs-lookup"><span data-stu-id="86983-440">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="86983-441">Fechando <xref:System.Net.Sockets.TcpClient> não liberar o <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-441">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-442">Se você receber um <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obter o código de erro específico.</span><span class="sxs-lookup"><span data-stu-id="86983-442">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="86983-443">Depois de obter esse código, você pode consultar o Windows Sockets versão 2 erro código documentação da API no MSDN para obter uma descrição detalhada do erro.</span><span class="sxs-lookup"><span data-stu-id="86983-443">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86983-444">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-444">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="86983-445">Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="86983-445">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-446">O seguinte exemplo de código usa <xref:System.Net.Sockets.TcpClient.GetStream%2A> obter subjacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="86983-446">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="86983-447">Depois de obter o <xref:System.Net.Sockets.NetworkStream>, ele envia e recebe usando seu <xref:System.Net.Sockets.NetworkStream.Write%2A> e <xref:System.Net.Sockets.NetworkStream.Read%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="86983-447">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86983-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86983-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-450">Gets or sets information about the linger state of the associated socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-450">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-451">Um <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-451">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="86983-452">Por padrão, a remanescência está desabilitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-452">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-453">O <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriedade altera o modo como <xref:System.Net.Sockets.Socket.Close%2A> método se comporta.</span><span class="sxs-lookup"><span data-stu-id="86983-453">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="86983-454">Essa propriedade ao conjunto modifica as condições sob as quais a conexão pode ser redefinido com Winsock.</span><span class="sxs-lookup"><span data-stu-id="86983-454">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="86983-455">Redefinições de Conexão ainda podem ocorrer com base no comportamento de protocolo IP.</span><span class="sxs-lookup"><span data-stu-id="86983-455">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="86983-456">Essa propriedade controla o período de tempo que a conexão TCP permanecerá aberta após uma chamada para <xref:System.Net.Sockets.TcpClient.Close%2A> quando os dados permanecem para serem enviadas.</span><span class="sxs-lookup"><span data-stu-id="86983-456">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="86983-457">Quando você chama o <xref:System.Net.Sockets.NetworkStream.Write%2A> método, de dados é colocado no buffer de saída de rede.</span><span class="sxs-lookup"><span data-stu-id="86983-457">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="86983-458">Essa propriedade pode ser usada para garantir que esses dados são enviados ao host remoto antes do <xref:System.Net.Sockets.TcpClient.Close%2A> método descarta a conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-458">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="86983-459">Para habilitar remanescentes, crie um <xref:System.Net.Sockets.LingerOption> instância que contém os valores desejados e defina o <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriedade para essa instância.</span><span class="sxs-lookup"><span data-stu-id="86983-459">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="86983-460">A tabela a seguir descreve o comportamento do <xref:System.Net.Sockets.TcpClient.Close%2A> método para os valores possíveis do <xref:System.Net.Sockets.LingerOption.Enabled%2A> propriedade e o <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propriedade armazenada no <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86983-460">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="86983-461">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="86983-461">LingerState.Enabled</span></span>|<span data-ttu-id="86983-462">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="86983-462">LingerState.LingerTime</span></span>|<span data-ttu-id="86983-463">Comportamento</span><span class="sxs-lookup"><span data-stu-id="86983-463">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="86983-464">`false` (desabilitado), o valor padrão</span><span class="sxs-lookup"><span data-stu-id="86983-464">`false` (disabled), the default value</span></span>|<span data-ttu-id="86983-465">O tempo limite não é aplicável, (padrão).</span><span class="sxs-lookup"><span data-stu-id="86983-465">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="86983-466">Tentativas de enviar dados pendentes até expira o tempo limite de protocolo IP padrão.</span><span class="sxs-lookup"><span data-stu-id="86983-466">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="86983-467">`true` (habilitado)</span><span class="sxs-lookup"><span data-stu-id="86983-467">`true` (enabled)</span></span>|<span data-ttu-id="86983-468">Um tempo limite diferente de zero</span><span class="sxs-lookup"><span data-stu-id="86983-468">A nonzero time-out</span></span>|<span data-ttu-id="86983-469">Tentativas de enviar dados pendentes até expira o tempo limite especificado, e se a tentativa falhar, o Winsock redefine a conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-469">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="86983-470">`true` (habilitado)</span><span class="sxs-lookup"><span data-stu-id="86983-470">`true` (enabled)</span></span>|<span data-ttu-id="86983-471">Um zero tempo limite.</span><span class="sxs-lookup"><span data-stu-id="86983-471">A zero timeout.</span></span>|<span data-ttu-id="86983-472">Descarta qualquer pendente dados e redefinições de Winsock a conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-472">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="86983-473">A pilha de IP calcula o período de tempo limite de protocolo IP padrão para usar com base no tempo de ida e volta da conexão.</span><span class="sxs-lookup"><span data-stu-id="86983-473">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="86983-474">Na maioria dos casos, o tempo de limite calculado pela pilha é mais relevante do que um definido por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-474">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="86983-475">Esse é o comportamento padrão para um soquete quando o <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriedade não está definida.</span><span class="sxs-lookup"><span data-stu-id="86983-475">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="86983-476">Quando o <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propriedade armazenada no <xref:System.Net.Sockets.TcpClient.LingerState%2A> propriedade é definida maior que o tempo limite de protocolo IP padrão, o tempo limite de protocolo IP padrão ainda se aplicam e substituir.</span><span class="sxs-lookup"><span data-stu-id="86983-476">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-477">O código a seguir exemplo define e obtém durar soquetes de tempo.</span><span class="sxs-lookup"><span data-stu-id="86983-477">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-479">
            <see langword="true" /> se o atraso for desabilitado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-479">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="86983-480">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-480">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-481">Quando <xref:System.Net.Sockets.TcpClient.NoDelay%2A> é `false`, um <xref:System.Net.Sockets.TcpClient> não enviar um pacote pela rede até que ele tenha coletado uma quantidade significativa de dados de saída.</span><span class="sxs-lookup"><span data-stu-id="86983-481">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="86983-482">Por causa da quantidade de sobrecarga em um segmento TCP, é ineficiente enviar pequenas quantidades de dados.</span><span class="sxs-lookup"><span data-stu-id="86983-482">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="86983-483">No entanto, existirão situações em que você precisa enviar muito pequenas quantidades de dados ou esperar respostas imediatas de cada pacote que você enviar.</span><span class="sxs-lookup"><span data-stu-id="86983-483">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="86983-484">Sua decisão deve avaliar a importância relativa de eficiência da rede em comparação com os requisitos do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-484">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-485">O exemplo de código a seguir desabilita o atraso.</span><span class="sxs-lookup"><span data-stu-id="86983-485">The following code example disables the delay.</span></span> <span data-ttu-id="86983-486">Em seguida, verifica o valor de <xref:System.Net.Sockets.TcpClient.NoDelay%2A> para verificar se a propriedade foi definida com êxito.</span><span class="sxs-lookup"><span data-stu-id="86983-486">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-487">Gets or sets the size of the receive buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-487">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-488">O tamanho do buffer de recepção, em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-488">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="86983-489">O valor padrão é de 8.192 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-489">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-490">O <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propriedade obtém ou define o número de bytes que estão esperando para armazenar em buffer de recebimento para cada operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="86983-490">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="86983-491">Essa propriedade realmente manipula o espaço de buffer de rede alocado para receber dados de entrada.</span><span class="sxs-lookup"><span data-stu-id="86983-491">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="86983-492">O buffer de rede deve ser pelo menos tão grande quanto o buffer de aplicativo para garantir que os dados desejados estarão disponíveis quando você chamar o <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="86983-492">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="86983-493">Use o <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propriedade para definir esse tamanho.</span><span class="sxs-lookup"><span data-stu-id="86983-493">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="86983-494">Se seu aplicativo receberá dados em massa, você deve transmitir o <xref:System.Net.Sockets.NetworkStream.Read%2A> método um buffer de aplicativo muito grande.</span><span class="sxs-lookup"><span data-stu-id="86983-494">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="86983-495">Se o buffer de rede é menor do que a quantidade de dados que você solicitar no <xref:System.Net.Sockets.NetworkStream.Read%2A> método, você não poderá recuperar a quantidade de dados em uma operação de leitura desejada.</span><span class="sxs-lookup"><span data-stu-id="86983-495">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="86983-496">Isso gera sobrecarga de chamadas adicionais para o <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-496">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-497">O exemplo de código a seguir define e obtém o tamanho do buffer de recepção.</span><span class="sxs-lookup"><span data-stu-id="86983-497">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="86983-498">An error occurred when setting the buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-498">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="86983-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="86983-500">For a workaround, see the Platform Note in Remarks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-500">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-502">O valor de tempo limite da conexão em milissegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-502">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="86983-503">O valor padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-503">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-504">O <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> propriedade determina a quantidade de tempo que o <xref:System.Net.Sockets.NetworkStream.Read%2A> método será bloqueada até que seja capaz de receber dados.</span><span class="sxs-lookup"><span data-stu-id="86983-504">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="86983-505">Esse tempo é medido em milissegundos.</span><span class="sxs-lookup"><span data-stu-id="86983-505">This time is measured in milliseconds.</span></span> <span data-ttu-id="86983-506">Se o tempo limite expirar antes de <xref:System.Net.Sockets.NetworkStream.Read%2A> concluir com êxito, <xref:System.Net.Sockets.TcpClient> lança um <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="86983-506">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="86983-507">Não há nenhum tempo limite por padrão.</span><span class="sxs-lookup"><span data-stu-id="86983-507">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-508">O exemplo de código a seguir define e obtém o tempo limite de recebimento.</span><span class="sxs-lookup"><span data-stu-id="86983-508">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-509">Gets or sets the size of the send buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-509">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-510">O tamanho, em bytes, do buffer de envio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-510">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="86983-511">O valor padrão é de 8.192 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-511">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-512">O <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propriedade obtém ou define o número de bytes que estão esperando para enviar em cada chamada para o <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="86983-512">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="86983-513">Essa propriedade realmente manipula o espaço de buffer de rede alocado para a operação de envio.</span><span class="sxs-lookup"><span data-stu-id="86983-513">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="86983-514">O buffer de rede deve ser pelo menos tão grande quanto o buffer de aplicativo para garantir que os dados desejados serão armazenados e enviados em uma única operação.</span><span class="sxs-lookup"><span data-stu-id="86983-514">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="86983-515">Use o <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propriedade para definir esse tamanho.</span><span class="sxs-lookup"><span data-stu-id="86983-515">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="86983-516">Se seu aplicativo está enviando dados em massa, você deve transmitir o <xref:System.Net.Sockets.NetworkStream.Write%2A> método um buffer de aplicativo muito grande.</span><span class="sxs-lookup"><span data-stu-id="86983-516">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="86983-517">Se o buffer de rede é menor do que a quantidade de dados que você fornecer o <xref:System.Net.Sockets.NetworkStream.Write%2A> método, vários enviadas operações serão executadas para todas as chamadas feitas à rede a <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="86983-517">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="86983-518">Você pode obter maior taxa de transferência de dados, garantindo que o buffer de rede é pelo menos tão grande quanto o buffer de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="86983-518">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-519">O exemplo de código a seguir define e obtém o tamanho do buffer de envio.</span><span class="sxs-lookup"><span data-stu-id="86983-519">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86983-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86983-521">O valor de tempo limite de envio, em milissegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-521">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="86983-522">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86983-522">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86983-523">O <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> propriedade determina a quantidade de tempo que o <xref:System.Net.Sockets.Socket.Send%2A> método será bloqueado até que ele é capaz de retornar com êxito.</span><span class="sxs-lookup"><span data-stu-id="86983-523">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="86983-524">Esse tempo é medido em milissegundos.</span><span class="sxs-lookup"><span data-stu-id="86983-524">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="86983-525">Depois de chamar o <xref:System.Net.Sockets.NetworkStream.Write%2A> método subjacente <xref:System.Net.Sockets.Socket> retorna o número de bytes realmente enviados para o host.</span><span class="sxs-lookup"><span data-stu-id="86983-525">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="86983-526">O <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> propriedade determina a quantidade de tempo um <xref:System.Net.Sockets.TcpClient> aguardará antes de receber o número de bytes retornados.</span><span class="sxs-lookup"><span data-stu-id="86983-526">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="86983-527">Se o tempo limite expirar antes do <xref:System.Net.Sockets.Socket.Send%2A> concluído com êxito, <xref:System.Net.Sockets.TcpClient> lançará um <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="86983-527">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="86983-528">Não há nenhum tempo limite por padrão.</span><span class="sxs-lookup"><span data-stu-id="86983-528">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86983-529">O exemplo de código a seguir define e obtém o <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="86983-529">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>