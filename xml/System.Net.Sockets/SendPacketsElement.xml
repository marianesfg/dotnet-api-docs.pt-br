<Type Name="SendPacketsElement" FullName="System.Net.Sockets.SendPacketsElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6fe18013c2c07899d2e113d0089b9e64b18af7f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39753295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendPacketsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendPacketsElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SendPacketsElement" />
  <TypeSignature Language="VB.NET" Value="Public Class SendPacketsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendPacketsElement" />
  <TypeSignature Language="F#" Value="type SendPacketsElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um elemento em uma matriz <see cref="T:System.Net.Sockets.SendPacketsElement" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement> classe é usada para aprimorar o <xref:System.Net.Sockets.Socket> classe para uso por aplicativos de servidor que usam a e/s de rede assíncrona para obter o melhor desempenho. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
    </remarks>
    <threadsafe>As instâncias dessa classe são thread-safe.</threadsafe>
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Uma matriz de bytes de dados a serem enviados usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o buffer especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.Byte%5B%5D%29> construtor inicializa uma nova instância do <xref:System.Net.Sockets.SendPacketsElement> classe com uma matriz de bytes de dados. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> não pode ser nulo</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement filepath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o arquivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.String%29> construtor inicializa uma nova instância do <xref:System.Net.Sockets.SendPacketsElement> classe com um nome de arquivo de um arquivo. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 Caminhos de convenção de nomenclatura (UNC) universal são suportados pelo `filepath` parâmetro. Se o arquivo estiver no diretório de trabalho atual, nenhuma informação de caminho precisa ser especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser nulo</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Uma matriz de bytes de dados a serem enviados usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
        <param name="offset">O deslocamento, em bytes, do início do <c>buffer</c> até o local no <c>buffer</c> para começar a enviar os dados especificados no parâmetro <c>buffer</c>.</param>
        <param name="count">O número de bytes a serem enviados do parâmetro <c>offset</c>. Se a <c>contagem</c> for zero, nenhum byte será enviado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o buffer especificado, o deslocamento de buffer e a contagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> construtor inicializa uma nova instância do <xref:System.Net.Sockets.SendPacketsElement> classe com uma matriz de bytes de dados. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> não pode ser nulo</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.  
  
O <paramref name="offset" /> e o <paramref name="count" /> devem ser menores que o tamanho do buffer</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
        <param name="offset">O deslocamento, em bytes, do início do arquivo até o local no arquivo para iniciar o envio do arquivo especificado no parâmetro <c>filepath</c>.</param>
        <param name="count">O número de bytes a serem enviados do parâmetro <c>offset</c>. Se a <c>contagem</c> for zero, o arquivo inteiro será enviado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o caminho especificado, o deslocamento e a contagem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%29> construtor inicializa uma nova instância do <xref:System.Net.Sockets.SendPacketsElement> classe com um nome de arquivo de um arquivo. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 Caminhos de convenção de nomenclatura (UNC) universal são suportados pelo `filepath` parâmetro. Se o arquivo estiver no diretório de trabalho atual, nenhuma informação de caminho precisa ser especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser nulo</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.  
  
O <paramref name="offset" /> e o <paramref name="count" /> devem ser menores que o tamanho do arquivo indicado pelo parâmetro <paramref name="filepath" />.</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">Uma matriz de bytes de dados a serem enviados usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
        <param name="offset">O deslocamento, em bytes, do início do <c>buffer</c> até o local no <c>buffer</c> para começar a enviar os dados especificados no parâmetro <c>buffer</c>.</param>
        <param name="count">O número de bytes a serem enviados do parâmetro <c>offset</c>. Se a <c>contagem</c> for zero, nenhum byte será enviado.</param>
        <param name="endOfPacket">Um valor booliano que especifica que este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte. Este sinalizador é usado para controle granular do conteúdo de cada mensagem em um diagrama ou soquete orientado a mensagens.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o buffer, o deslocamento do buffer e a contagem especificados com uma opção para combinar esse elemento com o próximo elemento em uma solicitação única de envio da camada de soquetes para o transporte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%29> construtor inicializa uma nova instância do <xref:System.Net.Sockets.SendPacketsElement> classe com uma matriz de bytes de dados. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> não pode ser nulo</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.  
  
O <paramref name="offset" /> e o <paramref name="count" /> devem ser menores que o tamanho do buffer</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filepath">O nome do arquivo a ser transmitido usando o método <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
        <param name="offset">O deslocamento, em bytes, do início do arquivo até o local no arquivo para iniciar o envio do arquivo especificado no parâmetro <c>filepath</c>.</param>
        <param name="count">O número de bytes a serem enviados do parâmetro <c>offset</c>. Se a <c>contagem</c> for zero, o arquivo inteiro será enviado.</param>
        <param name="endOfPacket">Um valor booliano que especifica que este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte. Este sinalizador é usado para controle granular do conteúdo de cada mensagem em um diagrama ou soquete orientado a mensagens.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> usando o caminho do nome do arquivo, o deslocamento do buffer e a contagem especificados com uma opção para combinar esse elemento com o próximo elemento em uma solicitação única de envio da camada de soquetes para o transporte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Net.Sockets.SendPacketsElement.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%29> construtor inicializa uma nova instância do <xref:System.Net.Sockets.SendPacketsElement> classe com um nome de arquivo de um arquivo. O <xref:System.Net.Sockets.SendPacketsElement> classe é usada com o <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> propriedade para obter ou definir um buffer de dados ou arquivo a ser enviado usando o <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> método.  
  
 Caminhos de convenção de nomenclatura (UNC) universal são suportados pelo `filepath` parâmetro. Se o arquivo estiver no diretório de trabalho atual, nenhuma informação de caminho precisa ser especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filepath" /> não pode ser nulo</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Os parâmetros <paramref name="offset" /> e <paramref name="count" /> devem ser maiores ou iguais a zero.  
  
O <paramref name="offset" /> e o <paramref name="count" /> devem ser menores que o tamanho do arquivo indicado pelo parâmetro <paramref name="filepath" />.</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o buffer a ser enviado se a classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> foi inicializada com um parâmetro <paramref name="buffer" />.</summary>
        <value>O buffer de bytes a enviar, se o <see cref="T:System.Net.Sockets.SendPacketsElement" /> classe foi inicializada com um <paramref name="buffer" /> parâmetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão para o <xref:System.Net.Sockets.SendPacketsElement.Buffer%2A> propriedade é uma matriz de comprimento zero se o <xref:System.Net.Sockets.SendPacketsElement> classe não foi inicializado com um `buffer` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SendPacketsElement.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a contagem de bytes a serem enviados.</summary>
        <value>A contagem de bytes a serem enviados se a <see cref="T:System.Net.Sockets.SendPacketsElement" /> classe foi inicializada com um <paramref name="count" /> parâmetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão para o <xref:System.Net.Sockets.SendPacketsElement.Count%2A> propriedade é zero, se o <xref:System.Net.Sockets.SendPacketsElement> classe não foi inicializado com um `count` parâmetro.  
  
 Se <xref:System.Net.Sockets.SendPacketsElement.Count%2A> é zero para um arquivo, o arquivo inteiro é enviado. Se <xref:System.Net.Sockets.SendPacketsElement.Count%2A> é zero para um buffer, nenhum byte será enviado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfPacket">
      <MemberSignature Language="C#" Value="public bool EndOfPacket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfPacket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfPacket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfPacket { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfPacket : bool" Usage="System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor booliano que indica se este elemento não deve ser combinado com o próximo elemento em uma solicitação única de envio da camada de soquetes até o transporte.</summary>
        <value>Um valor booliano que indica se este elemento não deve ser combinado com o próximo elemento em um único enviar a solicitação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão para o <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A> propriedade é false se o <xref:System.Net.Sockets.SendPacketsElement> classe não foi inicializado com um `endOfPacket` como verdadeiro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obterá o nome do arquivo a ser enviado se a classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> tiver sido inicializada com um parâmetro <paramref name="filepath" />.</summary>
        <value>O nome do arquivo do arquivo a ser enviado se a <see cref="T:System.Net.Sockets.SendPacketsElement" /> classe foi inicializada com um <paramref name="filepath" /> parâmetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Caminhos de convenção de nomenclatura (UNC) universal são suportados pelo <xref:System.Net.Sockets.SendPacketsElement.FilePath%2A> propriedade. Se o arquivo estiver no diretório de trabalho atual, nenhuma informação de caminho precisa ser especificado.  
  
 O valor padrão para o <xref:System.Net.Sockets.SendPacketsElement.FilePath%2A> propriedade é uma cadeia de caracteres vazia se o <xref:System.Net.Sockets.SendPacketsElement> classe não foi inicializado com um `filepath` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o deslocamento, em bytes, do início do arquivo ou do buffer de dados até o local no buffer ou no arquivo para começar a enviar os dados.</summary>
        <value>O deslocamento, em bytes, desde o início do buffer de dados ou arquivo para o local no buffer ou no arquivo para começar a enviar os dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor padrão para o <xref:System.Net.Sockets.SendPacketsElement.Offset%2A> propriedade é zero, se o <xref:System.Net.Sockets.SendPacketsElement> classe não foi inicializado com um `offset` parâmetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>