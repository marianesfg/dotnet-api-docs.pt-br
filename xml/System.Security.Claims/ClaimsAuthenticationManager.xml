<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42a1e9b2af0b0e21944401ffe335af36234324db" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36627187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define a implementação base para um gerenciador de autenticação de declarações. O gerenciador de autenticação de declarações fornece um local no pipeline de processamento de declarações para aplicar a lógica de processamento (filtragem, validação e extensão) à coleção de declarações da entidade de segurança de entrada antes que a execução atinja o código do aplicativo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As declarações que o Gerenciador de autenticação fornece um ponto de extensibilidade na caixa de diálogo de declarações da pipeline de processamento que você pode usar para validar, filtrar, modificar, declarações ou inserir novas declarações no conjunto de declarações apresentados por um <xref:System.Security.Claims.ClaimsPrincipal> antes do RP o código do aplicativo é executado. Você pode até mesmo retornar uma implementação personalizada de <xref:System.Security.Claims.ClaimsPrincipal> se for necessário para seu aplicativo RP. A implementação padrão fornecida pela <xref:System.Security.Claims.ClaimsAuthenticationManager> classe retorna as declarações na <xref:System.Security.Claims.ClaimsPrincipal> sem modificações; no entanto, você pode derivar dessa classe e substituir o <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> método para modificar as declarações no <xref:System.Security.Claims.ClaimsPrincipal> (ou, para retornar um personalizado <xref:System.Security.Claims.ClaimsPrincipal>).  
  
 É um motivo comum para a criação de uma autenticação de declarações personalizadas manager adicionar, remover ou transformar as declarações com base nas informações que são conhecidas apenas por ou talvez, for, melhor mantidas pelo aplicativo RP. Por exemplo, um histórico de compras de clientes em um aplicativo de carrinho de compras pode ser mantido em uma base de dados mantidos pelo aplicativo RP e, em seguida, adicionado à entidade de declarações retornada pelo Gerenciador de autenticação de declarações com base no valor de uma declaração de nome encontrado no a entidade de segurança de entrada.  
  
 Você pode configurar seu aplicativo para usar um `ClaimsAuthenticationManager` programaticamente, usando o <xref:System.IdentityModel.Configuration.IdentityConfiguration> classe ou na configuração por meio de [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) (elemento que é um elemento filho do [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) elemento). Você pode substituir a <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> método para fornecer processamento para elementos filho personalizado a `<claimsAuthenticationManager>` elemento por meio do qual o seu gerenciador personalizado pode ser configurado. A implementação base de <xref:System.Security.Claims.ClaimsAuthenticationManager> não manipula os elementos filho.  
  
 Configurar seu aplicativo para usar um Gerenciador de autenticação de declarações garante que ele será invocado pelo Windows Identity Foundation (WIF) do pipeline de solicitação.  
  
   
  
## Examples  
 O código a seguir mostra uma autenticação de declarações simples Gerenciador que adiciona uma declaração de função à entidade de entrada sem executar qualquer verificação em declarações de entrada...  
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 O XML a seguir mostra o `<claimsAuthenticationManager>` elemento.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">O endereço do recurso que está sendo solicitado.</param>
        <param name="incomingPrincipal">A entidade de segurança de declarações que representa o usuário autenticado que está tentando acessar o recurso.</param>
        <summary>Quando substituído em uma classe derivada, retorna um objeto <see cref="T:System.Security.Claims.ClaimsPrincipal" /> consistente com os requisitos do aplicativo RP. A implementação padrão não modifica o <see cref="T:System.Security.Claims.ClaimsPrincipal" /> de entrada.</summary>
        <returns>Uma entidade de segurança de declarações que contém as modificações necessárias para o aplicativo RP. A implementação padrão retorna a entidade de segurança de declarações de entrada sem modificações.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> método é chamado do pipeline de processamento de solicitação que você pode substituir esse método em uma classe derivada para filtrar, modificar ou injetar declarações de acordo com a política do seu aplicativo de RP, a entidade de declarações. Dependendo dos requisitos do aplicativo RP, você pode até mesmo retornar uma implementação personalizada de <xref:System.Security.Claims.ClaimsPrincipal>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Os elementos de configuração personalizados. Cada nó na lista é do tipo <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Quando substituído em uma classe derivada, carrega a configuração personalizada do XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> método é chamado pela infraestrutura de configuração. Quando este método é chamado, o `nodelist` conterá os elementos filho de nível superior do [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) elemento do arquivo de configuração. Cada um desses elementos pode, por sua vez, contêm atributos ou elementos filho, dependendo do esquema de configuração que você define para sua classe derivada. Se nenhum elemento filho aparecem sob o `<claimsAuthenticationManager>` elemento no arquivo de configuração, esse método não é chamado.  
  
 A implementação padrão gera um <xref:System.NotImplementedException>. Substitua este método em sua classe derivada para habilitar a inicialização do seu Gerenciador de autenticação de declarações de um arquivo de configuração. Por exemplo, os elementos de configuração podem descrever uma política a serem seguidas ao autenticar uma entidade de declarações; ou eles podem ser usados para apontar para um repositório de atributos do qual declarações adicionais devem ser adicionados à entidade de segurança.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>