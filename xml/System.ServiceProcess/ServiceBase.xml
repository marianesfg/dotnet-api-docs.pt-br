<Type Name="ServiceBase" FullName="System.ServiceProcess.ServiceBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="907e18f0826f837bcc30e54977bd505224d33bf3" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55339629" /></Metadata><TypeSignature Language="C#" Value="public class ServiceBase : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBase extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBase&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBase : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ServiceBase = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.ServiceProcess.ServiceProcessInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.UserNTServiceDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IRootDesigner")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="03fdf-101">Fornece uma classe base para um serviço que existirá como parte de um aplicativo de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-101">Provides a base class for a service that will exist as part of a service application.</span></span> <span data-ttu-id="03fdf-102"><see cref="T:System.ServiceProcess.ServiceBase" /> deve ser derivado do momento da criação de uma nova classe de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-102"><see cref="T:System.ServiceProcess.ServiceBase" /> must be derived from when creating a new service class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-103">Derivar de <xref:System.ServiceProcess.ServiceBase> ao definir sua classe de serviço em um aplicativo de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-103">Derive from <xref:System.ServiceProcess.ServiceBase> when defining your service class in a service application.</span></span> <span data-ttu-id="03fdf-104">Substituições de qualquer serviço útil a <xref:System.ServiceProcess.ServiceBase.OnStart%2A> e <xref:System.ServiceProcess.ServiceBase.OnStop%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-104">Any useful service overrides the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods.</span></span> <span data-ttu-id="03fdf-105">Para obter funcionalidade adicional, você pode substituir <xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> com comportamento específico em resposta a alterações no estado do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-105">For additional functionality, you can override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> with specific behavior in response to changes in the service state.</span></span>  
  
 <span data-ttu-id="03fdf-106">Um serviço é um executável de longa execução que não oferece suporte a uma interface do usuário, e que não pode ser executado sob a conta de logon do usuário.</span><span class="sxs-lookup"><span data-stu-id="03fdf-106">A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</span></span> <span data-ttu-id="03fdf-107">O serviço pode ser executado sem qualquer usuário que está sendo conectado ao computador.</span><span class="sxs-lookup"><span data-stu-id="03fdf-107">The service can run without any user being logged on to the computer.</span></span>  
  
 <span data-ttu-id="03fdf-108">Por padrão, os serviços executados na conta do sistema, que não é o mesmo que a conta de administrador.</span><span class="sxs-lookup"><span data-stu-id="03fdf-108">By default, services run under the System account, which is not the same as the Administrator account.</span></span> <span data-ttu-id="03fdf-109">Você não pode alterar os direitos da conta do sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-109">You cannot change the rights of the System account.</span></span> <span data-ttu-id="03fdf-110">Como alternativa, você pode usar um <xref:System.ServiceProcess.ServiceProcessInstaller> para especificar uma conta de usuário sob a qual o serviço será executado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-110">Alternatively, you can use a <xref:System.ServiceProcess.ServiceProcessInstaller> to specify a user account under which the service will run.</span></span>  
  
 <span data-ttu-id="03fdf-111">Um executável pode conter mais de um serviço, mas deve conter um separado <xref:System.ServiceProcess.ServiceInstaller> para cada serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-111">An executable can contain more than one service but must contain a separate <xref:System.ServiceProcess.ServiceInstaller> for each service.</span></span> <span data-ttu-id="03fdf-112">O <xref:System.ServiceProcess.ServiceInstaller> instância registra o serviço com o sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-112">The <xref:System.ServiceProcess.ServiceInstaller> instance registers the service with the system.</span></span> <span data-ttu-id="03fdf-113">O instalador também associa cada serviço com um log de eventos que você pode usar para registrar comandos de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-113">The installer also associates each service with an event log that you can use to record service commands.</span></span> <span data-ttu-id="03fdf-114">O `main()` função no executável define quais serviços devem ser executados.</span><span class="sxs-lookup"><span data-stu-id="03fdf-114">The `main()` function in the executable defines which services should run.</span></span> <span data-ttu-id="03fdf-115">O diretório de trabalho atual do serviço é o diretório do sistema, não o diretório no qual o executável está localizado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-115">The current working directory of the service is the system directory, not the directory in which the executable is located.</span></span>  
  
 <span data-ttu-id="03fdf-116">Quando você inicia um serviço, o sistema localiza o executável e executa o <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método para o serviço, contido no executável.</span><span class="sxs-lookup"><span data-stu-id="03fdf-116">When you start a service, the system locates the executable and runs the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method for that service, contained within the executable.</span></span> <span data-ttu-id="03fdf-117">No entanto, que executa o serviço não é o mesmo que o executável.</span><span class="sxs-lookup"><span data-stu-id="03fdf-117">However, running the service is not the same as running the executable.</span></span> <span data-ttu-id="03fdf-118">O executável carrega apenas o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-118">The executable only loads the service.</span></span> <span data-ttu-id="03fdf-119">O serviço é acessado por meio do Gerenciador de controle de serviço (por exemplo, iniciado e interrompido).</span><span class="sxs-lookup"><span data-stu-id="03fdf-119">The service is accessed (for example, started and stopped) through the Service Control Manager.</span></span>  
  
 <span data-ttu-id="03fdf-120">O executável chama o <xref:System.ServiceProcess.ServiceBase> derivado de tempo de construtor o primeiro da classe é chamar o início do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-120">The executable calls the <xref:System.ServiceProcess.ServiceBase> derived class's constructor the first time you call Start on the service.</span></span> <span data-ttu-id="03fdf-121">O <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método de manipulação de comandos é chamado imediatamente depois que o construtor é executado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-121">The <xref:System.ServiceProcess.ServiceBase.OnStart%2A> command-handling method is called immediately after the constructor executes.</span></span> <span data-ttu-id="03fdf-122">O construtor não é executado novamente após a primeira vez em que o serviço tiver sido carregado, portanto, é necessário separar o processamento executado pelo construtor daquele executadas pelo <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-122">The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="03fdf-123">Todos os recursos que podem ser liberados pelo <xref:System.ServiceProcess.ServiceBase.OnStop%2A> deve ser criado em <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-123">Any resources that can be released by <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should be created in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="03fdf-124">Criar recursos no construtor impede que eles sejam criadas corretamente se o serviço for iniciado novamente após <xref:System.ServiceProcess.ServiceBase.OnStop%2A> lançou os recursos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-124">Creating resources in the constructor prevents them from being created properly if the service is started again after <xref:System.ServiceProcess.ServiceBase.OnStop%2A> has released the resources.</span></span>  
  
 <span data-ttu-id="03fdf-125">O Gerenciador de controle de serviço (SCM) fornece uma maneira de interagir com o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-125">The Service Control Manager (SCM) provides a way to interact with the service.</span></span> <span data-ttu-id="03fdf-126">Você pode usar o SCM para passar o iniciar, parar, pausar, continuar ou comandos personalizados para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-126">You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</span></span> <span data-ttu-id="03fdf-127">O SCM usa os valores de <xref:System.ServiceProcess.ServiceBase.CanStop%2A> e <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> para determinar se o serviço aceita parar, pausar ou continuar comandos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-127">The SCM uses the values of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> and <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to determine whether the service accepts Stop, Pause, or Continue commands.</span></span> <span data-ttu-id="03fdf-128">Interromper, pausar e continuar são habilitados somente se do SCM contexto menus a propriedade correspondente <xref:System.ServiceProcess.ServiceBase.CanStop%2A> ou <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é `true` da classe de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-128">Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <xref:System.ServiceProcess.ServiceBase.CanStop%2A> or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` in the service class.</span></span> <span data-ttu-id="03fdf-129">Se habilitada, o comando é passado para o serviço, e <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, ou <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-129">If enabled, the command is passed to the service, and <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is called.</span></span> <span data-ttu-id="03fdf-130">Se <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, ou <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é `false`, o método de manipulação de comandos correspondente (como <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) não será processada, mesmo se você tiver implementado o método.</span><span class="sxs-lookup"><span data-stu-id="03fdf-130">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) will not be processed, even if you have implemented the method.</span></span>  
  
 <span data-ttu-id="03fdf-131">Você pode usar o <xref:System.ServiceProcess.ServiceController> faz de classe para fazer o que o SCM de forma programática usando uma interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="03fdf-131">You can use the <xref:System.ServiceProcess.ServiceController> class to do programmatically what the SCM does using a user interface.</span></span> <span data-ttu-id="03fdf-132">Você pode automatizar as tarefas disponíveis no console do.</span><span class="sxs-lookup"><span data-stu-id="03fdf-132">You can automate the tasks available in the console.</span></span> <span data-ttu-id="03fdf-133">Se <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, ou <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é `true` , mas não implementou um método de manipulação de comandos correspondente (como <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) o sistema gerará uma exceção e ignora o comando.</span><span class="sxs-lookup"><span data-stu-id="03fdf-133">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` but you have not implemented a corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) the system throws an exception and ignores the command.</span></span>  
  
 <span data-ttu-id="03fdf-134">Você não precisa implementar <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, ou qualquer outro método <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-134">You do not have to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, or any other method in <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="03fdf-135">No entanto, o comportamento do serviço é descrito em <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, portanto, no mínimo, esse membro deve ser substituído.</span><span class="sxs-lookup"><span data-stu-id="03fdf-135">However, the service's behavior is described in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, so at minimum, this member should be overridden.</span></span> <span data-ttu-id="03fdf-136">O `main()` função do executável que registra o serviço no executável com o Gerenciador de controle de serviço chamando o <xref:System.ServiceProcess.ServiceBase.Run%2A> método.</span><span class="sxs-lookup"><span data-stu-id="03fdf-136">The `main()` function of the executable registers the service in the executable with the Service Control Manager by calling the <xref:System.ServiceProcess.ServiceBase.Run%2A> method.</span></span> <span data-ttu-id="03fdf-137">O <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> propriedade do <xref:System.ServiceProcess.ServiceBase> objeto passado para o <xref:System.ServiceProcess.ServiceBase.Run%2A> deve corresponder ao <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> propriedade do instalador do serviço para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-137">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> property of the <xref:System.ServiceProcess.ServiceBase> object passed to the <xref:System.ServiceProcess.ServiceBase.Run%2A> method must match the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the service installer for that service.</span></span>  
  
 <span data-ttu-id="03fdf-138">Você pode usar `InstallUtil.exe` para instalar os serviços em seu sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-138">You can use `InstallUtil.exe` to install services on your system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03fdf-139">Você pode especificar um log diferente do log de eventos do aplicativo para receber uma notificação de chamadas de serviço, mas não a <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> nem o <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propriedade pode gravar em um log personalizado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-139">You can specify a log other than the Application event log to receive notification of service calls, but neither the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> nor the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property can write to a custom log.</span></span> <span data-ttu-id="03fdf-140">Definir <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> para `false` se você não quiser usar o registro em log automático.</span><span class="sxs-lookup"><span data-stu-id="03fdf-140">Set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` if you do not want to use automatic logging.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03fdf-141">Cria uma nova instância da classe <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-141">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-142">Não crie uma instância da <xref:System.ServiceProcess.ServiceBase> classe.</span><span class="sxs-lookup"><span data-stu-id="03fdf-142">Do not create an instance of the <xref:System.ServiceProcess.ServiceBase> class.</span></span> <span data-ttu-id="03fdf-143">Em vez disso, derivar de <xref:System.ServiceProcess.ServiceBase> e instanciar sua classe derivada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-143">Instead, derive from <xref:System.ServiceProcess.ServiceBase> and instantiate your derived class.</span></span> <span data-ttu-id="03fdf-144">O mínimo necessário implementar no construtor para uma classe herdada de <xref:System.ServiceProcess.ServiceBase> é definir o <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> no seu componente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-144">The minimum you need to implement in the constructor for a class inherited from <xref:System.ServiceProcess.ServiceBase> is to set the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> on your component.</span></span> <span data-ttu-id="03fdf-145">Nenhum outro processamento especificamente é necessária no construtor.</span><span class="sxs-lookup"><span data-stu-id="03fdf-145">No other processing is specifically required in the constructor.</span></span> <span data-ttu-id="03fdf-146">Você deve tratar a maioria dos inicialização em <xref:System.ServiceProcess.ServiceBase.OnStart%2A> em vez de no construtor.</span><span class="sxs-lookup"><span data-stu-id="03fdf-146">You should handle most initialization in <xref:System.ServiceProcess.ServiceBase.OnStart%2A> rather than in the constructor.</span></span> <span data-ttu-id="03fdf-147">Caso contrário, não há nenhuma garantia que os objetos serão reinicializados quando você reinicia um serviço depois que ele foi interrompido.</span><span class="sxs-lookup"><span data-stu-id="03fdf-147">Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</span></span>  
  
 <span data-ttu-id="03fdf-148">Se você substituir o construtor em sua classe derivada, chame o construtor de classe base em seu código.</span><span class="sxs-lookup"><span data-stu-id="03fdf-148">If you override the constructor in your derived class, call the base class constructor in your code.</span></span>  
  
 <span data-ttu-id="03fdf-149">O <xref:System.ServiceProcess.ServiceBase> construtor define <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-149">The <xref:System.ServiceProcess.ServiceBase> constructor sets <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true`.</span></span> <span data-ttu-id="03fdf-150">Se você não deseja fazer automaticamente as chamadas para o serviço do Gerenciador de controle de serviço (SCM), defina <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> para `false`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-150">If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false`.</span></span>  
  
 <span data-ttu-id="03fdf-151">Se o executável contém um único serviço, o sistema chama o construtor do serviço quando início é selecionado do SCM e executa o destruidor se parar for chamado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-151">If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</span></span>  
  
 <span data-ttu-id="03fdf-152">Se o executável contém vários serviços, chamar Start em um serviço faz com que os construtores a ser chamado para todos os serviços no executável, mas apenas o serviço especificado é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-152">If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</span></span> <span data-ttu-id="03fdf-153">Destruidores para os serviços são executados juntos quando todos os serviços tenham sido interrompidos, não individualmente quando cada serviço é interrompido.</span><span class="sxs-lookup"><span data-stu-id="03fdf-153">Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03fdf-154">Se você substituir o construtor de classe base, você deve chamá-lo explicitamente no construtor da sua classe derivada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-154">If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      </Docs>
    </Member>
    <Member MemberName="AutoLog">
      <MemberSignature Language="C#" Value="public bool AutoLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLog : bool with get, set" Usage="System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBAutoLog")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-155">Indica se os comandos Start, Stop, Pause e Continue devem ser relatados no log de eventos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-155">Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</span></span></summary>
        <value><span data-ttu-id="03fdf-156"><see langword="true" /> para relatar informações no log de eventos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-156"><see langword="true" /> to report information in the event log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-157">Definindo <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> para `true` instrui o serviço para usar o log de eventos do aplicativo para relatar falhas de comando, bem como informações de alteração de estado para iniciar, parar, pausar e continuar o serviço de eventos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-157">Setting <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true` instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</span></span> <span data-ttu-id="03fdf-158">O nome do serviço é usado como o log <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-158">The name of the service is used as the log's <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="03fdf-159">Para relatar informações para um log de eventos personalizado em vez do log de aplicativo, defina <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> à `false` e escrever instruções dentro do método de manipulação de comandos <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, ou <xref:System.ServiceProcess.ServiceBase.OnStop%2A> para postar no log apropriado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-159">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03fdf-160">O <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, que fornece a cadeia de caracteres de origem para o log de eventos deve ser definida antes que o serviço tenta gravar no log de eventos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-160">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</span></span> <span data-ttu-id="03fdf-161">Tentando acessar o log de eventos antes que o nome de origem é definido gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="03fdf-161">Trying to access the event log before the source name is set throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandlePowerEvent">
      <MemberSignature Language="C#" Value="public bool CanHandlePowerEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandlePowerEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandlePowerEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandlePowerEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandlePowerEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-162">Obtém ou define um valor que indica se o serviço pode manipular notificações de alterações de status de energia do computador.</span><span class="sxs-lookup"><span data-stu-id="03fdf-162">Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</span></span></summary>
        <value><span data-ttu-id="03fdf-163"><see langword="true" /> se o serviço manipular as alterações de status de energia do computador indicadas na classe <see cref="T:System.ServiceProcess.PowerBroadcastStatus" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-163"><see langword="true" /> if the service handles the computer power status changes indicated in the <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> class, otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-164">Quando as alterações de status de energia do computador, o Gerenciador de controle de serviço (SCM) verifica se o serviço aceita comandos de eventos de energia usando o valor de <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-164">When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span></span>  
  
 <span data-ttu-id="03fdf-165">Se <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> está `true`, o comando é passado para o serviço e o <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> método é chamado, se definido.</span><span class="sxs-lookup"><span data-stu-id="03fdf-165">If <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> is `true`, the command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> method is called if defined.</span></span> <span data-ttu-id="03fdf-166">Se <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> não está implementado na classe derivada, o SCM manipula o evento de energia por meio da classe base vazia <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="03fdf-166">If <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is not implemented in the derived class, the SCM handles the power event through the empty base class <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-167">Essa propriedade é modificada depois que o serviço é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-167">This property is modified after the service was started.</span></span></exception>
        <altmember cref="T:System.ServiceProcess.PowerBroadcastStatus" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandleSessionChangeEvent">
      <MemberSignature Language="C#" Value="public bool CanHandleSessionChangeEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandleSessionChangeEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandleSessionChangeEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandleSessionChangeEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandleSessionChangeEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-168">Obtém ou define um valor que indica se o serviço pode manipular eventos de alteração de sessão recebidos de uma sessão do servidor Host da Sessão da Área de Trabalho Remota.</span><span class="sxs-lookup"><span data-stu-id="03fdf-168">Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</span></span></summary>
        <value><span data-ttu-id="03fdf-169"><see langword="true" /> Se o serviço pode manipular eventos de alteração de sessão do Terminal Server; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-169"><see langword="true" /> if the service can handle Terminal Server session change events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-170">Essa propriedade é modificada depois que o serviço é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-170">This property is modified after the service was started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanPauseAndContinue : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-171">Obtém ou define um valor que indica se o serviço pode estar em pausa e retomado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-171">Gets or sets a value indicating whether the service can be paused and resumed.</span></span></summary>
        <value><span data-ttu-id="03fdf-172"><see langword="true" /> se o serviço pode estar em pausa; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-172"><see langword="true" /> if the service can be paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-173">Defina o valor da <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> propriedade no construtor para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-173">Set the value of the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property in the constructor for the service.</span></span>  
  
 <span data-ttu-id="03fdf-174">Quando um serviço está em pausa, ele interrompe o que está fazendo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-174">When a service is paused, it halts what it is doing.</span></span> <span data-ttu-id="03fdf-175">Quando você continua o serviço (ou por meio do Gerenciador de controle de serviço ou por meio de programação), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> é executado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-175">When you continue the service (either through the Service Control Manager or programmatically), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> runs.</span></span>  
  
 <span data-ttu-id="03fdf-176">Enviando uma solicitação de pausa para o serviço pode conservar recursos do sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-176">Sending a Pause request to the service can conserve system resources.</span></span> <span data-ttu-id="03fdf-177">Pausar não pode liberar todos os recursos do sistema, mas não de palavras irrelevantes.</span><span class="sxs-lookup"><span data-stu-id="03fdf-177">Pause may not release all system resources, but Stop does.</span></span> <span data-ttu-id="03fdf-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> geralmente são implementados para executar o processamento do menor que <xref:System.ServiceProcess.ServiceBase.OnStop%2A> e <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> are often implemented to perform less processing than <xref:System.ServiceProcess.ServiceBase.OnStop%2A> and <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span>  
  
 <span data-ttu-id="03fdf-179">Quando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> está `true`, substitua <xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> para especificar o processamento que deve ocorrer quando o Gerenciador de controle de serviço (SCM) transmite uma solicitação de pausar ou continuar para seu serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-179">When <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true`, override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="03fdf-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> deve ser implementado para desfazer o processamento em <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="03fdf-181">Se <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> está `false`, o SCM não passa pausar ou continuar solicitações para o serviço, portanto, o <xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> métodos não serão chamados, mesmo se forem implementadas.</span><span class="sxs-lookup"><span data-stu-id="03fdf-181">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="03fdf-182">No SCM, o `Pause` e `Continue` controles são desabilitados quando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-182">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-183">O serviço já foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-183">The service has already been started.</span></span> <span data-ttu-id="03fdf-184">A propriedade <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> não pode ser alterada depois que o serviço é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-184">The <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanShutdown : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-185">Obtém ou define um valor que indica se o serviço deve ser notificado quando o sistema está sendo desligado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-185">Gets or sets a value indicating whether the service should be notified when the system is shutting down.</span></span></summary>
        <value><span data-ttu-id="03fdf-186"><see langword="true" /> se o serviço precisar ser notificado quando o sistema estiver sendo desligado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-186"><see langword="true" /> if the service should be notified when the system is shutting down; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="03fdf-187">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-187">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-188">Se <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> é `true`, o serviço é notificado quando o sistema está sendo desligado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-188">If <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> is `true`, the service is notified when the system is shutting down.</span></span> <span data-ttu-id="03fdf-189">Durante o desligamento, o <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> método é chamado se ele tiver sido implementado na classe derivada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-189">At shutdown, the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method is called if it has been implemented in your derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03fdf-190">Apenas o sistema deve fazer com que o <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> método a ser executado; o serviço pode chamá-lo, mas isso não é recomendado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-190">Only the system should cause the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method to execute; the service can call it, but this is not recommended.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-191">O serviço já foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-191">The service has already been started.</span></span> <span data-ttu-id="03fdf-192">A propriedade <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> não pode ser alterada depois que o serviço é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-192">The <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanStop : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-193">Obtém ou define um valor que indica se o serviço pode ser interrompido depois de ser iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-193">Gets or sets a value indicating whether the service can be stopped once it has started.</span></span></summary>
        <value><span data-ttu-id="03fdf-194"><see langword="true" /> se o serviço puder ser interrompido e o método <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> chamado, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-194"><see langword="true" /> if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-195">Quando a interrupção for chamada em um serviço, o Gerenciador de controle de serviço (SCM) verifica se o serviço aceita comandos de parada usando o valor de <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-195">When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span></span> <span data-ttu-id="03fdf-196">Para a maioria dos serviços, o valor de <xref:System.ServiceProcess.ServiceBase.CanStop%2A> é `true`, mas alguns serviços do sistema operacional, por exemplo, não permitir que o usuário para interrompê-los.</span><span class="sxs-lookup"><span data-stu-id="03fdf-196">For most services, the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, but some operating system services, for example, do not allow the user to stop them.</span></span>  
  
 <span data-ttu-id="03fdf-197">Se <xref:System.ServiceProcess.ServiceBase.CanStop%2A> está `true`, o comando Parar é passado para o serviço e o <xref:System.ServiceProcess.ServiceBase.OnStop%2A> método é chamado se ele está definido.</span><span class="sxs-lookup"><span data-stu-id="03fdf-197">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="03fdf-198">Se <xref:System.ServiceProcess.ServiceBase.OnStop%2A> não está implementado na classe derivada, as alças SCM a parada de comando por meio da classe base vazia <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="03fdf-198">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-199">O serviço já foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-199">The service has already been started.</span></span> <span data-ttu-id="03fdf-200">A propriedade <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> não pode ser alterada depois que o serviço é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-200">The <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> property cannot be changed once the service has started.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="serviceBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="03fdf-201"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="03fdf-201"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="03fdf-202">Descarta os recursos (exceto a memória) usados pelo <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-202">Disposes of the resources (other than memory) used by the <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-203">Chame <xref:System.ServiceProcess.ServiceBase.Dispose%2A> em sua classe derivada (e, com isso, no <xref:System.ServiceProcess.ServiceBase> classe) quando tiver terminado de usar a classe derivada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-203">Call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> in your derived class (and through it, in the <xref:System.ServiceProcess.ServiceBase> class) when you are finished using the derived class.</span></span> <span data-ttu-id="03fdf-204">O <xref:System.ServiceProcess.ServiceBase.Dispose%2A> método deixa a classe derivada em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="03fdf-204">The <xref:System.ServiceProcess.ServiceBase.Dispose%2A> method leaves the derived class in an unusable state.</span></span> <span data-ttu-id="03fdf-205">Depois de chamar <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, você deve liberar todas as referências à classe derivada e <xref:System.ServiceProcess.ServiceBase> para que a memória que eles estavam ocupando pode ser recuperada pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-205">After calling <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, you must release all references to the derived class and <xref:System.ServiceProcess.ServiceBase> so the memory they were occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03fdf-206">Sempre chamar <xref:System.ServiceProcess.ServiceBase.Dispose%2A> antes de liberar sua última referência para a classe derivada de <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-206">Always call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> before you release your last reference to the class derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="03fdf-207">Caso contrário, os recursos <xref:System.ServiceProcess.ServiceBase> e a classe derivada são usando será não ser liberado até que a coleta de lixo chama destruidores de objetos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-207">Otherwise, the resources <xref:System.ServiceProcess.ServiceBase> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</span></span>  
  
 <span data-ttu-id="03fdf-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> geralmente é implementado para processar o código na <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combinado com uma chamada para <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is often implemented to process the code in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combined with a call to <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span></span> <span data-ttu-id="03fdf-209">Se você optar por fazer isso em sua classe derivada, é comum implementar <xref:System.ServiceProcess.ServiceBase.OnStart%2A> alocar qualquer <xref:System.ServiceProcess.ServiceBase.Dispose%2A> lançado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-209">If you choose to do this in your derived class, it is customary to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to allocate whatever <xref:System.ServiceProcess.ServiceBase.Dispose%2A> released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.EventLog EventLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventLog : System.Diagnostics.EventLog" Usage="System.ServiceProcess.ServiceBase.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-210">Obtém um log de eventos que você pode usar para gravar a notificação de chamadas de comando de serviço, como iniciar e parar, no log de eventos do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-210">Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</span></span></summary>
        <value><span data-ttu-id="03fdf-211">Uma instância de <see cref="T:System.Diagnostics.EventLog" /> cuja origem é registrada no log de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-211">An <see cref="T:System.Diagnostics.EventLog" /> instance whose source is registered to the Application log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-212">O construtor inicializa o <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propriedade para a instância com o <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> e <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> conjunto de propriedades.</span><span class="sxs-lookup"><span data-stu-id="03fdf-212">The constructor initializes the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to an instance with the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> properties set.</span></span> <span data-ttu-id="03fdf-213">A fonte é o <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> do serviço, e o log é o log de aplicativo do computador.</span><span class="sxs-lookup"><span data-stu-id="03fdf-213">The source is the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service, and the log is the computer's Application log.</span></span> <span data-ttu-id="03fdf-214">Esses valores são definidas automaticamente e não podem ser alterados para o registro automático de comandos do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-214">These values are set automatically and cannot be changed for automatic logging of service commands.</span></span>  
  
 <span data-ttu-id="03fdf-215">Quando <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> é `true`, iniciar, parar, pausar, continuar e comandos personalizados são registrados automaticamente no log de eventos do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-215">When <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</span></span> <span data-ttu-id="03fdf-216">Você pode usar o <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propriedade para gravar mensagens adicionais para esse log também.</span><span class="sxs-lookup"><span data-stu-id="03fdf-216">You can use the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to write additional messages to that log as well.</span></span> <span data-ttu-id="03fdf-217">As chamadas de componente <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> usando este <xref:System.ServiceProcess.ServiceBase.EventLog%2A> membro.</span><span class="sxs-lookup"><span data-stu-id="03fdf-217">The component calls <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> using this <xref:System.ServiceProcess.ServiceBase.EventLog%2A> member.</span></span>  
  
 <span data-ttu-id="03fdf-218">Para relatar informações para um log de eventos personalizado em vez do log de aplicativo, defina <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> à `false` e escrever instruções dentro do método de manipulação de comandos <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, ou <xref:System.ServiceProcess.ServiceBase.OnStop%2A> para postar no log apropriado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-218">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-219">Obtém ou define o código de saída do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-219">Gets or sets the exit code for the service.</span></span></summary>
        <value><span data-ttu-id="03fdf-220">O código de saída do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-220">The exit code for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-221">Defina o <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> propriedade para um valor diferente de zero antes de parar o serviço para indicar um erro para o Gerenciador de controle de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-221">Set the <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxNameLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxNameLength = 80;" />
      <MemberSignature Language="F#" Value="val mutable MaxNameLength : int" Usage="System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-222">Indica o tamanho máximo para um nome de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-222">Indicates the maximum size for a service name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-223">ServiceName e DisplayName ambos têm restrições de tamanho que devem ser observadas ao configurar as propriedades em sua classe de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-223">ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </Docs>
    </Member>
    <Member MemberName="OnContinue">
      <MemberSignature Language="C#" Value="protected virtual void OnContinue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnContinue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContinue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContinue();" />
      <MemberSignature Language="F#" Value="abstract member OnContinue : unit -&gt; unit&#xA;override this.OnContinue : unit -&gt; unit" Usage="serviceBase.OnContinue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03fdf-224">Quando implementado em uma classe derivada, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> é executado quando o comando Continuar é enviado para o serviço pelo SCM (Gerenciador de Controle de Serviço).</span><span class="sxs-lookup"><span data-stu-id="03fdf-224">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="03fdf-225">Especifica as ações a serem tomadas quando um serviço retoma o funcionamento normal após estar em pausa.</span><span class="sxs-lookup"><span data-stu-id="03fdf-225">Specifies actions to take when a service resumes normal functioning after being paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-226">Implemente <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> para espelhar a resposta do seu aplicativo para <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-226">Implement <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to mirror your application's response to <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span> <span data-ttu-id="03fdf-227">Quando você continua o serviço (ou por meio do console de serviços ou por meio de programação), o <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> de processamento é executado e o serviço ficará ativa novamente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-227">When you continue the service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing runs, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="03fdf-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> deve ser substituído quando o <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="03fdf-229">Se <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> está `false`, o SCM não passa pausar ou continuar solicitações para o serviço, portanto, o <xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> métodos não serão chamados, mesmo se forem implementadas.</span><span class="sxs-lookup"><span data-stu-id="03fdf-229">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="03fdf-230">No SCM, o `Pause` e `Continue` controles são desabilitados quando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-230">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnCustomCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomCommand(int command);" />
      <MemberSignature Language="F#" Value="abstract member OnCustomCommand : int -&gt; unit&#xA;override this.OnCustomCommand : int -&gt; unit" Usage="serviceBase.OnCustomCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="03fdf-231">A mensagem de comando enviada ao serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-231">The command message sent to the service.</span></span></param>
        <summary><span data-ttu-id="03fdf-232">Quando implementado em uma classe derivada, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> é executado quando o SCM (Gerenciador de Controle de Serviço) passa um comando personalizado para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-232">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service Control Manager (SCM) passes a custom command to the service.</span></span> <span data-ttu-id="03fdf-233">Especifica as ações a serem aditadas quando ocorrer um comando com o valor do parâmetro especificado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-233">Specifies actions to take when a command with the specified parameter value occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> permite que você especifique uma funcionalidade adicional além de iniciar, parar, pausar e continuando serviços.</span><span class="sxs-lookup"><span data-stu-id="03fdf-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</span></span>  
  
 <span data-ttu-id="03fdf-235">O SCM não examina o comando personalizado para verificar se o serviço oferece suporte a `command` parâmetro passado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-235">The SCM does not examine the custom command to verify whether the service supports the `command` parameter passed in.</span></span> <span data-ttu-id="03fdf-236">Ele passa o comando personalizado diretamente para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-236">It passes the custom command directly to the service.</span></span> <span data-ttu-id="03fdf-237">Se o serviço não reconhecer o `command` parâmetro, ela não faz nada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-237">If the service does not recognize the `command` parameter, it does nothing.</span></span>  
  
 <span data-ttu-id="03fdf-238">Comandos personalizados são gerados por um <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> instrução em um <xref:System.ServiceProcess.ServiceController> componente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-238">Custom commands are raised by an <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> statement in a <xref:System.ServiceProcess.ServiceController> component.</span></span> <span data-ttu-id="03fdf-239">Usar uma instrução switch ou if... em seguida, condição para lidar com os comandos personalizados que você define no seu serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-239">Use a switch statement or if..then condition to handle the custom commands you define on your service.</span></span>  
  
 <span data-ttu-id="03fdf-240">Os únicos valores para um comando personalizado que você pode definir em seu aplicativo ou usar em <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> são aqueles entre 128 e 255.</span><span class="sxs-lookup"><span data-stu-id="03fdf-240">The only values for a custom command that you can define in your application or use in <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> are those between 128 and 255.</span></span> <span data-ttu-id="03fdf-241">Inteiros abaixo 128 correspondem aos valores de reservadas pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-241">Integers below 128 correspond to system-reserved values.</span></span>  
  
 <span data-ttu-id="03fdf-242">Se o <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> é de propriedade `true`, comandos personalizados, como todos os outros comandos, gravam entradas de log de eventos para relatar se a execução do método teve êxito ou falha.</span><span class="sxs-lookup"><span data-stu-id="03fdf-242">If the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> property is `true`, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="protected virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPause" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPause ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPause();" />
      <MemberSignature Language="F#" Value="abstract member OnPause : unit -&gt; unit&#xA;override this.OnPause : unit -&gt; unit" Usage="serviceBase.OnPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03fdf-243">Quando implementado em uma classe derivada, é executado quando o comando Pausar é enviado para o serviço pelo SCM (Gerenciador de Controle de Serviço).</span><span class="sxs-lookup"><span data-stu-id="03fdf-243">When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="03fdf-244">Especifica ações a serem tomadas quando a execução for colocada em pausa.</span><span class="sxs-lookup"><span data-stu-id="03fdf-244">Specifies actions to take when a service pauses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> para especificar o processamento que ocorre quando o serviço recebe um comando para pausar.</span><span class="sxs-lookup"><span data-stu-id="03fdf-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> to specify the processing that occurs when the service receives a Pause command.</span></span> <span data-ttu-id="03fdf-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> deve ser substituído quando o <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="03fdf-247">Quando você continuar um serviço pausado (ou por meio do console de serviços ou por meio de programação), o <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processamento é executado, e o serviço ficará ativo novamente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-247">When you continue a paused service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing is run, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="03fdf-248">O comando Pause só permite que seu aplicativo reagir a um evento específico.</span><span class="sxs-lookup"><span data-stu-id="03fdf-248">The Pause command only allows your application to react to a specific event.</span></span> <span data-ttu-id="03fdf-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> não faz nada para o serviço que você não defini-lo a fazer.</span><span class="sxs-lookup"><span data-stu-id="03fdf-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> does nothing to the service that you do not define it to do.</span></span>  
  
 <span data-ttu-id="03fdf-250">Enviando uma solicitação de pausa para o serviço pode conservar recursos do sistema porque pausar não precisa liberar todos os recursos do sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-250">Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</span></span> <span data-ttu-id="03fdf-251">Por exemplo, se os threads foram abertos pelo processo, pausar um serviço em vez de interrompê-la pode permitir que os threads permanecer aberto, dispensando a necessidade para realocá-los quando o serviço continua.</span><span class="sxs-lookup"><span data-stu-id="03fdf-251">For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</span></span> <span data-ttu-id="03fdf-252">Se você definir pausar para liberar todos os recursos do sistema, ele se comporta como um comando de parada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-252">If you define Pause to release all system resources, it behaves like a Stop command.</span></span>  
  
 <span data-ttu-id="03fdf-253">Definir <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> à `true`e substituir <xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> para especificar o processamento que deve ocorrer quando o SCM transmite uma solicitação de pausar ou continuar para seu serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-253">Set <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to `true`, and override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="03fdf-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> deve ser implementado para desfazer o processamento em <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="03fdf-255">Se <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> está `false`, o SCM não passa pausar ou continuar solicitações para o serviço, portanto, o <xref:System.ServiceProcess.ServiceBase.OnPause%2A> e <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> métodos não serão chamados, mesmo se implementadas.</span><span class="sxs-lookup"><span data-stu-id="03fdf-255">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if implemented.</span></span> <span data-ttu-id="03fdf-256">No SCM, o `Pause` e `Continue` controles são desabilitados quando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-256">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnPowerEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnPowerEvent (System.ServiceProcess.PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPowerEvent(valuetype System.ServiceProcess.PowerBroadcastStatus powerStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnPowerEvent (powerStatus As PowerBroadcastStatus) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnPowerEvent(System::ServiceProcess::PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="F#" Value="abstract member OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool&#xA;override this.OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool" Usage="serviceBase.OnPowerEvent powerStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="powerStatus" Type="System.ServiceProcess.PowerBroadcastStatus" />
      </Parameters>
      <Docs>
        <param name="powerStatus"><span data-ttu-id="03fdf-257">Um <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> que indica uma notificação do sistema sobre seu status de energia.</span><span class="sxs-lookup"><span data-stu-id="03fdf-257">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status.</span></span></param>
        <summary><span data-ttu-id="03fdf-258">Quando implementada em uma classe derivada, será executada quando o status de energia do computador for alterado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-258">When implemented in a derived class, executes when the computer's power status has changed.</span></span> <span data-ttu-id="03fdf-259">Isso se aplica a computadores laptop quando entram no modo suspenso, que não é o mesmo que um desligamento do sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-259">This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</span></span></summary>
        <returns><span data-ttu-id="03fdf-260">Quando implementada em uma classe derivada, as necessidades do seu aplicativo determinam qual valor retornar.</span><span class="sxs-lookup"><span data-stu-id="03fdf-260">When implemented in a derived class, the needs of your application determine what value to return.</span></span> <span data-ttu-id="03fdf-261">Por exemplo, se um status de difusão <see langword="QuerySuspend" /> for passado, você poderá fazer com que seu aplicativo rejeite a consulta retornando <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-261">For example, if a <see langword="QuerySuspend" /> broadcast status is passed, you could cause your application to reject the query by returning <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> para especificar o processamento que ocorre quando o evento do sistema indicado no <xref:System.ServiceProcess.PowerBroadcastStatus> enumeração ocorre – por exemplo, quando o computador é colocado no modo suspenso ou indica a energia da bateria fraca.</span><span class="sxs-lookup"><span data-stu-id="03fdf-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> to specify the processing that occurs when the system event indicated in the <xref:System.ServiceProcess.PowerBroadcastStatus> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</span></span>  
  
 <span data-ttu-id="03fdf-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> deve ser substituído quando o <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionChange">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionChange (System.ServiceProcess.SessionChangeDescription changeDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionChange(valuetype System.ServiceProcess.SessionChangeDescription changeDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionChange (changeDescription As SessionChangeDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionChange(System::ServiceProcess::SessionChangeDescription changeDescription);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit&#xA;override this.OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit" Usage="serviceBase.OnSessionChange changeDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDescription" Type="System.ServiceProcess.SessionChangeDescription" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="changeDescription"><span data-ttu-id="03fdf-264">Uma estrutura que identifica o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="03fdf-264">A structure that identifies the change type.</span></span></param>
        <summary><span data-ttu-id="03fdf-265">Executa quando um evento de alteração é proveniente de uma sessão do servidor Host da Sessão da Área de Trabalho Remota.</span><span class="sxs-lookup"><span data-stu-id="03fdf-265">Executes when a change event is received from a Terminal Server session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-266">Você deve definir a <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> propriedade para `true` para habilitar a execução desse método.</span><span class="sxs-lookup"><span data-stu-id="03fdf-266">You must set the <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> property to `true` to enable the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <altmember cref="T:System.ServiceProcess.SessionChangeDescription" />
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="serviceBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03fdf-267">Quando implementado em uma classe derivada, é executado quando o sistema é desligado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-267">When implemented in a derived class, executes when the system is shutting down.</span></span> <span data-ttu-id="03fdf-268">Especifica o que deve ocorrer imediatamente antes do desligamento do sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-268">Specifies what should occur immediately prior to the system shutting down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> para especificar o processamento que ocorre quando o sistema é desligado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> to specify the processing that occurs when the system shuts down.</span></span>  
  
 <span data-ttu-id="03fdf-270">Esse evento ocorre somente quando o sistema operacional é desligado, não quando o computador é desligado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-270">This event occurs only when the operating system is shut down, not when the computer is turned off.</span></span>  
  
 <span data-ttu-id="03fdf-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> deve ser substituído quando o <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected virtual void OnStart (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStart(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStart (args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStart(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnStart : string[] -&gt; unit&#xA;override this.OnStart : string[] -&gt; unit" Usage="serviceBase.OnStart args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="03fdf-272">Dados passados pelo comando de início.</span><span class="sxs-lookup"><span data-stu-id="03fdf-272">Data passed by the start command.</span></span></param>
        <summary><span data-ttu-id="03fdf-273">Quando implementado em uma classe derivada, é executado quando um comando Iniciar é enviado para o serviço pelo SCM (Gerenciador de Controle de Serviço) ou quando o sistema operacional é iniciado (para um serviço que inicia automaticamente).</span><span class="sxs-lookup"><span data-stu-id="03fdf-273">When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</span></span> <span data-ttu-id="03fdf-274">Especifica ações a serem tomadas quando o serviço for iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-274">Specifies actions to take when the service starts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> para especificar o processamento que ocorre quando o serviço recebe um comando Start.</span><span class="sxs-lookup"><span data-stu-id="03fdf-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to specify the processing that occurs when the service receives a Start command.</span></span> <span data-ttu-id="03fdf-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> é o método em que você especificar o comportamento do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is the method in which you specify the behavior of the service.</span></span> <span data-ttu-id="03fdf-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> pode levar argumentos como uma maneira de transmitir dados, mas esse uso é raro.</span><span class="sxs-lookup"><span data-stu-id="03fdf-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> can take arguments as a way to pass data, but this usage is rare.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="03fdf-278">Não use o construtor para executar o processamento deve estar no <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-278">Do not use the constructor to perform processing that should be in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="03fdf-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> para lidar com toda a inicialização do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to handle all initialization of your service.</span></span> <span data-ttu-id="03fdf-280">O construtor é chamado quando o executável do aplicativo é executado, não quando o serviço é executado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-280">The constructor is called when the application's executable runs, not when the service runs.</span></span> <span data-ttu-id="03fdf-281">O executável será executado antes de <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-281">The executable runs before <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="03fdf-282">Quando você continuar, por exemplo, o construtor não é chamado novamente porque o SCM já contém o objeto na memória.</span><span class="sxs-lookup"><span data-stu-id="03fdf-282">When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</span></span> <span data-ttu-id="03fdf-283">Se <xref:System.ServiceProcess.ServiceBase.OnStop%2A> libera recursos alocados no construtor, em vez de em <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, os recursos necessários não seriam criados novamente na segunda vez que o serviço é chamado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-283">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> releases resources allocated in the constructor rather than in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, the needed resources would not be created again the second time the service is called.</span></span>  
  
 <span data-ttu-id="03fdf-284">Serviços podem ser definidos para iniciar automaticamente quando o computador for reiniciado, definindo o <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> no instalador do serviço para <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span><span class="sxs-lookup"><span data-stu-id="03fdf-284">Services can be set to start automatically when the computer reboots by setting the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> on the service's installer to <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="03fdf-285">Nessa situação, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> seria chamado na inicialização do sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-285">In such a situation, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> would be called at system startup.</span></span>  
  
 <span data-ttu-id="03fdf-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> deve ser substituído na classe derivada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="03fdf-287">Para o serviço para ser útil, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> e <xref:System.ServiceProcess.ServiceBase.OnStop%2A> devem ser implementadas em sua classe de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-287">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 <span data-ttu-id="03fdf-288">Processar argumentos de inicialização para o serviço no <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método, não no método Main.</span><span class="sxs-lookup"><span data-stu-id="03fdf-288">Process initialization arguments for the service in the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method, not in the Main method.</span></span> <span data-ttu-id="03fdf-289">Os argumentos no `args` matriz de parâmetros pode ser definida manualmente na janela Propriedades para o serviço no console de serviços.</span><span class="sxs-lookup"><span data-stu-id="03fdf-289">The arguments in the `args` parameter array can be set manually in the properties window for the service in the Services console.</span></span> <span data-ttu-id="03fdf-290">Os argumentos digitados no console do não são salvas; eles são passados para o serviço de uma única vez quando o serviço é iniciado no painel de controle.</span><span class="sxs-lookup"><span data-stu-id="03fdf-290">The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</span></span> <span data-ttu-id="03fdf-291">Os argumentos que devem estar presente quando o serviço é iniciado automaticamente podem ser colocados no valor de cadeia de caracteres de ImagePath para a chave do registro do serviço (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\  *\< nome do serviço >*).</span><span class="sxs-lookup"><span data-stu-id="03fdf-291">Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<service name>*).</span></span> <span data-ttu-id="03fdf-292">Você pode obter os argumentos do registro usando o <xref:System.Environment.GetCommandLineArgs%2A> método, por exemplo: `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span><span class="sxs-lookup"><span data-stu-id="03fdf-292">You can obtain the arguments from the registry using the <xref:System.Environment.GetCommandLineArgs%2A> method, for example:  `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStop" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStop ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStop();" />
      <MemberSignature Language="F#" Value="abstract member OnStop : unit -&gt; unit&#xA;override this.OnStop : unit -&gt; unit" Usage="serviceBase.OnStop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03fdf-293">Quando implementado em uma classe derivada, é executado quando o comando Parar é enviado para o serviço pelo SCM (Gerenciador de Controle de Serviço).</span><span class="sxs-lookup"><span data-stu-id="03fdf-293">When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</span></span> <span data-ttu-id="03fdf-294">Especifica ações a serem tomadas quando a execução do serviço parar.</span><span class="sxs-lookup"><span data-stu-id="03fdf-294">Specifies actions to take when a service stops running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> para especificar o processamento que ocorre quando o serviço recebe um comando de parada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to specify the processing that occurs when the service receives a Stop command.</span></span>  
  
 <span data-ttu-id="03fdf-296">Quando o SCM recebe um comando de parada, ele usará o valor de <xref:System.ServiceProcess.ServiceBase.CanStop%2A> para verificar se o serviço aceita comandos de parada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-296">When the SCM receives a Stop command, it uses the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> to verify whether the service accepts Stop commands.</span></span> <span data-ttu-id="03fdf-297">Se <xref:System.ServiceProcess.ServiceBase.CanStop%2A> está `true`, o comando Parar é passado para o serviço e o <xref:System.ServiceProcess.ServiceBase.OnStop%2A> método é chamado se ele está definido.</span><span class="sxs-lookup"><span data-stu-id="03fdf-297">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service, and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="03fdf-298">Se <xref:System.ServiceProcess.ServiceBase.OnStop%2A> não está implementada no serviço, o SCM manipula o comando de parada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-298">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the service, the SCM handles the Stop command.</span></span>  
  
 <span data-ttu-id="03fdf-299">Se <xref:System.ServiceProcess.ServiceBase.CanStop%2A> é `false`, o SCM ignora o comando Stop.</span><span class="sxs-lookup"><span data-stu-id="03fdf-299">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `false`, the SCM ignores the Stop command.</span></span> <span data-ttu-id="03fdf-300">Ele não é passado para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-300">It is not passed to the service.</span></span> <span data-ttu-id="03fdf-301">O comando parar retorna e gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="03fdf-301">The Stop command returns and throws an exception.</span></span>  
  
 <span data-ttu-id="03fdf-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> deve ser substituído na classe derivada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="03fdf-303">Para o serviço para ser útil, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> e <xref:System.ServiceProcess.ServiceBase.OnStop%2A> devem ser implementadas em sua classe de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-303">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RequestAdditionalTime">
      <MemberSignature Language="C#" Value="public void RequestAdditionalTime (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestAdditionalTime(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestAdditionalTime (milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestAdditionalTime(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.RequestAdditionalTime : int -&gt; unit" Usage="serviceBase.RequestAdditionalTime milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="03fdf-304">O tempo solicitado em milissegundos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-304">The requested time in milliseconds.</span></span></param>
        <summary><span data-ttu-id="03fdf-305">Solicita tempo adicional para uma operação pendente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-305">Requests additional time for a pending operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-306">O <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> método é destinado a ser chamado pelo substituído <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, ou <xref:System.ServiceProcess.ServiceBase.OnStop%2A> métodos para solicitar mais tempo para uma operação pendente, para impedir que o Gerenciador de controle de serviço (SCM) marcando o serviço como não está respondendo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-306">The <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> method is intended to be called by the overridden <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</span></span>  <span data-ttu-id="03fdf-307">Se a operação pendente não for um continuar, pausar, iniciar ou parar, um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-307">If the pending operation is not a continue, pause, start, or stop, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-308">O serviço não está em um estado pendente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-308">The service is not in a pending state.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03fdf-309">Fornece o ponto de entrada principal para um executável do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-309">Provides the main entry point for a service executable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (service As ServiceBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::ServiceProcess::ServiceBase ^ service);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.ServiceProcess.ServiceBase" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="03fdf-310">Um <see cref="T:System.ServiceProcess.ServiceBase" /> que indica um serviço para iniciar.</span><span class="sxs-lookup"><span data-stu-id="03fdf-310">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start.</span></span></param>
        <summary><span data-ttu-id="03fdf-311">Registra o executável para um serviço com o Gerenciador de Controle de Serviço (SCM).</span><span class="sxs-lookup"><span data-stu-id="03fdf-311">Registers the executable for a service with the Service Control Manager (SCM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-312">Chamar essa sobrecarga no `main()` função do executável para registrar o serviço com o Gerenciador de controle de serviço do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-312">Call this overload in the `main()` function of the service executable to register the service with the Service Control Manager.</span></span> <span data-ttu-id="03fdf-313">Depois de chamar <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, o Gerenciador de controle de serviço emite um comando de início, o que resulta em uma chamada para o <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método no serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-313">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, the Service Control Manager issues a Start command, which results in a call to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method in the service.</span></span> <span data-ttu-id="03fdf-314">O serviço não é iniciado até que o comando de início é executado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-314">The service is not started until the Start command is executed.</span></span>  
  
 <span data-ttu-id="03fdf-315">O <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> método é chamado da mesma forma como <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> para aplicativos Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="03fdf-315">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="03fdf-316">Se <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> está `true`, uma entrada é gravada no log de eventos se o serviço especificado pelo `service` parâmetro não pode ser iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-316">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if the service specified by the `service` parameter fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03fdf-317"><paramref name="service" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-317"><paramref name="service" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase[] services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase[] services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (services As ServiceBase())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(cli::array &lt;System::ServiceProcess::ServiceBase ^&gt; ^ services);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase[] -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.ServiceProcess.ServiceBase[]" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="03fdf-318">Uma matriz de instâncias ServiceBase que indicam os serviços a iniciar.</span><span class="sxs-lookup"><span data-stu-id="03fdf-318">An array of ServiceBase instances, which indicate services to start.</span></span></param>
        <summary><span data-ttu-id="03fdf-319">Registra o executável para vários serviços com o SCM (Gerenciador de Controle de Serviço).</span><span class="sxs-lookup"><span data-stu-id="03fdf-319">Registers the executable for multiple services with the Service Control Manager (SCM).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-320">Chamar essa sobrecarga no `main()` função do executável para registrar os serviços com o Gerenciador de controle de serviço do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-320">Call this overload in the `main()` function of the service executable to register the services with the Service Control Manager.</span></span> <span data-ttu-id="03fdf-321">Depois de chamar <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, o Gerenciador de controle de serviço emite comandos de início, que resultam em chamadas para o <xref:System.ServiceProcess.ServiceBase.OnStart%2A> métodos nos serviços.</span><span class="sxs-lookup"><span data-stu-id="03fdf-321">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, the Service Control Manager issues Start commands, which result in calls to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> methods in the services.</span></span> <span data-ttu-id="03fdf-322">Os serviços não são iniciados até que os comandos de início são executados.</span><span class="sxs-lookup"><span data-stu-id="03fdf-322">The services are not started until the Start commands are executed.</span></span>  
  
 <span data-ttu-id="03fdf-323">O <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> método é chamado da mesma maneira como o <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> método para aplicativos Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="03fdf-323">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as the <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> method for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="03fdf-324">Se <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> é `true`, uma entrada é gravada no log de eventos se qualquer serviço na matriz não for iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-324">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if any service in the array fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03fdf-325">Você não forneceu um serviço a ser iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-325">You did not supply a service to start.</span></span> <span data-ttu-id="03fdf-326">A matriz pode ser <see langword="null" /> ou vazia.</span><span class="sxs-lookup"><span data-stu-id="03fdf-326">The array might be <see langword="null" /> or empty.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="protected IntPtr ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property IntPtr ServiceHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceHandle : nativeint" Usage="System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-327">Obtém a alça de controle de serviço para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-327">Gets the service control handle for the service.</span></span></summary>
        <value><span data-ttu-id="03fdf-328">Uma estrutura <see cref="T:System.IntPtr" /> que contém a alça de controle de serviço para o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-328">An <see cref="T:System.IntPtr" /> structure that contains the service control handle for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-329">A alça de controle de serviço é usada para se comunicar com o Gerenciador de controle de serviço (SCM).</span><span class="sxs-lookup"><span data-stu-id="03fdf-329">The service control handle is used to communicate with the Service Control Manager (SCM).</span></span>  <span data-ttu-id="03fdf-330">O identificador pode ser usado para atualizar as informações de status do Gerenciador de controle de serviço para o serviço de chamada não gerenciada usando o `SetServiceStatus` função.</span><span class="sxs-lookup"><span data-stu-id="03fdf-330">The handle can be used to update the service control manager's status information for the calling service using the unmanaged `SetServiceStatus` function.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="03fdf-331">para acesso a código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-331">for access to unmanaged code.</span></span> <span data-ttu-id="03fdf-332">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="03fdf-332">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceMainCallback">
      <MemberSignature Language="C#" Value="public void ServiceMainCallback (int argCount, IntPtr argPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ServiceMainCallback(int32 argCount, native int argPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ServiceMainCallback (argCount As Integer, argPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ServiceMainCallback(int argCount, IntPtr argPointer);" />
      <MemberSignature Language="F#" Value="member this.ServiceMainCallback : int * nativeint -&gt; unit" Usage="serviceBase.ServiceMainCallback (argCount, argPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argCount" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argPointer" Type="System.IntPtr" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argCount"><span data-ttu-id="03fdf-333">O número de argumentos na matriz de argumentos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-333">The number of arguments in the argument array.</span></span></param>
        <param name="argPointer"><span data-ttu-id="03fdf-334">Uma estrutura <see cref="T:System.IntPtr" /> que aponta para uma matriz de argumentos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-334">An <see cref="T:System.IntPtr" /> structure that points to an array of arguments.</span></span></param>
        <summary><span data-ttu-id="03fdf-335">Registra o manipulador de comandos e inicia o serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-335">Registers the command handler and starts the service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03fdf-336">Obtém ou define o nome curto usado para identificar o serviço no sistema.</span><span class="sxs-lookup"><span data-stu-id="03fdf-336">Gets or sets the short name used to identify the service to the system.</span></span></summary>
        <value><span data-ttu-id="03fdf-337">O nome do serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-337">The name of the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-338">O <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifica o serviço para o Gerenciador de controle de serviço.</span><span class="sxs-lookup"><span data-stu-id="03fdf-338">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifies the service to the Service Control Manager.</span></span> <span data-ttu-id="03fdf-339">O valor dessa propriedade deve ser idêntico ao nome registrado para o serviço no <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> propriedade da classe do instalador correspondente.</span><span class="sxs-lookup"><span data-stu-id="03fdf-339">The value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property of the corresponding installer class.</span></span> <span data-ttu-id="03fdf-340">No código, o <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> do serviço geralmente é definido `main()` função do executável.</span><span class="sxs-lookup"><span data-stu-id="03fdf-340">In code, the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service is usually set in the `main()` function of the executable.</span></span>  
  
 <span data-ttu-id="03fdf-341">O <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> também é usado para especificar o <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> associado com o <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="03fdf-341">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> is also used to specify the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> associated with the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property.</span></span> <span data-ttu-id="03fdf-342">Isso <xref:System.ServiceProcess.ServiceBase.EventLog%2A> é uma instância que grava informações de comando de serviço no log de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="03fdf-342">This <xref:System.ServiceProcess.ServiceBase.EventLog%2A> is an instance that writes service command information to the Application log.</span></span>  
  
 <span data-ttu-id="03fdf-343">O <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, que fornece a cadeia de caracteres de origem para o log de eventos deve ser definida antes que o serviço grava no log de eventos.</span><span class="sxs-lookup"><span data-stu-id="03fdf-343">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service writes to the event log.</span></span> <span data-ttu-id="03fdf-344">Tentando acessar o log de eventos antes que o nome de origem é definido faz com que uma exceção seja lançada.</span><span class="sxs-lookup"><span data-stu-id="03fdf-344">Trying to access the event log before the source name is set causes an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03fdf-345">O serviço já foi iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-345">The service has already been started.</span></span> <span data-ttu-id="03fdf-346">A propriedade <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> não pode ser alterada depois que o serviço é iniciado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-346">The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property cannot be changed once the service has started.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03fdf-347">O nome especificado é uma cadeia de caracteres de tamanho zero ou é maior que <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" /> ou o nome especificado contém caracteres de barra ou barra invertida.</span><span class="sxs-lookup"><span data-stu-id="03fdf-347">The specified name is a zero-length string or is longer than <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, or the specified name contains forward slash or backslash characters.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="serviceBase.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03fdf-348">Interrompe o serviço em execução.</span><span class="sxs-lookup"><span data-stu-id="03fdf-348">Stops the executing service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03fdf-349">O <xref:System.ServiceProcess.ServiceBase.Stop%2A> método define o estado do serviço para indicar uma parada está pendente e chama o <xref:System.ServiceProcess.ServiceBase.OnStop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="03fdf-349">The <xref:System.ServiceProcess.ServiceBase.Stop%2A> method sets the service state to indicate a stop is pending and calls the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method.</span></span>  <span data-ttu-id="03fdf-350">Depois que o aplicativo for interrompido, o estado do serviço é definido como parado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-350">After the application is stopped, the service state is set to stopped.</span></span> <span data-ttu-id="03fdf-351">Se o aplicativo é um serviço hospedado, o domínio de aplicativo é descarregado.</span><span class="sxs-lookup"><span data-stu-id="03fdf-351">If the application is a hosted service, the application domain is unloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
  </Members>
</Type>