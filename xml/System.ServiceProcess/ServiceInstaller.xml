<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceInstaller.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac554444d60339c94eeb4aa99633da0325355739b16.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54444d60339c94eeb4aa99633da0325355739b16</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Installs a class that extends <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> to implement a service.</source>
          <target state="translated">Instala uma classe que estende <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> para implementar um serviço.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>This class is called by the install utility when installing a service application.</source>
          <target state="translated">Essa classe é chamada pelo utilitário de instalação ao instalar um aplicativo de serviço.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> does work specific to the service with which it is associated.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> de trabalho específicos para o serviço ao qual está associado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>It is used by the installation utility to write registry values associated with the service to a subkey within the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services registry key.</source>
          <target state="translated">Ele é usado pelo utilitário de instalação para gravar valores do Registro associados ao serviço para uma subchave na chave do registro HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The service is identified by its ServiceName within this subkey.</source>
          <target state="translated">O serviço é identificado por seu ServiceName dentro dessa subchave.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The subkey also includes the name of the executable or .dll to which the service belongs.</source>
          <target state="translated">A subchave também inclui o nome do executável ou. dll para o qual o serviço pertence.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>To install a service, create a project installer class that inherits from the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> class, and set the <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute on the class to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para instalar um serviço, criar uma classe de instalador de projeto que herda o <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> de classe e defina o <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> atributo da classe para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Within your project, create one <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance per service application, and one <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance for each service in the application.</source>
          <target state="translated">Dentro de seu projeto, criar um <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância por aplicativo de serviço e um <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância para cada serviço no aplicativo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Within your project installer class constructor, set the installation properties for the service using the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instances, and add the instances to the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection.</source>
          <target state="translated">No construtor de classe de instalador seu projeto, defina as propriedades de instalação para o serviço usando o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instâncias e, em seguida, adicione as instâncias de <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection in the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> method, be sure to perform the same additions to the collection in the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> method.</source>
          <target state="translated">É recomendável que você use o construtor para adicionar instâncias de instalador; No entanto, se você precisa adicionar ao <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção no <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> método, certifique-se de executar as mesmo adições à coleção o <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>For all classes deriving from the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> class, the state of the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection must be the same in the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> methods.</source>
          <target state="translated">Para todas as classes que derivam de <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> de classe, o estado do <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção deve ser o mesmo no <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>However, you can avoid the maintenance of the collection across the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> methods if you add installer instances to the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection in your custom installer class constructor.When the install utility is called, it looks for the <ph id="ph4">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute.</source>
          <target state="translated">No entanto, você pode evitar a manutenção da coleção no <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> métodos se você adicionar instâncias de instalador para o <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção em seu construtor de classe de instalador personalizado. Quando o utilitário de instalação é chamado, ele procura o <ph id="ph4">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>If the attribute is <ph id="ph1">`true`</ph>, the utility installs all the services that were added to the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection that were associated with your project installer.</source>
          <target state="translated">Se o atributo for <ph id="ph1">`true`</ph>, o utilitário instala todos os serviços que foram adicionados para o <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção que estavam associados com o instalador de seu projeto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> is <ph id="ph2">`false`</ph> or does not exist, the install utility ignores the project installer.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> é <ph id="ph2">`false`</ph> ou existir, o utilitário de instalação ignora o instalador do projeto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> associated with your project installation class installs information common to all <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instances in the project.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> associado a seu projeto instalação classe instala informações comuns a todos os <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instâncias no projeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</source>
          <target state="translated">Se este serviço tem tudo o que o separa de outros serviços no projeto de instalação, essas informações específicas do serviço são instaladas por este método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>It is crucial that the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> be identical to the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> of the class you derived from <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
          <target state="translated">É crucial que o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> ser idêntico de <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> da classe derivada de <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Normally, the value of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property for the service is set within the Main() function of the service application's executable.</source>
          <target state="translated">Normalmente, o valor da <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> propriedade para o serviço é definida dentro da função Main () do executável do aplicativo de serviço.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The Service Control Manager uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property to locate the service within this executable.</source>
          <target state="translated">O Gerenciador de controle de serviços usa a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> propriedade para localizar o serviço dentro deste executável.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>You can modify other properties on the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> either before or after adding it to the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection of your project installer.</source>
          <target state="translated">Você pode modificar outras propriedades no <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> antes ou depois de adicioná-lo para o <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção de instalador de seu projeto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>For example, a service's <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> may be set to start the service automatically at reboot or require a user to start the service manually.</source>
          <target state="translated">Por exemplo, um serviço <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> pode ser definido para iniciar o serviço automaticamente durante a reinicialização ou exigem que um usuário iniciar o serviço manualmente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Normally, you will not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">Normalmente, você não irá chamar os métodos em <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> dentro de seu código; eles geralmente são chamados somente com o utilitário de instalação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> methods during the installation process.</source>
          <target state="translated">O utilitário de instalação chama automaticamente o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType&gt;</ph> métodos durante o processo de instalação.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> (or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType&gt;</ph>) on all previously installed components.</source>
          <target state="translated">Ele desfaz falhas, se necessário, chamando <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A&gt;</ph> (ou <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType&gt;</ph>) em todos os componentes instalados anteriormente.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The installation utility calls <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> to remove the object.</source>
          <target state="translated">As chamadas de utilitário de instalação <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> para remover o objeto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>An application's install routine maintains information automatically about the components already installed, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Rotina de instalação do aplicativo mantém informações automaticamente sobre os componentes já instalado, usando o instalador de projeto <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>This state information is continuously updated as the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance, and each <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">Essas informações de estado são atualizadas continuamente como o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância e cada <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância é instalada pelo utilitário.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>It is usually unnecessary for your code to modify state information explicitly.</source>
          <target state="translated">Normalmente, é desnecessário para seu código modificar informações de estado explicitamente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>When the installation is performed, it automatically creates an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> to install the event log source associated with the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> derived class.</source>
          <target state="translated">Quando a instalação é executada, ele cria automaticamente um <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> para instalar a origem do log de eventos associada a <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> classe derivada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property for this source is set by the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A&gt;</ph> constructor to the computer's Application log.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> propriedade desta fonte é definida pelo <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A&gt;</ph> construtor para o log de aplicativo do computador.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>When you set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> (which should be identical to the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> of the service), the <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> is automatically set to the same value.</source>
          <target state="translated">Quando você define o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> do <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> (que deve ser idêntico de <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> do serviço), o <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> é definida automaticamente como o mesmo valor.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>In an installation failure, the source's installation is rolled-back along with previously installed services.</source>
          <target state="translated">Em uma falha de instalação, a instalação da fonte é revertidas junto com os serviços instalados anteriormente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> method tries to stop the service if it is running.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> método tentará interromper o serviço se ele está em execução.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Whether this succeeds or not, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> undoes the changes made by <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph>.</source>
          <target state="translated">Se isso for bem-sucedida ou não, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> desfaz as alterações feitas por <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>If a new source was created for event logging, the source is deleted.</source>
          <target state="translated">Se uma nova fonte foi criada para o log de eventos, a origem será excluída.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>The following example creates a project installer, called <ph id="ph1">`MyProjectInstaller`</ph>, which inherits from <ph id="ph2">&lt;xref:System.Configuration.Install.Installer&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir cria um instalador de projeto, chamado <ph id="ph1">`MyProjectInstaller`</ph>, que herda de <ph id="ph2">&lt;xref:System.Configuration.Install.Installer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</source>
          <target state="translated">Supõe-se há um executável de serviço que contém dois serviços, "Hello World serviço 1" e "Hello World serviço 2".</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Within the constructor for <ph id="ph1">`MyProjectInstaller`</ph> (which would be called by the install utility), <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> objects are created for each of these services, and a <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> is created for the executable.</source>
          <target state="translated">Dentro do construtor para <ph id="ph1">`MyProjectInstaller`</ph> (que será chamado pelo utilitário de instalação), <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> objetos são criados para cada um desses serviços e um <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> é criado para o executável.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>For the install utility to recognize <ph id="ph1">`MyProjectInstaller`</ph> as a valid installer, the <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para o utilitário de instalação reconhecer <ph id="ph1">`MyProjectInstaller`</ph> como um instalador válido, o <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> atributo é definido como <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Optional properties are set on the process installer and the service installers before the installers are added to the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection.</source>
          <target state="translated">Propriedades opcionais estão definidas no instalador do processo e os instaladores de serviço antes dos instaladores são adicionados para o <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>When the install utility accesses <ph id="ph1">`MyProjectInstaller`</ph>, the objects added to the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection through a call to <ph id="ph3">&lt;xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType&gt;</ph> will be installed in turn.</source>
          <target state="translated">Quando acessa o utilitário de instalação do <ph id="ph1">`MyProjectInstaller`</ph>, os objetos adicionados ao <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção por meio de uma chamada para <ph id="ph3">&lt;xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType&gt;</ph> por sua vez será instalado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>During the process, the installer maintains state information indicating which objects have been installed, so each can be backed out in turn, if an installation failure occurs.</source>
          <target state="translated">Durante o processo, o instalador mantém informações de estado que indica quais objetos foram instalados, portanto cada pode ser recuada por sua vez, se ocorrer uma falha de instalação.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>Normally, you would not create an instance of your project installer class explicitly.</source>
          <target state="translated">Normalmente, você não deve criar uma instância da classe de instalador do projeto explicitamente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceInstaller">
          <source>You would create it and add the <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute to the syntax, but it is the install utility that actually calls, and therefore instantiates, the class.</source>
          <target state="translated">Você deve criá-lo e adicionar o <ph id="ph1">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> de atributo para a sintaxe, mas é o utilitário de instalação que realmente chama e, portanto, cria a classe.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceInstaller" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceInstaller" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>To install a service, create a project installer class that inherits from the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> class, and set the <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute on the class to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para instalar um serviço, criar uma classe de instalador de projeto que herda o <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> de classe e defina o <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> atributo da classe para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>Within your project, create one <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance per service application, and one <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance for each service in the application.</source>
          <target state="translated">Dentro de seu projeto, criar um <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância por aplicativo de serviço e um <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância para cada serviço no aplicativo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>Within your project installer class constructor, set the installation properties for the service using the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instances, and add the instances to the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection.</source>
          <target state="translated">No construtor de classe de instalador seu projeto, defina as propriedades de instalação para o serviço usando o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instâncias e, em seguida, adicione as instâncias de <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A&gt;</ph> constructor automatically generates an event log source whose <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property is set to the computer's Application log, and an <ph id="ph3">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A&gt;</ph> construtor gera automaticamente um log de eventos de origem cujo <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> está definida como log de aplicativo do computador e um <ph id="ph3">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>When you set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph>, which should be identical to the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> of the service, the <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of the event log is automatically set to the same value.</source>
          <target state="translated">Quando você define o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> do <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph>, que deve ser idêntico de <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> do serviço, o <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> o log de eventos é automaticamente definida como o mesmo valor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>The source is deleted automatically in the case of an installation failure.</source>
          <target state="translated">A fonte será excluída automaticamente no caso de uma falha de instalação.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> property to <ph id="ph3">`ServiceStartMode.Manual`</ph> to specify that a user start the service.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A&gt;</ph> construtor define o <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> propriedade <ph id="ph3">`ServiceStartMode.Manual`</ph> para especificar que um usuário iniciar o serviço.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.#ctor">
          <source>You can reset the property to <ph id="ph1">`ServiceStartMode.Automatic`</ph> to specify that the service start when the computer reboots.</source>
          <target state="translated">Você pode redefinir a propriedade <ph id="ph1">`ServiceStartMode.Automatic`</ph> para especificar que o serviço iniciar quando o computador é reinicializado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> from which to copy.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> do qual copiar.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>Copies properties from an instance of <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> to this installer.</source>
          <target state="translated">Copia as propriedades de uma instância de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> para esse instalador.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>This method will rarely be called within your code.</source>
          <target state="translated">Esse método será chamado raramente dentro de seu código.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A&gt;</ph> is usually called only by designers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A&gt;</ph> é geralmente chamado apenas pelos designers.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A&gt;</ph> saves the service name of the <ph id="ph2">`component`</ph> parameter to the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A&gt;</ph> salva o nome do serviço do <ph id="ph2">`component`</ph> parâmetro para o <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> da <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>(Because the parameter must be an instance of a class that derives from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>, <ph id="ph2">`component`</ph> is guaranteed to have a <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property.)</source>
          <target state="translated">(Porque o parâmetro deve ser uma instância de uma classe que deriva de <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>, <ph id="ph2">`component`</ph> é garantido que tenha um <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> propriedade.)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>If you are using the Visual Studio designer, this method is called at design time when the user clicks <ph id="ph1">`Add Installer`</ph> on a component that specified this class as its installer.</source>
          <target state="translated">Se você estiver usando o designer do Visual Studio, este método é chamado em tempo de design, quando o usuário clica <ph id="ph1">`Add Installer`</ph> em um componente que essa classe como sua instalação.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>The installer takes all information it can from the live component and stores it for use at install time.</source>
          <target state="translated">O instalador usa todas as informações que ele possa do componente em tempo real e armazena-a para uso no momento da instalação.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <source>The component you are associating with this installer does not inherit from <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>.</source>
          <target state="translated">O componente que você está associando a esse instalador não herda de <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</source>
          <target state="translated">Obtém ou define um valor que indica se o serviço deve ter o início atrasado até outros serviços iniciados automaticamente estarem em execução.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to delay automatic start of the service; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para atrasar o início automático do serviço; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A&gt;</ph> property can be applied to any service, but it is ignored unless the service's start mode is <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceStartMode.Automatic&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A&gt;</ph> propriedade pode ser aplicada a qualquer serviço, mas é ignorado, a menos que o modo de início do serviço é <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceStartMode.Automatic&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>The setting takes effect the next time the system is restarted.</source>
          <target state="translated">A configuração entra em vigor na próxima vez que o sistema for reiniciado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>The Service Control Manager does not guarantee a specific start time for the service.</source>
          <target state="translated">O Gerenciador de controle de serviço não garante uma hora de início específica para o serviço.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>A delayed automatic start service cannot be a member of a load ordering group, but it can depend on another automatic start service.</source>
          <target state="translated">Um serviço de início automático atrasado não pode ser um membro de um grupo de ordenação de carga, mas ele pode depender de outro serviço de início automático.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>If an application calls a delayed automatic start service before it is loaded, the call fails.</source>
          <target state="translated">Se um aplicativo chamar um serviço de início automático atrasado antes que ele seja carregado, a chamada falhará.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart">
          <source>On operating systems that do not support delayed automatic start, setting this property has no effect.</source>
          <target state="translated">Em sistemas operacionais que dão suporte ao início automático atrasado, a definição dessa propriedade não terá efeito.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>Gets or sets the description for the service.</source>
          <target state="translated">Obtém ou define a descrição do serviço.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>The description of the service.</source>
          <target state="translated">A descrição do serviço.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>The default is an empty string ("").</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Description%2A&gt;</ph> property to describe the purpose of the installed service to the user.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Description%2A&gt;</ph> propriedade para descrever a finalidade do serviço instalado para o usuário.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>The user can view the service description in applications that display details for installed services.</source>
          <target state="translated">O usuário pode exibir a descrição do serviço em aplicativos que exibem detalhes de serviços instalados.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>For example, using Windows XP, you can view the service description with the Service Control command-line utility (Sc.exe) or you can view the service description within the <bpt id="p1">**</bpt>Services<ept id="p1">**</ept> node of the <bpt id="p2">**</bpt>Computer Management<ept id="p2">**</ept> console.</source>
          <target state="translated">Por exemplo, usando o Windows XP, você pode exibir a descrição do serviço com o utilitário de linha de comando de controle de serviço (Sc.exe) ou você pode exibir a descrição do serviço dentro do <bpt id="p1">**</bpt>serviços<ept id="p1">**</ept> nó do <bpt id="p2">**</bpt>gerenciamento do computador<ept id="p2">**</ept> console.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>The following code example sets the installation properties for a new Windows service application.</source>
          <target state="translated">O exemplo de código a seguir define as propriedades de instalação para um novo aplicativo de serviço do Windows.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>The example sets the service name, along with the display name and description.</source>
          <target state="translated">O exemplo define o nome do serviço, juntamente com o nome de exibição e a descrição.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.Description">
          <source>After assigning the installation properties for the service, the example adds the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection.</source>
          <target state="translated">Depois de atribuir as propriedades de instalação para o serviço, o exemplo adiciona o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> o objeto para o <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source>Indicates the friendly name that identifies the service to the user.</source>
          <target state="translated">Indica o nome amigável que identifica o serviço para o usuário.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source>The name associated with the service, used frequently for interactive tools.</source>
          <target state="translated">O nome associado ao serviço, usado com frequência em ferramentas interativas.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A&gt;</ph> is used, for example, in the Service Control Manager to provide a user-readable descriptive name for the service.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A&gt;</ph> é usado, por exemplo, no Gerenciador de controle de serviços para fornecer um nome descritivo legíveis pelo usuário para o serviço.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A&gt;</ph> is a registry value, but is never used as a registry key.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A&gt;</ph> é um valor do registro, mas nunca é usado como uma chave do registro.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source>Therefore, restrictions on the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property value do not apply.</source>
          <target state="translated">Portanto, as restrições sobre o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> o valor da propriedade não se aplicam.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> is used as the HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services registry key, so it is restricted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> é usado como a chave do registro HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services, portanto, é restrito.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.DisplayName">
          <source>The display name is never used by the install utility to identify the service, so there are no restrictions on the choice of name, as there is for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property.</source>
          <target state="translated">O nome para exibição nunca é usado pelo utilitário de instalação para identificar o serviço, portanto não há nenhuma restrição sobre a escolha do nome, como há para o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the context information associated with the installation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> que contém as informações de contexto associadas à instalação.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>Installs the service by writing service application information to the registry.</source>
          <target state="translated">Instala o serviço gravando informações do aplicativo de serviço no Registro.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>This method is meant to be used by installation tools, which process the appropriate methods automatically.</source>
          <target state="translated">Este método destina-se a ser usado pelas ferramentas de instalação, que processam os métodos apropriados automaticamente.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>Normally, you will not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">Normalmente, você não irá chamar os métodos em <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> dentro de seu código; eles geralmente são chamados somente com o utilitário de instalação.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> method during installation.</source>
          <target state="translated">O utilitário de instalação chama automaticamente o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> método durante a instalação.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A&gt;</ph> on the object that generated the exception.</source>
          <target state="translated">Ele desfaz falhas, se necessário, chamando <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A&gt;</ph> no objeto que gerou a exceção.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>An application's install routine maintains information automatically about the components that were already installed, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Rotina de instalação do aplicativo mantém informações automaticamente sobre os componentes que já foram instaladas, usando o instalador de projeto <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>This state information, passed into <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> as the <ph id="ph2">`stateSaver`</ph> parameter, is continuously updated as the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and each <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">Essas informações de estado passado para <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> como o <ph id="ph2">`stateSaver`</ph> parâmetro, é atualizado continuamente como o <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância e cada <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância é instalada pelo utilitário.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>It is usually unnecessary for your code to modify this state information explicitly.</source>
          <target state="translated">Normalmente, é desnecessário para seu código modificar essas informações de estado explicitamente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> associated with your project installation class installs information common to all <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instances in the project.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> associado a seu projeto instalação classe instala informações comuns a todos os <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instâncias no projeto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</source>
          <target state="translated">Se este serviço tem tudo o que o separa de outros serviços no projeto de instalação, essas informações específicas do serviço são instaladas por este método.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>To install a service, create a project installer class that inherits from the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> class, and set the <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> attribute on the class to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Para instalar um serviço, criar uma classe de instalador de projeto que herda o <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> de classe e defina o <ph id="ph2">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> atributo da classe para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>Within your project, create one <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance per service application, and one <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance for each service in the application.</source>
          <target state="translated">Dentro de seu projeto, criar um <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância por aplicativo de serviço e um <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância para cada serviço no aplicativo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>Within your project installer class constructor, set the installation properties for the service using the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instances, and add the instances to the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection.</source>
          <target state="translated">No construtor de classe de instalador seu projeto, defina as propriedades de instalação para o serviço usando o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instâncias e, em seguida, adicione as instâncias de <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection in the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> method, be sure to perform the same additions to the collection in the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> method.</source>
          <target state="translated">É recomendável que você use o construtor para adicionar instâncias de instalador; No entanto, se você precisa adicionar ao <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção no <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> método, certifique-se de executar as mesmo adições à coleção o <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>For all classes deriving from the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> class, the state of the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection must be the same in the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> methods.</source>
          <target state="translated">Para todas as classes que derivam de <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> de classe, o estado do <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção deve ser o mesmo no <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>However, you can avoid the maintenance of the collection across the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> methods if you add installer instances to the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection in your custom installer class constructor.</source>
          <target state="translated">No entanto, você pode evitar a manutenção da coleção no <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> métodos se você adicionar instâncias de instalador para o <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção em seu construtor de classe de instalador personalizado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The installation does not contain a <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceProcessInstaller" /&gt;</ph> for the executable.</source>
          <target state="translated">A instalação não contém um <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceProcessInstaller" /&gt;</ph> para o executável.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The file name for the assembly is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">O nome de arquivo para o assembly é <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The service name is invalid.</source>
          <target state="translated">O nome do servidor é inválido.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The Service Control Manager could not be opened.</source>
          <target state="translated">Não foi possível abrir o Gerenciador de Controle de Serviço.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The display name for the service is more than 255 characters in length.</source>
          <target state="translated">O nome de exibição do serviço tem mais de 255 caracteres.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>The system could not generate a handle to the service.</source>
          <target state="translated">O sistema não pôde gerar um identificador para o serviço.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
          <source>A service with that name is already installed.</source>
          <target state="translated">Um serviço com esse nome já está instalado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.Install.ComponentInstaller" /&gt;</ph> to which you are comparing the current installer.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Configuration.Install.ComponentInstaller" /&gt;</ph> ao qual você está comparando o instalador atual.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
          <source>Indicates whether two installers would install the same service.</source>
          <target state="translated">Indica se dois instaladores instalariam o mesmo serviço.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if calling <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /&gt;</ph> on both of these installers would result in installing the same service; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se chamar <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /&gt;</ph> em ambos esses instaladores resultaria em instalar o mesmo serviço; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A&gt;</ph> indicates, for example, whether two installers would install the same service under the same user account.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A&gt;</ph> Por exemplo, indica se dois instaladores instalaria o mesmo serviço sob a mesma conta de usuário.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the context information associated with the installation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> que contém as informações de contexto associadas à instalação.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>Rolls back service application information written to the registry by the installation procedure.</source>
          <target state="translated">Reverte informações de aplicativo de serviço gravadas no Registro pelo procedimento de instalação.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>This method is meant to be used by installation tools, which process the appropriate methods automatically.</source>
          <target state="translated">Este método destina-se a ser usado pelas ferramentas de instalação, que processam os métodos apropriados automaticamente.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>Normally, you will not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">Normalmente, você não irá chamar os métodos em <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> dentro de seu código; eles geralmente são chamados somente com o utilitário de instalação.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>The install utility automatically calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> method during the installation process.</source>
          <target state="translated">O utilitário de instalação chama automaticamente o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> método durante o processo de instalação.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>It backs out failures, if necessary, by calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A&gt;</ph> on the object that generated the exception.</source>
          <target state="translated">Ele desfaz falhas, se necessário, chamando <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A&gt;</ph> no objeto que gerou a exceção.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>An application's install routine maintains information automatically about the components already installed, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Rotina de instalação do aplicativo mantém informações automaticamente sobre os componentes já instalado, usando o instalador de projeto <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>This state information, passed into <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A&gt;</ph> as the <ph id="ph2">`savedState`</ph> parameter, is continuously updated as the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and each <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">Essas informações de estado passado para <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Rollback%2A&gt;</ph> como o <ph id="ph2">`savedState`</ph> parâmetro, é atualizado continuamente como o <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância e cada <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância é instalada pelo utilitário.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
          <source>It is usually unnecessary for your code to modify this state information explicitly.</source>
          <target state="translated">Normalmente, é desnecessário para seu código modificar essas informações de estado explicitamente.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>Indicates the name used by the system to identify this service.</source>
          <target state="translated">Indica o nome usado pelo sistema para identificar esse serviço.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>This property must be identical to the <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /&gt;</ph> of the service you want to install.</source>
          <target state="translated">Esta propriedade deve ser idêntica ao <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /&gt;</ph> do serviço que você deseja instalar.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>The name of the service to be installed.</source>
          <target state="translated">O nome do serviço a ser instalado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>This value must be set before the install utility attempts to install the service.</source>
          <target state="translated">Esse valor deve ser definido antes das tentativas de utilitário de instalação para instalar o serviço.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>It is crucial that the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> be identical to the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> of the class you derived from <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
          <target state="translated">É crucial que o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> ser idêntico de <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> da classe derivada de <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>Normally, the value of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property for the service is set within the Main() function of the service application's executable.</source>
          <target state="translated">Normalmente, o valor da <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType&gt;</ph> propriedade para o serviço é definida dentro da função Main () do executável do aplicativo de serviço.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>The Service Control Manager uses the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property to locate the service within this executable.</source>
          <target state="translated">O Gerenciador de controle de serviços usa a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> propriedade para localizar o serviço dentro deste executável.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>When you set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> of the service installer, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> of the associated event log is set to the same value.</source>
          <target state="translated">Quando você define o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> do instalador do serviço, o <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> do log de eventos associado é definido como o mesmo valor.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>This allows the service to automatically log service commands (such as Start and Stop) calls to the Application log on the computer.</source>
          <target state="translated">Isso permite que o serviço fazer logon automaticamente chamadas de comandos (como iniciar e parar) de serviço para o log de aplicativo no computador.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>If a source by the same name already exists on the computer, but in a log other than the Application log, an exception will be thrown.</source>
          <target state="translated">Se uma fonte com o mesmo nome já existir no computador, mas em um log que não sejam o log do aplicativo, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>If the source exists and is associated with the Application log, that source is used to report command calls to the service, and no exception is thrown.</source>
          <target state="translated">Se a origem existe e está associada com o log de aplicativo, essa fonte é usada para chamadas de comando para o serviço de relatório e nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> cannot be <ph id="ph2">`null`</ph> or have zero length.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> não pode ser <ph id="ph2">`null`</ph> ou ter comprimento zero.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>Its maximum size is 256 characters.</source>
          <target state="translated">O tamanho máximo é de 256 caracteres.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>It also cannot contain forward or backward slashes, '/' or '<ph id="ph1">\\</ph>', or characters from the ASCII character set with value less than decimal value 32.</source>
          <target state="translated">Ele também não pode conter barras frente ou para trás, '/' ou '<ph id="ph1">\\</ph>', ou o conjunto com valor menor que o valor decimal 32 de caracteres de caracteres a partir de ASCII.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.ServiceName">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /&gt;</ph> property is invalid.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /&gt;</ph> é inválida.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>Indicates the services that must be running for this service to run.</source>
          <target state="translated">Indica os serviços que devem estar em execução para que esse serviço seja executado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>An array of services that must be running before the service associated with this installer can run.</source>
          <target state="translated">Uma matriz de serviços que devem estar em execução antes de executar o serviço associado a esse instalador.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>A service can require other services to be running before it can start.</source>
          <target state="translated">Um serviço pode exigir outros serviços em execução antes de iniciar.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>The information from this property is written to a key in the registry.</source>
          <target state="translated">As informações dessa propriedade são gravadas para uma chave do registro.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>When the user (or the system, in the case of automatic startup) tries to run the service, the Service Control Manager (SCM) verifies that each of the services in the array has already been started.</source>
          <target state="translated">Quando o usuário (ou sistema, no caso de inicialização automática) tenta executar o serviço, o Gerenciador de controle de serviços (SCM) verifica se cada um dos serviços na matriz já foi iniciada.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>If any service in the array is not running then, the SCM tries to start them.</source>
          <target state="translated">Se qualquer serviço na matriz, em seguida, não está em execução, o SCM tentará iniciá-los.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>This includes services with <ph id="ph1">`Manual`</ph><ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph>.</source>
          <target state="translated">Isso inclui serviços com <ph id="ph1">`Manual`</ph> <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>If any service upon which this service depends fails to start, this service will not start.</source>
          <target state="translated">Se qualquer dos quais esse serviço depende de serviço não iniciar, este serviço não será iniciado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>An exception is not thrown if the system is not started because there is no exception handling at the system level to detect this.</source>
          <target state="translated">Uma exceção não é gerada se o sistema não foi iniciado porque não há nenhuma exceção tratamento no nível do sistema para detectar isso.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>Decide how to handle service start failures and implement this in your code.</source>
          <target state="translated">Decida como tratar as falhas de início do serviço e implementar isso em seu código.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>Typically, a dialog appears to the user at startup if a service fails to start.</source>
          <target state="translated">Normalmente, uma caixa de diálogo aparece para o usuário na inicialização, se um serviço não for iniciado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>If the service does not start, an entry is written to the Application event log.</source>
          <target state="translated">Se o serviço não iniciar, uma entrada é gravada no log de eventos do aplicativo.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
          <source>The services upon which this service depends do not need to be in the same executable.</source>
          <target state="translated">Os serviços dos quais esse serviço depende não precisam estar no mesmo executável.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>Indicates how and when this service is started.</source>
          <target state="translated">Indica como e quando esse serviço é iniciado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceStartMode" /&gt;</ph> that represents the way the service is started.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceStartMode" /&gt;</ph> que representa a forma pela qual o serviço foi iniciado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>The default is <ph id="ph1">&lt;see langword="Manual" /&gt;</ph>, which specifies that the service will not automatically start after reboot.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="Manual" /&gt;</ph>, que especifica que o serviço não será iniciado automaticamente após a reinicialização.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> to specify either that the service be started automatically after reboot or that a user must manually start the service.</source>
          <target state="translated">Definir o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> para especificar que o serviço ser iniciado automaticamente após a reinicialização ou que um usuário inicie manualmente o serviço.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>A service can also be disabled, specifying that it cannot be started, either manually or programmatically, until it is enabled.</source>
          <target state="translated">Um serviço também pode ser desabilitado, especificando que não pode ser iniciado, manualmente ou programaticamente, até que ele seja habilitado.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>You cannot change <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> property values after installation.</source>
          <target state="translated">Não é possível alterar <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> valores de propriedade após a instalação.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>To change the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph>, you either have to uninstall and reinstall your service, or manually change the setting using the Service Control Manager.</source>
          <target state="translated">Para alterar o <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph>, é necessário desinstalar e reinstalar o serviço ou alterar manualmente a configuração usando o Gerenciador de controle de serviço.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceInstaller.StartType">
          <source>The start mode is not a value of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceStartMode" /&gt;</ph> enumeration.</source>
          <target state="translated">O modo inicial não é um valor da enumeração <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceStartMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains the context information associated with the installation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> que contém as informações de contexto associadas à instalação.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>Uninstalls the service by removing information about it from the registry.</source>
          <target state="translated">Desinstala o serviço removendo as informações sobre ele no Registro.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>Uninstall first attempts to stop the service before uninstalling it.</source>
          <target state="translated">Desinstale primeiro tentará interromper o serviço antes de desinstalá-lo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>If the service cannot be stopped, no exception is caught, and the method continues with the removal of the service.</source>
          <target state="translated">Se o serviço não pode ser interrompido, nenhuma exceção for detectada, e o método continua com a remoção do serviço.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>Normally, you will not call the methods on <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> within your code; they are generally called only by the install utility.</source>
          <target state="translated">Normalmente, você não irá chamar os métodos em <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> dentro de seu código; eles geralmente são chamados somente com o utilitário de instalação.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>InstallUtil is used to uninstall services as well as install them; uninstalling takes a switch in the command line call.</source>
          <target state="translated">InstallUtil é usado para desinstalar os serviços, bem como instalá-los; Desinstalando o leva a um comutador na chamada de linha de comando.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>An application's uninstall routine maintains information automatically about the components being uninstalled, using the project installer's <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Rotina de desinstalação de um aplicativo mantém informações automaticamente sobre os componentes que estão sendo desinstalado, usando o instalador de projeto <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>This state information, passed into <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> as the <ph id="ph2">`savedState`</ph> parameter, is continuously updated as the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instance and each <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance is installed by the utility.</source>
          <target state="translated">Essas informações de estado passado para <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> como o <ph id="ph2">`savedState`</ph> parâmetro, é atualizado continuamente como o <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> instância e cada <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instância é instalada pelo utilitário.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>It is usually unnecessary for your code to modify this state information explicitly.</source>
          <target state="translated">Normalmente, é desnecessário para seu código modificar essas informações de estado explicitamente.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>For all classes deriving from the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> class, the state of the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection must be the same in the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> methods.</source>
          <target state="translated">Para todas as classes que derivam de <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> de classe, o estado do <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção deve ser o mesmo no <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>However, you can avoid the maintenance of the collection across the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> methods if you add installer instances to the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection in your custom installer class constructor.</source>
          <target state="translated">No entanto, você pode evitar a manutenção da coleção no <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.Install%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A&gt;</ph> métodos se você adicionar instâncias de instalador para o <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> coleção em seu construtor de classe de instalador personalizado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>There is no rollback mechanism for uninstalling, so if one service fails to uninstall, this does not affect the other services (usually within the same installation project) being uninstalled.</source>
          <target state="translated">Não há nenhum mecanismo de reversão para desinstalar, portanto, se um serviço falhar para desinstalar, isso não afeta os outros serviços (normalmente dentro do mesmo projeto de instalação) que está sendo desinstalados.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>The Service Control Manager could not be opened.</source>
          <target state="translated">Não foi possível abrir o Gerenciador de Controle de Serviço.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
          <source>The system could not get a handle to the service.</source>
          <target state="translated">O sistema não pôde obter um identificador para o serviço.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>