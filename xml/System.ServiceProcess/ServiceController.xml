<Type Name="ServiceController" FullName="System.ServiceProcess.ServiceController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10633b08e716e8a6605fe8a0d4296cd8a4110605" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36609618" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceController : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceController extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceController" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceController&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceController : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ServiceController = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.ServiceProcess.Design.ServiceControllerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceControllerDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="42be1-101">Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42be1-101">Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-102">Você pode usar o <xref:System.ServiceProcess.ServiceController> classe para conectar e controlar o comportamento de serviços existentes.</span><span class="sxs-lookup"><span data-stu-id="42be1-102">You can use the <xref:System.ServiceProcess.ServiceController> class to connect to and control the behavior of existing services.</span></span> <span data-ttu-id="42be1-103">Quando você cria uma instância do <xref:System.ServiceProcess.ServiceController> classe, defina suas propriedades para interagir com um serviço específico do Windows.</span><span class="sxs-lookup"><span data-stu-id="42be1-103">When you create an instance of the <xref:System.ServiceProcess.ServiceController> class, you set its properties so it interacts with a specific Windows service.</span></span> <span data-ttu-id="42be1-104">Você pode usar a classe para iniciar, parar e manipular o serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-104">You can then use the class to start, stop, and otherwise manipulate the service.</span></span>  
  
 <span data-ttu-id="42be1-105">Você provavelmente usará o <xref:System.ServiceProcess.ServiceController> componente uma capacidade administrativa.</span><span class="sxs-lookup"><span data-stu-id="42be1-105">You will most likely use the <xref:System.ServiceProcess.ServiceController> component in an administrative capacity.</span></span> <span data-ttu-id="42be1-106">Por exemplo, você pode criar um Windows ou comandos do aplicativo Web que envia personalizado para um serviço por meio de <xref:System.ServiceProcess.ServiceController> instância.</span><span class="sxs-lookup"><span data-stu-id="42be1-106">For example, you could create a Windows or Web application that sends custom commands to a service through the <xref:System.ServiceProcess.ServiceController> instance.</span></span> <span data-ttu-id="42be1-107">Isso pode ser útil, porque o snap-in MMC do Gerenciador de controle de serviços (SCM) não oferece suporte a comandos personalizados.</span><span class="sxs-lookup"><span data-stu-id="42be1-107">This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.</span></span>  
  
 <span data-ttu-id="42be1-108">Depois de criar uma instância de <xref:System.ServiceProcess.ServiceController>, você deve definir duas propriedades nele para identificar o serviço com a qual ele interage: o nome do computador e o nome do serviço que você deseja controlar.</span><span class="sxs-lookup"><span data-stu-id="42be1-108">After you create an instance of <xref:System.ServiceProcess.ServiceController>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42be1-109">Por padrão, <xref:System.ServiceProcess.ServiceController.MachineName%2A> é definido para o computador local, então não é necessário alterá-la, a menos que você deseja definir a instância para apontar para outro computador.</span><span class="sxs-lookup"><span data-stu-id="42be1-109">By default, <xref:System.ServiceProcess.ServiceController.MachineName%2A> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.</span></span>  
  
 <span data-ttu-id="42be1-110">Em geral, o autor do serviço escreve um código que personaliza a ação associada a um comando específico.</span><span class="sxs-lookup"><span data-stu-id="42be1-110">Generally, the service author writes code that customizes the action associated with a specific command.</span></span> <span data-ttu-id="42be1-111">Por exemplo, um serviço pode conter código para responder a um <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=nameWithType> comando.</span><span class="sxs-lookup"><span data-stu-id="42be1-111">For example, a service can contain code to respond to an <xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=nameWithType> command.</span></span> <span data-ttu-id="42be1-112">Nesse caso, o processamento personalizado para o <xref:System.ServiceProcess.ServiceController.Pause%2A> tarefa é executada antes do sistema pausa o serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-112">In that case, the custom processing for the <xref:System.ServiceProcess.ServiceController.Pause%2A> task runs before the system pauses the service.</span></span>  
  
 <span data-ttu-id="42be1-113">O conjunto de comandos que pode processar um serviço depende de suas propriedades. Por exemplo, você pode definir o <xref:System.ServiceProcess.ServiceController.CanStop%2A> propriedade para um serviço `false`.</span><span class="sxs-lookup"><span data-stu-id="42be1-113">The set of commands a service can process depends on its properties; for example, you can set the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property for a service to `false`.</span></span> <span data-ttu-id="42be1-114">Essa configuração processa o `Stop` comando disponível naquele serviço específico; ela impede que você parar o serviço do SCM desativando o botão necessário.</span><span class="sxs-lookup"><span data-stu-id="42be1-114">This setting renders the `Stop` command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button.</span></span> <span data-ttu-id="42be1-115">Se você tentar interromper o serviço do seu código, o sistema gera um erro e exibe a mensagem de erro "Falha ao parar `servicename`."</span><span class="sxs-lookup"><span data-stu-id="42be1-115">If you try to stop the service from your code, the system raises an error and displays the error message "Failed to stop `servicename`."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-116">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController> classe para controlar o `SimpleService` exemplo de serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-116">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController> class to control the `SimpleService` service example.</span></span>  
  
 [!code-csharp[ServiceControllerClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#1)]
 [!code-vb[ServiceControllerClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.ServiceProcess.ServiceControllerStatus" />
    <altmember cref="T:System.ServiceProcess.ServiceType" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-117">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-117">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceController();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-118">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is not associated with a specific service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-118">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is not associated with a specific service.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceController (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceController(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.ServiceProcess.ServiceController : string -&gt; System.ServiceProcess.ServiceController" Usage="new System.ServiceProcess.ServiceController name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="42be1-119">The name that identifies the service to the system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-119">The name that identifies the service to the system.</span>
          </span>
          <span data-ttu-id="42be1-120">This can also be the display name for the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-120">This can also be the display name for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-121">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-121">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the local computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42be1-122">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.%23ctor%28System.String%29?displayProperty=nameWithType> construtor para criar um <xref:System.ServiceProcess.ServiceController> objeto que é usado para controlar um serviço de exemplo.</span><span class="sxs-lookup"><span data-stu-id="42be1-122">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.%23ctor%28System.String%29?displayProperty=nameWithType> constructor to create a <xref:System.ServiceProcess.ServiceController> object that is used to control a sample service.</span></span> <span data-ttu-id="42be1-123">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-123">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42be1-124">
            <paramref name="name" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-124">
              <paramref name="name" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceController (string name, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceController(System::String ^ name, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.ServiceProcess.ServiceController : string * string -&gt; System.ServiceProcess.ServiceController" Usage="new System.ServiceProcess.ServiceController (name, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="42be1-125">The name that identifies the service to the system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-125">The name that identifies the service to the system.</span>
          </span>
          <span data-ttu-id="42be1-126">This can also be the display name for the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-126">This can also be the display name for the service.</span>
          </span>
        </param>
        <param name="machineName">
          <span data-ttu-id="42be1-127">The computer on which the service resides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-127">The computer on which the service resides.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-128">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the specified computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-128">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the specified computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-129">Para o `machineName` parâmetro, você pode usar "." para representar o computador local.</span><span class="sxs-lookup"><span data-stu-id="42be1-129">For the `machineName` parameter, you can use "." to represent the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42be1-130">
            <paramref name="name" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-130">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="42be1-131">-or-  <paramref name="machineName" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-131">-or-  <paramref name="machineName" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPauseAndContinue : bool" Usage="System.ServiceProcess.ServiceController.CanPauseAndContinue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPCanPauseAndContinue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-132">Gets a value indicating whether the service can be paused and resumed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-132">Gets a value indicating whether the service can be paused and resumed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-133">
            <see langword="true" /> se o serviço pode estar em pausa; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-133">
              <see langword="true" /> if the service can be paused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42be1-134">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.CanPauseAndContinue%2A> propriedade para determinar se um serviço pode pausar e continuar.</span><span class="sxs-lookup"><span data-stu-id="42be1-134">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.CanPauseAndContinue%2A> property to determine whether a service can pause and continue.</span></span> <span data-ttu-id="42be1-135">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-135">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-136">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-136">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-137">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-137">The service was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanShutdown : bool" Usage="System.ServiceProcess.ServiceController.CanShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPCanShutdown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-138">Gets a value indicating whether the service should be notified when the system is shutting down.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-138">Gets a value indicating whether the service should be notified when the system is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-139">
            <see langword="true" /> se o serviço precisar ser notificado quando o sistema estiver sendo desligado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-139">
              <see langword="true" /> if the service should be notified when the system is shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42be1-140">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.CanShutdown%2A> para determinar se um serviço fornece um manipulador para um evento de desligamento.</span><span class="sxs-lookup"><span data-stu-id="42be1-140">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.CanShutdown%2A> property to determine whether a service provides a handler for a shutdown event.</span></span> <span data-ttu-id="42be1-141">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-141">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-142">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-142">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-143">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-143">The service was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanStop : bool" Usage="System.ServiceProcess.ServiceController.CanStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPCanStop")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-144">Gets a value indicating whether the service can be stopped after it has started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-144">Gets a value indicating whether the service can be stopped after it has started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-145">
            <see langword="true" /> se o serviço puder ser interrompido e o método <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> chamado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-145">
              <see langword="true" /> if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42be1-146">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.CanStop%2A> para determinar se um serviço fornece um manipulador para um evento de parada.</span><span class="sxs-lookup"><span data-stu-id="42be1-146">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.CanStop%2A> property to determine whether a service provides a handler for a stop event.</span></span> <span data-ttu-id="42be1-147">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-147">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#2)]
 [!code-vb[ServiceControllerClass#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-148">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-148">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-149">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-149">The service was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="serviceController.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-150">Disconnects this <see cref="T:System.ServiceProcess.ServiceController" /> instance from the service and frees all the resources that the instance allocated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-150">Disconnects this <see cref="T:System.ServiceProcess.ServiceController" /> instance from the service and frees all the resources that the instance allocated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-151"><xref:System.ServiceProcess.ServiceController.Close%2A> libera todos os identificadores associados a <xref:System.ServiceProcess.ServiceController> instância.</span><span class="sxs-lookup"><span data-stu-id="42be1-151"><xref:System.ServiceProcess.ServiceController.Close%2A> releases all the handles associated with the <xref:System.ServiceProcess.ServiceController> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public void Continue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Continue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Continue" />
      <MemberSignature Language="VB.NET" Value="Public Sub Continue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Continue();" />
      <MemberSignature Language="F#" Value="member this.Continue : unit -&gt; unit" Usage="serviceController.Continue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-152">Continues a service after it has been paused.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-152">Continues a service after it has been paused.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-153">Quando você chama <xref:System.ServiceProcess.ServiceController.Continue%2A> para um serviço, seu status é alterado pela primeira vez para `ContinuePending` e, quando o <xref:System.ServiceProcess.ServiceController.Continue%2A> método retorna, ele é alterado para `Running`.</span><span class="sxs-lookup"><span data-stu-id="42be1-153">When you call <xref:System.ServiceProcess.ServiceController.Continue%2A> for a service, its status is first changed to `ContinuePending` and then, when the <xref:System.ServiceProcess.ServiceController.Continue%2A> method returns, it is changed to `Running`.</span></span>  
  
 <span data-ttu-id="42be1-154">Não é possível chamar <xref:System.ServiceProcess.ServiceController.Continue%2A> para o serviço até que o status do controlador de serviço é `Paused`.</span><span class="sxs-lookup"><span data-stu-id="42be1-154">You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-155">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.Continue%2A> método para continuar um serviço pausado.</span><span class="sxs-lookup"><span data-stu-id="42be1-155">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.Continue%2A> method to continue a paused service.</span></span> <span data-ttu-id="42be1-156">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-156">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#5)]
 [!code-vb[ServiceControllerClass#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-157">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-157">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-158">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-158">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-159">para controlar os serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-159">for controlling services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-160">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-160">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-161">Para obter acesso irrestrito às informações de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-161">for unrestricted access to service information.</span>
          </span>
          <span data-ttu-id="42be1-162">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-162">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceController.Pause" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="DependentServices">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceController[] DependentServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceProcess.ServiceController[] DependentServices" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.DependentServices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependentServices As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ DependentServices { cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependentServices : System.ServiceProcess.ServiceController[]" Usage="System.ServiceProcess.ServiceController.DependentServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPDependentServices")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-163">Gets the set of services that depends on the service associated with this <see cref="T:System.ServiceProcess.ServiceController" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-163">Gets the set of services that depends on the service associated with this <see cref="T:System.ServiceProcess.ServiceController" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-164">Uma matriz de instâncias de <see cref="T:System.ServiceProcess.ServiceController" />, cada uma das quais está associada a um serviço que depende desse serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-164">An array of <see cref="T:System.ServiceProcess.ServiceController" /> instances, each of which is associated with a service that depends on this service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-165">O <xref:System.ServiceProcess.ServiceController.DependentServices%2A> matriz representa os serviços que o sistema é interrompido se o aplicativo chama <xref:System.ServiceProcess.ServiceController.Stop%2A> para este serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-165">The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> array represents the services that the system stops if your application calls <xref:System.ServiceProcess.ServiceController.Stop%2A> for this service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-166">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para exibir o conjunto de serviços que são dependentes do serviço de Log de eventos.</span><span class="sxs-lookup"><span data-stu-id="42be1-166">The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the set of services that are dependent on the Event Log service.</span></span>  
  
 [!code-cpp[ServiceController#3](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#3)]
 [!code-csharp[ServiceController#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#3)]
 [!code-vb[ServiceController#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-167">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-167">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-168">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-168">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-169">para se conectar a serviços existentes no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-169">for connecting to existing services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-170">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-170">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.ServiceProcess.ServiceController.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPDisplayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-171">Gets or sets a friendly name for the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-171">Gets or sets a friendly name for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-172">O nome amigável do serviço, que pode ser usado para identificar o serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-172">The friendly name of the service, which can be used to identify the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-173">Você pode definir o <xref:System.ServiceProcess.ServiceController.DisplayName%2A> para uma cadeia de caracteres vazia (""), mas a configuração da propriedade como `null` lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="42be1-173">You can set the <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string (""), but setting the property to `null` throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-174">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para exibir o conjunto de serviços que são dependentes do serviço de Log de eventos.</span><span class="sxs-lookup"><span data-stu-id="42be1-174">The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the set of services that are dependent on the Event Log service.</span></span>  
  
 [!code-cpp[ServiceController#3](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#3)]
 [!code-csharp[ServiceController#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#3)]
 [!code-vb[ServiceController#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42be1-175">The <see cref="P:System.ServiceProcess.ServiceController.DisplayName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-175">The <see cref="P:System.ServiceProcess.ServiceController.DisplayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-176">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-176">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-177">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-177">The service was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="serviceController.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="serviceController.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="42be1-178">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-178">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-179">Releases the unmanaged resources used by the <see cref="T:System.ServiceProcess.ServiceController" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-179">Releases the unmanaged resources used by the <see cref="T:System.ServiceProcess.ServiceController" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-180">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="42be1-180">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="42be1-181">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="42be1-181">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="42be1-182"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="42be1-182"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="42be1-183">Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.ServiceProcess.ServiceController> referências.</span><span class="sxs-lookup"><span data-stu-id="42be1-183">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ServiceProcess.ServiceController> references.</span></span> <span data-ttu-id="42be1-184">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="42be1-184">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="42be1-185">
            <para>
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see langword="Dispose(Boolean)" /> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <see langword="Dispose" />. Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza Resources](~/docs/standard/garbage-collection/unmanaged.md) não gerenciado e [substituindo o método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-185">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public void ExecuteCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteCommand(int command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteCommand : int -&gt; unit" Usage="serviceController.ExecuteCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="42be1-186">An application-defined command flag that indicates which custom command to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-186">An application-defined command flag that indicates which custom command to execute.</span>
          </span>
          <span data-ttu-id="42be1-187">The value must be between 128 and 256, inclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-187">The value must be between 128 and 256, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-188">Executes a custom command on the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-188">Executes a custom command on the service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-189">Quando você chama <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, não altera o status do serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-189">When you call <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A>, the status of the service does not change.</span></span> <span data-ttu-id="42be1-190">Se o serviço foi iniciado, o status permanece `Running`.</span><span class="sxs-lookup"><span data-stu-id="42be1-190">If the service was started, the status remains `Running`.</span></span> <span data-ttu-id="42be1-191">Se o serviço foi interrompido, o status permanece `Stopped`, e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="42be1-191">If the service was stopped, the status remains `Stopped`, and so on.</span></span> <span data-ttu-id="42be1-192">Para processar o comando personalizado, o serviço deve substituir o <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> método e fornecer um manipulador para o comando identificado pelo `command` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="42be1-192">To process the custom command, the service must override the <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> method and provide a handler for the command identified by the `command` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-193">O exemplo de código a seguir mostra o uso do <xref:System.ServiceProcess.ServiceController.ExecuteCommand%28System.Int32%29?displayProperty=nameWithType> método para executar comandos personalizados no `SimpleService` exemplo de serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-193">The following code example shows the use of the <xref:System.ServiceProcess.ServiceController.ExecuteCommand%28System.Int32%29?displayProperty=nameWithType> method to execute custom commands in the `SimpleService` service example.</span></span>  
  
 [!code-csharp[ServiceContoller_ExecuteCommand#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceContoller_ExecuteCommand/CS/program.cs#1)]
 [!code-vb[ServiceContoller_ExecuteCommand#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceContoller_ExecuteCommand/VB/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-194">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-194">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-195">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-195">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-196">para controlar os serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-196">for controlling services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-197">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-197">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-198">Para obter acesso irrestrito às informações de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-198">for unrestricted access to service information.</span>
          </span>
          <span data-ttu-id="42be1-199">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-199">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDevices">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-200">Retrieves the device driver services on a computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-200">Retrieves the device driver services on a computer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDevices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetDevices ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetDevices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetDevices" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDevices () As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetDevices();" />
      <MemberSignature Language="F#" Value="static member GetDevices : unit -&gt; System.ServiceProcess.ServiceController[]" Usage="System.ServiceProcess.ServiceController.GetDevices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-201">Retrieves the device driver services on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-201">Retrieves the device driver services on the local computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42be1-202">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a device driver service on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-202">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a device driver service on the local computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-203"><xref:System.ServiceProcess.ServiceController.GetDevices%2A> Retorna somente o dispositivo serviços de driver do computador local.</span><span class="sxs-lookup"><span data-stu-id="42be1-203"><xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the local computer.</span></span> <span data-ttu-id="42be1-204">Para recuperar os serviços de driver de dispositivo não ou serviços que não são drivers, chame o <xref:System.ServiceProcess.ServiceController.GetServices%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42be1-204">To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method.</span></span> <span data-ttu-id="42be1-205">Juntos, os dois métodos fornecem acesso a todos os serviços em um computador.</span><span class="sxs-lookup"><span data-stu-id="42be1-205">Together, the two methods provide access to all the services on a computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-206">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para exibir os serviços de driver de dispositivo no computador local.</span><span class="sxs-lookup"><span data-stu-id="42be1-206">The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the device driver services on the local computer.</span></span>  
  
 [!code-cpp[ServiceController#5](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#5)]
 [!code-csharp[ServiceController#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#5)]
 [!code-vb[ServiceController#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-207">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-207">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetServices" />
      </Docs>
    </Member>
    <Member MemberName="GetDevices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetDevices (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetDevices(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetDevices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDevices (machineName As String) As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetDevices(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetDevices : string -&gt; System.ServiceProcess.ServiceController[]" Usage="System.ServiceProcess.ServiceController.GetDevices machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="42be1-208">The computer from which to retrieve the device driver services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-208">The computer from which to retrieve the device driver services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-209">Retrieves the device driver services on the specified computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-209">Retrieves the device driver services on the specified computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42be1-210">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a device driver service on the specified computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-210">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a device driver service on the specified computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-211"><xref:System.ServiceProcess.ServiceController.GetDevices%2A> Retorna somente o dispositivo serviços de driver do computador especificado.</span><span class="sxs-lookup"><span data-stu-id="42be1-211"><xref:System.ServiceProcess.ServiceController.GetDevices%2A> returns only the device driver services from the specified computer.</span></span> <span data-ttu-id="42be1-212">Para recuperar os serviços de driver de dispositivo não ou serviços que não são drivers, chame o <xref:System.ServiceProcess.ServiceController.GetServices%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42be1-212">To retrieve the non-device driver services or services that are not drivers, call the <xref:System.ServiceProcess.ServiceController.GetServices%2A> method.</span></span> <span data-ttu-id="42be1-213">Juntos, os dois métodos fornecem acesso a todos os serviços em um computador.</span><span class="sxs-lookup"><span data-stu-id="42be1-213">Together, the two methods provide access to all the services on a computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-214">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-214">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42be1-215">The <paramref name="machineName" /> parameter has invalid syntax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-215">The <paramref name="machineName" /> parameter has invalid syntax.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetServices" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetServices">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-216">Retrieves the non-device driver services on a computer, and those that are not drivers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-216">Retrieves the non-device driver services on a computer, and those that are not drivers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetServices" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServices () As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetServices();" />
      <MemberSignature Language="F#" Value="static member GetServices : unit -&gt; System.ServiceProcess.ServiceController[]" Usage="System.ServiceProcess.ServiceController.GetServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-217">Retrieves all the services on the local computer, except for the device driver services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-217">Retrieves all the services on the local computer, except for the device driver services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42be1-218">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a service on the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-218">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a service on the local computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-219"><xref:System.ServiceProcess.ServiceController.GetServices%2A> Retorna somente os serviços de driver de dispositivo não e os serviços que não são drivers do computador local.</span><span class="sxs-lookup"><span data-stu-id="42be1-219"><xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the local computer.</span></span> <span data-ttu-id="42be1-220">Para recuperar os serviços de driver de dispositivo, chame o <xref:System.ServiceProcess.ServiceController.GetDevices%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42be1-220">To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method.</span></span> <span data-ttu-id="42be1-221">Juntos, os dois métodos fornecem acesso a todos os serviços em um computador.</span><span class="sxs-lookup"><span data-stu-id="42be1-221">Together, the two methods provide access to all the services on a computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-222">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para exibir os serviços que estão em execução no computador local.</span><span class="sxs-lookup"><span data-stu-id="42be1-222">The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the services that are running on the local computer.</span></span>  
  
 [!code-cpp[ServiceController#6](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#6)]
 [!code-csharp[ServiceController#6](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#6)]
 [!code-vb[ServiceController#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-223">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-223">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetDevices" />
      </Docs>
    </Member>
    <Member MemberName="GetServices">
      <MemberSignature Language="C#" Value="public static System.ServiceProcess.ServiceController[] GetServices (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceProcess.ServiceController[] GetServices(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.GetServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServices (machineName As String) As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ GetServices(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetServices : string -&gt; System.ServiceProcess.ServiceController[]" Usage="System.ServiceProcess.ServiceController.GetServices machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="42be1-224">The computer from which to retrieve the services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-224">The computer from which to retrieve the services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-225">Retrieves all the services on the specified computer, except for the device driver services.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-225">Retrieves all the services on the specified computer, except for the device driver services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42be1-226">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a service on the specified computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-226">An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated with a service on the specified computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-227"><xref:System.ServiceProcess.ServiceController.GetServices%2A> Retorna somente os serviços de driver de dispositivo não e os serviços que não são drivers do computador especificado.</span><span class="sxs-lookup"><span data-stu-id="42be1-227"><xref:System.ServiceProcess.ServiceController.GetServices%2A> returns only the non-device driver services and the services that are not drivers from the specified computer.</span></span> <span data-ttu-id="42be1-228">Para recuperar os serviços de driver de dispositivo, chame o <xref:System.ServiceProcess.ServiceController.GetDevices%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42be1-228">To retrieve device driver services, call the <xref:System.ServiceProcess.ServiceController.GetDevices%2A> method.</span></span> <span data-ttu-id="42be1-229">Juntos, os dois métodos fornecem acesso a todos os serviços em um computador.</span><span class="sxs-lookup"><span data-stu-id="42be1-229">Together, the two methods provide access to all the services on a computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-230">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-230">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42be1-231">The <paramref name="machineName" /> parameter has invalid syntax.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-231">The <paramref name="machineName" /> parameter has invalid syntax.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceController.GetDevices" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.ServiceProcess.ServiceController.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPMachineName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-232">Gets or sets the name of the computer on which this service resides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-232">Gets or sets the name of the computer on which this service resides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-233">O nome do computador que está executando o serviço associado a essa instância <see cref="T:System.ServiceProcess.ServiceController" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-233">The name of the computer that is running the service associated with this <see cref="T:System.ServiceProcess.ServiceController" /> instance.</span>
          </span>
          <span data-ttu-id="42be1-234">O padrão é o computador local (".").</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-234">The default is the local computer (".").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-235">O nome do computador é o nome do servidor que está executando esse serviço, sem o caractere de barra invertida anterior (\\\\).</span><span class="sxs-lookup"><span data-stu-id="42be1-235">The computer name is the name of the server that is running this service, without the preceding backslash characters (\\\\).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42be1-236">The <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> syntax is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-236">The <see cref="P:System.ServiceProcess.ServiceController.MachineName" /> syntax is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="serviceController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-237">Suspends a service's operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-237">Suspends a service's operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-238">Não é possível chamar <xref:System.ServiceProcess.ServiceController.Continue%2A> para o serviço até que o status do controlador de serviço é `Paused`.</span><span class="sxs-lookup"><span data-stu-id="42be1-238">You cannot call <xref:System.ServiceProcess.ServiceController.Continue%2A> for the service until the service controller status is `Paused`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-239">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.Pause%2A> método para pausar um serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-239">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.Pause%2A> method to pause a service.</span></span> <span data-ttu-id="42be1-240">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-240">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#4)]
 [!code-vb[ServiceControllerClass#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-241">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-241">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-242">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-242">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-243">para controlar os serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-243">for controlling services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-244">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-244">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-245">Para obter acesso irrestrito às informações de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-245">for unrestricted access to service information.</span>
          </span>
          <span data-ttu-id="42be1-246">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-246">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.ServiceProcess.ServiceController.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceController.Continue" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="serviceController.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-247">Refreshes property values by resetting the properties to their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-247">Refreshes property values by resetting the properties to their current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-248">O <xref:System.ServiceProcess.ServiceController.Refresh%2A> método faz com que o <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, e <xref:System.ServiceProcess.ServiceController.Status%2A> propriedades devem ser redefinidos para seus valores atuais quando eles são referenciados em seguida.</span><span class="sxs-lookup"><span data-stu-id="42be1-248">The <xref:System.ServiceProcess.ServiceController.Refresh%2A> method causes the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A>, <xref:System.ServiceProcess.ServiceController.DependentServices%2A>, and <xref:System.ServiceProcess.ServiceController.Status%2A> properties to be reset to their current values when they are next referenced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-249">O exemplo a seguir demonstra o uso do <xref:System.ServiceProcess.ServiceController.Refresh%2A> método para obter o status de um serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-249">The following example demonstrates the use of the <xref:System.ServiceProcess.ServiceController.Refresh%2A> method to obtain the status of a service.</span></span> <span data-ttu-id="42be1-250">O código instrui um serviço para pausar e, em seguida, aguarda o status refletir a alteração.</span><span class="sxs-lookup"><span data-stu-id="42be1-250">The code instructs a service to pause, and then waits for the status to reflect the change.</span></span> <span data-ttu-id="42be1-251">Este exemplo é parte de um exemplo maior fornecido para a <xref:System.ServiceProcess.ServiceController> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-251">This example is part of a larger example that is provided for the <xref:System.ServiceProcess.ServiceController> class.</span></span>  
  
 [!code-csharp[ServiceControllerClass#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceControllerClass/CS/program.cs#4)]
 [!code-vb[ServiceControllerClass#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceControllerClass/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceHandle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ ServiceHandle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceHandle : System.Runtime.InteropServices.SafeHandle" Usage="System.ServiceProcess.ServiceController.ServiceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-252">Gets the handle for the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-252">Gets the handle for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-253">Um <see cref="T:System.Runtime.InteropServices.SafeHandle" /> que contém o identificador para o serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-253">A <see cref="T:System.Runtime.InteropServices.SafeHandle" /> that contains the handle for the service.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-254">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-254">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-255">para acessar código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-255">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="42be1-256">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-256">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceController.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceProcess.Design.ServiceNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPServiceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-257">Gets or sets the name that identifies the service that this instance references.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-257">Gets or sets the name that identifies the service that this instance references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-258">O nome que identifica o serviço ao qual esta instância <see cref="T:System.ServiceProcess.ServiceController" /> faz referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-258">The name that identifies the service that this <see cref="T:System.ServiceProcess.ServiceController" /> instance references.</span>
          </span>
          <span data-ttu-id="42be1-259">O padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-259">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-260">O <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifica o serviço para o Gerenciador de controle de serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-260">The <xref:System.ServiceProcess.ServiceController.ServiceName%2A> identifies the service to the Service Control Manager.</span></span> <span data-ttu-id="42be1-261">A alteração dessa propriedade faz com que o <xref:System.ServiceProcess.ServiceController> para vincular a outro serviço, ela não altera o que o serviço Gerenciador de controle do Microsoft Management Console snap-in exibe da instância.</span><span class="sxs-lookup"><span data-stu-id="42be1-261">Changing this property causes the <xref:System.ServiceProcess.ServiceController> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.</span></span>  
  
 <span data-ttu-id="42be1-262">Quando você estiver implementando um serviço personalizado, o valor dessa propriedade deve ser idêntico ao nome registrado para o serviço de <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> propriedade correspondente <xref:System.ServiceProcess.ServiceInstaller> classe.</span><span class="sxs-lookup"><span data-stu-id="42be1-262">When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the corresponding <xref:System.ServiceProcess.ServiceInstaller> class.</span></span> <span data-ttu-id="42be1-263">No código, o <xref:System.ServiceProcess.ServiceController.ServiceName%2A> geralmente é definido `main()` função do executável.</span><span class="sxs-lookup"><span data-stu-id="42be1-263">In code, the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> is usually set in the `main()` function of the executable.</span></span>  
  
 <span data-ttu-id="42be1-264">Quando você redefine o <xref:System.ServiceProcess.ServiceController.ServiceName%2A> propriedade, o método que define a propriedade define esta instância <xref:System.ServiceProcess.ServiceController.DisplayName%2A> uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="42be1-264">When you reset the <xref:System.ServiceProcess.ServiceController.ServiceName%2A> property, the method that sets the property sets this instance's <xref:System.ServiceProcess.ServiceController.DisplayName%2A> to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42be1-265">The <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-265">The <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42be1-266">The syntax of the <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> property is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-266">The syntax of the <see cref="P:System.ServiceProcess.ServiceController.ServiceName" /> property is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-267">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-267">The service was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesDependedOn">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceController[] ServicesDependedOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceProcess.ServiceController[] ServicesDependedOn" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServicesDependedOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicesDependedOn As ServiceController()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ ServicesDependedOn { cli::array &lt;System::ServiceProcess::ServiceController ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicesDependedOn : System.ServiceProcess.ServiceController[]" Usage="System.ServiceProcess.ServiceController.ServicesDependedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPServicesDependedOn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceController[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-268">The set of services that this service depends on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-268">The set of services that this service depends on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-269">Uma matriz de instâncias <see cref="T:System.ServiceProcess.ServiceController" />, cada uma associada a um serviço que deve estar em execução para que esse serviço seja executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-269">An array of <see cref="T:System.ServiceProcess.ServiceController" /> instances, each of which is associated with a service that must be running for this service to run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-270">Se qualquer serviço na <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> matriz não está em execução, você não poderá iniciar esse serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-270">If any service in the <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> array is not running, you will not be able to start this service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-271">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para exibir o conjunto de serviços que o serviço de Mensageiro é dependente.</span><span class="sxs-lookup"><span data-stu-id="42be1-271">The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the set of services that the Messenger service is dependent on.</span></span>  
  
 [!code-cpp[ServiceController#4](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#4)]
 [!code-csharp[ServiceController#4](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#4)]
 [!code-vb[ServiceController#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-272">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-272">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-273">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-273">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-274">para se conectar a serviços existentes no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-274">for connecting to existing services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-275">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-275">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceType ServiceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceType ServiceType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.ServiceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceType As ServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceType ServiceType { System::ServiceProcess::ServiceType get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceType : System.ServiceProcess.ServiceType" Usage="System.ServiceProcess.ServiceController.ServiceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPServiceType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-276">Gets the type of service that this object references.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-276">Gets the type of service that this object references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-277">Um dos valores <see cref="T:System.ServiceProcess.ServiceType" />, usados para indicar o tipo de serviço de rede.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-277">One of the <see cref="T:System.ServiceProcess.ServiceType" /> values, used to indicate the network service type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-278">O tipo do serviço indica como o serviço é usado pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="42be1-278">The service type indicates how the service is used by the system.</span></span> <span data-ttu-id="42be1-279">O valor de <xref:System.ServiceProcess.ServiceController.ServiceType%2A> propriedade representa um conjunto de sinalizadores combinadas que usam o operador OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="42be1-279">The value of the <xref:System.ServiceProcess.ServiceController.ServiceType%2A> property represents a set of flags combined using the bitwise OR operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-280">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para exibir os serviços de driver de dispositivo no computador local.</span><span class="sxs-lookup"><span data-stu-id="42be1-280">The following example uses the <xref:System.ServiceProcess.ServiceController> class to display the device driver services on the local computer.</span></span>  
  
 [!code-cpp[ServiceController#5](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#5)]
 [!code-csharp[ServiceController#5](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#5)]
 [!code-vb[ServiceController#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-281">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-281">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-282">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-282">The service was not found.</span>
          </span>
        </exception>
        <altmember cref="T:System.ServiceProcess.ServiceType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-283">Starts the service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-283">Starts the service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="serviceController.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-284">Starts the service, passing no arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-284">Starts the service, passing no arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-285">Não é possível chamar <xref:System.ServiceProcess.ServiceController.Stop%2A> para o serviço até que o status do controlador de serviço é `Running`.</span><span class="sxs-lookup"><span data-stu-id="42be1-285">You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-286">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para verificar se o serviço de alerta é interrompido.</span><span class="sxs-lookup"><span data-stu-id="42be1-286">The following example uses the <xref:System.ServiceProcess.ServiceController> class to check whether the Alerter service is stopped.</span></span> <span data-ttu-id="42be1-287">Se o serviço for interrompido, o exemplo inicia o serviço e aguarda até que o status do serviço é definido como <xref:System.ServiceProcess.ServiceControllerStatus.Running>.</span><span class="sxs-lookup"><span data-stu-id="42be1-287">If the service is stopped, the example starts the service and waits until the service status is set to <xref:System.ServiceProcess.ServiceControllerStatus.Running>.</span></span>  
  
 [!code-cpp[ServiceController#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#1)]
 [!code-csharp[ServiceController#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#1)]
 [!code-vb[ServiceController#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-288">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-288">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-289">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-289">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-290">para controlar os serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-290">for controlling services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-291">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-291">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-292">Para obter acesso irrestrito às informações de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-292">for unrestricted access to service information.</span>
          </span>
          <span data-ttu-id="42be1-293">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-293">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.ServiceProcess.ServiceController.Stop" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Start(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (args As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Start : string[] -&gt; unit" Usage="serviceController.Start args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="42be1-294">An array of arguments to pass to the service when it starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-294">An array of arguments to pass to the service when it starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-295">Starts a service, passing the specified arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-295">Starts a service, passing the specified arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-296">Não é possível chamar <xref:System.ServiceProcess.ServiceController.Stop%2A> para o serviço até que o status do controlador de serviço é `Running`.</span><span class="sxs-lookup"><span data-stu-id="42be1-296">You cannot call <xref:System.ServiceProcess.ServiceController.Stop%2A> for the service until the service controller status is `Running`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-297">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-297">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-298">The service cannot be started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-298">The service cannot be started.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42be1-299">
            <paramref name="args" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-299">
              <paramref name="args" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="42be1-300">-or-  A member of the array is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-300">-or-  A member of the array is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-301">para controlar os serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-301">for controlling services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-302">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-302">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-303">Para obter acesso irrestrito às informações de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-303">for unrestricted access to service information.</span>
          </span>
          <span data-ttu-id="42be1-304">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-304">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.ServiceProcess.ServiceController.Stop" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="StartType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceStartMode StartType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceStartMode StartType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.StartType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartType As ServiceStartMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceStartMode StartType { System::ServiceProcess::ServiceStartMode get(); };" />
      <MemberSignature Language="F#" Value="member this.StartType : System.ServiceProcess.ServiceStartMode" Usage="System.ServiceProcess.ServiceController.StartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPStartType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-305">Gets a value that indicates how the service represented by the <see cref="T:System.ServiceProcess.ServiceController" /> object starts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-305">Gets a value that indicates how the service represented by the <see cref="T:System.ServiceProcess.ServiceController" /> object starts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-306">Um valor que indica como o serviço é iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-306">A value that indicates how the service starts.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-307">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-307">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-308">para procurar serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-308">for browsing services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-309">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-309">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ServiceProcess.ServiceStartMode" />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceControllerStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceControllerStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceController.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As ServiceControllerStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceControllerStatus Status { System::ServiceProcess::ServiceControllerStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.ServiceProcess.ServiceControllerStatus" Usage="System.ServiceProcess.ServiceController.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SPStatus")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceControllerStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-310">Gets the status of the service that is referenced by this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-310">Gets the status of the service that is referenced by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42be1-311">Um dos valores de <see cref="T:System.ServiceProcess.ServiceControllerStatus" />, que indica se o serviço está em execução, parado ou em pausa, ou se um comando de iniciar, parar, pausar ou continuar está pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-311">One of the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-312">O status indica o estado atual do serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-312">The status indicates the current state of the service.</span></span> <span data-ttu-id="42be1-313">O conjunto de valores possíveis inclui vários que indicam se um comando de alteração de estado está pendente.</span><span class="sxs-lookup"><span data-stu-id="42be1-313">The set of possible values includes several that indicate whether a state-changing command is pending.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-314">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para verificar o status atual do serviço Telnet.</span><span class="sxs-lookup"><span data-stu-id="42be1-314">The following example uses the <xref:System.ServiceProcess.ServiceController> class to check the current status of the Telnet service.</span></span> <span data-ttu-id="42be1-315">Se o serviço for interrompido, o exemplo inicia o serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-315">If the service is stopped, the example starts the service.</span></span> <span data-ttu-id="42be1-316">Se o serviço está em execução, o exemplo interrompe o serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-316">If the service is running, the example stops the service.</span></span>  
  
 [!code-cpp[ServiceController#2](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#2)]
 [!code-csharp[ServiceController#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#2)]
 [!code-vb[ServiceController#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-317">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-317">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-318">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-318">The service was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="serviceController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42be1-319">Stops this service and any services that are dependent on this service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-319">Stops this service and any services that are dependent on this service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-320">Se todos os serviços dependem do serviço para sua operação, ele serão interrompidos antes que esse serviço for interrompido.</span><span class="sxs-lookup"><span data-stu-id="42be1-320">If any services depend on this service for their operation, they will be stopped before this service is stopped.</span></span> <span data-ttu-id="42be1-321">O <xref:System.ServiceProcess.ServiceController.DependentServices%2A> propriedade contém o conjunto de serviços que dependem deste.</span><span class="sxs-lookup"><span data-stu-id="42be1-321">The <xref:System.ServiceProcess.ServiceController.DependentServices%2A> property contains the set of services that depend on this one.</span></span>  
  
 <span data-ttu-id="42be1-322">Se você parar um serviço que esse serviço depende, chame o <xref:System.ServiceProcess.ServiceController.Stop%2A> método neste serviço dentro de <xref:System.ServiceProcess.ServiceController.Stop%2A> método de serviço pai.</span><span class="sxs-lookup"><span data-stu-id="42be1-322">If you stop a service that this service depends on, call the <xref:System.ServiceProcess.ServiceController.Stop%2A> method on this service within the <xref:System.ServiceProcess.ServiceController.Stop%2A> method of the parent service.</span></span> <span data-ttu-id="42be1-323">O <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> propriedade contém os serviços que esse serviço depende.</span><span class="sxs-lookup"><span data-stu-id="42be1-323">The <xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A> property contains the services that this service depends on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-324">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para verificar o status atual do serviço Telnet.</span><span class="sxs-lookup"><span data-stu-id="42be1-324">The following example uses the <xref:System.ServiceProcess.ServiceController> class to check the current status of the Telnet service.</span></span> <span data-ttu-id="42be1-325">Se o serviço for interrompido, o exemplo inicia o serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-325">If the service is stopped, the example starts the service.</span></span> <span data-ttu-id="42be1-326">Se o serviço está em execução, o exemplo interrompe o serviço.</span><span class="sxs-lookup"><span data-stu-id="42be1-326">If the service is running, the example stops the service.</span></span>  
  
 [!code-cpp[ServiceController#2](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#2)]
 [!code-csharp[ServiceController#2](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#2)]
 [!code-vb[ServiceController#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="42be1-327">An error occurred when accessing a system API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-327">An error occurred when accessing a system API.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42be1-328">The service was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-328">The service was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.ServiceProcess.ServiceControllerPermission">
          <span data-ttu-id="42be1-329">para controlar os serviços no computador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-329">for controlling services on the computer.</span>
          </span>
          <span data-ttu-id="42be1-330">Enumeração associada: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-330">Associated enumeration: <see cref="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="42be1-331">Para obter acesso irrestrito às informações de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-331">for unrestricted access to service information.</span>
          </span>
          <span data-ttu-id="42be1-332">Enumeração associada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-332">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.ServiceProcess.ServiceController.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceController.Start" />
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForStatus">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42be1-333">Waits for the service to reach the specified status.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-333">Waits for the service to reach the specified status.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForStatus">
      <MemberSignature Language="C#" Value="public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForStatus(valuetype System.ServiceProcess.ServiceControllerStatus desiredStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForStatus (desiredStatus As ServiceControllerStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForStatus(System::ServiceProcess::ServiceControllerStatus desiredStatus);" />
      <MemberSignature Language="F#" Value="member this.WaitForStatus : System.ServiceProcess.ServiceControllerStatus -&gt; unit" Usage="serviceController.WaitForStatus desiredStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredStatus" Type="System.ServiceProcess.ServiceControllerStatus" />
      </Parameters>
      <Docs>
        <param name="desiredStatus">
          <span data-ttu-id="42be1-334">The status to wait for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-334">The status to wait for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-335">Infinitely waits for the service to reach the specified status.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-335">Infinitely waits for the service to reach the specified status.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-336">Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> suspender um aplicativo de processamento da até que o serviço tiver alcançado o status necessário.</span><span class="sxs-lookup"><span data-stu-id="42be1-336">Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42be1-337">O <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> método aguarda aproximadamente 250 milissegundos entre cada verificação de status.</span><span class="sxs-lookup"><span data-stu-id="42be1-337">The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.</span></span>  <span data-ttu-id="42be1-338"><xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> não é possível detectar o caso do serviço observado alterando para o `desiredStatus` e imediatamente para outro status no intervalo.</span><span class="sxs-lookup"><span data-stu-id="42be1-338"><xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42be1-339">O exemplo a seguir usa a <xref:System.ServiceProcess.ServiceController> classe para verificar se o serviço de alerta é interrompido.</span><span class="sxs-lookup"><span data-stu-id="42be1-339">The following example uses the <xref:System.ServiceProcess.ServiceController> class to check whether the Alerter service is stopped.</span></span> <span data-ttu-id="42be1-340">Se o serviço for interrompido, o exemplo inicia o serviço e aguarda até que o status do serviço é definido como <xref:System.ServiceProcess.ServiceControllerStatus.Running>.</span><span class="sxs-lookup"><span data-stu-id="42be1-340">If the service is stopped, the example starts the service and waits until the service status is set to <xref:System.ServiceProcess.ServiceControllerStatus.Running>.</span></span>  
  
 [!code-cpp[ServiceController#1](~/samples/snippets/cpp/VS_Snippets_CLR/ServiceController/CPP/servicecontroller.cpp#1)]
 [!code-csharp[ServiceController#1](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceController/CS/servicecontroller.cs#1)]
 [!code-vb[ServiceController#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceController/VB/servicecontroller.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="42be1-341">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-341">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration.</span>
          </span>
        </exception>
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
    <Member MemberName="WaitForStatus">
      <MemberSignature Language="C#" Value="public void WaitForStatus (System.ServiceProcess.ServiceControllerStatus desiredStatus, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForStatus(valuetype System.ServiceProcess.ServiceControllerStatus desiredStatus, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForStatus (desiredStatus As ServiceControllerStatus, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForStatus(System::ServiceProcess::ServiceControllerStatus desiredStatus, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForStatus : System.ServiceProcess.ServiceControllerStatus * TimeSpan -&gt; unit" Usage="serviceController.WaitForStatus (desiredStatus, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredStatus" Type="System.ServiceProcess.ServiceControllerStatus" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="desiredStatus">
          <span data-ttu-id="42be1-342">The status to wait for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-342">The status to wait for.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="42be1-343">A <see cref="T:System.TimeSpan" /> object specifying the amount of time to wait for the service to reach the specified status.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-343">A <see cref="T:System.TimeSpan" /> object specifying the amount of time to wait for the service to reach the specified status.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42be1-344">Waits for the service to reach the specified status or for the specified time-out to expire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-344">Waits for the service to reach the specified status or for the specified time-out to expire.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42be1-345">Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> suspender um aplicativo de processamento da até que o serviço tiver alcançado o status necessário.</span><span class="sxs-lookup"><span data-stu-id="42be1-345">Use <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> to suspend an application's processing until the service has reached the required status.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42be1-346">O <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> método aguarda aproximadamente 250 milissegundos entre cada verificação de status.</span><span class="sxs-lookup"><span data-stu-id="42be1-346">The <xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> method waits approximately 250 milliseconds between each status check.</span></span>  <span data-ttu-id="42be1-347"><xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> não é possível detectar o caso do serviço observado alterando para o `desiredStatus` e imediatamente para outro status no intervalo.</span><span class="sxs-lookup"><span data-stu-id="42be1-347"><xref:System.ServiceProcess.ServiceController.WaitForStatus%2A> cannot detect the case of the observed service changing to the `desiredStatus` and then immediately to another status in that interval.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="42be1-348">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-348">The <paramref name="desiredStatus" /> parameter is not any of the values defined in the <see cref="T:System.ServiceProcess.ServiceControllerStatus" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">
          <span data-ttu-id="42be1-349">The value specified for the <paramref name="timeout" /> parameter expires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42be1-349">The value specified for the <paramref name="timeout" /> parameter expires.</span>
          </span>
        </exception>
        <altmember cref="P:System.ServiceProcess.ServiceController.Status" />
      </Docs>
    </Member>
  </Members>
</Type>