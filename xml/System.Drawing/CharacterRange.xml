<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CharacterRange.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c633f45ec418ee430a5cca9b3a5d066885a27f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c633f45ec418ee430a5cca9b3a5d066885a27f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.CharacterRange">
          <source>Specifies a range of character positions within a string.</source>
          <target state="translated">Especifica um intervalo de posições de caractere em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.CharacterRange">
          <source>The following code example demonstrates how to create a <ph id="ph1">&lt;xref:System.Drawing.CharacterRange&gt;</ph> and use it to highlight part of a string.</source>
          <target state="translated">O exemplo de código a seguir demonstra como criar um <ph id="ph1">&lt;xref:System.Drawing.CharacterRange&gt;</ph> e usá-lo para realçar a parte de uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.CharacterRange">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.CharacterRange">
          <source>Paste the example into a form and call the <ph id="ph1">`HighlightACharacterRange`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o exemplo em um formulário e a chamada a <ph id="ph1">`HighlightACharacterRange`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>The position of the first character in the range.</source>
          <target state="translated">A posição do primeiro caractere no intervalo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>For example, if <bpt id="p1">&lt;c&gt;</bpt>First<ept id="p1">&lt;/c&gt;</ept> is set to 0, the first position of the range is position 0 in the string.</source>
          <target state="translated">Por exemplo, se <bpt id="p1">&lt;c&gt;</bpt>First<ept id="p1">&lt;/c&gt;</ept> for definido como 0, a primeira posição do intervalo será a posição 0 na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>The number of positions in the range.</source>
          <target state="translated">O número de posições no intervalo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> structure, specifying a range of character positions within a string.</source>
          <target state="translated">Inicializa uma nova instância da estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>, especificando um intervalo de posições de caracteres em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>The following code example demonstrates how to create a <ph id="ph1">&lt;xref:System.Drawing.CharacterRange&gt;</ph> and use it to highlight part of a string.</source>
          <target state="translated">O exemplo de código a seguir demonstra como criar um <ph id="ph1">&lt;xref:System.Drawing.CharacterRange&gt;</ph> e usá-lo para realçar a parte de uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
          <source>Paste the example into a form and call the <ph id="ph1">`HighlightACharacterRange`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o exemplo em um formulário e a chamada a <ph id="ph1">`HighlightACharacterRange`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source>The object to compare to for equality.</source>
          <target state="translated">O objeto a ser comparado quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source>Gets a value indicating whether this object is equivalent to the specified object.</source>
          <target state="translated">Obtém um valor que indica se esse objeto é equivalente ao objeto especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the specified object is an instance with the same <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> value as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para indicar que o objeto especificado é uma instância com o mesmo valor de <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> e <ph id="ph3">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> que esta instância; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> to test for equality.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> para testar a igualdade.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.Equals(System.Object)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`CharacterRangeEquality2`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`CharacterRangeEquality2`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Drawing.CharacterRange.First">
          <source>Gets or sets the position in the string of the first character of this <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define a posição na cadeia de caracteres do primeiro caractere deste <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.CharacterRange.First">
          <source>The first position of this <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</source>
          <target state="translated">A primeira posição deste <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Retorna o código hash para essa instância.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.GetHashCode">
          <source>A 32-bit signed integer that is the hash code for this instance.</source>
          <target state="translated">Um inteiro com sinal de 32 bits que é o código hash para esta instância.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Drawing.CharacterRange.Length">
          <source>Gets or sets the number of positions in this <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o número de posições neste <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.CharacterRange.Length">
          <source>The number of positions in this <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</source>
          <target state="translated">O número de posições neste <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> to compare for equality.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> a ser comparado quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> to compare for equality.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> a ser comparado quanto à igualdade.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> objects.</source>
          <target state="translated">Compara dois objetos <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> values of the two <ph id="ph3">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> objects are equal.</source>
          <target state="translated">Obtém um valor que indica se os valores de <ph id="ph1">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> dos dois objetos <ph id="ph3">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> são iguais.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the two <ph id="ph2">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> objects have the same <ph id="ph3">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> values; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para indicar que os dois objetos <ph id="ph2">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> têm os mesmos valores de <ph id="ph3">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> e <ph id="ph4">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>You can also test for equality using the <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Você também pode testar para igualdade usando o <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> operator.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> operador.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`CharacterRangeEquality1`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`CharacterRangeEquality1`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> to compare for inequality.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> a ser comparado quanto à desigualdade.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> to compare for inequality.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> a ser comparado quanto à desigualdade.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> objects.</source>
          <target state="translated">Compara dois objetos <ph id="ph1">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> values of the two <ph id="ph3">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> objects are not equal.</source>
          <target state="translated">Obtém um valor que indica se os valores de <ph id="ph1">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> dos dois objetos <ph id="ph3">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> não são iguais.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the either the <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> or <ph id="ph3">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> values of the two <ph id="ph4">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> objects differ; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para indicar que os valores de <ph id="ph2">&lt;see cref="P:System.Drawing.CharacterRange.First" /&gt;</ph> ou <ph id="ph3">&lt;see cref="P:System.Drawing.CharacterRange.Length" /&gt;</ph> dos dois objetos <ph id="ph4">&lt;see cref="T:System.Drawing.CharacterRange" /&gt;</ph> são diferentes; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Inequality%2A&gt;</ph> method returns the opposite of the <ph id="ph2">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Inequality%2A&gt;</ph> método retorna o oposto do <ph id="ph2">&lt;xref:System.Drawing.CharacterRange.op_Equality%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Inequality%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.CharacterRange.op_Inequality%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`CharacterRangeInequality`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`CharacterRangeInequality`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>