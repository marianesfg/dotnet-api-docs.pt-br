<Type Name="FontConverter" FullName="System.Drawing.FontConverter">
  <TypeSignature Language="C#" Value="public class FontConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49d53-101">Converte objetos <see cref="T:System.Drawing.Font" /> de um tipo de dados em outro.</span><span class="sxs-lookup"><span data-stu-id="49d53-101">Converts <see cref="T:System.Drawing.Font" /> objects from one data type to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d53-102">Um conversor de tipo é usado para converter valores entre tipos de dados.</span><span class="sxs-lookup"><span data-stu-id="49d53-102">A type converter is used to convert values between data types.</span></span> <span data-ttu-id="49d53-103">Um conversor de tipo também dá suporte à configuração de propriedade em tempo de design, fornecendo a conversão do valor de texto ou uma lista de valores que os usuários podem selecionar.</span><span class="sxs-lookup"><span data-stu-id="49d53-103">A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from.</span></span> <span data-ttu-id="49d53-104">Acesso a <xref:System.Drawing.FontConverter> classe por meio de <xref:System.ComponentModel.TypeDescriptor> classe chamando o <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método.</span><span class="sxs-lookup"><span data-stu-id="49d53-104">Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d53-105">O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.FontConverter> para converter um <xref:System.Drawing.Font> em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="49d53-105">The following code example demonstrates how to use the <xref:System.Drawing.FontConverter> to convert a <xref:System.Drawing.Font> to and from a string.</span></span> <span data-ttu-id="49d53-106">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="49d53-106">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="49d53-107">Cole este código em um formulário e a chamada a `ShowFontStringConversion` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> passagem de eventos, e como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="49d53-107">Paste this code into a form and call the `ShowFontStringConversion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Converters#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Converters#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Converters#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49d53-108">Inicializa um novo objeto <see cref="T:System.Drawing.FontConverter" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-108">Initializes a new <see cref="T:System.Drawing.FontConverter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d53-109">Você deve acessar um <xref:System.Drawing.FontConverter> objeto por meio de <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="49d53-109">You should access a <xref:System.Drawing.FontConverter> object through the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-110">Um contexto do formatador.</span><span class="sxs-lookup"><span data-stu-id="49d53-110">A formatter context.</span></span> <span data-ttu-id="49d53-111">Esse objeto pode ser usado para obter mais informações sobre o ambiente do qual este conversor está sendo chamado.</span><span class="sxs-lookup"><span data-stu-id="49d53-111">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="49d53-112">Isso pode ser <see langword="null" />, portanto, você sempre deve verificar.</span><span class="sxs-lookup"><span data-stu-id="49d53-112">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="49d53-113">Além disso, as propriedades no objeto de contexto também podem retornar <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-113">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="sourceType"><span data-ttu-id="49d53-114">O tipo do qual você deseja converter.</span><span class="sxs-lookup"><span data-stu-id="49d53-114">The type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="49d53-115">Determina se esse conversor pode converter um objeto no tipo de origem especificado no tipo nativo do conversor.</span><span class="sxs-lookup"><span data-stu-id="49d53-115">Determines whether this converter can convert an object in the specified source type to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="49d53-116">Este método retornará <see langword="true" /> se este objeto puder realizar a conversão.</span><span class="sxs-lookup"><span data-stu-id="49d53-116">This method returns <see langword="true" /> if this object can perform the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-117">Um objeto <see langword="ITypeDescriptorContext" /> que fornece um contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="49d53-117">An <see langword="ITypeDescriptorContext" /> object that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="49d53-118">Um objeto <see cref="T:System.Type" /> que representa o tipo para o qual você deseja converter.</span><span class="sxs-lookup"><span data-stu-id="49d53-118">A <see cref="T:System.Type" /> object that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="49d53-119">Obtém um valor que indica se este conversor pode converter um objeto no tipo de destino fornecido usando o contexto.</span><span class="sxs-lookup"><span data-stu-id="49d53-119">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="49d53-120">Este método retornará <see langword="true" /> se este conversor puder realizar a conversão; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-120">This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d53-121">O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de.</span><span class="sxs-lookup"><span data-stu-id="49d53-121">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="49d53-122">Isso pode ser `null`. Portanto, sempre verifique.</span><span class="sxs-lookup"><span data-stu-id="49d53-122">This can be `null`, so always check.</span></span> <span data-ttu-id="49d53-123">Além disso, as propriedades no objeto de contexto podem retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="49d53-123">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-124">Um contexto do formatador.</span><span class="sxs-lookup"><span data-stu-id="49d53-124">A formatter context.</span></span> <span data-ttu-id="49d53-125">Esse objeto pode ser usado para obter mais informações sobre o ambiente do qual este conversor está sendo chamado.</span><span class="sxs-lookup"><span data-stu-id="49d53-125">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="49d53-126">Isso pode ser <see langword="null" />, portanto, você sempre deve verificar.</span><span class="sxs-lookup"><span data-stu-id="49d53-126">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="49d53-127">Além disso, as propriedades no objeto de contexto também podem retornar <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-127">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="49d53-128">Um objeto <see langword="CultureInfo" /> que especifica a cultura usada para representar a fonte.</span><span class="sxs-lookup"><span data-stu-id="49d53-128">A <see langword="CultureInfo" /> object that specifies the culture used to represent the font.</span></span></param>
        <param name="value"><span data-ttu-id="49d53-129">O objeto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="49d53-129">The object to convert.</span></span></param>
        <summary><span data-ttu-id="49d53-130">Converte o objeto especificado para o tipo nativo do conversor.</span><span class="sxs-lookup"><span data-stu-id="49d53-130">Converts the specified object to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="49d53-131">O objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="49d53-131">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49d53-132">A conversão não pôde ser executada.</span><span class="sxs-lookup"><span data-stu-id="49d53-132">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-133">Um contexto do formatador.</span><span class="sxs-lookup"><span data-stu-id="49d53-133">A formatter context.</span></span> <span data-ttu-id="49d53-134">Esse objeto pode ser usado para obter mais informações sobre o ambiente do qual este conversor está sendo chamado.</span><span class="sxs-lookup"><span data-stu-id="49d53-134">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="49d53-135">Isso pode ser <see langword="null" />, portanto, você sempre deve verificar.</span><span class="sxs-lookup"><span data-stu-id="49d53-135">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="49d53-136">Além disso, as propriedades no objeto de contexto também podem retornar <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-136">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="49d53-137">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica a cultura usada para representar o objeto.</span><span class="sxs-lookup"><span data-stu-id="49d53-137">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the culture used to represent the object.</span></span></param>
        <param name="value"><span data-ttu-id="49d53-138">O objeto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="49d53-138">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="49d53-139">O tipo de dados no qual converter o objeto.</span><span class="sxs-lookup"><span data-stu-id="49d53-139">The data type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="49d53-140">Converte o objeto especificado em outro tipo.</span><span class="sxs-lookup"><span data-stu-id="49d53-140">Converts the specified object to another type.</span></span></summary>
        <returns><span data-ttu-id="49d53-141">O objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="49d53-141">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d53-142">A conversão de tipo mais comum é para e de um tipo de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="49d53-142">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="49d53-143">A implementação padrão chama o <xref:System.Object.ToString%2A> método do objeto se o objeto é válido e se o tipo de destino é a cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="49d53-143">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49d53-144">A conversão não foi bem-sucedida.</span><span class="sxs-lookup"><span data-stu-id="49d53-144">The conversion was not successful.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-145">Um descritor de tipo por meio do qual o contexto adicional pode ser fornecido.</span><span class="sxs-lookup"><span data-stu-id="49d53-145">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="49d53-146">Um dicionário de novos valores da propriedade.</span><span class="sxs-lookup"><span data-stu-id="49d53-146">A dictionary of new property values.</span></span> <span data-ttu-id="49d53-147">O dicionário contém uma série de pares nome-valor, um para cada propriedade retornada de uma chamada ao método <see cref="Overload:System.Drawing.FontConverter.GetProperties" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-147">The dictionary contains a series of name-value pairs, one for each property returned from the <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> method.</span></span></param>
        <summary><span data-ttu-id="49d53-148">Cria um objeto desse tipo por meio de um conjunto especificado de valores da propriedade para o objeto.</span><span class="sxs-lookup"><span data-stu-id="49d53-148">Creates an object of this type by using a specified set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="49d53-149">O objeto recém-criado ou <see langword="null" />, se o objeto não puder ser criado.</span><span class="sxs-lookup"><span data-stu-id="49d53-149">The newly created object, or <see langword="null" /> if the object could not be created.</span></span> <span data-ttu-id="49d53-150">A implementação padrão retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-150">The default implementation returns <see langword="null" />.</span></span>  
  
 <span data-ttu-id="49d53-151"><see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> útil para criar objetos imutáveis que têm propriedades mutáveis.</span><span class="sxs-lookup"><span data-stu-id="49d53-151"><see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> useful for creating non-changeable objects that have changeable properties.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FontConverter ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49d53-152">Permite que <see cref="T:System.Drawing.FontConverter" /> tente liberar recursos e executar outras operações de limpeza antes que <see cref="T:System.Drawing.FontConverter" /> seja recuperado pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="49d53-152">Allows the <see cref="T:System.Drawing.FontConverter" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.FontConverter" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-153">Um descritor de tipo por meio do qual o contexto adicional pode ser fornecido.</span><span class="sxs-lookup"><span data-stu-id="49d53-153">A type descriptor through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="49d53-154">Determina se a alteração de um valor neste objeto deve exigir que uma chamada ao método <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> crie um novo valor.</span><span class="sxs-lookup"><span data-stu-id="49d53-154">Determines whether changing a value on this object should require a call to the <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> method to create a new value.</span></span></summary>
        <returns><span data-ttu-id="49d53-155">Este método retorna <see langword="true" /> se o objeto <see langword="CreateInstance" /> dever ser chamado quando uma alteração for feita em uma ou mais propriedades deste objeto; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-155">This method returns <see langword="true" /> if the <see langword="CreateInstance" /> object should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-156">Um descritor de tipo por meio do qual o contexto adicional pode ser fornecido.</span><span class="sxs-lookup"><span data-stu-id="49d53-156">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="49d53-157">O valor do objeto para o qual obter as propriedades.</span><span class="sxs-lookup"><span data-stu-id="49d53-157">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="49d53-158">Uma matriz de objetos <see cref="T:System.Attribute" /> que descrevem as propriedades.</span><span class="sxs-lookup"><span data-stu-id="49d53-158">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="49d53-159">Recupera o conjunto de propriedades para este tipo.</span><span class="sxs-lookup"><span data-stu-id="49d53-159">Retrieves the set of properties for this type.</span></span> <span data-ttu-id="49d53-160">Por padrão, um tipo não tem nenhuma propriedade a retornar.</span><span class="sxs-lookup"><span data-stu-id="49d53-160">By default, a type does not have any properties to return.</span></span></summary>
        <returns><span data-ttu-id="49d53-161">O conjunto de propriedades que devem ser expostas para este tipo de dados.</span><span class="sxs-lookup"><span data-stu-id="49d53-161">The set of properties that should be exposed for this data type.</span></span> <span data-ttu-id="49d53-162">Se nenhuma propriedade deve ser exposta, isso pode retornar <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-162">If no properties should be exposed, this may return <see langword="null" />.</span></span> <span data-ttu-id="49d53-163">A implementação padrão sempre retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-163">The default implementation always returns <see langword="null" />.</span></span>  
  
 <span data-ttu-id="49d53-164">Uma simples implementação desse método pode chamar o método <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> para o tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="49d53-164">An easy implementation of this method can call the <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> method for the correct data type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49d53-165">Um descritor de tipo por meio do qual o contexto adicional pode ser fornecido.</span><span class="sxs-lookup"><span data-stu-id="49d53-165">A type descriptor through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="49d53-166">Determina se este objeto dá suporte a propriedades.</span><span class="sxs-lookup"><span data-stu-id="49d53-166">Determines whether this object supports properties.</span></span> <span data-ttu-id="49d53-167">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-167">The default is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="49d53-168">Este método retorna <see langword="true" /> se o método <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> deve ser chamado para localizar as propriedades deste objeto; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49d53-168">This method returns <see langword="true" /> if the <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> method should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>