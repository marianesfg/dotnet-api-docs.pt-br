<Type Name="StringFormat" FullName="System.Drawing.StringFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4061f1bd21979a83de32da6fb45e0f2b72b5bffe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StringFormat : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StringFormat extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.StringFormat" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StringFormat&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringFormat sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="eb800-101">Encapsula as informações de layout de texto (como alinhamento, orientação e paradas de tabulação) manipulações de exibição (como inserção de reticências e substituição de dígitos nacionais) e recursos OpenType.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb800-101">Encapsulates text layout information (such as alignment, orientation and tab stops) display manipulations (such as ellipsis insertion and national digit substitution) and OpenType features.</span>
      </span>
      <span data-ttu-id="eb800-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb800-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-103">Vários formatos comuns são fornecidos por meio de <xref:System.Drawing.StringFormatFlags> enumeração.</span><span class="sxs-lookup"><span data-stu-id="eb800-103">Many common formats are provided through the <xref:System.Drawing.StringFormatFlags> enumeration.</span></span> <span data-ttu-id="eb800-104"><xref:System.Drawing.StringFormat> objetos podem ser alterados.</span><span class="sxs-lookup"><span data-stu-id="eb800-104"><xref:System.Drawing.StringFormat> objects can be changed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-105">Inicializa um novo objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-105">Initializes a new <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb800-106">Inicializa um novo objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-106">Initializes a new <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-107">A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Drawing.StringFormat> classe.</span><span class="sxs-lookup"><span data-stu-id="eb800-107">The following table shows initial property values for an instance of <xref:System.Drawing.StringFormat> class.</span></span>  
  
|<span data-ttu-id="eb800-108">Propriedade</span><span class="sxs-lookup"><span data-stu-id="eb800-108">Property</span></span>|<span data-ttu-id="eb800-109">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="eb800-109">Initial Value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="eb800-110">FormatFlags</span><span class="sxs-lookup"><span data-stu-id="eb800-110">FormatFlags</span></span>|<span data-ttu-id="eb800-111">0 (nenhum sinalizador definido)</span><span class="sxs-lookup"><span data-stu-id="eb800-111">0 (no flags are set)</span></span>|  
|<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix.None>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat (System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat(System::Drawing::StringFormat ^ format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="eb800-112">O objeto <see cref="T:System.Drawing.StringFormat" /> do qual inicializar o novo objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-112">The <see cref="T:System.Drawing.StringFormat" /> object from which to initialize the new <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-113">Inicializa um novo objeto <see cref="T:System.Drawing.StringFormat" /> do objeto <see cref="T:System.Drawing.StringFormat" /> existente especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-113">Initializes a new <see cref="T:System.Drawing.StringFormat" /> object from the specified existing <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb800-114">O exemplo de código a seguir demonstra os seguintes membros:</span><span class="sxs-lookup"><span data-stu-id="eb800-114">The following code example demonstrates the following members:</span></span>  
  
-   <xref:System.Drawing.Rectangle.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.Alignment%2A>  
  
-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  
  
-   <xref:System.Drawing.StringAlignment>  
  
-   <xref:System.Drawing.StringFormatFlags>  
  
 <span data-ttu-id="eb800-115">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="eb800-115">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="eb800-116">Cole o código em um formulário e uma chamada a `ShowLineAndAlignment` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="eb800-116">Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb800-117">
            <paramref name="format" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-117">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat (System.Drawing.StringFormatFlags options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.StringFormatFlags options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As StringFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat(System::Drawing::StringFormatFlags options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Drawing.StringFormatFlags" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="eb800-118">A enumeração <see cref="T:System.Drawing.StringFormatFlags" /> do novo objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-118">The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-119">Inicializa um novo objeto <see cref="T:System.Drawing.StringFormat" /> com a enumeração <see cref="T:System.Drawing.StringFormatFlags" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-119">Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb800-120">O exemplo de código a seguir demonstra os seguintes membros:</span><span class="sxs-lookup"><span data-stu-id="eb800-120">The following code example demonstrates the following members:</span></span>  
  
-   <xref:System.Drawing.Rectangle.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.Alignment%2A>  
  
-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  
  
-   <xref:System.Drawing.StringAlignment>  
  
-   <xref:System.Drawing.StringFormatFlags>  
  
 <span data-ttu-id="eb800-121">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="eb800-121">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="eb800-122">Cole o código em um formulário e uma chamada a `ShowLineAndAlignment` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="eb800-122">Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringFormat (System.Drawing.StringFormatFlags options, int language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.StringFormatFlags options, int32 language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As StringFormatFlags, language As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringFormat(System::Drawing::StringFormatFlags options, int language);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Drawing.StringFormatFlags" />
        <Parameter Name="language" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="eb800-123">A enumeração <see cref="T:System.Drawing.StringFormatFlags" /> do novo objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-123">The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="eb800-124">Um valor que indica o idioma do texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-124">A value that indicates the language of the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-125">Inicializa um novo objeto <see cref="T:System.Drawing.StringFormat" /> com a enumeração <see cref="T:System.Drawing.StringFormatFlags" /> e o idioma especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-125">Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration and language.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-126">Obtém ou define o alinhamento horizontal da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-126">Gets or sets horizontal alignment of the string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-127">Uma enumeração <see cref="T:System.Drawing.StringAlignment" /> que especifica o alinhamento horizontal da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-127">A <see cref="T:System.Drawing.StringAlignment" /> enumeration that specifies the horizontal  alignment of the string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-128">Use <xref:System.Drawing.StringFormat.LineAlignment%2A> para especificar o alinhamento vertical da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-128">Use <xref:System.Drawing.StringFormat.LineAlignment%2A> to specify the vertical alignment of the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb800-129">O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.StringFormat.LineAlignment%2A> e <xref:System.Drawing.StringFormat.Alignment%2A> propriedades e o <xref:System.Drawing.StringAlignment> enumeração para alinhar as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-129">The following code example demonstrates how to use the <xref:System.Drawing.StringFormat.LineAlignment%2A> and <xref:System.Drawing.StringFormat.Alignment%2A> properties and the <xref:System.Drawing.StringAlignment> enumeration to align strings.</span></span> <span data-ttu-id="eb800-130">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="eb800-130">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="eb800-131">Cole o código em um formulário e uma chamada a `ShowLineAndAlignment` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="eb800-131">Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb800-132">Cria uma cópia exata desse objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-132">Creates an exact copy of this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb800-133">O objeto <see cref="T:System.Drawing.StringFormat" /> criado por esse método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-133">The <see cref="T:System.Drawing.StringFormat" /> object this method creates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitutionLanguage">
      <MemberSignature Language="C#" Value="public int DigitSubstitutionLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DigitSubstitutionLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.DigitSubstitutionLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigitSubstitutionLanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DigitSubstitutionLanguage { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-134">Obtém o idioma usado quando os dígitos locais são substituídos dígitos ocidentais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-134">Gets the language that is used when local digits are substituted for western digits.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-135">Um identificador de idioma NLS (suporte ao idioma nacional) que identifica o idioma que será usado quando os dígitos locais forem substituídos por dígitos ocidentais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-135">A National Language Support (NLS) language identifier that identifies the language that will be used when local digits are substituted for western digits.</span>
          </span>
          <span data-ttu-id="eb800-136">Você pode passar a propriedade <see cref="P:System.Globalization.CultureInfo.LCID" /> de um objeto <see cref="T:System.Globalization.CultureInfo" /> como o identificador de idioma NLS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-136">You can pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of a <see cref="T:System.Globalization.CultureInfo" /> object as the NLS language identifier.</span>
          </span>
          <span data-ttu-id="eb800-137">Por exemplo, suponha que você crie um objeto <see cref="T:System.Globalization.CultureInfo" /> passando a cadeia de caracteres "ar-EG" para um construtor <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-137">For example, suppose you create a <see cref="T:System.Globalization.CultureInfo" /> object by passing the string "ar-EG" to a <see cref="T:System.Globalization.CultureInfo" /> constructor.</span>
          </span>
          <span data-ttu-id="eb800-138">Se você passar a propriedade <see cref="P:System.Globalization.CultureInfo.LCID" /> desse objeto <see cref="T:System.Globalization.CultureInfo" /> junto com <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> para o método <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />, dígitos indo-arábicos serão substituídos por dígitos ocidentais no momento da exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-138">If you pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of that <see cref="T:System.Globalization.CultureInfo" /> object along with <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> to the <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> method, then Arabic-Indic digits will be substituted for western digits at display time.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitutionMethod">
      <MemberSignature Language="C#" Value="public System.Drawing.StringDigitSubstitute DigitSubstitutionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringDigitSubstitute DigitSubstitutionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.DigitSubstitutionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigitSubstitutionMethod As StringDigitSubstitute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringDigitSubstitute DigitSubstitutionMethod { System::Drawing::StringDigitSubstitute get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringDigitSubstitute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-139">Obtém o método a ser usado para substituição de dígitos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-139">Gets the method to be used for digit substitution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-140">Um <see cref="T:System.Drawing.StringDigitSubstitute" /> valor de enumeração que especifica como caracteres de substituição em uma cadeia de caracteres que não podem ser exibidos porque eles não são suportados pela fonte atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-140">A <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration value that specifies how to substitute characters in a string that cannot be displayed because they are not supported by the current font.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb800-141">Libera todos os recursos usados por esse objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-141">Releases all resources used by this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-142">Chamando <xref:System.Drawing.StringFormat.Dispose%2A> permite que os recursos usados por este <xref:System.Drawing.StringFormat> objeto a ser realocada para outros fins.</span><span class="sxs-lookup"><span data-stu-id="eb800-142">Calling <xref:System.Drawing.StringFormat.Dispose%2A> allows the resources used by this <xref:System.Drawing.StringFormat> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~StringFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!StringFormat ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb800-143">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-143">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatFlags">
      <MemberSignature Language="C#" Value="public System.Drawing.StringFormatFlags FormatFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringFormatFlags FormatFlags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.FormatFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatFlags As StringFormatFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringFormatFlags FormatFlags { System::Drawing::StringFormatFlags get(); void set(System::Drawing::StringFormatFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-144">Obtém ou define uma enumeração <see cref="T:System.Drawing.StringFormatFlags" /> que contém informações de formatação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-144">Gets or sets a <see cref="T:System.Drawing.StringFormatFlags" /> enumeration that contains formatting information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-145">Uma enumeração <see cref="T:System.Drawing.StringFormatFlags" /> que contém informações de formatação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-145">A <see cref="T:System.Drawing.StringFormatFlags" /> enumeration that contains formatting information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericDefault">
      <MemberSignature Language="C#" Value="public static System.Drawing.StringFormat GenericDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.StringFormat GenericDefault" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.GenericDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericDefault As StringFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::StringFormat ^ GenericDefault { System::Drawing::StringFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-146">Obtém um objeto padrão <see cref="T:System.Drawing.StringFormat" /> genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-146">Gets a generic default <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-147">O objeto padrão <see cref="T:System.Drawing.StringFormat" /> genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-147">The generic default <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-148">A tabela a seguir mostra os valores de propriedade inicial para uma instância padrão genérico de <xref:System.Drawing.StringFormat> classe.</span><span class="sxs-lookup"><span data-stu-id="eb800-148">The following table shows initial property values for a generic default instance of the <xref:System.Drawing.StringFormat> class.</span></span>  
  
|<span data-ttu-id="eb800-149">Propriedade</span><span class="sxs-lookup"><span data-stu-id="eb800-149">Property</span></span>|<span data-ttu-id="eb800-150">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="eb800-150">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Drawing.StringFormat.FormatFlags%2A>|<span data-ttu-id="eb800-151">0</span><span class="sxs-lookup"><span data-stu-id="eb800-151">0</span></span>|  
|<xref:System.Drawing.StringFormat.Alignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.LineAlignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.Trimming%2A>|<xref:System.Drawing.StringTrimming.Character>|  
|<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix.None>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A>|<xref:System.Drawing.StringDigitSubstitute.User>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A>|<span data-ttu-id="eb800-152">0</span><span class="sxs-lookup"><span data-stu-id="eb800-152">0</span></span>|  
  
 <span data-ttu-id="eb800-153">Se você fizer alterações no <xref:System.Drawing.StringFormat> objeto retornado do <xref:System.Drawing.StringFormat.GenericDefault%2A> propriedade, essas alterações persistirão e futuras chamadas para o <xref:System.Drawing.StringFormat.GenericDefault%2A> propriedade reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="eb800-153">If you make changes to the <xref:System.Drawing.StringFormat> object returned from the <xref:System.Drawing.StringFormat.GenericDefault%2A> property, these changes persist, and future calls to the <xref:System.Drawing.StringFormat.GenericDefault%2A> property reflects these changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericTypographic">
      <MemberSignature Language="C#" Value="public static System.Drawing.StringFormat GenericTypographic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.StringFormat GenericTypographic" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.GenericTypographic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericTypographic As StringFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::StringFormat ^ GenericTypographic { System::Drawing::StringFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-154">Obtém um objeto <see cref="T:System.Drawing.StringFormat" /> tipográfico genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-154">Gets a generic typographic <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-155">Um objeto <see cref="T:System.Drawing.StringFormat" /> tipográfico genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-155">A generic typographic <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-156">A tabela a seguir mostra os valores de propriedade inicial para uma instância tipográfica genérico do <xref:System.Drawing.StringFormat> classe.</span><span class="sxs-lookup"><span data-stu-id="eb800-156">The following table shows initial property values for a generic typographic instance of the <xref:System.Drawing.StringFormat> class.</span></span>  
  
|<span data-ttu-id="eb800-157">Propriedade</span><span class="sxs-lookup"><span data-stu-id="eb800-157">Property</span></span>|<span data-ttu-id="eb800-158">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="eb800-158">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Drawing.StringFormat.FormatFlags%2A>|<span data-ttu-id="eb800-159">24580 (<xref:System.Drawing.StringFormatFlags.NoClip>, <xref:System.Drawing.StringFormatFlags.FitBlackBox> e <xref:System.Drawing.StringFormatFlags.LineLimit>.)</span><span class="sxs-lookup"><span data-stu-id="eb800-159">24580 (<xref:System.Drawing.StringFormatFlags.NoClip>, <xref:System.Drawing.StringFormatFlags.FitBlackBox> and <xref:System.Drawing.StringFormatFlags.LineLimit>.)</span></span>|  
|<xref:System.Drawing.StringFormat.Alignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.LineAlignment%2A>|<xref:System.Drawing.StringAlignment.Near>|  
|<xref:System.Drawing.StringFormat.Trimming%2A>|<xref:System.Drawing.StringTrimming.None>|  
|<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix.None>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A>|<xref:System.Drawing.StringDigitSubstitute.User>|  
|<xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A>|<span data-ttu-id="eb800-160">0</span><span class="sxs-lookup"><span data-stu-id="eb800-160">0</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTabStops">
      <MemberSignature Language="C#" Value="public float[] GetTabStops (out float firstTabOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] GetTabStops([out] float32&amp; firstTabOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.GetTabStops(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTabStops (ByRef firstTabOffset As Single) As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;float&gt; ^ GetTabStops([Runtime::InteropServices::Out] float % firstTabOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstTabOffset" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="firstTabOffset">
          <span data-ttu-id="eb800-161">O número de espaços entre o início de uma linha de texto e a primeira parada de tabulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-161">The number of spaces between the beginning of a text line and the first tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-162">Obtém as paradas de tabulação para esse objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-162">Gets the tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb800-163">Uma matriz de distâncias (em número de espaços) entre paradas de tabulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-163">An array of distances (in number of spaces) between tab stops.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb800-164">O exemplo a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="eb800-164">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="eb800-165">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="eb800-165">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eb800-166">Define as paradas de tabulação do <xref:System.Drawing.StringFormat>.</span><span class="sxs-lookup"><span data-stu-id="eb800-166">Sets the tab stops of the <xref:System.Drawing.StringFormat>.</span></span>  
  
-   <span data-ttu-id="eb800-167">Desenha a cadeia de caracteres e o retângulo de layout.</span><span class="sxs-lookup"><span data-stu-id="eb800-167">Draws the string and the layout rectangle.</span></span> <span data-ttu-id="eb800-168">Observe que a cadeia de caracteres contém guias.</span><span class="sxs-lookup"><span data-stu-id="eb800-168">Note that the string contains tabs.</span></span> <span data-ttu-id="eb800-169">As configurações da guia do <xref:System.Drawing.StringFormat> especificam os deslocamentos do texto com guias.</span><span class="sxs-lookup"><span data-stu-id="eb800-169">The tab settings of the <xref:System.Drawing.StringFormat> specify the offsets of the tabbed text.</span></span>  
  
-   <span data-ttu-id="eb800-170">Obtém as paradas de tabulação e usa ou inspeciona os valores.</span><span class="sxs-lookup"><span data-stu-id="eb800-170">Gets the tab stops and uses or inspects the values.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotkeyPrefix">
      <MemberSignature Language="C#" Value="public System.Drawing.Text.HotkeyPrefix HotkeyPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Text.HotkeyPrefix HotkeyPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.HotkeyPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property HotkeyPrefix As HotkeyPrefix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Text::HotkeyPrefix HotkeyPrefix { System::Drawing::Text::HotkeyPrefix get(); void set(System::Drawing::Text::HotkeyPrefix value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.HotkeyPrefix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-171">Obtém ou define o objeto <see cref="T:System.Drawing.Text.HotkeyPrefix" /> para esse objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-171">Gets or sets the <see cref="T:System.Drawing.Text.HotkeyPrefix" /> object for this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-172">O objeto <see cref="T:System.Drawing.Text.HotkeyPrefix" /> para esse objeto <see cref="T:System.Drawing.StringFormat" />, o padrão é <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-172">The <see cref="T:System.Drawing.Text.HotkeyPrefix" /> object for this <see cref="T:System.Drawing.StringFormat" /> object, the default is <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-173">Em uma interface gráfica do usuário, uma tecla de acesso é a letra sublinhada em uma palavra (geralmente combinada com outra chave, como a tecla Alt) que você pode pressionar no teclado para ativar a funcionalidade que representa a palavra.</span><span class="sxs-lookup"><span data-stu-id="eb800-173">In a graphical user interface, a hot key is the underlined letter in a word (usually combined with another key, such as the Alt key) that you can press on the keyboard to activate the functionality that the word represents.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb800-174">O exemplo de código a seguir mostra como definir um atalho de teclado usando o <xref:System.Drawing.StringFormat.HotkeyPrefix%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="eb800-174">The following code example shows how to set a keyboard shortcut using the <xref:System.Drawing.StringFormat.HotkeyPrefix%2A> property.</span></span> <span data-ttu-id="eb800-175">Ele também demonstra como usar o <xref:System.Drawing.SystemBrushes.FromSystemColor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb800-175">It also demonstrates how to use the <xref:System.Drawing.SystemBrushes.FromSystemColor%2A> method.</span></span> <span data-ttu-id="eb800-176">Para executar este exemplo, cole o código em um formulário, controlar o formulário <xref:System.Windows.Forms.Control.Paint> eventos e chame o método a seguir, passando e como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="eb800-176">To run this example, paste the code into a form, handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the following method, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.MiscExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.MiscExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment LineAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment LineAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.LineAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property LineAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment LineAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-177">Obtém ou define o alinhamento vertical da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-177">Gets or sets the vertical alignment of the string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-178">Uma enumeração <see cref="T:System.Drawing.StringAlignment" /> que representa o alinhamento da linha vertical.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-178">A <see cref="T:System.Drawing.StringAlignment" /> enumeration that represents the vertical line alignment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-179">Use <xref:System.Drawing.StringFormat.Alignment%2A> para especificar o alinhamento horizontal da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-179">Use <xref:System.Drawing.StringFormat.Alignment%2A> to specify the horizontal alignment of the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb800-180">O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.StringFormat.LineAlignment%2A> e <xref:System.Drawing.StringFormat.Alignment%2A> propriedades e o <xref:System.Drawing.StringAlignment> enumeração para alinhar as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-180">The following code example demonstrates how to use the <xref:System.Drawing.StringFormat.LineAlignment%2A> and <xref:System.Drawing.StringFormat.Alignment%2A> properties and the <xref:System.Drawing.StringAlignment> enumeration to align strings.</span></span> <span data-ttu-id="eb800-181">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="eb800-181">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="eb800-182">Cole o código em um formulário e uma chamada a `ShowLineAndAlignment` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="eb800-182">Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDigitSubstitution">
      <MemberSignature Language="C#" Value="public void SetDigitSubstitution (int language, System.Drawing.StringDigitSubstitute substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDigitSubstitution(int32 language, valuetype System.Drawing.StringDigitSubstitute substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDigitSubstitution (language As Integer, substitute As StringDigitSubstitute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDigitSubstitution(int language, System::Drawing::StringDigitSubstitute substitute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.Int32" />
        <Parameter Name="substitute" Type="System.Drawing.StringDigitSubstitute" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="eb800-183">Um identificador de idioma NLS (suporte ao idioma nacional) que identifica o idioma que será usado quando os dígitos locais forem substituídos por dígitos ocidentais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-183">A National Language Support (NLS) language identifier that identifies the language that will be used when local digits are substituted for western digits.</span>
          </span>
          <span data-ttu-id="eb800-184">Você pode passar a propriedade <see cref="P:System.Globalization.CultureInfo.LCID" /> de um objeto <see cref="T:System.Globalization.CultureInfo" /> como o identificador de idioma NLS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-184">You can pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of a <see cref="T:System.Globalization.CultureInfo" /> object as the NLS language identifier.</span>
          </span>
          <span data-ttu-id="eb800-185">Por exemplo, suponha que você crie um objeto <see cref="T:System.Globalization.CultureInfo" /> passando a cadeia de caracteres "ar-EG" para um construtor <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-185">For example, suppose you create a <see cref="T:System.Globalization.CultureInfo" /> object by passing the string "ar-EG" to a <see cref="T:System.Globalization.CultureInfo" /> constructor.</span>
          </span>
          <span data-ttu-id="eb800-186">Se você passar a propriedade <see cref="P:System.Globalization.CultureInfo.LCID" /> desse objeto <see cref="T:System.Globalization.CultureInfo" /> junto com <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> para o método <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />, dígitos indo-arábicos serão substituídos por dígitos ocidentais no momento da exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-186">If you pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of that <see cref="T:System.Globalization.CultureInfo" /> object along with <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> to the <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> method, then Arabic-Indic digits will be substituted for western digits at display time.</span>
          </span>
        </param>
        <param name="substitute">
          <span data-ttu-id="eb800-187">Um elemento da enumeração <see cref="T:System.Drawing.StringDigitSubstitute" /> que especifica como os dígitos são exibidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-187">An element of the <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration that specifies how digits are displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-188">Especifica o idioma e o método a serem usados quando os números locais são substituídos por dígitos ocidentais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-188">Specifies the language and method to be used when local digits are substituted for western digits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb800-189">O exemplo a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="eb800-189">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="eb800-190">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="eb800-190">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eb800-191">Conjuntos de, para o <xref:System.Drawing.StringFormat>, o idioma a ser usado e o método de substituição a ser usado.</span><span class="sxs-lookup"><span data-stu-id="eb800-191">Sets, for the <xref:System.Drawing.StringFormat>, the language to be used and the substitution method to be used.</span></span>  
  
-   <span data-ttu-id="eb800-192">Desenha a cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-192">Draws the string.</span></span>  
  
-   <span data-ttu-id="eb800-193">Repete as duas etapas acima para dois idiomas diferentes (árabe e tailandês).</span><span class="sxs-lookup"><span data-stu-id="eb800-193">Repeats the above two steps for two different languages (Arabic and Thai).</span></span>  
  
 <span data-ttu-id="eb800-194">O método de substituição nacional e o método tradicional de substituição são demonstradas para cada um dos dois idiomas.</span><span class="sxs-lookup"><span data-stu-id="eb800-194">The National substitution method and Traditional substitution method are demonstrated for each of the two languages.</span></span> <span data-ttu-id="eb800-195">O método National exibe dígitos de acordo com o idioma nacional oficial da localidade do usuário.</span><span class="sxs-lookup"><span data-stu-id="eb800-195">The National method displays digits according to the official national language of the user's locale.</span></span> <span data-ttu-id="eb800-196">O método tradicional exibe dígitos de acordo com o script do usuário nativa ou linguagem, que pode ser diferente do idioma nacional oficial.</span><span class="sxs-lookup"><span data-stu-id="eb800-196">The Traditional method displays digits according to the user's native script or language, which may be different from the official national language.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMeasurableCharacterRanges">
      <MemberSignature Language="C#" Value="public void SetMeasurableCharacterRanges (System.Drawing.CharacterRange[] ranges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMeasurableCharacterRanges(valuetype System.Drawing.CharacterRange[] ranges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMeasurableCharacterRanges (ranges As CharacterRange())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMeasurableCharacterRanges(cli::array &lt;System::Drawing::CharacterRange&gt; ^ ranges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranges" Type="System.Drawing.CharacterRange[]" />
      </Parameters>
      <Docs>
        <param name="ranges">
          <span data-ttu-id="eb800-197">Uma matriz de estruturas <see cref="T:System.Drawing.CharacterRange" /> que especifica os intervalos de caracteres medidos por uma chamada para o método <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-197">An array of <see cref="T:System.Drawing.CharacterRange" /> structures that specifies the ranges of characters measured by a call to the <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-198">Especifica uma matriz de estruturas <see cref="T:System.Drawing.CharacterRange" /> que representam os intervalos de caracteres medidos por uma chamada para o método <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-198">Specifies an array of <see cref="T:System.Drawing.CharacterRange" /> structures that represent the ranges of characters measured by a call to the <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-199">Definir mais de 32 intervalos de caractere não é permitido e fará com que um <xref:System.OverflowException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eb800-199">Setting more than 32 character ranges is not allowed and will cause an <xref:System.OverflowException?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb800-200">O exemplo a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="eb800-200">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="eb800-201">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="eb800-201">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eb800-202">Define os intervalos de caracteres da <xref:System.Drawing.StringFormat>.</span><span class="sxs-lookup"><span data-stu-id="eb800-202">Sets the character ranges of the <xref:System.Drawing.StringFormat>.</span></span>  
  
-   <span data-ttu-id="eb800-203">Mede os intervalos de caracteres para um determinado retângulo de cadeia de caracteres e o layout.</span><span class="sxs-lookup"><span data-stu-id="eb800-203">Measures the character ranges for a given string and layout rectangle.</span></span>  
  
-   <span data-ttu-id="eb800-204">Desenha um retângulo a cadeia de caracteres e o layout.</span><span class="sxs-lookup"><span data-stu-id="eb800-204">Draws the string and layout rectangle.</span></span>  
  
-   <span data-ttu-id="eb800-205">Pinta as regiões.</span><span class="sxs-lookup"><span data-stu-id="eb800-205">Paints the regions.</span></span> <span data-ttu-id="eb800-206">Cada <xref:System.Drawing.Region> Especifica uma área ocupada por um intervalo de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-206">Each <xref:System.Drawing.Region> specifies an area that is occupied by a range of characters.</span></span> <span data-ttu-id="eb800-207">Os valores nas regiões são definidos quando os intervalos de caracteres são avaliados de acordo o <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb800-207">The values in the regions are set when the character ranges are measured by the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method.</span></span>  
  
-   <span data-ttu-id="eb800-208">Repete as quatro primeiras etapas, mas inclui espaços na medição de cada intervalo de caracteres à direita.</span><span class="sxs-lookup"><span data-stu-id="eb800-208">Repeats the first four steps, but includes trailing spaces in the measurement of each character range.</span></span>  
  
-   <span data-ttu-id="eb800-209">Limpa os sinalizadores de formato da <xref:System.Drawing.StringFormat> para que os espaços à direita não são incluídos na medição de cada intervalo de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-209">Clears the format flags of the <xref:System.Drawing.StringFormat> so that trailing spaces are not included in the measurement of each character range.</span></span>  
  
-   <span data-ttu-id="eb800-210">Repete as quatro primeiras etapas, mas usa um retângulo de layout diferente para demonstrar o retângulo de layout afeta as medidas dos intervalos de caractere.</span><span class="sxs-lookup"><span data-stu-id="eb800-210">Repeats the first four steps, but uses a different layout rectangle just to demonstrate that the layout rectangle affects the measurements of the character ranges.</span></span> <span data-ttu-id="eb800-211">O tamanho da fonte também afetará a medida.</span><span class="sxs-lookup"><span data-stu-id="eb800-211">The size of the font will also affect the measurement.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="eb800-212">Mais de 32 intervalos de caracteres foram definidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-212">More than 32 character ranges are set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTabStops">
      <MemberSignature Language="C#" Value="public void SetTabStops (float firstTabOffset, float[] tabStops);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTabStops(float32 firstTabOffset, float32[] tabStops) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTabStops (firstTabOffset As Single, tabStops As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTabStops(float firstTabOffset, cli::array &lt;float&gt; ^ tabStops);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstTabOffset" Type="System.Single" />
        <Parameter Name="tabStops" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="firstTabOffset">
          <span data-ttu-id="eb800-213">O número de espaços entre o início de uma linha de texto e a primeira parada de tabulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-213">The number of spaces between the beginning of a line of text and the first tab stop.</span>
          </span>
        </param>
        <param name="tabStops">
          <span data-ttu-id="eb800-214">Uma matriz de distâncias entre as paradas de tabulação nas unidades especificadas pela propriedade <see cref="P:System.Drawing.Graphics.PageUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-214">An array of distances between tab stops in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb800-215">Define as paradas de tabulação para este objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-215">Sets tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-216">Cada deslocamento de parada de tabulação no `tabStops` matriz, exceto a primeira, é relativo ao anterior.</span><span class="sxs-lookup"><span data-stu-id="eb800-216">Each tab-stop offset in the `tabStops` array, except the first one, is relative to the previous one.</span></span> <span data-ttu-id="eb800-217">O primeiro deslocamento de parada de tabulação é relativo a posição inicial de deslocamento especificada pelo `firstTabOffset`.</span><span class="sxs-lookup"><span data-stu-id="eb800-217">The first tab-stop offset is relative to the initial offset position specified by `firstTabOffset`.</span></span> <span data-ttu-id="eb800-218">Por exemplo, se a posição de deslocamento inicial é 8 e o primeiro deslocamento de parada de tabulação é 50, em seguida, é a primeira parada de tabulação na posição 58.</span><span class="sxs-lookup"><span data-stu-id="eb800-218">For example, if the initial offset position is 8 and the first tab-stop offset is 50, then the first tab stop is at position 58.</span></span> <span data-ttu-id="eb800-219">Se a posição de deslocamento inicial for zero, o primeiro deslocamento de parada de tabulação é em relação a posição 0, a origem da cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-219">If the initial offset position is zero, then the first tab-stop offset is relative to position 0, the string origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb800-220">O exemplo a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="eb800-220">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="eb800-221">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="eb800-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eb800-222">Define as paradas de tabulação do <xref:System.Drawing.StringFormat>.</span><span class="sxs-lookup"><span data-stu-id="eb800-222">Sets the tab stops of the <xref:System.Drawing.StringFormat>.</span></span>  
  
-   <span data-ttu-id="eb800-223">Desenha a cadeia de caracteres e o retângulo de layout.</span><span class="sxs-lookup"><span data-stu-id="eb800-223">Draws the string and the layout rectangle.</span></span> <span data-ttu-id="eb800-224">Observe que a cadeia de caracteres contém guias.</span><span class="sxs-lookup"><span data-stu-id="eb800-224">Note that the string contains tabs.</span></span> <span data-ttu-id="eb800-225">As configurações da guia do <xref:System.Drawing.StringFormat> especificam os deslocamentos do texto com guias.</span><span class="sxs-lookup"><span data-stu-id="eb800-225">The tab settings of the <xref:System.Drawing.StringFormat> specify the offsets of the tabbed text.</span></span>  
  
-   <span data-ttu-id="eb800-226">Obtém as paradas de tabulação e usa ou inspeciona os valores.</span><span class="sxs-lookup"><span data-stu-id="eb800-226">Gets the tab stops and uses or inspects the values.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.StringFormat.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb800-227">Converte este objeto <see cref="T:System.Drawing.StringFormat" /> em uma cadeia de caracteres legível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-227">Converts this <see cref="T:System.Drawing.StringFormat" /> object to a human-readable string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb800-228">Uma representação de cadeia de caracteres desse objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-228">A string representation of this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb800-229">Somente o valor de <xref:System.Drawing.StringFormat.FormatFlags%2A> propriedade é convertida.</span><span class="sxs-lookup"><span data-stu-id="eb800-229">Only the value of the <xref:System.Drawing.StringFormat.FormatFlags%2A> property is converted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb800-230">O exemplo a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="eb800-230">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="eb800-231">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="eb800-231">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eb800-232">Converte uma <xref:System.Drawing.StringFormat> objeto como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-232">Converts a <xref:System.Drawing.StringFormat> object to a string.</span></span>  
  
-   <span data-ttu-id="eb800-233">Desenha a cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-233">Draws the string.</span></span>  
  
-   <span data-ttu-id="eb800-234">Altera algumas propriedades de <xref:System.Drawing.StringFormat> objeto.</span><span class="sxs-lookup"><span data-stu-id="eb800-234">Changes some properties in the <xref:System.Drawing.StringFormat> object.</span></span>  
  
-   <span data-ttu-id="eb800-235">Desenha a cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="eb800-235">Draws the string.</span></span> <span data-ttu-id="eb800-236">A cadeia de caracteres será diferente porque as propriedades do <xref:System.Drawing.StringFormat> objeto foram alterados.</span><span class="sxs-lookup"><span data-stu-id="eb800-236">The string will be different because the properties of the <xref:System.Drawing.StringFormat> object have changed.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicStringFormatExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicStringFormatExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicStringFormatExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicStringFormatExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Drawing.StringTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.StringFormat.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As StringTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringTrimming Trimming { System::Drawing::StringTrimming get(); void set(System::Drawing::StringTrimming value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb800-237">Obtém ou define a enumeração <see cref="T:System.Drawing.StringTrimming" /> para este objeto <see cref="T:System.Drawing.StringFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-237">Gets or sets the <see cref="T:System.Drawing.StringTrimming" /> enumeration for this <see cref="T:System.Drawing.StringFormat" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb800-238">A enumeração <see cref="T:System.Drawing.StringTrimming" /> que indica como o texto desenhado com esse objeto <see cref="T:System.Drawing.StringFormat" /> é aparado quando ele excede as bordas do retângulo de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb800-238">A <see cref="T:System.Drawing.StringTrimming" /> enumeration that indicates how text drawn with this <see cref="T:System.Drawing.StringFormat" /> object is trimmed when it exceeds the edges of the layout rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb800-239">O exemplo a seguir mostra como definir o <xref:System.Drawing.StringFormat.Trimming%2A> propriedade e como usar o <xref:System.Drawing.StringTrimming> enumeração.</span><span class="sxs-lookup"><span data-stu-id="eb800-239">The following example shows how to set the <xref:System.Drawing.StringFormat.Trimming%2A> property and how to use the <xref:System.Drawing.StringTrimming> enumeration.</span></span> <span data-ttu-id="eb800-240">Este exemplo é projetado para ser usado com um Windows Form.</span><span class="sxs-lookup"><span data-stu-id="eb800-240">This example is designed to be used with a Windows Form.</span></span> <span data-ttu-id="eb800-241">Cole este código em um formulário e a chamada a `ShowStringTrimming` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> passagem de eventos, e como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="eb800-241">Paste this code into a form and call the `ShowStringTrimming` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Misc2#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Misc2#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Misc2#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>