<Type Name="Brush" FullName="System.Drawing.Brush">
  <TypeSignature Language="C#" Value="public abstract class Brush : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Brush extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Brush" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Brush&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Brush abstract : MarshalByRefObject, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="60913-101">Define os objetos usados para preencher os interiores de formas gráficas como retângulos, elipses, pizzas, polígonos e caminhos.</span><span class="sxs-lookup"><span data-stu-id="60913-101">Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60913-102">Essa é uma classe base abstrata e não pode ser instanciada.</span><span class="sxs-lookup"><span data-stu-id="60913-102">This is an abstract base class and cannot be instantiated.</span></span> <span data-ttu-id="60913-103">Para criar um objeto pincel, use classes derivadas de <xref:System.Drawing.Brush>, como <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, e <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="60913-103">To create a brush object, use classes derived from <xref:System.Drawing.Brush>, such as <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>, and <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="60913-104">Quando você herda o <see cref="T:System.Drawing.Brush" /> classe, você deve substituir o <see cref="M:System.Drawing.Brush.Clone" /> método.</span><span class="sxs-lookup"><span data-stu-id="60913-104">When you inherit from the <see cref="T:System.Drawing.Brush" /> class, you must override the <see cref="M:System.Drawing.Brush.Clone" /> method.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Brush ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Brush.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Brush();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60913-105">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Brush" />.</span><span class="sxs-lookup"><span data-stu-id="60913-105">Initializes a new instance of the <see cref="T:System.Drawing.Brush" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Brush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60913-106">Quando substituído em uma classe derivada, cria uma cópia exata deste <see cref="T:System.Drawing.Brush" />.</span><span class="sxs-lookup"><span data-stu-id="60913-106">When overridden in a derived class, creates an exact copy of this <see cref="T:System.Drawing.Brush" />.</span></span></summary>
        <returns><span data-ttu-id="60913-107">O novo <see cref="T:System.Drawing.Brush" /> criado por esse método.</span><span class="sxs-lookup"><span data-stu-id="60913-107">The new <see cref="T:System.Drawing.Brush" /> that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="60913-108">Libera todos os recursos usados pelo <see cref="T:System.Drawing.Brush" />.</span><span class="sxs-lookup"><span data-stu-id="60913-108">Releases all resources used by the <see cref="T:System.Drawing.Brush" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Brush.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60913-109">Libera todos os recursos usados por esse objeto <see cref="T:System.Drawing.Brush" />.</span><span class="sxs-lookup"><span data-stu-id="60913-109">Releases all resources used by this <see cref="T:System.Drawing.Brush" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60913-110">Chamando <xref:System.Drawing.Brush.Dispose%2A> permite que os recursos usados por este <xref:System.Drawing.Brush> objeto a ser realocada para outros fins.</span><span class="sxs-lookup"><span data-stu-id="60913-110">Calling <xref:System.Drawing.Brush.Dispose%2A> allows the resources used by this <xref:System.Drawing.Brush> object to be reallocated for other purposes.</span></span>  
  
 <span data-ttu-id="60913-111">Chamar <xref:System.Drawing.Brush.Dispose%2A> quando tiver terminado de usar o <xref:System.Drawing.Brush>.</span><span class="sxs-lookup"><span data-stu-id="60913-111">Call <xref:System.Drawing.Brush.Dispose%2A> when you are finished using the <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="60913-112">O <xref:System.Drawing.Brush.Dispose%2A> método deixa o <xref:System.Drawing.Brush> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="60913-112">The <xref:System.Drawing.Brush.Dispose%2A> method leaves the <xref:System.Drawing.Brush> in an unusable state.</span></span> <span data-ttu-id="60913-113">Depois de chamar <xref:System.Drawing.Brush.Dispose%2A>, você deve liberar todas as referências para o <xref:System.Drawing.Brush> para o coletor de lixo possa recuperar a memória que o <xref:System.Drawing.Brush> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="60913-113">After calling <xref:System.Drawing.Brush.Dispose%2A>, you must release all references to the <xref:System.Drawing.Brush> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Brush> was occupying.</span></span> <span data-ttu-id="60913-114">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="60913-114">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60913-115">Sempre chamar <xref:System.Drawing.Brush.Dispose%2A> antes de liberar sua última referência para o <xref:System.Drawing.Brush>.</span><span class="sxs-lookup"><span data-stu-id="60913-115">Always call <xref:System.Drawing.Brush.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="60913-116">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Drawing.Brush> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="60913-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Brush> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Brush.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="60913-117"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="60913-117"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="60913-118">Libera os recursos não gerenciados usados pelo <see cref="T:System.Drawing.Brush" /> e opcionalmente libera os recursos gerenciados.</span><span class="sxs-lookup"><span data-stu-id="60913-118">Releases the unmanaged resources used by the <see cref="T:System.Drawing.Brush" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60913-119">Este método é chamado pelo método público `Dispose()` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="60913-119">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="60913-120">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="60913-120">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="60913-121"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="60913-121"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="60913-122">Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Drawing.Brush> referências.</span><span class="sxs-lookup"><span data-stu-id="60913-122">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Drawing.Brush> references.</span></span> <span data-ttu-id="60913-123">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="60913-123">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="60913-124"><see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span><span class="sxs-lookup"><span data-stu-id="60913-124"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="60913-125">Ao substituir <see langword="Dispose(Boolean)" /> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="60913-125">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="60913-126">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="60913-126">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="60913-127">Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="60913-127">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Brush ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Brush.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Brush ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60913-128">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="60913-128">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="SetNativeBrush">
      <MemberSignature Language="C#" Value="protected internal void SetNativeBrush (IntPtr brush);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SetNativeBrush(native int brush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub SetNativeBrush (brush As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void SetNativeBrush(IntPtr brush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="60913-129">Um ponteiro para o objeto de pincel [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span><span class="sxs-lookup"><span data-stu-id="60913-129">A pointer to the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] brush object.</span></span></param>
        <summary><span data-ttu-id="60913-130">Em uma classe derivada, define uma referência para um objeto de pincel [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span><span class="sxs-lookup"><span data-stu-id="60913-130">In a derived class, sets a reference to a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] brush object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>