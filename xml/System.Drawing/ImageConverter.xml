<Type Name="ImageConverter" FullName="System.Drawing.ImageConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99874aee71f95b997aed8da5cae427a08e6f7917" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37657045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ImageConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bc6f7-101">
        <see cref="T:System.Drawing.ImageConverter" /> é uma classe que pode ser usada para converter objetos <see cref="T:System.Drawing.Image" /> de um tipo de dados para outro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bc6f7-101">
          <see cref="T:System.Drawing.ImageConverter" /> is a class that can be used to convert <see cref="T:System.Drawing.Image" /> objects from one data type to another.</span>
      </span>
      <span data-ttu-id="bc6f7-102">Acesse essa classe por meio do objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bc6f7-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bc6f7-103">Inicializa uma nova instância da classe <see cref="T:System.Drawing.ImageConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-103">Initializes a new instance of the <see cref="T:System.Drawing.ImageConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bc6f7-104">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="bc6f7-105">Um <see cref="T:System.Type" /> que especifica o tipo do qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc6f7-106">Determina se este <see cref="T:System.Drawing.ImageConverter" /> pode converter uma instância de um tipo especificado para um <see cref="T:System.Drawing.Image" />, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-106">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Image" />, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc6f7-107">Este método retornará <see langword="true" /> se este <see cref="T:System.Drawing.ImageConverter" /> puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc6f7-108">Esse método retornará `true` somente se `sourceType` é igual a uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bc6f7-109">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="bc6f7-110">Um <see cref="T:System.Type" /> que especifica o tipo para o qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc6f7-111">Determina se este <see cref="T:System.Drawing.ImageConverter" /> pode converter um <see cref="T:System.Drawing.Image" /> para uma instância de um tipo especificado, usando o contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-111">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an <see cref="T:System.Drawing.Image" /> to an instance of a specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc6f7-112">Este método retornará <see langword="true" /> se este <see cref="T:System.Drawing.ImageConverter" /> puder realizar a conversão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc6f7-113">Esse método retornará `true` somente se `sourceType` é igual a uma matriz de bytes ou cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-113">This method returns `true` only if `sourceType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bc6f7-114">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bc6f7-115">Um <see cref="T:System.Globalization.CultureInfo" /> que contém informações sobre uma cultura específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bc6f7-116">O <see cref="T:System.Object" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-116">The <see cref="T:System.Object" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc6f7-117">Converte um objeto especificado em um <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-117">Converts a specified object to an <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc6f7-118">Se esse método for bem-sucedido, ele retornará o <see cref="T:System.Drawing.Image" /> que ele criou por meio da conversão do objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Image" /> that it created by converting the specified object.</span>
          </span>
          <span data-ttu-id="bc6f7-119">Caso contrário, ele gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-119">Otherwise, it throws an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bc6f7-120">Não foi possível concluir a conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-120">The conversion cannot be completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bc6f7-121">Um contexto do formatador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-121">A formatter context.</span>
          </span>
          <span data-ttu-id="bc6f7-122">Esse objeto pode ser usado para obter mais informações sobre o ambiente do qual este conversor está sendo chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-122">This object can be used to get more information about the environment this converter is being called from.</span>
          </span>
          <span data-ttu-id="bc6f7-123">Isso pode ser <see langword="null" />, portanto, você sempre deve verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-123">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="bc6f7-124">Além disso, as propriedades no objeto de contexto também podem retornar <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-124">Also, properties on the context object may also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bc6f7-125">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica as convenções de formatação usadas por uma determinada cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-125">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bc6f7-126">O <see cref="T:System.Drawing.Image" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-126">The <see cref="T:System.Drawing.Image" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="bc6f7-127">O <see cref="T:System.Type" /> para o qual converter <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-127">The <see cref="T:System.Type" /> to convert the <see cref="T:System.Drawing.Image" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc6f7-128">Converte um <see cref="T:System.Drawing.Image" /> (ou um objeto que pode ser convertido em um <see cref="T:System.Drawing.Image" />) no tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-128">Converts an <see cref="T:System.Drawing.Image" /> (or an object that can be cast to an <see cref="T:System.Drawing.Image" />) to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc6f7-129">Esse método retorna o objeto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-129">This method returns the converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc6f7-130">A conversão de tipo mais comum é para e de um tipo de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-130">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="bc6f7-131">A implementação padrão chama o <xref:System.Object.ToString%2A> método do objeto se o objeto é válido e se o tipo de destino é a cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-131">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="bc6f7-132">Se esse método não é possível converter o objeto especificado para o tipo de destino, ele gerará um <xref:System.NotSupportedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-132">If this method cannot convert the specified object to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bc6f7-133">Não foi possível concluir a conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-133">The conversion cannot be completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="imageConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bc6f7-134">Um descritor de tipo por meio do qual o contexto adicional pode ser fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-134">A type descriptor through which additional context can be provided.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bc6f7-135">O valor do objeto para o qual obter as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-135">The value of the object to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="bc6f7-136">Uma matriz de objetos <see cref="T:System.Attribute" /> que descrevem as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-136">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc6f7-137">Obtém o conjunto de propriedades para este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-137">Gets the set of properties for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc6f7-138">O conjunto de propriedades que devem ser expostas para este tipo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-138">The set of properties that should be exposed for this data type.</span>
          </span>
          <span data-ttu-id="bc6f7-139">Se nenhuma propriedade dever ser exposta, isso poderá retornar <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-139">If no properties should be exposed, this can return <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bc6f7-140">A implementação padrão sempre retorna <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-140">The default implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc6f7-141">Por padrão, um tipo não retorna nenhuma propriedade.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-141">By default, a type does not return any properties.</span></span> <span data-ttu-id="bc6f7-142">Uma simples implementação desse método chama o <xref:System.ComponentModel.TypeConverter.GetProperties%2A> método para o tipo de dados correto.</span><span class="sxs-lookup"><span data-stu-id="bc6f7-142">An easy implementation of this method calls the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> method for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bc6f7-143">Um descritor de tipo por meio do qual o contexto adicional pode ser fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-143">A type descriptor through which additional context can be provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bc6f7-144">Indica se este objeto dá ou não suporte a propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-144">Indicates whether this object supports properties.</span>
          </span>
          <span data-ttu-id="bc6f7-145">Por padrão, é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-145">By default, this is <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bc6f7-146">Este método retorna <see langword="true" /> se o método <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> deve ser chamado para localizar as propriedades deste objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bc6f7-146">This method returns <see langword="true" /> if the <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> method should be called to find the properties of this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>